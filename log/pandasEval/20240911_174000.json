{"response body": "ChatCompletion(id='chatcmpl-A6E7KRFuyV2WYodnwItnM2Q62yZfQ', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='```python\\nimport pandas as pd\\nimport numpy as np\\n\\ndef display_rows_with_gt_1_nan(df: pd.DataFrame) -> pd.DataFrame:\\n    \"\"\" \\n    Given a pandas DataFrame, return a new DataFrame containing only the rows \\n    that have more than one NaN value. The function checks each row in the DataFrame \\n    and filters out the rows that do not meet this criterion.\\n    \\n    >>> df = pd.DataFrame({\\'A\\': [1, 2, np.nan], \\'B\\': [np.nan, 3, np.nan], \\'C\\': [4, 5, 6]})\\n    >>> display_rows_with_gt_1_nan(df)\\n       A   B  C\\n    2 NaN NaN  6\\n\\n    >>> df = pd.DataFrame({\\'A\\': [1, 2, 3], \\'B\\': [4, 5, 6], \\'C\\': [7, 8, 9]})\\n    >>> display_rows_with_gt_1_nan(df)\\n    Empty DataFrame\\n    Columns: [A, B, C]\\n    Index: []\\n    \"\"\"\\n    return df[df.isna().any(axis=1)]\\n```', refusal=None, role='assistant', function_call=None, tool_calls=None))], created=1726047598, model='gpt-4o-mini-2024-07-18', object='chat.completion', service_tier=None, system_fingerprint='fp_483d39d857', usage=CompletionUsage(completion_tokens=249, prompt_tokens=422, total_tokens=671))", "test_case_name": "PandasEval_79.txt"}