{"response body": "{\n  \"id\": \"c185bfb7-5f70-466a-a7d2-f03913cbe689\",\n  \"choices\": [\n    {\n      \"finish_reason\": \"stop\",\n      \"index\": 0,\n      \"logprobs\": null,\n      \"message\": {\n        \"content\": \"```python\\n# This class is designed to unescape numeric HTML entities in a given string.\\nclass NumericEntityUnescaper:\\n    def __init__(self):\\n        pass\\n\\n    def replace(self, string):\\n        # This function replaces numeric HTML entities in the input string with their corresponding characters.\\n        # param string: str, the input string containing numeric HTML entities.\\n        # return: str, the string with numeric HTML entities replaced by their corresponding characters.\\n        # >>> unescaper = NumericEntityUnescaper()\\n        # >>> unescaper.replace(\\\"&#38;\\\")\\n        # '&'\\n        # >>> unescaper.replace(\\\"&#x26;\\\")\\n        # '&'\\n        # >>> unescaper.replace(\\\"&#x26; &#38;\\\")\\n        # '& &'\\n        # >>> unescaper.replace(\\\"&#x26; &#38; &#x27;\\\")\\n        # '& & '''\\n        out = []\\n        pos = 0\\n        length = len(string)\\n\\n        while pos < length - 2:\\n            if string[pos] == '&' and string[pos + 1] == '#':\\n                start = pos + 2\\n                is_hex = False\\n                first_char = string[start]\\n\\n                if first_char == 'x' or first_char == 'X':\\n                    start += 1\\n                    is_hex = True\\n\\n                if start == length:\\n                    return ''.join(out)\\n\\n                end = start\\n                while end < length and self.is_hex_char(string[end]):\\n                    end += 1\\n\\n                if end < length and string[end] == ';':\\n                    try:\\n                        entity_value = int(string[start:end], 16 if is_hex else 10)\\n                    except:\\n                        return ''.join(out)\\n\\n                    out.append(chr(entity_value))\\n                    pos = end + 1\\n                    continue\\n\\n            out.append(string[pos])\\n            pos += 1\\n\\n        return ''.join(out)\\n\\n    @staticmethod\\n    def is_hex_char(char):\\n        # This static method checks if a character is a valid hexadecimal character.\\n        # param char: str, the character to be checked.\\n        # return: bool, True if the character is a valid hexadecimal character, False otherwise.\\n        # >>> NumericEntityUnescaper.is_hex_char('a')\\n        # True\\n        # >>> NumericEntityUnescaper.is_hex_char('f')\\n        # True\\n        # >>> NumericEntityUnescaper.is_hex_char('g')\\n        # False\\n        # >>> NumericEntityUnescaper.is_hex_char('5')\\n        # True\\n        return char.isdigit() or ('a' <= char.lower() <= 'f')\\n```\",\n        \"role\": \"assistant\"\n      }\n    }\n  ],\n  \"created\": 1727077187,\n  \"model\": \"deepseek-chat\",\n  \"object\": \"chat.completion\",\n  \"system_fingerprint\": \"fp_1c141eb703\",\n  \"usage\": {\n    \"completion_tokens\": 662,\n    \"prompt_tokens\": 1006,\n    \"total_tokens\": 1668,\n    \"prompt_cache_hit_tokens\": 576,\n    \"prompt_cache_miss_tokens\": 430\n  }\n}", "test_case_name": "NumericEntityUnescaper.txt"}