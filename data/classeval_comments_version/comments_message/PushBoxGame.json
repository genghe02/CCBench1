[
  "# This class implements a functionality of a sokoban game, where the player needs to move boxes to designated targets in order to win.",
  "Initialize the push box game with the map and various attributes.",
  ":param map: list[str], the map of the push box game, represented as a list of strings. \n            Each character on the map represents a different element, including the following:\n            - '#' represents a wall that neither the player nor the box can pass through;\n            - 'O' represents the initial position of the player;\n            - 'G' represents the target position;\n            - 'X' represents the initial position of the box.",
  ">>> map = [\"#####\", \"#O  #\", \"# X #\", \"#  G#\", \"#####\"]   \n        >>> game = PushBoxGame(map)   ",
  "Initialize the game by setting the positions of the player, targets, and boxes based on the map.",
  ">>> game = PushBoxGame([\"#####\", \"#O  #\", \"# X #\", \"#  G#\", \"#####\"]) \n        >>> game.targets\n        [(3, 3)]\n        >>> game.boxes\n        [(2, 2)]\n        >>> game.player_row\n        1\n        >>> game.player_col\n        1",
  "Check if the game is won. The game is won when all the boxes are placed on target positions.\n        And update the value of self.is_game_over.",
  ":return self.is_game_over: True if all the boxes are placed on target positions, or False otherwise.",
  ">>> game = PushBoxGame([\"#####\", \"#O  #\", \"# X #\", \"#  G#\", \"#####\"]) \n        >>> game.check_win()",
  "Move the player based on the specified direction and check if the game is won.",
  ":param direction: str, the direction of the player's movement. \n            It can be 'w', 's', 'a', or 'd' representing up, down, left, or right respectively.",
  ":return: True if the game is won, False otherwise.",
  ">>> game = PushBoxGame([\"#####\", \"#O  #\", \"# X #\", \"#  G#\", \"#####\"])       \n        >>> game.print_map()\n        # # # # # \n        # O     #\n        #   X   #\n        #     G #\n        # # # # #\n        >>> game.move('d')\n        False\n        >>> game.move('s')   \n        False\n        >>> game.move('a')   \n        False\n        >>> game.move('s') \n        False\n        >>> game.move('d') \n        True"
]