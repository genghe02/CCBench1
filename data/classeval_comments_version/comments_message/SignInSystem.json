[
  "# This is a class as sigin in system, including adding users, signing in/out, checking sign-in status, and retrieving signed-in/not signed-in users.",
  "Initialize the sign-in system.",
  "Add a user to the sign-in system if the user wasn't in the self.users.\n        And the initial state is False.",
  ":param username: str, the username to be added.",
  ":return: bool, True if the user is added successfully, False if the user already exists.",
  ">>> signInSystem.add_user(\"mike\")\n        True\n        >>> signInSystem.add_user(\"mike\")\n        False",
  "Sign in a user if the user was in the self.users and change the state to True.",
  ":param username: str, the username to be signed in.",
  ":return: bool, True if the user is signed in successfully, False if the user does not exist.",
  ">>> signInSystem.sign_in(\"mike\")\n        True\n        >>> signInSystem.sign_in(\"mik\")\n        False",
  "Check if a user is signed in.",
  ":param username: str, the username to be checked.",
  ":return: bool, True if the user is signed in, False if the user does not exist or is not signed in.",
  ">>> signInSystem.check_sign_in(\"jack\")\n        False\n        >>> signInSystem.add_user(\"jack\")\n        >>> signInSystem.check_sign_in(\"jack\")\n        >>> signInSystem.sign_in(\"jack\")\n        >>> signInSystem.check_sign_in(\"jack\")\n        True",
  "Check if all users are signed in.",
  ":return: bool, True if all users are signed in, False otherwise.",
  ">>> signInSystem.add_user(\"jack\")\n        True\n        >>> signInSystem.sign_in(\"jack\")\n        >>> signInSystem.all_signed_in()\n        True",
  "Get a list of usernames that are not signed in.",
  ":return: list[str], a list of usernames that are not signed in.",
  ">>> signInSystem = SignInSystem()\n        >>> signInSystem.add_user(\"a\")\n        True\n        >>> signInSystem.add_user(\"b\")\n        True\n        >>> signInSystem.all_not_signed_in()\n        ['a', 'b']"
]