[
  "# The class manages items, their prices, quantities, and allows to for add, removie, view items, and calculate the total price.",
  "Initialize the items representing the shopping list as an empty dictionary",
  "Add item information to the shopping list items, including price and quantity. The default quantity is 1",
  ":param item: string, Item to be added\n        :param price: float, The price of the item\n        :param quantity:int, The number of items, defaults to 1",
  ":return:None",
  ">>> shoppingcart = ShoppingCart()\n        >>> shoppingcart.add_item(\"apple\", 1, 5)\n        self.items = {\"apple\":{\"price\":1, \"quantity\":5}}",
  "Subtract the specified quantity of item from the shopping list items",
  ":param item:string, Item to be subtracted in quantity\n        :param quantity:int, Quantity to be subtracted",
  ":return:None",
  ">>> shoppingcart.add_item(\"apple\", 1, 5)\n        >>> shoppingcart.remove_item(\"apple\", 3)\n        self.items = {\"apple\":{\"price\":1, \"quantity\":2}}",
  "Return the current shopping list items",
  ":return:dict, the current shopping list items",
  ">>> shoppingcart.add_item(\"apple\", 1, 5)\n        >>> shoppingcart.remove_item(\"apple\", 3)\n        >>> shoppingcart.view_items()\n        {\"apple\":{\"price\":1, \"quantity\":2}}",
  "Calculate the total price of all items in the shopping list, which is the quantity of each item multiplied by the price",
  ":return:float, the total price of all items in the shopping list",
  ">>> shoppingcart = ShoppingCart()\n        >>> shoppingcart.add_item(\"apple\", 1, 5)\n        >>> shoppingcart.add_item(\"banana\", 2, 3)\n        >>> shoppingcart.total_price()\n        11.0"
]