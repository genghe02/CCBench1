[
  "This is a class as an student assessment system, which supports add student, add course score, calculate GPA, and other functions for students and courses.",
  "Initialize the students dict in assessment system.",
  "Add a new student into self.students dict",
  ":param name: str, student name\n        :param grade: int, student grade\n        :param major: str, student major",
  ">>> system.add_student('student 1', 3, 'SE')\n        >>> system.students\n        {'student 1': {'name': 'student 1', 'grade': 3, 'major': 'SE', 'courses': {}}}",
  "Add score of specific course for student in self.students",
  ":param name: str, student name\n        :param cource: str, cource name\n        :param score: int, cource score",
  ">>> system.add_student('student 1', 3, 'SE')\n        >>> system.add_course_score('student 1', 'math', 94)\n        >>> system.students\n        {'student 1': {'name': 'student 1', 'grade': 3, 'major': 'SE', 'courses': {'math': 94}}}",
  "Get average grade of one student.",
  ":param name: str, student name",
  ":return: if name is in students and this students have courses grade, return average grade(float)\n                    or None otherwise",
  ">>> system.add_student('student 1', 3, 'SE')\n        >>> system.add_course_score('student 1', 'math', 94)\n        >>> system.add_course_score('student 1', 'Computer Network', 92)\n        >>> system.get_gpa('student 1')\n        93.0",
  "Get all students who have any score blow 60",
  ":return: list of str ,student name",
  ">>> system.add_course_score('student 1', 'Society', 59)\n        >>> system.get_all_students_with_fail_course()\n        ['student 1']",
  "Get the average score of a specific course.",
  ":param course: str, course name",
  ":return: float, average scores of this course if anyone have score of this course, or None if nobody have records.",
  "Calculate every student's gpa with get_gpa method, and find the student with highest gpa",
  ":return: str, name of student whose gpa is highest",
  ">>> system.add_student('student 1', 3, 'SE')\n        >>> system.add_student('student 2', 2, 'SE')\n        >>> system.add_course_score('student 1', 'Computer Network', 92)\n        >>> system.add_course_score('student 2', 'Computer Network', 97)\n        >>> system.get_top_student()\n        'student 2'"
]