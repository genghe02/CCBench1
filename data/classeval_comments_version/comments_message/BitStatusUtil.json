[
  "This is a utility class that provides methods for manipulating and checking status using bitwise operations.",
  "Add a status to the current status,and check the parameters wheather they are legal.",
  ":param states: Current status,int.\n        :param stat: Status to be added,int.",
  ":return: The status after adding the status,int.",
  " >>> bit_status_util = BitStatusUtil()\n        >>> bit_status_util.add(2,4)\n        6",
  "Check if the current status contains the specified status,and check the parameters wheather they are legal.",
  ":param states: Current status,int.\n        :param stat: Specified status,int.",
  ":return: True if the current status contains the specified status,otherwise False,bool.",
  ">>> bit_status_util = BitStatusUtil()\n        >>> bit_status_util.has(6,2)\n        True",
  "Remove the specified status from the current status,and check the parameters wheather they are legal.",
  ":param states: Current status,int.\n        :param stat: Specified status,int.",
  ":return: The status after removing the specified status,int.",
  ">>> bit_status_util = BitStatusUtil()\n        >>> bit_status_util.remove(6,2)\n        4",
  "Check if the parameters are legal, args must be greater than or equal to 0 and must be even,if not,raise ValueError.",
  ":param args: Parameters to be checked,list.",
  ":return: None.",
  ">>> bit_status_util = BitStatusUtil()\n        >>> bit_status_util.check([2,3,4])\n        Traceback (most recent call last):\n        ...\n        ValueError: 3 not even"
]