[
  "This is a custom class that allows keys to be in camel case style by converting them from underscore style, which provides dictionary-like functionality.",
  "Initialize data to an empty dictionary",
  "Return the value corresponding to the key",
  ":param key:str",
  ":return:str,the value corresponding to the key",
  ">>> camelize_map = CamelCaseMap()\n        >>> camelize_map['first_name'] = 'John'\n        >>> camelize_map.__getitem__('first_name')\n        'John'",
  "Set the value corresponding to the key to the specified value",
  ":param key:str\n        :param value:str, the specified value",
  ":return:None",
  ">>> camelize_map = CamelCaseMap()\n        >>> camelize_map['first_name'] = 'John'\n        >>> camelize_map.__setitem__('first_name', 'new name')\n        camelize_map['first_name'] = 'new name'",
  "Delete the value corresponding to the key",
  ":param key:str",
  ":return:None",
  ">>> camelize_map = CamelCaseMap()\n        >>> camelize_map['first_name'] = 'John'\n        >>> camelize_map.__delitem__('first_name')\n        >>> flag = 'first_name' in camelize_map\n        flag = False",
  "Returning Iterateable Objects with Own Data",
  ":return:Iterator",
  ">>> camelize_map = CamelCaseMap()\n        >>> camelize_map['first_name'] = 'John'\n        >>> camelize_map['last_name'] = 'Doe'\n        >>> camelize_map['age'] = 30\n        >>> camelize_map.__iter__()\n        <dict_keyiterator object at 0x0000026739977C20>",
  "Returns the length of the own data",
  ":return:int, length of data",
  ">>> camelize_map = CamelCaseMap()\n        >>> camelize_map['first_name'] = 'John'\n        >>> camelize_map['last_name'] = 'Doe'\n        >>> camelize_map['age'] = 30\n        >>> camelize_map.__len__()\n        3",
  "convert key string into camel case",
  ":param key:str",
  ":return:str, converted key string",
  ">>> camelize_map = CamelCaseMap()\n        >>> camelize_map._convert_key('first_name')\n        'firstName'",
  "convert key string into camel case",
  ":param key:str",
  ":return:str, converted key string",
  ">>> camelize_map = CamelCaseMap()\n        >>> camelize_map._to_camel_case('first_name')\n        'firstName'"
]