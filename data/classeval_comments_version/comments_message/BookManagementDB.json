[
  "This is a database class as a book management system, used to handle the operations of adding, removing, updating, and searching books.",
  "Initializes the class by creating a database connection and cursor, \n        and creates the book table if it does not already exist",
  ":param db_name: str, the name of db file",
  "Creates the book table in the database if it does not already exist.",
  ">>> book_db = BookManagementDB(\"test.db\")\n        >>> book_db.create_table()",
  "Adds a book to the database with the specified title and author, \n        setting its availability to 1 as free to borrow.",
  ":param title: str, book title\n        :param author: str, author name",
  ">>> book_db = BookManagementDB(\"test.db\")\n        >>> book_db.create_table()\n        >>> book_db.add_book('book1', 'author')",
  "Removes a book from the database based on the given book ID.",
  ":param book_id: int",
  ">>> book_db = BookManagementDB(\"test.db\")\n        >>> book_db.remove_book(1)",
  "Marks a book as borrowed in the database based on the given book ID.",
  ":param book_id: int",
  " >>> book_db = BookManagementDB(\"test.db\")\n        >>> book_db.borrow_book(1)",
  "Marks a book as returned in the database based on the given book ID.",
  ":param book_id: int",
  ">>> book_db = BookManagementDB(\"test.db\")\n        >>> book_db.return_book(1)",
  "Retrieves all books from the database and returns their information.",
  ":return books: list[tuple], the information of all books in database",
  "[(1, 'book1', 'author', 1)]"
]