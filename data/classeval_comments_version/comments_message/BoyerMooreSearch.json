[
  "This is a class that implements the Boyer-Moore algorithm for string searching, which is used to find occurrences of a pattern within a given text.",
  "Initializes the BoyerMooreSearch class with the given text and pattern.",
  ":param text: The text to be searched, str.\n        :param pattern: The pattern to be searched for, str.",
  "Finds the rightmost occurrence of a character in the pattern.",
  ":param char: The character to be searched for, str.",
  ":return: The index of the rightmost occurrence of the character in the pattern, int.",
  ">>> boyerMooreSearch = BoyerMooreSearch(\"ABAABA\", \"AB\")\n        >>> boyerMooreSearch.match_in_pattern(\"A\")\n        0",
  "Determines the position of the first dismatch between the pattern and the text.",
  ":param currentPos: The current position in the text, int.",
  ":return: The position of the first dismatch between the pattern and the text, int,otherwise -1.",
  ">>> boyerMooreSearch = BoyerMooreSearch(\"ABAABA\", \"ABC\")\n        >>> boyerMooreSearch.mismatch_in_text(0)\n        2",
  "Finds all occurrences of the pattern in the text.",
  ":return: A list of all positions of the pattern in the text, list.",
  ">>> boyerMooreSearch = BoyerMooreSearch(\"ABAABA\", \"AB\")\n        >>> boyerMooreSearch.bad_character_heuristic()\n        [0, 3]"
]