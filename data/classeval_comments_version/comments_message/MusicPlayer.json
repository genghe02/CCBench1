[
  "# This is a class as a music player that provides to play, stop, add songs, remove songs, set volume, shuffle, and switch to the next or previous song.",
  "Initializes the music player with an empty playlist, no current song, and a default volume of 50.",
  "Adds a song to the playlist.",
  ":param song: The song to add to the playlist, str.",
  ">>> musicPlayer = MusicPlayer()\n        >>> musicPlayer.add_song(\"song1\")\n        >>> musicPlayer.playlist\n        ['song1']",
  "Removes a song from the playlist.",
  ":param song: The song to remove from the playlist, str.",
  ">>> musicPlayer = MusicPlayer()\n        >>> musicPlayer.playlist = [\"song1\", \"song2\"]\n        >>> musicPlayer.remove_song(\"song1\")\n        >>> musicPlayer.playlist\n        ['song2']",
  "Plays the current song in the playlist.",
  ":return: The current song in the playlist, or False if there is no current song.",
  ">>> musicPlayer = MusicPlayer()\n        >>> musicPlayer.playlist = [\"song1\", \"song2\"]\n        >>> musicPlayer.current_song = \"song1\"\n        >>> musicPlayer.play()\n        'song1'",
  "Stops the current song in the playlist.",
  ":return: True if the current song was stopped, False if there was no current song.",
  ">>> musicPlayer = MusicPlayer()\n        >>> musicPlayer.playlist = [\"song1\", \"song2\"]\n        >>> musicPlayer.current_song = \"song1\"\n        >>> musicPlayer.stop()\n        True",
  "Switches to the next song in the playlist.",
  ":return: True if the next song was switched to, False if there was no next song.",
  ">>> musicPlayer = MusicPlayer()\n        >>> musicPlayer.playlist = [\"song1\", \"song2\"]\n        >>> musicPlayer.current_song = \"song1\"\n        >>> musicPlayer.switch_song()\n        True",
  "Switches to the previous song in the playlist.",
  ":return: True if the previous song was switched to, False if there was no previous song.",
  ">>> musicPlayer = MusicPlayer()\n        >>> musicPlayer.playlist = [\"song1\", \"song2\"]\n        >>> musicPlayer.current_song = \"song2\"\n        >>> musicPlayer.previous_song()\n        True",
  "Sets the volume of the music player,ifthe volume is between 0 and 100 is valid.",
  ":param volume: The volume to set the music player to,int.",
  ":return: True if the volume was set, False if the volume was invalid.",
  ">>> musicPlayer = MusicPlayer()\n        >>> musicPlayer.set_volume(50)\n        >>> musicPlayer.volume\n        50",
  "Shuffles the playlist.",
  ":return: True if the playlist was shuffled, False if the playlist was empty.",
  ">>> musicPlayer = MusicPlayer()\n        >>> musicPlayer.playlist = [\"song1\", \"song2\"]\n        >>> musicPlayer.shuffle()\n        True"
]