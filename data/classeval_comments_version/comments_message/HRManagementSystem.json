[
  "# This is a class as personnel management system that implements functions such as adding, deleting, querying, and updating employees",
  "Initialize the HRManagementSystem withan attribute employees, which is an empty dictionary.",
  "Add a new employee to the HRManagementSystem.",
  ":param employee_id: The employee's id, int.\n        :param name: The employee's name, str.\n        :param position: The employee's position, str.\n        :param department: The employee's department, str.\n        :param salary: The employee's salary, int.",
  ":return: If the employee is already in the HRManagementSystem, returns False, otherwise, returns True.",
  ">>> hrManagementSystem = HRManagementSystem()\n        >>> hrManagementSystem.add_employee(1, 'John', 'Manager', 'Sales', 100000)\n        True\n        >>> hrManagementSystem.add_employee(1, 'John', 'Manager', 'Sales', 100000)\n        False",
  "Remove an employee from the HRManagementSystem.",
  ":param employee_id: The employee's id, int.",
  ":return: If the employee is already in the HRManagementSystem, returns True, otherwise, returns False.",
  ">>> hrManagementSystem = HRManagementSystem()\n        >>> hrManagementSystem.employees = {1: {'name': 'John', 'position': 'Manager', 'department': 'Sales', 'salary': 100000}}\n        >>> hrManagementSystem.remove_employee(1)\n        True\n        >>> hrManagementSystem.remove_employee(2)\n        False",
  "Update an employee's information in the HRManagementSystem.",
  ":param employee_id: The employee's id, int.\n        :param employee_info: The employee's information, dict.",
  ":return: If the employee is already in the HRManagementSystem, returns True, otherwise, returns False.",
  ">>> hrManagementSystem = HRManagementSystem()\n        >>> hrManagementSystem.employees = {1: {'name': 'John', 'position': 'Manager', 'department': 'Sales', 'salary': 100000}}\n        >>> hrManagementSystem.update_employee(1, {'name': 'John', 'position': 'Manager', 'department': 'Sales', 'salary': 20000})\n        True\n        >>> hrManagementSystem.update_employee(2, {'name': 'John', 'position': 'Manager', 'department': 'Sales', 'salary': 20000})\n        False",
  "Get an employee's information from the HRManagementSystem.",
  ":param employee_id: The employee's id, int.",
  ":return: If the employee is already in the HRManagementSystem, returns the employee's information, otherwise, returns False.",
  ">>> hrManagementSystem = HRManagementSystem()\n        >>> hrManagementSystem.employees = {1: {'name': 'John', 'position': 'Manager', 'department': 'Sales', 'salary': 100000}}\n        >>> hrManagementSystem.get_employee(1)\n        {'name': 'John', 'position': 'Manager', 'department': 'Sales', 'salary': 100000}\n        >>> hrManagementSystem.get_employee(2)\n        False",
  "List all employees' information in the HRManagementSystem.",
  ":return: A list of all employees' information,dict.",
  ">>> hrManagementSystem = HRManagementSystem()\n        >>> hrManagementSystem.employees = {1: {'name': 'John', 'position': 'Manager', 'department': 'Sales', 'salary': 100000}}\n        >>> hrManagementSystem.list_employees()\n        {1: {'employee_ID': 1, 'name': 'John', 'position': 'Manager', 'department': 'Sales', 'salary': 100000}}"
]