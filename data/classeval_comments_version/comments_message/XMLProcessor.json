[
  "# This is a class as XML files handler, including reading, writing, processing as well as finding elements in a XML file.",
  "Initialize the XMLProcessor object with the given file name.",
  ":param file_name:string, the name of the XML file to be processed.",
  "Reads the XML file and returns the root element.",
  ":return: Element, the root element of the XML file.",
  ">>> xml_processor = XMLProcessor('test.xml')\n        >>> root_element = xml_processor.read_xml()\n        >>> print(root_element)\n        <Element 'root' at 0x7f8e3b7eb180>",
  "Writes the XML data to the specified file.",
  ":param file_name: string, the name of the file to write the XML data.",
  ":return: bool, True if the write operation is successful, False otherwise.",
  ">>> xml_processor = XMLProcessor('test.xml')\n        >>> root = xml_processor.read_xml()\n        >>> success = xml_processor.write_xml('output.xml')\n        >>> print(success)\n        True",
  "Modifies the data in XML elements and writes the updated XML data to a new file.",
  ":param file_name: string, the name of the file to write the modified XML data.",
  ":return: bool, True if the write operation is successful, False otherwise.",
  ">>> xml_processor = XMLProcessor('test.xml')\n        >>> root = xml_processor.read_xml()\n        >>> success = xml_processor.process_xml_data('processed.xml')\n        >>> print(success)\n        True",
  "Finds the XML elements with the specified name.",
  ":param element_name: string, the name of the elements to find.",
  " :return: list, a list of found elements with the specified name.",
  ">>> xml_processor = XMLProcessor('test.xml')\n        >>> root = xml_processor.read_xml()\n        >>> items = xml_processor.find_element('item')\n        >>> for item in items:\n        >>>     print(item.text)\n        apple\n        banana\n        orange"
]