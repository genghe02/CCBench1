[
  "# The class manages restaurant orders by allowing the addition of dishes, calculation of the total cost, and checkout.",
  "Initialize the order management system\n        self.menu stores the dishes of resturant inventory\n        menu = [{\"dish\": dish name, \"price\": price, \"count\": count}, ...]\n        self.selected_dishes stores the dished selected by customer\n        selected_dish = {\"dish\": dish name, \"count\": count, price: price}\n        self.sales stores the sales of each dish\n        sales = {dish name: sales}",
  "Check the self.menu and add into self.selected_dish if the dish count is valid.\n        And if the dish has successfully been added, change the count in self.menu.",
  ":param dish: dict, the information of dish. dish = {\"dish\": dish name, \"count\": count, price: price}",
  ":return: True if successfully added, or False otherwise.",
  ">>> order = Order()\n        >>> order.menu.append({\"dish\": \"dish1\", \"price\": 10, \"count\": 5})\n        >>> order.add_dish({\"dish\": \"dish1\", \"price\": 10, \"count\": 3})\n        True",
  "Calculate the total price of dishes that have been ordered. Multiply the count, price and sales.",
  ":return total: float, the final total price.",
  ">>> order = Order()\n        >>> order.menu.append({\"dish\": \"dish1\", \"price\": 10, \"count\": 5})\n        >>> order.sales = {\"dish1\": 0.8}\n        >>> order.add_dish({\"dish\": \"dish1\", \"price\": 10, \"count\": 4})\n        True\n        >>> order.calculate_total()\n        32.0",
  "Check out the dished ordered. IF the self.selected_dishes is not empty, invoke the calculate_total\n        method to check out.",
  ":return Flase if the self.selected_dishes is empty, or total(return value of calculate_total) otherwise.",
  ">>> order = Order()\n        >>> order.menu.append({\"dish\": \"dish1\", \"price\": 10, \"count\": 5})\n        >>> order.sales = {\"dish1\": 0.8}\n        >>> order.add_dish({\"dish\": \"dish1\", \"price\": 10, \"count\": 4})\n        True\n        >>> order.checkout()\n        32.0"
]