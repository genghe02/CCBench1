<description for whole class>
class AutomaticGuitarSimulator:
    def __init__(self, text) -> None:
        <description for whole function>
        <description for parameters in init method>
        self.play_text = text

    def interpret(self, display=False):
        <description for whole function>
        <description for all parameters>
        <description for return statement>
        <some test cases for the function>
        if len(self.play_text) == 0:
            return
        else:
            play_list = []
            play_segs = self.play_text.split(" ")
            for play_seg in play_segs:
                pos = 0
                for ele in play_seg:
                    if ele.isalpha():
                        pos += 1
                        continue
                    break
                play_chord = play_seg[0:pos]
                play_value = play_seg[pos:]
                play_list.append({'Chord': play_chord, 'Tune': play_value})
                if display:
                    self.display(play_chord, play_value)
            return play_list

    def display(self, key, value):
        <description for whole function>
        <description for all parameters>
        <description for return statement>
        <some test cases for the function>
        return "Normal Guitar Playing -- Chord: %s, Play Tune: %s" % (key, value)