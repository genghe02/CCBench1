<description for whole class>
import sqlite3

class BookManagementDB:
    def __init__(self, db_name):
        <description for whole function>
        <description for all parameters>
        self.connection = sqlite3.connect(db_name)
        self.cursor = self.connection.cursor()
        self.create_table()

    def create_table(self):
        <description for whole function>
        <some test cases for the function>
        self.cursor.execute('''
            CREATE TABLE IF NOT EXISTS books (
                id INTEGER PRIMARY KEY,
                title TEXT,
                author TEXT,
                available INTEGER
            )
        ''')
        self.connection.commit()

    def add_book(self, title, author):
        <description for whole function>
        <description for all parameters>
        <some test cases for the function>
        self.cursor.execute('''
            INSERT INTO books (title, author, available)
            VALUES (?, ?, 1)
        ''', (title, author))
        self.connection.commit()

    def remove_book(self, book_id):
        <description for whole function>
        <description for all parameters>
        <some test cases for the function>
        self.cursor.execute('''
            DELETE FROM books WHERE id = ?
        ''', (book_id,))
        self.connection.commit()

    def borrow_book(self, book_id):
        <description for whole function>
        <description for all parameters>
        <some test cases for the function>
        self.cursor.execute('''
            UPDATE books SET available = 0 WHERE id = ?
        ''', (book_id,))
        self.connection.commit()

    def return_book(self, book_id):
        <description for whole function>
        <description for all parameters>
        <some test cases for the function>
        self.cursor.execute('''
            UPDATE books SET available = 1 WHERE id = ?
        ''', (book_id,))
        self.connection.commit()

    def search_books(self):
        <description for whole function>
        <description for return statement>
        <some test cases for the function>
        self.cursor.execute('''
            SELECT * FROM books
        ''')
        books = self.cursor.fetchall()
        return books
