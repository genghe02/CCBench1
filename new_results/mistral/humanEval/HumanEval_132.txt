 def is_nested(string):
   # Check if the given string is nested correctly
   # Returns True if the string has at least 2 balanced pairs of opening and closing brackets
   # This function assumes that the string only contains '[' and ']' as brackets

   opening_bracket_index = []
   closing_bracket_index = []
   for i in range(len(string)):
     <if string[i] == '[':>
     if string[i] == '[':
         opening_bracket_index.append(i)
     <else:>
     else:
         closing_bracket_index.append(i)

   closing_bracket_index.reverse()
   cnt = 0
   i = 0
   l = len(closing_bracket_index)
   for idx in opening_bracket_index:
     <if i < l and idx < closing_bracket_index[i]:>
     if i < l and idx < closing_bracket_index[i]:
         cnt += 1
         i += 1

   return cnt >= 2

   >>> is_nested('[]')           # returns True
   >>> is_nested('[[]]')         # returns True
   >>> is_nested('[[[]]]')       # returns True
   >>> is_nested('[[]]')         # returns False
   >>> is_nested('[[[]]')        # returns False
   >>> is_nested('[[]][]')       # returns False
   >>> is_nested('[[[]][]]')     # returns True
   >>> is_nested('[[][[]]]')     # returns False
   >>> is_nested('[[[[]]]]')     # returns True</s>