 """
This class, named PDFHandler, manages handling and merging multiple PDF files.
"""

import PyPDF2

class PDFHandler:

 def __init__(self, filepaths):
 """
 Initialize the PDFHandler object with the list of filepaths.

 Parameters:
 filepaths (list): List of filepaths to the PDF files to be processed.
 """
 self.filepaths = filepaths
 self.readers = [PyPDF2.PdfReader(fp) for fp in filepaths]

 def merge_pdfs(self, output_filepath):
 """
 Merge all the given PDF files into a single PDF file and save it at the specified output filepath.

 Parameters:
 output_filepath (str): The desired output filepath for the merged PDF file.

 Returns:
 str: A message indicating that the merged PDFs have been saved.

 Test cases:
 # Test case 1: Merge two PDFs
 pdf_handler = PDFHandler(['test1.pdf', 'test2.pdf'])
 output = pdf_handler.merge_pdfs('merged.pdf')
 assert output == "Merged PDFs saved at merged.pdf"
 # Test case 2: Merge three PDFs
 pdf_handler = PDFHandler(['test1.pdf', 'test2.pdf', 'test3.pdf'])
 output = pdf_handler.merge_pdfs('merged.pdf')
 assert output == "Merged PDFs saved at merged.pdf"
 # Test case 3: Empty filepath list
 pdf_handler = PDFHandler([])
 output = pdf_handler.merge_pdfs('merged.pdf')
 assert output == ""
 """
 pdf_writer = PyPDF2.PdfWriter()

 for reader in self.readers:
 for page_num in range(len(reader.pages)):
 page = reader.pages[page_num]
 pdf_writer.add_page(page)

 with open(output_filepath, 'wb') as out:
 pdf_writer.write(out)
 return f"Merged PDFs saved at {output_filepath}"

 def extract_text_from_pdfs(self):
 """
 Extracts all text content from all pages of all given PDF files.

 Returns:
 list: A list of strings, each containing the text extracted from a single page.

 Test cases:
 # Test case 1: Extract text from two PDFs
 pdf_handler = PDFHandler(['test1.pdf', 'test2.pdf'])
 extracted_texts = pdf_handler.extract_text_from_pdfs()
 assert len(extracted_texts) == len(pdf_handler.readers) * len(pdf_handler.readers[0].pages)
 # Test case 2: Empty filepath list
 pdf_handler = PDFHandler([])
 extracted_texts = pdf_handler.extract_text_from_pdfs()
 assert len(extracted_texts) == 0
 """
 pdf_texts = []
 for reader in self.readers:
 for page_num in range(len(reader.pages)):
 pdf_texts.append(reader.pages[page_num].extract_text())
 return pdf_texts</s>