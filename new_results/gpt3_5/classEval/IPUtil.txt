"""
This class implements a utility for handling IP address related operations.

The class provides methods for checking the validity of IPv4 and IPv6 addresses, as well as retrieving the hostname associated with an IP address.
"""

import socket


class IpUtil:

    @staticmethod
    def is_valid_ipv4(ip_address):
        """
        Check if the provided IP address is a valid IPv4 address.

        Parameters:
            ip_address (str): The IPv4 address to validate
            
        Returns:
            bool: True if the IP address is valid IPv4, False otherwise
            
        Test cases:
            # Test case 1: Valid IPv4 address
            assert is_valid_ipv4('192.168.1.1') == True
            
            # Test case 2: Invalid IPv4 address
            assert is_valid_ipv4('256.256.256.256') == False
            
            # Test case 3: Edge case - Zero IP
            assert is_valid_ipv4('0.0.0.0') == True

        try:
            socket.inet_pton(socket.AF_INET, ip_address)
            return True
        except socket.error:
            return False

    @staticmethod
    def is_valid_ipv6(ip_address):
        """
        Check if the provided IP address is a valid IPv6 address.

        Parameters:
            ip_address (str): The IPv6 address to validate
            
        Returns:
            bool: True if the IP address is valid IPv6, False otherwise
            
        Test cases:
            # Test case 1: Valid IPv6 address
            assert is_valid_ipv6('2001:0db8:85a3:0000:0000:8a2e:0370:7334') == True
            
            # Test case 2: Invalid IPv6 address
            assert is_valid_ipv6('invalid ipv6') == False
            
            # Test case 3: Edge case - Loopback address
            assert is_valid_ipv6('::1') == True

        try:
            socket.inet_pton(socket.AF_INET6, ip_address)
            return True
        except socket.error:
            return False

    @staticmethod
    def get_hostname(ip_address):
        """
        Retrieve the hostname associated with the provided IP address.

        Parameters:
            ip_address (str): The IP address for which to fetch the hostname

        Returns:
            str: The hostname associated with the IP address, if found; None otherwise

        Test cases:
            # Test case 1: Valid IP address
            assert get_hostname('8.8.8.8') == 'dns.google'
            
            # Test case 2: Invalid IP address
            assert get_hostname('invalid.ip') == None
            
            # Test case 3: Edge case - localhost
            assert get_hostname('127.0.0.1') == 'localhost'

        try:
            hostname = socket.gethostbyaddr(ip_address)[0]
            return hostname
        except socket.herror:
            return None
```