"""
This class is meant for processing images by performing various operations like loading an image, saving an image, resizing an image, rotating an image, and adjusting brightness.

"""

from PIL import Image, ImageEnhance, ImageChops


class ImageProcessor:
    def __init__(self):
        """
        Initializes the ImageProcessor class.
        """
        self.image = None

    def load_image(self, image_path):
        """
        Loads an image from the specified path.

        Parameters:
            image_path (str): Path to the image file to load

        Test cases:
            # Test case 1: Load valid image
            load_image("sample.jpg")
            
            # Test case 2: Load invalid image
            load_image("invalid.jpg")
            
            # Test case 3: Load large image
            load_image("large.jpg")
        """
        self.image = Image.open(image_path)

    def save_image(self, save_path):
        """
        Saves the image to the specified path.

        Parameters:
            save_path (str): Path to save the processed image

        Test cases:
            # Test case 1: Save image to specified path
            save_image("output.jpg")
            
            # Test case 2: Save image with same path
            save_image("sample.jpg")
            
            # Test case 3: Save processed image
            save_image("processed.jpg")
        """
        if self.image:
            self.image.save(save_path)

    def resize_image(self, width, height):
        """
        Resizes the image to the specified width and height.

        Parameters:
            width (int): The new width of the image
            height (int): The new height of the image

        Test cases:
            # Test case 1: Resize image to specific dimensions
            resize_image(640, 480)
            
            # Test case 2: Resize image with negative dimensions
            resize_image(-100, 200)
            
            # Test case 3: Resize image with large dimensions
            resize_image(1920, 1080)
        """
        if self.image:
            self.image = self.image.resize((width, height))

    def rotate_image(self, degrees):
        """
        Rotates the image by the specified number of degrees.

        Parameters:
            degrees (int): The degrees by which to rotate the image

        Test cases:
            # Test case 1: Rotate image clockwise
            rotate_image(90)
            
            # Test case 2: Rotate image anti-clockwise
            rotate_image(-45)
            
            # Test case 3: Rotate image by 360 degrees
            rotate_image(360)
        """
        if self.image:
            self.image = self.image.rotate(degrees)

    def adjust_brightness(self, factor):
        """
        Adjusts the brightness of the image by the specified factor.

        Parameters:
            factor (float): The factor by which to adjust the brightness

        Test cases:
            # Test case 1: Increase brightness by 50%
            adjust_brightness(1.5)
            
            # Test case 2: Decrease brightness by 25%
            adjust_brightness(0.75)
            
            # Test case 3: Adjust brightness by negative value
            adjust_brightness(-0.5)
        """
        if self.image:
            enhancer = ImageEnhance.Brightness(self.image)
            self.image = enhancer.enhance(factor)