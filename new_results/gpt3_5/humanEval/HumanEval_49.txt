# Calculate (2^n) % p using iterative approach

>>> modp(3, 5) # returns 3
>>> modp(5, 7) # returns 4
>>> modp(10, 13) # returns 12

def modp(n: int, p: int):
    # Calculate (2^n) % p using iterative approach
    >>> modp(3, 5) # returns 3
    >>> modp(5, 7) # returns 4
    >>> modp(10, 13) # returns 12
    ret = 1
    for i in range(n):
        ret = (2 * ret) % p
    return ret