["# Find indices of elements in array 'a' that are different from their previous elements"][Block]["# Add newaxis dimension to each sample in a 3x3x1 array"][Block]["# Count the number of values in a 3D numpy array that fall between 2 and 8"][Block]["# Prepend the given element to the array"][Block]["# Concatenate all arrays in the input list and flatten the resulting array"][Block]["# Get shape of the 2x5 zero matrix"][Block][
    "# Inverse of a given matrix"
][Block]["# Check if size of the NumPy array is equal to zero"][Block]["# Assign the same value to all elements in the second column of matrix 'a'"][Block][
    "# Find the indices in 'master' where 'search' values appear"
][Block]["# Concatenate horizontally the given list of arrays to create a single array"][Block]["# Function to return the minimum value in a NumPy array"][Block]["# Initialize the output matrix with values of -1."][Block][
    "# Calculate cumulative histogram"
][Block]["# Convert NumPy array to string and then back to array of integers"][Block]["# Join the elements of array a with a space using list comprehension and str.join"][Block]["# Calculate mean of every group of 3 elements in array"][Block]["# Perform XOR operation on three input values x, y, and z"][Block]["# Broadcasting operation to add a column-wise repeated a to 2 times b"][Block]["# Calculate the ratio of each element to the previous element in a list"][Block]["# Stack the lists of arrays along the last axis"][Block]["# Standard deviation along axis=0 for input array arr"][Block]["# Convert a multi-dimensional NumPy array to a 1-dimensional NumPy array"][Block]["# Return index of maximum element along given axis"][Block]["# Convert each element in the array to float"][Block]["# Change data type of numpy array 'a' to float32 before creating new array 'b'"][Block]["# Extract row from matrix 'a' based on indices in 'b'"][Block][
    "# Calculate the number of rows needed to cover the sliding window of length L with a stride of S",
    "# Slice the array along the desired axis with the calculated indices"
][Block]["# Reshape the 5D array into a 2D array with shape (5000, 25)"][Block]["# Extract valid values from masked array y"][Block]["# Input: 3x3 numpy array"][Block]["# Extract specified indices from NumPy array and assign the result to a new array"][Block]["# Find the most frequent number in the array"][Block]["# Concatenate arrays horizontally along axis 0"][Block]["# Subset array 'a' where both the first and second columns equal 0 and 1 respectively"][Block]["# Use itertools.zip_longest to merge lists with fillvalue for missing elements, then convert to NumPy array"][Block][
    "# Define function to interweave two arrays",
    "# Allocate an empty array of size equal to the sum of sizes of 'a' and 'b'",
    "# Assign 'a' values to every second element of the resulting array 'c'",
    "# Assign 'b' values to every first element that is not already assigned in 'c'"
][Block]["# Fill the center 3x3 area of a 5x5 zero matrix with values from a 3x3 matrix"][Block]["# Extract unique sub-arrays along axis=0 from the given numpy array"][Block]["# Concatenate arrays a and b along axis 0"][Block]["# Multiply each row of matrix 'a' with each element of matrix 'b' (promote 'b' to shape (2, 1) to match 'a' shape)"][Block]["# Stack columns a and b together to create new array c"][Block][
    "# Create a list of arrays with each element multiplied by a 2x2 numpy array of ones",
    "# Stack the list of arrays along a new axis to create a single numpy array"
][Block]["# Find the element-wise set difference between two arrays"][Block]["# Count the number of true elements in the given array and return the result"][Block][
    "# Create an empty array with shape matching the desired output",
    "# Vertically stack the two arrays to form the output"
][Block]["# Convert the given matrix to a numpy array and remove any extra dimensions"][Block]["# Calculate the mean of the given arrays along the axis=0"][Block]["# Find the indices of the k smallest elements in array A"][Block]["# Sort the 2D numpy array based on its first and second columns in ascending order\n# and return the sorted array"][Block]["# Subtract the minimum values in each row from the matrix"][Block]["# Assign rows 4 to end of 'a' to variable 'b'"][Block]["# Replace negative numbers with zeros in the given NumPy array"][Block]["# Select rows from 'dists' array based on condition and assign to 'out'"][Block]["# Repeat even numbers in array 'a' by 'n'"][Block]["# Check if the array is sorted in ascending order"][Block][
    "# Reshape a NumPy array to a 2x4x2x4 shape and transpose the axis",
    "# Reshape a NumPy array to a 2x4x2x4 shape and transpose the specified axes"
][Block]["# Convert NumPy array to a list of tuples"][Block]["# Find the index of the minimum value along the rows of x"][Block][
    "# Slice the data in m along the specified axis between start and end indices",
    "# Slice the data in the middle (axis=2) of the 3-D NumPy array m",
    "# between the indices start=1 and end=3 along axis=2"
][Block][
    "# Create a NumPy record array from a transposed NumPy array"
][Block]["# Delete elements at indices specified in array C from array A"][Block]["# Convert each element in the array to a string"][Block]["# Concatenate a new row to an existing NumPy array using vstack"][Block]["# Flatten the transpose of a 3x3 numpy array"][Block]["# Return indices of zeros in the input array"][Block]["# Assign values to the specified indices of a zero array based on the given data"][Block]["# Find the index of the minimum element in the 2x2 array A using its flattened index"][Block]["# Slice the array with step size -1 along the last axis (channels for 3D arrays, or columns for 2D arrays)"][Block]["# Calculate mean of each row in masked array and replace nan values with nan"][Block]["# Replace elements in the array with value greater than specified value with new_value"][Block]["# Get the index i in the last dimension of array arr"][Block][
    "# Cast input array to NumPy array",
    "# Find index of the nearest value to the given value",
    "# Return the nearest value"
][Block]["# Function to find indices of elements within a given range in a NumPy array"][Block]["# Find indices of even numbers in numpy array x"][Block]["# Create a NumPy dtype object based on provided names and formats"][Block]["# Shift all elements in the array starting from the second element to the left"][Block]["# Apply dictionary function to each element of array using vectorized operation"][Block]["# Concatenate two character arrays using the 'add' function from numpy.core.defchararray"][Block]["# Keep only the rows where all elements are numeric"][Block]["# Split the numpy array 'x' into 3 sub-arrays"][Block]["# Slice array based on given indices"][Block]["# Add the first element of an array to the beginning of the array using np.append"][Block]["# Extract keys and values from a dictionary using numpy's fromiter function and specify the data type as float"][Block]["# Set elements in real and imaginary parts of array 'a' to zero, if absolute value is less than 'tol'"][Block]["# Check if all elements in the array are zeros"][Block]["# Flatten the given 2-dimensional NumPy array into a 1-dimensional NumPy array"][Block]["# Check if all elements in each row are equal to the first element of that row"][Block]["# Replace NaN values in the array with zeros"][Block]["# Split `data` into lists where the difference between consecutive elements is `stepsize`.",
 "# Return the length of the resulting lists."][Block]["# Replace diagonal elements of the DataFrame's numpy array representation with zeros"][Block]["# Concatenate arr1 and arr2 using numpy's concatenate function"][Block]["# Delete columns specified by the indices in the list at axis 1"][Block]["# Flatten the numpy matrix into a list"][Block]["# Delete elements at specified indices from the array and return the modified array"][Block]["# Keep only rows in the array that have at least one non-zero element"][Block]["# Check if elements in array 'a' are present in array 'b'"][Block]["# Create a NumPy array of ones with shape (3, 4) and data type bool"][Block]["# Multiply each row of matrix 'a' with each element in matrix 'b' expanded to have shape (1, 4)"][Block]["# Calculate Euclidean distance between two arrays"][Block]["# Sum of all elements in the NumPy array obtained from the DataFrame"][Block]