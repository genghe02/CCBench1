def parse_nested_parens(paren_string: str) -> List[int]:
    # This function parses a string of nested parentheses and returns a list of the maximum depth of parentheses for each group.

    >>> parse_nested_parens("((())) (()) ()") # returns [3, 2, 1]
    >>> parse_nested_parens("") # returns []
    >>> parse_nested_parens("()()()()") # returns [1, 1, 1, 1]
    def parse_paren_group(s):
        depth = 0
        max_depth = 0
        for c in s:
            if c == '(':
                depth += 1
                max_depth = max(depth, max_depth)
            else:
                depth -= 1

        return max_depth

    return [parse_paren_group(x) for x in paren_string.split(' ') if x]