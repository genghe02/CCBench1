"""
This class is responsible for unescaping numeric HTML entities from a given string.
"""

class NumericEntityUnescaper:
    def __init__(self):
        """
        Initializes the `NumericEntityUnescaper` class.
        """
        pass

    def replace(self, string):
        """
        Replaces all numeric HTML entities in the given string with their corresponding characters.

        Parameters:
            string (str): The input string that may contain numeric HTML entities.

        Returns:
            str: A string with all numeric HTML entities replaced with their corresponding characters.

        Test cases:

            # Test case 1: Normal case with decimal entity
            assert replace("Hello &#32; World") == "Hello  World"

            # Test case 2: Normal case with hexadecimal entity
            assert replace("Hello &#x20; World") == "Hello  World"

            # Test case 3: Edge case with no entity in the string
            assert replace("Hello World") == "Hello World"
        """
        out = []
        pos = 0
        length = len(string)

        while pos < length - 2:
            if string[pos] == '&' and string[pos + 1] == '#':
                start = pos + 2
                is_hex = False
                first_char = string[start]

                if first_char == 'x' or first_char == 'X':
                    start += 1
                    is_hex = True

                if start == length:
                    return ''.join(out)

                end = start
                while end < length and self.is_hex_char(string[end]):
                    end += 1

                if end < length and string[end] == ';':
                    try:
                        entity_value = int(string[start:end], 16 if is_hex else 10)
                    except:
                        return ''.join(out)

                    out.append(chr(entity_value))
                    pos = end + 1
                    continue

            out.append(string[pos])
            pos += 1

        return ''.join(out)

    @staticmethod
    def is_hex_char(char):
        """
        Checks if a character is a hexadecimal digit.

        Parameters:
            char (str): The character to check.

        Returns:
            bool: True if the character is a hexadecimal digit, False otherwise.

        Test cases:

            # Test case 1: Normal case with hexadecimal digit
            assert is_hex_char("A") == True

            # Test case 2: Normal case with decimal digit
            assert is_hex_char("9") == True

            # Test case 3: Edge case with non-digit character
            assert is_hex_char("Z") == False
        """
        return char.isdigit() or ('a' <= char.lower() <= 'f')