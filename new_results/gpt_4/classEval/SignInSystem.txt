"""
This class represents a sign-in system that allows users to add, sign in, check status of sign in, and retrieve 
non-signed in users.
"""

class SignInSystem:
    def __init__(self):
        """
        Initialize the SignInSystem with an empty dictionary of users.

        No parameters required.
        """
        self.users = {}

    def add_user(self, username):
        """
        Adds a new user to the system.

        Parameters:
            username (str): The username of the user to be added.

        Returns:
            bool: True if the user was added successfully, False if the user already exists.

        Test cases:
            # Test case 1: Adding a new user
            assert add_user('JohnDoe') == True

            # Test case 2: Adding an existing user
            add_user('JaneDoe')
            assert add_user('JaneDoe') == False
        """
        if username in self.users:
            return False
        else:
            self.users[username] = False
            return True

    def sign_in(self, username):
        """
        Marks a user as signed in.

        Parameters:
            username (str): The username of the user to sign in.

        Returns:
            bool: True if the user was signed in successfully, False if the user does not exist.

        Test cases:
            # Test case 1: Signing in an existing user
            add_user('JohnDoe')
            assert sign_in('JohnDoe') == True

            # Test case 2: Signing in a non-existing user
            assert sign_in('GhostUser') == False
        """
        if username not in self.users:
            return False
        else:
            self.users[username] = True
            return True

    def check_sign_in(self, username):
        """
        Checks if a user is signed in.

        Parameters:
            username (str): The username of the user to check.

        Returns:
            bool: True if the user is signed in, False if the user is not signed in or does not exist.

        Test cases:
            # Test case 1: Checking a signed-in user
            add_user('JohnDoe')
            sign_in('JohnDoe')
            assert check_sign_in('JohnDoe') == True

            # Test case 2: Checking a non-signed-in user
            add_user('JaneDoe')
            assert check_sign_in('JaneDoe') == False

            # Test case 3: Checking a non-existing user
            assert check_sign_in('GhostUser') == False
        """
        if username not in self.users:
            return False
        else:
            if self.users[username]:
                return True
            else:
                return False

    def all_signed_in(self):
        """
        Checks if all users are signed in.

        No parameters required.

        Returns:
            bool: True if all users are signed in, False otherwise.

        Test cases:
            # Test case 1: All users signed in
            add_user('JohnDoe')
            sign_in('JohnDoe')
            add_user('JaneDoe')
            sign_in('JaneDoe')
            assert all_signed_in() == True

            # Test case 2: Not all users signed in
            add_user('JohnDoe')
            sign_in('JohnDoe')
            add_user('JaneDoe')
            assert all_signed_in() == False
        """
        if all(self.users.values()):
            return True
        else:
            return False

    def all_not_signed_in(self):
        """
        Retrieves a list of all users who are not signed in.

        No parameters required.

        Returns:
            list: A list of usernames of all users who are not signed in.

        Test cases:
            # Test case 1: All users signed in
            add_user('JohnDoe')
            sign_in('JohnDoe')
            add_user('JaneDoe')
            sign_in('JaneDoe')
            assert all_not_signed_in() == []

            # Test case 2: Not all users signed in
            add_user('JohnDoe')
            sign_in('JohnDoe')
            add_user('JaneDoe')
            assert all_not_signed_in() == ['JaneDoe']
        """
        not_signed_in_users = []
        for username, signed_in in self.users.items():
            if not signed_in:
                not_signed_in_users.append(username)
        return not_signed_in_users
