[{"id": 0, "filename": "NumpyEval_0.txt", "dataset_comment": "Find each index where the value changes in an efficient way using numpy by comparing each element with its neighbor and utilizing np.where(condition).", "generated_comment": "Find each index where the value changes in an efficient way using numpy by comparing each element with its neighbor and utilizing np.where(condition).", "indicator_name": "rouge", "score": {"rouge_1_recall": 1.0, "rouge_1_recall_cb": 1.0, "rouge_1_recall_ce": 1.0, "rouge_1_precision": 1.0, "rouge_1_precision_cb": 1.0, "rouge_1_precision_ce": 1.0, "rouge_1_f_score": 1.0, "rouge_1_f_score_cb": 1.0, "rouge_1_f_score_ce": 1.0, "rouge_2_recall": 1.0, "rouge_2_recall_cb": 1.0, "rouge_2_recall_ce": 1.0, "rouge_2_precision": 1.0, "rouge_2_precision_cb": 1.0, "rouge_2_precision_ce": 1.0, "rouge_2_f_score": 1.0, "rouge_2_f_score_cb": 1.0, "rouge_2_f_score_ce": 1.0, "rouge_3_recall": 1.0, "rouge_3_recall_cb": 1.0, "rouge_3_recall_ce": 1.0, "rouge_3_precision": 1.0, "rouge_3_precision_cb": 1.0, "rouge_3_precision_ce": 1.0, "rouge_3_f_score": 1.0, "rouge_3_f_score_cb": 1.0, "rouge_3_f_score_ce": 1.0, "rouge_4_recall": 1.0, "rouge_4_recall_cb": 1.0, "rouge_4_recall_ce": 1.0, "rouge_4_precision": 1.0, "rouge_4_precision_cb": 1.0, "rouge_4_precision_ce": 1.0, "rouge_4_f_score": 1.0, "rouge_4_f_score_cb": 1.0, "rouge_4_f_score_ce": 1.0, "rouge_l_recall": 1.0, "rouge_l_recall_cb": 1.0, "rouge_l_recall_ce": 1.0, "rouge_l_precision": 1.0, "rouge_l_precision_cb": 1.0, "rouge_l_precision_ce": 1.0, "rouge_l_f_score": 1.0, "rouge_l_f_score_cb": 1.0, "rouge_l_f_score_ce": 1.0, "rouge_w_1.2_recall": 0.52531, "rouge_w_1.2_recall_cb": 0.52531, "rouge_w_1.2_recall_ce": 0.52531, "rouge_w_1.2_precision": 1.0, "rouge_w_1.2_precision_cb": 1.0, "rouge_w_1.2_precision_ce": 1.0, "rouge_w_1.2_f_score": 0.68879, "rouge_w_1.2_f_score_cb": 0.68879, "rouge_w_1.2_f_score_ce": 0.68879, "rouge_s*_recall": 1.0, "rouge_s*_recall_cb": 1.0, "rouge_s*_recall_ce": 1.0, "rouge_s*_precision": 1.0, "rouge_s*_precision_cb": 1.0, "rouge_s*_precision_ce": 1.0, "rouge_s*_f_score": 1.0, "rouge_s*_f_score_cb": 1.0, "rouge_s*_f_score_ce": 1.0, "rouge_su*_recall": 1.0, "rouge_su*_recall_cb": 1.0, "rouge_su*_recall_ce": 1.0, "rouge_su*_precision": 1.0, "rouge_su*_precision_cb": 1.0, "rouge_su*_precision_ce": 1.0, "rouge_su*_f_score": 1.0, "rouge_su*_f_score_cb": 1.0, "rouge_su*_f_score_ce": 1.0}}, {"id": 1, "filename": "NumpyEval_1.txt", "dataset_comment": "Convert a 2D array with shape (x, y) to a 3D array with shape (x, y, 1) in a Pythonic way.", "generated_comment": "Reshape the array 'a' by adding a new axis at the end using numpy's newaxis constant.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.14286, "rouge_1_recall_cb": 0.14286, "rouge_1_recall_ce": 0.14286, "rouge_1_precision": 0.17647, "rouge_1_precision_cb": 0.17647, "rouge_1_precision_ce": 0.17647, "rouge_1_f_score": 0.1579, "rouge_1_f_score_cb": 0.1579, "rouge_1_f_score_ce": 0.1579, "rouge_2_recall": 0.0, "rouge_2_recall_cb": 0.0, "rouge_2_recall_ce": 0.0, "rouge_2_precision": 0.0, "rouge_2_precision_cb": 0.0, "rouge_2_precision_ce": 0.0, "rouge_2_f_score": 0.0, "rouge_2_f_score_cb": 0.0, "rouge_2_f_score_ce": 0.0, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.14286, "rouge_l_recall_cb": 0.14286, "rouge_l_recall_ce": 0.14286, "rouge_l_precision": 0.17647, "rouge_l_precision_cb": 0.17647, "rouge_l_precision_ce": 0.17647, "rouge_l_f_score": 0.1579, "rouge_l_f_score_cb": 0.1579, "rouge_l_f_score_ce": 0.1579, "rouge_w_1.2_recall": 0.06471, "rouge_w_1.2_recall_cb": 0.06471, "rouge_w_1.2_recall_ce": 0.06471, "rouge_w_1.2_precision": 0.14694, "rouge_w_1.2_precision_cb": 0.14694, "rouge_w_1.2_precision_ce": 0.14694, "rouge_w_1.2_f_score": 0.08985, "rouge_w_1.2_f_score_cb": 0.08985, "rouge_w_1.2_f_score_ce": 0.08985, "rouge_s*_recall": 0.01429, "rouge_s*_recall_cb": 0.01429, "rouge_s*_recall_ce": 0.01429, "rouge_s*_precision": 0.02206, "rouge_s*_precision_cb": 0.02206, "rouge_s*_precision_ce": 0.02206, "rouge_s*_f_score": 0.01734, "rouge_s*_f_score_cb": 0.01734, "rouge_s*_f_score_ce": 0.01734, "rouge_su*_recall": 0.02609, "rouge_su*_recall_cb": 0.02609, "rouge_su*_recall_ce": 0.02609, "rouge_su*_precision": 0.03947, "rouge_su*_precision_cb": 0.03947, "rouge_su*_precision_ce": 0.03947, "rouge_su*_f_score": 0.03141, "rouge_su*_f_score_cb": 0.03141, "rouge_su*_f_score_ce": 0.03141}}, {"id": 2, "filename": "NumpyEval_2.txt", "dataset_comment": "Get the cumulative distribution function using NumPy by setting bins to 10 and generating a cumulative sum of the histogram contents to the variable hist.", "generated_comment": "Calculate the histogram of a 2D array 'arr' with 10 bins and return the histogram values in 'hist' and the bin edges in 'bin_edges'. Then, calculate the cumulative sum of the histogram values and store the result in 'hist'.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.48, "rouge_1_recall_cb": 0.48, "rouge_1_recall_ce": 0.48, "rouge_1_precision": 0.3, "rouge_1_precision_cb": 0.3, "rouge_1_precision_ce": 0.3, "rouge_1_f_score": 0.36923, "rouge_1_f_score_cb": 0.36923, "rouge_1_f_score_ce": 0.36923, "rouge_2_recall": 0.20833, "rouge_2_recall_cb": 0.20833, "rouge_2_recall_ce": 0.20833, "rouge_2_precision": 0.12821, "rouge_2_precision_cb": 0.12821, "rouge_2_precision_ce": 0.12821, "rouge_2_f_score": 0.15873, "rouge_2_f_score_cb": 0.15873, "rouge_2_f_score_ce": 0.15873, "rouge_3_recall": 0.13043, "rouge_3_recall_cb": 0.13043, "rouge_3_recall_ce": 0.13043, "rouge_3_precision": 0.07895, "rouge_3_precision_cb": 0.07895, "rouge_3_precision_ce": 0.07895, "rouge_3_f_score": 0.09836, "rouge_3_f_score_cb": 0.09836, "rouge_3_f_score_ce": 0.09836, "rouge_4_recall": 0.09091, "rouge_4_recall_cb": 0.09091, "rouge_4_recall_ce": 0.09091, "rouge_4_precision": 0.05405, "rouge_4_precision_cb": 0.05405, "rouge_4_precision_ce": 0.05405, "rouge_4_f_score": 0.06779, "rouge_4_f_score_cb": 0.06779, "rouge_4_f_score_ce": 0.06779, "rouge_l_recall": 0.4, "rouge_l_recall_cb": 0.4, "rouge_l_recall_ce": 0.4, "rouge_l_precision": 0.25, "rouge_l_precision_cb": 0.25, "rouge_l_precision_ce": 0.25, "rouge_l_f_score": 0.30769, "rouge_l_f_score_cb": 0.30769, "rouge_l_f_score_ce": 0.30769, "rouge_w_1.2_recall": 0.16547, "rouge_w_1.2_recall_cb": 0.16547, "rouge_w_1.2_recall_ce": 0.16547, "rouge_w_1.2_precision": 0.19687, "rouge_w_1.2_precision_cb": 0.19687, "rouge_w_1.2_precision_ce": 0.19687, "rouge_w_1.2_f_score": 0.17981, "rouge_w_1.2_f_score_cb": 0.17981, "rouge_w_1.2_f_score_ce": 0.17981, "rouge_s*_recall": 0.21333, "rouge_s*_recall_cb": 0.21333, "rouge_s*_recall_ce": 0.21333, "rouge_s*_precision": 0.08205, "rouge_s*_precision_cb": 0.08205, "rouge_s*_precision_ce": 0.08205, "rouge_s*_f_score": 0.11852, "rouge_s*_f_score_cb": 0.11852, "rouge_s*_f_score_ce": 0.11852, "rouge_su*_recall": 0.23148, "rouge_su*_recall_cb": 0.23148, "rouge_su*_recall_ce": 0.23148, "rouge_su*_precision": 0.09158, "rouge_su*_precision_cb": 0.09158, "rouge_su*_precision_ce": 0.09158, "rouge_su*_f_score": 0.13124, "rouge_su*_f_score_cb": 0.13124, "rouge_su*_f_score_ce": 0.13124}}, {"id": 3, "filename": "NumpyEval_3.txt", "dataset_comment": "Convert an array of strings to an array of floats in NumPy and return the final result.", "generated_comment": "Convert the elements in a NumPy array from string to float data type.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.47059, "rouge_1_recall_cb": 0.47059, "rouge_1_recall_ce": 0.47059, "rouge_1_precision": 0.61538, "rouge_1_precision_cb": 0.61538, "rouge_1_precision_ce": 0.61538, "rouge_1_f_score": 0.53333, "rouge_1_f_score_cb": 0.53333, "rouge_1_f_score_ce": 0.53333, "rouge_2_recall": 0.0625, "rouge_2_recall_cb": 0.0625, "rouge_2_recall_ce": 0.0625, "rouge_2_precision": 0.08333, "rouge_2_precision_cb": 0.08333, "rouge_2_precision_ce": 0.08333, "rouge_2_f_score": 0.07143, "rouge_2_f_score_cb": 0.07143, "rouge_2_f_score_ce": 0.07143, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.29412, "rouge_l_recall_cb": 0.29412, "rouge_l_recall_ce": 0.29412, "rouge_l_precision": 0.38462, "rouge_l_precision_cb": 0.38462, "rouge_l_precision_ce": 0.38462, "rouge_l_f_score": 0.33334, "rouge_l_f_score_cb": 0.33334, "rouge_l_f_score_ce": 0.33334, "rouge_w_1.2_recall": 0.13392, "rouge_w_1.2_recall_cb": 0.13392, "rouge_w_1.2_recall_ce": 0.13392, "rouge_w_1.2_precision": 0.30863, "rouge_w_1.2_precision_cb": 0.30863, "rouge_w_1.2_precision_ce": 0.30863, "rouge_w_1.2_f_score": 0.18679, "rouge_w_1.2_f_score_cb": 0.18679, "rouge_w_1.2_f_score_ce": 0.18679, "rouge_s*_recall": 0.10294, "rouge_s*_recall_cb": 0.10294, "rouge_s*_recall_ce": 0.10294, "rouge_s*_precision": 0.17949, "rouge_s*_precision_cb": 0.17949, "rouge_s*_precision_ce": 0.17949, "rouge_s*_f_score": 0.13084, "rouge_s*_f_score_cb": 0.13084, "rouge_s*_f_score_ce": 0.13084, "rouge_su*_recall": 0.14474, "rouge_su*_recall_cb": 0.14474, "rouge_su*_recall_ce": 0.14474, "rouge_su*_precision": 0.24444, "rouge_su*_precision_cb": 0.24444, "rouge_su*_precision_ce": 0.24444, "rouge_su*_f_score": 0.18182, "rouge_su*_f_score_cb": 0.18182, "rouge_su*_f_score_ce": 0.18182}}, {"id": 4, "filename": "NumpyEval_4.txt", "dataset_comment": "Convert Python sequence to NumPy array and fill missing values with 0.", "generated_comment": "Convert a list of lists into a numpy array by padding with zeros using itertools.zip_longest function.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.33333, "rouge_1_recall_cb": 0.33333, "rouge_1_recall_ce": 0.33333, "rouge_1_precision": 0.22222, "rouge_1_precision_cb": 0.22222, "rouge_1_precision_ce": 0.22222, "rouge_1_f_score": 0.26666, "rouge_1_f_score_cb": 0.26666, "rouge_1_f_score_ce": 0.26666, "rouge_2_recall": 0.09091, "rouge_2_recall_cb": 0.09091, "rouge_2_recall_ce": 0.09091, "rouge_2_precision": 0.05882, "rouge_2_precision_cb": 0.05882, "rouge_2_precision_ce": 0.05882, "rouge_2_f_score": 0.07143, "rouge_2_f_score_cb": 0.07143, "rouge_2_f_score_ce": 0.07143, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.33333, "rouge_l_recall_cb": 0.33333, "rouge_l_recall_ce": 0.33333, "rouge_l_precision": 0.22222, "rouge_l_precision_cb": 0.22222, "rouge_l_precision_ce": 0.22222, "rouge_l_f_score": 0.26666, "rouge_l_f_score_cb": 0.26666, "rouge_l_f_score_ce": 0.26666, "rouge_w_1.2_recall": 0.17087, "rouge_w_1.2_recall_cb": 0.17087, "rouge_w_1.2_recall_ce": 0.17087, "rouge_w_1.2_precision": 0.18724, "rouge_w_1.2_precision_cb": 0.18724, "rouge_w_1.2_precision_ce": 0.18724, "rouge_w_1.2_f_score": 0.17868, "rouge_w_1.2_f_score_cb": 0.17868, "rouge_w_1.2_f_score_ce": 0.17868, "rouge_s*_recall": 0.09091, "rouge_s*_recall_cb": 0.09091, "rouge_s*_recall_ce": 0.09091, "rouge_s*_precision": 0.03922, "rouge_s*_precision_cb": 0.03922, "rouge_s*_precision_ce": 0.03922, "rouge_s*_f_score": 0.0548, "rouge_s*_f_score_cb": 0.0548, "rouge_s*_f_score_ce": 0.0548, "rouge_su*_recall": 0.12987, "rouge_su*_recall_cb": 0.12987, "rouge_su*_recall_ce": 0.12987, "rouge_su*_precision": 0.05882, "rouge_su*_precision_cb": 0.05882, "rouge_su*_precision_ce": 0.05882, "rouge_su*_f_score": 0.08097, "rouge_su*_f_score_cb": 0.08097, "rouge_su*_f_score_ce": 0.08097}}, {"id": 5, "filename": "NumpyEval_5.txt", "dataset_comment": "Given a matrix with 1 column and N rows, extract an array with N elements and return it.", "generated_comment": "Convert a given matrix into a 1D array by removing any singleton dimensions in the matrix using np.squeeze and converting it to a NumPy array using np.asarray.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.33333, "rouge_1_recall_cb": 0.33333, "rouge_1_recall_ce": 0.33333, "rouge_1_precision": 0.2069, "rouge_1_precision_cb": 0.2069, "rouge_1_precision_ce": 0.2069, "rouge_1_f_score": 0.25532, "rouge_1_f_score_cb": 0.25532, "rouge_1_f_score_ce": 0.25532, "rouge_2_recall": 0.0, "rouge_2_recall_cb": 0.0, "rouge_2_recall_ce": 0.0, "rouge_2_precision": 0.0, "rouge_2_precision_cb": 0.0, "rouge_2_precision_ce": 0.0, "rouge_2_f_score": 0.0, "rouge_2_f_score_cb": 0.0, "rouge_2_f_score_ce": 0.0, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.27778, "rouge_l_recall_cb": 0.27778, "rouge_l_recall_ce": 0.27778, "rouge_l_precision": 0.17241, "rouge_l_precision_cb": 0.17241, "rouge_l_precision_ce": 0.17241, "rouge_l_f_score": 0.21276, "rouge_l_f_score_cb": 0.21276, "rouge_l_f_score_ce": 0.21276, "rouge_w_1.2_recall": 0.13364, "rouge_w_1.2_recall_cb": 0.13364, "rouge_w_1.2_recall_ce": 0.13364, "rouge_w_1.2_precision": 0.14786, "rouge_w_1.2_precision_cb": 0.14786, "rouge_w_1.2_precision_ce": 0.14786, "rouge_w_1.2_f_score": 0.14039, "rouge_w_1.2_f_score_cb": 0.14039, "rouge_w_1.2_f_score_ce": 0.14039, "rouge_s*_recall": 0.11765, "rouge_s*_recall_cb": 0.11765, "rouge_s*_recall_ce": 0.11765, "rouge_s*_precision": 0.04433, "rouge_s*_precision_cb": 0.04433, "rouge_s*_precision_ce": 0.04433, "rouge_s*_f_score": 0.0644, "rouge_s*_f_score_cb": 0.0644, "rouge_s*_f_score_ce": 0.0644, "rouge_su*_recall": 0.13529, "rouge_su*_recall_cb": 0.13529, "rouge_su*_recall_ce": 0.13529, "rouge_su*_precision": 0.053, "rouge_su*_precision_cb": 0.053, "rouge_su*_precision_ce": 0.053, "rouge_su*_f_score": 0.07616, "rouge_su*_f_score_cb": 0.07616, "rouge_su*_f_score_ce": 0.07616}}, {"id": 6, "filename": "NumpyEval_6.txt", "dataset_comment": "Convert a numpy array to a tuple and return the transformed tuple.", "generated_comment": "Convert a 2D numpy array into a tuple of tuples using the map function to convert each row into a tuple.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.75, "rouge_1_recall_cb": 0.75, "rouge_1_recall_ce": 0.75, "rouge_1_precision": 0.42857, "rouge_1_precision_cb": 0.42857, "rouge_1_precision_ce": 0.42857, "rouge_1_f_score": 0.54545, "rouge_1_f_score_cb": 0.54545, "rouge_1_f_score_ce": 0.54545, "rouge_2_recall": 0.27273, "rouge_2_recall_cb": 0.27273, "rouge_2_recall_ce": 0.27273, "rouge_2_precision": 0.15, "rouge_2_precision_cb": 0.15, "rouge_2_precision_ce": 0.15, "rouge_2_f_score": 0.19355, "rouge_2_f_score_cb": 0.19355, "rouge_2_f_score_ce": 0.19355, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.66667, "rouge_l_recall_cb": 0.66667, "rouge_l_recall_ce": 0.66667, "rouge_l_precision": 0.38095, "rouge_l_precision_cb": 0.38095, "rouge_l_precision_ce": 0.38095, "rouge_l_f_score": 0.48485, "rouge_l_f_score_cb": 0.48485, "rouge_l_f_score_ce": 0.48485, "rouge_w_1.2_recall": 0.33313, "rouge_w_1.2_recall_cb": 0.33313, "rouge_w_1.2_recall_ce": 0.33313, "rouge_w_1.2_precision": 0.31291, "rouge_w_1.2_precision_cb": 0.31291, "rouge_w_1.2_precision_ce": 0.31291, "rouge_w_1.2_f_score": 0.3227, "rouge_w_1.2_f_score_cb": 0.3227, "rouge_w_1.2_f_score_ce": 0.3227, "rouge_s*_recall": 0.51515, "rouge_s*_recall_cb": 0.51515, "rouge_s*_recall_ce": 0.51515, "rouge_s*_precision": 0.1619, "rouge_s*_precision_cb": 0.1619, "rouge_s*_precision_ce": 0.1619, "rouge_s*_f_score": 0.24637, "rouge_s*_f_score_cb": 0.24637, "rouge_s*_f_score_ce": 0.24637, "rouge_su*_recall": 0.54545, "rouge_su*_recall_cb": 0.54545, "rouge_su*_recall_ce": 0.54545, "rouge_su*_precision": 0.18261, "rouge_su*_precision_cb": 0.18261, "rouge_su*_precision_ce": 0.18261, "rouge_su*_f_score": 0.27362, "rouge_su*_f_score_cb": 0.27362, "rouge_su*_f_score_ce": 0.27362}}, {"id": 7, "filename": "NumpyEval_7.txt", "dataset_comment": "Conduct the reverse operation along the last dimension.", "generated_comment": "Reverse the order of elements along the last axis of a multidimensional numpy array 'a'.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.625, "rouge_1_recall_cb": 0.625, "rouge_1_recall_ce": 0.625, "rouge_1_precision": 0.33333, "rouge_1_precision_cb": 0.33333, "rouge_1_precision_ce": 0.33333, "rouge_1_f_score": 0.43478, "rouge_1_f_score_cb": 0.43478, "rouge_1_f_score_ce": 0.43478, "rouge_2_recall": 0.28571, "rouge_2_recall_cb": 0.28571, "rouge_2_recall_ce": 0.28571, "rouge_2_precision": 0.14286, "rouge_2_precision_cb": 0.14286, "rouge_2_precision_ce": 0.14286, "rouge_2_f_score": 0.19048, "rouge_2_f_score_cb": 0.19048, "rouge_2_f_score_ce": 0.19048, "rouge_3_recall": 0.16667, "rouge_3_recall_cb": 0.16667, "rouge_3_recall_ce": 0.16667, "rouge_3_precision": 0.07692, "rouge_3_precision_cb": 0.07692, "rouge_3_precision_ce": 0.07692, "rouge_3_f_score": 0.10526, "rouge_3_f_score_cb": 0.10526, "rouge_3_f_score_ce": 0.10526, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.5, "rouge_l_recall_cb": 0.5, "rouge_l_recall_ce": 0.5, "rouge_l_precision": 0.26667, "rouge_l_precision_cb": 0.26667, "rouge_l_precision_ce": 0.26667, "rouge_l_f_score": 0.34783, "rouge_l_f_score_cb": 0.34783, "rouge_l_f_score_ce": 0.34783, "rouge_w_1.2_recall": 0.30146, "rouge_w_1.2_recall_cb": 0.30146, "rouge_w_1.2_recall_ce": 0.30146, "rouge_w_1.2_precision": 0.24369, "rouge_w_1.2_precision_cb": 0.24369, "rouge_w_1.2_precision_ce": 0.24369, "rouge_w_1.2_f_score": 0.26951, "rouge_w_1.2_f_score_cb": 0.26951, "rouge_w_1.2_f_score_ce": 0.26951, "rouge_s*_recall": 0.32143, "rouge_s*_recall_cb": 0.32143, "rouge_s*_recall_ce": 0.32143, "rouge_s*_precision": 0.08571, "rouge_s*_precision_cb": 0.08571, "rouge_s*_precision_ce": 0.08571, "rouge_s*_f_score": 0.13533, "rouge_s*_f_score_cb": 0.13533, "rouge_s*_f_score_ce": 0.13533, "rouge_su*_recall": 0.4, "rouge_su*_recall_cb": 0.4, "rouge_su*_recall_ce": 0.4, "rouge_su*_precision": 0.11765, "rouge_su*_precision_cb": 0.11765, "rouge_su*_precision_ce": 0.11765, "rouge_su*_f_score": 0.18182, "rouge_su*_f_score_cb": 0.18182, "rouge_su*_f_score_ce": 0.18182}}, {"id": 8, "filename": "NumpyEval_8.txt", "dataset_comment": "Remove all rows in a numpy.ndarray that contain non-numeric values and return the final result.", "generated_comment": "Remove all rows from a NumPy array that contain non-numeric values by checking if there are any NaN values along the rows and returning the array without those rows.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.76471, "rouge_1_recall_cb": 0.76471, "rouge_1_recall_ce": 0.76471, "rouge_1_precision": 0.43333, "rouge_1_precision_cb": 0.43333, "rouge_1_precision_ce": 0.43333, "rouge_1_f_score": 0.55319, "rouge_1_f_score_cb": 0.55319, "rouge_1_f_score_ce": 0.55319, "rouge_2_recall": 0.5625, "rouge_2_recall_cb": 0.5625, "rouge_2_recall_ce": 0.5625, "rouge_2_precision": 0.31034, "rouge_2_precision_cb": 0.31034, "rouge_2_precision_ce": 0.31034, "rouge_2_f_score": 0.4, "rouge_2_f_score_cb": 0.4, "rouge_2_f_score_ce": 0.4, "rouge_3_recall": 0.33333, "rouge_3_recall_cb": 0.33333, "rouge_3_recall_ce": 0.33333, "rouge_3_precision": 0.17857, "rouge_3_precision_cb": 0.17857, "rouge_3_precision_ce": 0.17857, "rouge_3_f_score": 0.23256, "rouge_3_f_score_cb": 0.23256, "rouge_3_f_score_ce": 0.23256, "rouge_4_recall": 0.14286, "rouge_4_recall_cb": 0.14286, "rouge_4_recall_ce": 0.14286, "rouge_4_precision": 0.07407, "rouge_4_precision_cb": 0.07407, "rouge_4_precision_ce": 0.07407, "rouge_4_f_score": 0.09756, "rouge_4_f_score_cb": 0.09756, "rouge_4_f_score_ce": 0.09756, "rouge_l_recall": 0.76471, "rouge_l_recall_cb": 0.76471, "rouge_l_recall_ce": 0.76471, "rouge_l_precision": 0.43333, "rouge_l_precision_cb": 0.43333, "rouge_l_precision_ce": 0.43333, "rouge_l_f_score": 0.55319, "rouge_l_f_score_cb": 0.55319, "rouge_l_f_score_ce": 0.55319, "rouge_w_1.2_recall": 0.37388, "rouge_w_1.2_recall_cb": 0.37388, "rouge_w_1.2_recall_ce": 0.37388, "rouge_w_1.2_precision": 0.37338, "rouge_w_1.2_precision_cb": 0.37338, "rouge_w_1.2_precision_ce": 0.37338, "rouge_w_1.2_f_score": 0.37363, "rouge_w_1.2_f_score_cb": 0.37363, "rouge_w_1.2_f_score_ce": 0.37363, "rouge_s*_recall": 0.57353, "rouge_s*_recall_cb": 0.57353, "rouge_s*_recall_ce": 0.57353, "rouge_s*_precision": 0.17931, "rouge_s*_precision_cb": 0.17931, "rouge_s*_precision_ce": 0.17931, "rouge_s*_f_score": 0.2732, "rouge_s*_f_score_cb": 0.2732, "rouge_s*_f_score_ce": 0.2732, "rouge_su*_recall": 0.59868, "rouge_su*_recall_cb": 0.59868, "rouge_su*_recall_ce": 0.59868, "rouge_su*_precision": 0.19612, "rouge_su*_precision_cb": 0.19612, "rouge_su*_precision_ce": 0.19612, "rouge_su*_f_score": 0.29545, "rouge_su*_f_score_cb": 0.29545, "rouge_su*_f_score_ce": 0.29545}}, {"id": 9, "filename": "NumpyEval_9.txt", "dataset_comment": "Set the diagonal elements of the Pandas DataFrame to 0.", "generated_comment": "Fill the diagonal of a DataFrame with zeros using numpy's fill_diagonal function.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.4, "rouge_1_recall_cb": 0.4, "rouge_1_recall_ce": 0.4, "rouge_1_precision": 0.28571, "rouge_1_precision_cb": 0.28571, "rouge_1_precision_ce": 0.28571, "rouge_1_f_score": 0.33333, "rouge_1_f_score_cb": 0.33333, "rouge_1_f_score_ce": 0.33333, "rouge_2_recall": 0.11111, "rouge_2_recall_cb": 0.11111, "rouge_2_recall_ce": 0.11111, "rouge_2_precision": 0.07692, "rouge_2_precision_cb": 0.07692, "rouge_2_precision_ce": 0.07692, "rouge_2_f_score": 0.09091, "rouge_2_f_score_cb": 0.09091, "rouge_2_f_score_ce": 0.09091, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.4, "rouge_l_recall_cb": 0.4, "rouge_l_recall_ce": 0.4, "rouge_l_precision": 0.28571, "rouge_l_precision_cb": 0.28571, "rouge_l_precision_ce": 0.28571, "rouge_l_f_score": 0.33333, "rouge_l_f_score_cb": 0.33333, "rouge_l_f_score_ce": 0.33333, "rouge_w_1.2_recall": 0.21265, "rouge_w_1.2_recall_cb": 0.21265, "rouge_w_1.2_recall_ce": 0.21265, "rouge_w_1.2_precision": 0.24074, "rouge_w_1.2_precision_cb": 0.24074, "rouge_w_1.2_precision_ce": 0.24074, "rouge_w_1.2_f_score": 0.22582, "rouge_w_1.2_f_score_cb": 0.22582, "rouge_w_1.2_f_score_ce": 0.22582, "rouge_s*_recall": 0.13333, "rouge_s*_recall_cb": 0.13333, "rouge_s*_recall_ce": 0.13333, "rouge_s*_precision": 0.06593, "rouge_s*_precision_cb": 0.06593, "rouge_s*_precision_ce": 0.06593, "rouge_s*_f_score": 0.08823, "rouge_s*_f_score_cb": 0.08823, "rouge_s*_f_score_ce": 0.08823, "rouge_su*_recall": 0.18519, "rouge_su*_recall_cb": 0.18519, "rouge_su*_recall_ce": 0.18519, "rouge_su*_precision": 0.09615, "rouge_su*_precision_cb": 0.09615, "rouge_su*_precision_ce": 0.09615, "rouge_su*_f_score": 0.12658, "rouge_su*_f_score_cb": 0.12658, "rouge_su*_f_score_ce": 0.12658}}, {"id": 10, "filename": "NumpyEval_10.txt", "dataset_comment": "Count the number of elements in a Numpy array that fulfill the condition 2 < x < 8.", "generated_comment": "Count the number of elements in the array 'a' that are greater than 2 and less than 8.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.78571, "rouge_1_recall_cb": 0.78571, "rouge_1_recall_ce": 0.78571, "rouge_1_precision": 0.61111, "rouge_1_precision_cb": 0.61111, "rouge_1_precision_ce": 0.61111, "rouge_1_f_score": 0.6875, "rouge_1_f_score_cb": 0.6875, "rouge_1_f_score_ce": 0.6875, "rouge_2_recall": 0.38462, "rouge_2_recall_cb": 0.38462, "rouge_2_recall_ce": 0.38462, "rouge_2_precision": 0.29412, "rouge_2_precision_cb": 0.29412, "rouge_2_precision_ce": 0.29412, "rouge_2_f_score": 0.33334, "rouge_2_f_score_cb": 0.33334, "rouge_2_f_score_ce": 0.33334, "rouge_3_recall": 0.33333, "rouge_3_recall_cb": 0.33333, "rouge_3_recall_ce": 0.33333, "rouge_3_precision": 0.25, "rouge_3_precision_cb": 0.25, "rouge_3_precision_ce": 0.25, "rouge_3_f_score": 0.28571, "rouge_3_f_score_cb": 0.28571, "rouge_3_f_score_ce": 0.28571, "rouge_4_recall": 0.27273, "rouge_4_recall_cb": 0.27273, "rouge_4_recall_ce": 0.27273, "rouge_4_precision": 0.2, "rouge_4_precision_cb": 0.2, "rouge_4_precision_ce": 0.2, "rouge_4_f_score": 0.23077, "rouge_4_f_score_cb": 0.23077, "rouge_4_f_score_ce": 0.23077, "rouge_l_recall": 0.64286, "rouge_l_recall_cb": 0.64286, "rouge_l_recall_ce": 0.64286, "rouge_l_precision": 0.5, "rouge_l_precision_cb": 0.5, "rouge_l_precision_ce": 0.5, "rouge_l_f_score": 0.5625, "rouge_l_f_score_cb": 0.5625, "rouge_l_f_score_ce": 0.5625, "rouge_w_1.2_recall": 0.34182, "rouge_w_1.2_recall_cb": 0.34182, "rouge_w_1.2_recall_ce": 0.34182, "rouge_w_1.2_precision": 0.45069, "rouge_w_1.2_precision_cb": 0.45069, "rouge_w_1.2_precision_ce": 0.45069, "rouge_w_1.2_f_score": 0.38878, "rouge_w_1.2_f_score_cb": 0.38878, "rouge_w_1.2_f_score_ce": 0.38878, "rouge_s*_recall": 0.56044, "rouge_s*_recall_cb": 0.56044, "rouge_s*_recall_ce": 0.56044, "rouge_s*_precision": 0.33333, "rouge_s*_precision_cb": 0.33333, "rouge_s*_precision_ce": 0.33333, "rouge_s*_f_score": 0.41803, "rouge_s*_f_score_cb": 0.41803, "rouge_s*_f_score_ce": 0.41803, "rouge_su*_recall": 0.58654, "rouge_su*_recall_cb": 0.58654, "rouge_su*_recall_ce": 0.58654, "rouge_su*_precision": 0.35882, "rouge_su*_precision_cb": 0.35882, "rouge_su*_precision_ce": 0.35882, "rouge_su*_f_score": 0.44525, "rouge_su*_f_score_cb": 0.44525, "rouge_su*_f_score_ce": 0.44525}}, {"id": 11, "filename": "NumpyEval_11.txt", "dataset_comment": "Flatten a list of NumPy arrays by using numpy.concatenate to concatenate all elements of the input list into a single NumPy array, and then apply numpy.ravel to flatten the array.", "generated_comment": "Concatenate a list of numpy arrays of shape (1, 1) into a single array and flatten it to a 1D array.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.46875, "rouge_1_recall_cb": 0.46875, "rouge_1_recall_ce": 0.46875, "rouge_1_precision": 0.71429, "rouge_1_precision_cb": 0.71429, "rouge_1_precision_ce": 0.71429, "rouge_1_f_score": 0.56604, "rouge_1_f_score_cb": 0.56604, "rouge_1_f_score_ce": 0.56604, "rouge_2_recall": 0.22581, "rouge_2_recall_cb": 0.22581, "rouge_2_recall_ce": 0.22581, "rouge_2_precision": 0.35, "rouge_2_precision_cb": 0.35, "rouge_2_precision_ce": 0.35, "rouge_2_f_score": 0.27451, "rouge_2_f_score_cb": 0.27451, "rouge_2_f_score_ce": 0.27451, "rouge_3_recall": 0.13333, "rouge_3_recall_cb": 0.13333, "rouge_3_recall_ce": 0.13333, "rouge_3_precision": 0.21053, "rouge_3_precision_cb": 0.21053, "rouge_3_precision_ce": 0.21053, "rouge_3_f_score": 0.16326, "rouge_3_f_score_cb": 0.16326, "rouge_3_f_score_ce": 0.16326, "rouge_4_recall": 0.06897, "rouge_4_recall_cb": 0.06897, "rouge_4_recall_ce": 0.06897, "rouge_4_precision": 0.11111, "rouge_4_precision_cb": 0.11111, "rouge_4_precision_ce": 0.11111, "rouge_4_f_score": 0.08511, "rouge_4_f_score_cb": 0.08511, "rouge_4_f_score_ce": 0.08511, "rouge_l_recall": 0.40625, "rouge_l_recall_cb": 0.40625, "rouge_l_recall_ce": 0.40625, "rouge_l_precision": 0.61905, "rouge_l_precision_cb": 0.61905, "rouge_l_precision_ce": 0.61905, "rouge_l_f_score": 0.49057, "rouge_l_f_score_cb": 0.49057, "rouge_l_f_score_ce": 0.49057, "rouge_w_1.2_recall": 0.15694, "rouge_w_1.2_recall_cb": 0.15694, "rouge_w_1.2_recall_ce": 0.15694, "rouge_w_1.2_precision": 0.4783, "rouge_w_1.2_precision_cb": 0.4783, "rouge_w_1.2_precision_ce": 0.4783, "rouge_w_1.2_f_score": 0.23633, "rouge_w_1.2_f_score_cb": 0.23633, "rouge_w_1.2_f_score_ce": 0.23633, "rouge_s*_recall": 0.21976, "rouge_s*_recall_cb": 0.21976, "rouge_s*_recall_ce": 0.21976, "rouge_s*_precision": 0.51905, "rouge_s*_precision_cb": 0.51905, "rouge_s*_precision_ce": 0.51905, "rouge_s*_f_score": 0.30878, "rouge_s*_f_score_cb": 0.30878, "rouge_s*_f_score_ce": 0.30878, "rouge_su*_recall": 0.2334, "rouge_su*_recall_cb": 0.2334, "rouge_su*_recall_ce": 0.2334, "rouge_su*_precision": 0.53478, "rouge_su*_precision_cb": 0.53478, "rouge_su*_precision_ce": 0.53478, "rouge_su*_f_score": 0.32497, "rouge_su*_f_score_cb": 0.32497, "rouge_su*_f_score_ce": 0.32497}}, {"id": 12, "filename": "NumpyEval_12.txt", "dataset_comment": "Get the shape of a NumPy array.", "generated_comment": "Get the shape of the numpy array 'a'.", "indicator_name": "rouge", "score": {"rouge_1_recall": 1.0, "rouge_1_recall_cb": 1.0, "rouge_1_recall_ce": 1.0, "rouge_1_precision": 0.875, "rouge_1_precision_cb": 0.875, "rouge_1_precision_ce": 0.875, "rouge_1_f_score": 0.93333, "rouge_1_f_score_cb": 0.93333, "rouge_1_f_score_ce": 0.93333, "rouge_2_recall": 0.66667, "rouge_2_recall_cb": 0.66667, "rouge_2_recall_ce": 0.66667, "rouge_2_precision": 0.57143, "rouge_2_precision_cb": 0.57143, "rouge_2_precision_ce": 0.57143, "rouge_2_f_score": 0.61539, "rouge_2_f_score_cb": 0.61539, "rouge_2_f_score_ce": 0.61539, "rouge_3_recall": 0.4, "rouge_3_recall_cb": 0.4, "rouge_3_recall_ce": 0.4, "rouge_3_precision": 0.33333, "rouge_3_precision_cb": 0.33333, "rouge_3_precision_ce": 0.33333, "rouge_3_f_score": 0.36363, "rouge_3_f_score_cb": 0.36363, "rouge_3_f_score_ce": 0.36363, "rouge_4_recall": 0.25, "rouge_4_recall_cb": 0.25, "rouge_4_recall_ce": 0.25, "rouge_4_precision": 0.2, "rouge_4_precision_cb": 0.2, "rouge_4_precision_ce": 0.2, "rouge_4_f_score": 0.22222, "rouge_4_f_score_cb": 0.22222, "rouge_4_f_score_ce": 0.22222, "rouge_l_recall": 0.85714, "rouge_l_recall_cb": 0.85714, "rouge_l_recall_ce": 0.85714, "rouge_l_precision": 0.75, "rouge_l_precision_cb": 0.75, "rouge_l_precision_ce": 0.75, "rouge_l_f_score": 0.8, "rouge_l_f_score_cb": 0.8, "rouge_l_f_score_ce": 0.8, "rouge_w_1.2_recall": 0.52326, "rouge_w_1.2_recall_cb": 0.52326, "rouge_w_1.2_recall_ce": 0.52326, "rouge_w_1.2_precision": 0.67569, "rouge_w_1.2_precision_cb": 0.67569, "rouge_w_1.2_precision_ce": 0.67569, "rouge_w_1.2_f_score": 0.58979, "rouge_w_1.2_f_score_cb": 0.58979, "rouge_w_1.2_f_score_ce": 0.58979, "rouge_s*_recall": 0.90476, "rouge_s*_recall_cb": 0.90476, "rouge_s*_recall_ce": 0.90476, "rouge_s*_precision": 0.67857, "rouge_s*_precision_cb": 0.67857, "rouge_s*_precision_ce": 0.67857, "rouge_s*_f_score": 0.77551, "rouge_s*_f_score_cb": 0.77551, "rouge_s*_f_score_ce": 0.77551, "rouge_su*_recall": 0.88889, "rouge_su*_recall_cb": 0.88889, "rouge_su*_recall_ce": 0.88889, "rouge_su*_precision": 0.68571, "rouge_su*_precision_cb": 0.68571, "rouge_su*_precision_ce": 0.68571, "rouge_su*_f_score": 0.77419, "rouge_su*_f_score_cb": 0.77419, "rouge_su*_f_score_ce": 0.77419}}, {"id": 13, "filename": "NumpyEval_13.txt", "dataset_comment": "Inverse a matrix using numpy and return it. Input:   matrix: numpy array, shape (n, n) Output:   inverse: numpy array, shape (n, n)", "generated_comment": "Calculate the inverse of a matrix using numpy's linear algebra module np.linalg.inv().", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.22727, "rouge_1_recall_cb": 0.22727, "rouge_1_recall_ce": 0.22727, "rouge_1_precision": 0.33333, "rouge_1_precision_cb": 0.33333, "rouge_1_precision_ce": 0.33333, "rouge_1_f_score": 0.27027, "rouge_1_f_score_cb": 0.27027, "rouge_1_f_score_ce": 0.27027, "rouge_2_recall": 0.14286, "rouge_2_recall_cb": 0.14286, "rouge_2_recall_ce": 0.14286, "rouge_2_precision": 0.21429, "rouge_2_precision_cb": 0.21429, "rouge_2_precision_ce": 0.21429, "rouge_2_f_score": 0.17143, "rouge_2_f_score_cb": 0.17143, "rouge_2_f_score_ce": 0.17143, "rouge_3_recall": 0.1, "rouge_3_recall_cb": 0.1, "rouge_3_recall_ce": 0.1, "rouge_3_precision": 0.15385, "rouge_3_precision_cb": 0.15385, "rouge_3_precision_ce": 0.15385, "rouge_3_f_score": 0.12121, "rouge_3_f_score_cb": 0.12121, "rouge_3_f_score_ce": 0.12121, "rouge_4_recall": 0.05263, "rouge_4_recall_cb": 0.05263, "rouge_4_recall_ce": 0.05263, "rouge_4_precision": 0.08333, "rouge_4_precision_cb": 0.08333, "rouge_4_precision_ce": 0.08333, "rouge_4_f_score": 0.06451, "rouge_4_f_score_cb": 0.06451, "rouge_4_f_score_ce": 0.06451, "rouge_l_recall": 0.22727, "rouge_l_recall_cb": 0.22727, "rouge_l_recall_ce": 0.22727, "rouge_l_precision": 0.33333, "rouge_l_precision_cb": 0.33333, "rouge_l_precision_ce": 0.33333, "rouge_l_f_score": 0.27027, "rouge_l_f_score_cb": 0.27027, "rouge_l_f_score_ce": 0.27027, "rouge_w_1.2_recall": 0.12248, "rouge_w_1.2_recall_cb": 0.12248, "rouge_w_1.2_recall_ce": 0.12248, "rouge_w_1.2_precision": 0.33333, "rouge_w_1.2_precision_cb": 0.33333, "rouge_w_1.2_precision_ce": 0.33333, "rouge_w_1.2_f_score": 0.17914, "rouge_w_1.2_f_score_cb": 0.17914, "rouge_w_1.2_f_score_ce": 0.17914, "rouge_s*_recall": 0.04329, "rouge_s*_recall_cb": 0.04329, "rouge_s*_recall_ce": 0.04329, "rouge_s*_precision": 0.09524, "rouge_s*_precision_cb": 0.09524, "rouge_s*_precision_ce": 0.09524, "rouge_s*_f_score": 0.05952, "rouge_s*_f_score_cb": 0.05952, "rouge_s*_f_score_ce": 0.05952, "rouge_su*_recall": 0.05952, "rouge_su*_recall_cb": 0.05952, "rouge_su*_recall_ce": 0.05952, "rouge_su*_precision": 0.12605, "rouge_su*_precision_cb": 0.12605, "rouge_su*_precision_ce": 0.12605, "rouge_su*_f_score": 0.08086, "rouge_su*_f_score_cb": 0.08086, "rouge_su*_f_score_ce": 0.08086}}, {"id": 14, "filename": "NumpyEval_14.txt", "dataset_comment": "Check whether a numpy array is empty and return the result as True or False.", "generated_comment": "Check if a numpy array is empty by comparing its size to 0.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.4, "rouge_1_recall_cb": 0.4, "rouge_1_recall_ce": 0.4, "rouge_1_precision": 0.46154, "rouge_1_precision_cb": 0.46154, "rouge_1_precision_ce": 0.46154, "rouge_1_f_score": 0.42857, "rouge_1_f_score_cb": 0.42857, "rouge_1_f_score_ce": 0.42857, "rouge_2_recall": 0.28571, "rouge_2_recall_cb": 0.28571, "rouge_2_recall_ce": 0.28571, "rouge_2_precision": 0.33333, "rouge_2_precision_cb": 0.33333, "rouge_2_precision_ce": 0.33333, "rouge_2_f_score": 0.30769, "rouge_2_f_score_cb": 0.30769, "rouge_2_f_score_ce": 0.30769, "rouge_3_recall": 0.23077, "rouge_3_recall_cb": 0.23077, "rouge_3_recall_ce": 0.23077, "rouge_3_precision": 0.27273, "rouge_3_precision_cb": 0.27273, "rouge_3_precision_ce": 0.27273, "rouge_3_f_score": 0.25, "rouge_3_f_score_cb": 0.25, "rouge_3_f_score_ce": 0.25, "rouge_4_recall": 0.16667, "rouge_4_recall_cb": 0.16667, "rouge_4_recall_ce": 0.16667, "rouge_4_precision": 0.2, "rouge_4_precision_cb": 0.2, "rouge_4_precision_ce": 0.2, "rouge_4_f_score": 0.18182, "rouge_4_f_score_cb": 0.18182, "rouge_4_f_score_ce": 0.18182, "rouge_l_recall": 0.4, "rouge_l_recall_cb": 0.4, "rouge_l_recall_ce": 0.4, "rouge_l_precision": 0.46154, "rouge_l_precision_cb": 0.46154, "rouge_l_precision_ce": 0.46154, "rouge_l_f_score": 0.42857, "rouge_l_f_score_cb": 0.42857, "rouge_l_f_score_ce": 0.42857, "rouge_w_1.2_recall": 0.2171, "rouge_w_1.2_recall_cb": 0.2171, "rouge_w_1.2_recall_ce": 0.2171, "rouge_w_1.2_precision": 0.43054, "rouge_w_1.2_precision_cb": 0.43054, "rouge_w_1.2_precision_ce": 0.43054, "rouge_w_1.2_f_score": 0.28865, "rouge_w_1.2_f_score_cb": 0.28865, "rouge_w_1.2_f_score_ce": 0.28865, "rouge_s*_recall": 0.14286, "rouge_s*_recall_cb": 0.14286, "rouge_s*_recall_ce": 0.14286, "rouge_s*_precision": 0.19231, "rouge_s*_precision_cb": 0.19231, "rouge_s*_precision_ce": 0.19231, "rouge_s*_f_score": 0.16394, "rouge_s*_f_score_cb": 0.16394, "rouge_s*_f_score_ce": 0.16394, "rouge_su*_recall": 0.17647, "rouge_su*_recall_cb": 0.17647, "rouge_su*_recall_ce": 0.17647, "rouge_su*_precision": 0.23333, "rouge_su*_precision_cb": 0.23333, "rouge_su*_precision_ce": 0.23333, "rouge_su*_f_score": 0.20096, "rouge_su*_f_score_cb": 0.20096, "rouge_su*_f_score_ce": 0.20096}}, {"id": 15, "filename": "NumpyEval_15.txt", "dataset_comment": "Assign the array x to the 2nd column of the array a.", "generated_comment": "Assign an array of ones to the second column of a numpy array 'a'.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.66667, "rouge_1_recall_cb": 0.66667, "rouge_1_recall_ce": 0.66667, "rouge_1_precision": 0.57143, "rouge_1_precision_cb": 0.57143, "rouge_1_precision_ce": 0.57143, "rouge_1_f_score": 0.61539, "rouge_1_f_score_cb": 0.61539, "rouge_1_f_score_ce": 0.61539, "rouge_2_recall": 0.27273, "rouge_2_recall_cb": 0.27273, "rouge_2_recall_ce": 0.27273, "rouge_2_precision": 0.23077, "rouge_2_precision_cb": 0.23077, "rouge_2_precision_ce": 0.23077, "rouge_2_f_score": 0.25, "rouge_2_f_score_cb": 0.25, "rouge_2_f_score_ce": 0.25, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.66667, "rouge_l_recall_cb": 0.66667, "rouge_l_recall_ce": 0.66667, "rouge_l_precision": 0.57143, "rouge_l_precision_cb": 0.57143, "rouge_l_precision_ce": 0.57143, "rouge_l_f_score": 0.61539, "rouge_l_f_score_cb": 0.61539, "rouge_l_f_score_ce": 0.61539, "rouge_w_1.2_recall": 0.3132, "rouge_w_1.2_recall_cb": 0.3132, "rouge_w_1.2_recall_ce": 0.3132, "rouge_w_1.2_precision": 0.44128, "rouge_w_1.2_precision_cb": 0.44128, "rouge_w_1.2_precision_ce": 0.44128, "rouge_w_1.2_f_score": 0.36637, "rouge_w_1.2_f_score_cb": 0.36637, "rouge_w_1.2_f_score_ce": 0.36637, "rouge_s*_recall": 0.45455, "rouge_s*_recall_cb": 0.45455, "rouge_s*_recall_ce": 0.45455, "rouge_s*_precision": 0.32967, "rouge_s*_precision_cb": 0.32967, "rouge_s*_precision_ce": 0.32967, "rouge_s*_f_score": 0.38217, "rouge_s*_f_score_cb": 0.38217, "rouge_s*_f_score_ce": 0.38217, "rouge_su*_recall": 0.48052, "rouge_su*_recall_cb": 0.48052, "rouge_su*_recall_ce": 0.48052, "rouge_su*_precision": 0.35577, "rouge_su*_precision_cb": 0.35577, "rouge_su*_precision_ce": 0.35577, "rouge_su*_f_score": 0.40884, "rouge_su*_f_score_cb": 0.40884, "rouge_su*_f_score_ce": 0.40884}}, {"id": 16, "filename": "NumpyEval_16.txt", "dataset_comment": "Find indices of a list of values in a NumPy array.", "generated_comment": "Find the indices where elements from 'search' array can be inserted in 'master' array to maintain the sorted order using np.searchsorted() method.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.36364, "rouge_1_recall_cb": 0.36364, "rouge_1_recall_ce": 0.36364, "rouge_1_precision": 0.17391, "rouge_1_precision_cb": 0.17391, "rouge_1_precision_ce": 0.17391, "rouge_1_f_score": 0.23529, "rouge_1_f_score_cb": 0.23529, "rouge_1_f_score_ce": 0.23529, "rouge_2_recall": 0.0, "rouge_2_recall_cb": 0.0, "rouge_2_recall_ce": 0.0, "rouge_2_precision": 0.0, "rouge_2_precision_cb": 0.0, "rouge_2_precision_ce": 0.0, "rouge_2_f_score": 0.0, "rouge_2_f_score_cb": 0.0, "rouge_2_f_score_ce": 0.0, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.36364, "rouge_l_recall_cb": 0.36364, "rouge_l_recall_ce": 0.36364, "rouge_l_precision": 0.17391, "rouge_l_precision_cb": 0.17391, "rouge_l_precision_ce": 0.17391, "rouge_l_f_score": 0.23529, "rouge_l_f_score_cb": 0.23529, "rouge_l_f_score_ce": 0.23529, "rouge_w_1.2_recall": 0.18967, "rouge_w_1.2_recall_cb": 0.18967, "rouge_w_1.2_recall_ce": 0.18967, "rouge_w_1.2_precision": 0.14654, "rouge_w_1.2_precision_cb": 0.14654, "rouge_w_1.2_precision_ce": 0.14654, "rouge_w_1.2_f_score": 0.16534, "rouge_w_1.2_f_score_cb": 0.16534, "rouge_w_1.2_f_score_ce": 0.16534, "rouge_s*_recall": 0.10909, "rouge_s*_recall_cb": 0.10909, "rouge_s*_recall_ce": 0.10909, "rouge_s*_precision": 0.02372, "rouge_s*_precision_cb": 0.02372, "rouge_s*_precision_ce": 0.02372, "rouge_s*_f_score": 0.03897, "rouge_s*_f_score_cb": 0.03897, "rouge_s*_f_score_ce": 0.03897, "rouge_su*_recall": 0.13846, "rouge_su*_recall_cb": 0.13846, "rouge_su*_recall_ce": 0.13846, "rouge_su*_precision": 0.03273, "rouge_su*_precision_cb": 0.03273, "rouge_su*_precision_ce": 0.03273, "rouge_su*_f_score": 0.05294, "rouge_su*_f_score_cb": 0.05294, "rouge_su*_f_score_ce": 0.05294}}, {"id": 17, "filename": "NumpyEval_17.txt", "dataset_comment": "Flatten the array into a single array of N elements, where N is the total number of float elements in all the sub-arrays.", "generated_comment": "Stack arrays horizontally (column wise) from a sequence of arrays with different shapes while preserving the data type as objects.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.20833, "rouge_1_recall_cb": 0.20833, "rouge_1_recall_ce": 0.20833, "rouge_1_precision": 0.25, "rouge_1_precision_cb": 0.25, "rouge_1_precision_ce": 0.25, "rouge_1_f_score": 0.22727, "rouge_1_f_score_cb": 0.22727, "rouge_1_f_score_ce": 0.22727, "rouge_2_recall": 0.0, "rouge_2_recall_cb": 0.0, "rouge_2_recall_ce": 0.0, "rouge_2_precision": 0.0, "rouge_2_precision_cb": 0.0, "rouge_2_precision_ce": 0.0, "rouge_2_f_score": 0.0, "rouge_2_f_score_cb": 0.0, "rouge_2_f_score_ce": 0.0, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.16667, "rouge_l_recall_cb": 0.16667, "rouge_l_recall_ce": 0.16667, "rouge_l_precision": 0.2, "rouge_l_precision_cb": 0.2, "rouge_l_precision_ce": 0.2, "rouge_l_f_score": 0.18182, "rouge_l_f_score_cb": 0.18182, "rouge_l_f_score_ce": 0.18182, "rouge_w_1.2_recall": 0.07006, "rouge_w_1.2_recall_cb": 0.07006, "rouge_w_1.2_recall_ce": 0.07006, "rouge_w_1.2_precision": 0.15874, "rouge_w_1.2_precision_cb": 0.15874, "rouge_w_1.2_precision_ce": 0.15874, "rouge_w_1.2_f_score": 0.09721, "rouge_w_1.2_f_score_cb": 0.09721, "rouge_w_1.2_f_score_ce": 0.09721, "rouge_s*_recall": 0.03623, "rouge_s*_recall_cb": 0.03623, "rouge_s*_recall_ce": 0.03623, "rouge_s*_precision": 0.05263, "rouge_s*_precision_cb": 0.05263, "rouge_s*_precision_ce": 0.05263, "rouge_s*_f_score": 0.04292, "rouge_s*_f_score_cb": 0.04292, "rouge_s*_f_score_ce": 0.04292, "rouge_su*_recall": 0.05017, "rouge_su*_recall_cb": 0.05017, "rouge_su*_recall_ce": 0.05017, "rouge_su*_precision": 0.07177, "rouge_su*_precision_cb": 0.07177, "rouge_su*_precision_ce": 0.07177, "rouge_su*_f_score": 0.05906, "rouge_su*_f_score_cb": 0.05906, "rouge_su*_f_score_ce": 0.05906}}, {"id": 18, "filename": "NumpyEval_18.txt", "dataset_comment": "Find and return the minimum value in the 2D array by implementing the following code.", "generated_comment": "Find the minimum value in the given numpy array 'arr' using np.min() function.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.46667, "rouge_1_recall_cb": 0.46667, "rouge_1_recall_ce": 0.46667, "rouge_1_precision": 0.5, "rouge_1_precision_cb": 0.5, "rouge_1_precision_ce": 0.5, "rouge_1_f_score": 0.48276, "rouge_1_f_score_cb": 0.48276, "rouge_1_f_score_ce": 0.48276, "rouge_2_recall": 0.28571, "rouge_2_recall_cb": 0.28571, "rouge_2_recall_ce": 0.28571, "rouge_2_precision": 0.30769, "rouge_2_precision_cb": 0.30769, "rouge_2_precision_ce": 0.30769, "rouge_2_f_score": 0.29629, "rouge_2_f_score_cb": 0.29629, "rouge_2_f_score_ce": 0.29629, "rouge_3_recall": 0.23077, "rouge_3_recall_cb": 0.23077, "rouge_3_recall_ce": 0.23077, "rouge_3_precision": 0.25, "rouge_3_precision_cb": 0.25, "rouge_3_precision_ce": 0.25, "rouge_3_f_score": 0.24, "rouge_3_f_score_cb": 0.24, "rouge_3_f_score_ce": 0.24, "rouge_4_recall": 0.16667, "rouge_4_recall_cb": 0.16667, "rouge_4_recall_ce": 0.16667, "rouge_4_precision": 0.18182, "rouge_4_precision_cb": 0.18182, "rouge_4_precision_ce": 0.18182, "rouge_4_f_score": 0.17392, "rouge_4_f_score_cb": 0.17392, "rouge_4_f_score_ce": 0.17392, "rouge_l_recall": 0.46667, "rouge_l_recall_cb": 0.46667, "rouge_l_recall_ce": 0.46667, "rouge_l_precision": 0.5, "rouge_l_precision_cb": 0.5, "rouge_l_precision_ce": 0.5, "rouge_l_f_score": 0.48276, "rouge_l_f_score_cb": 0.48276, "rouge_l_f_score_ce": 0.48276, "rouge_w_1.2_recall": 0.23977, "rouge_w_1.2_recall_cb": 0.23977, "rouge_w_1.2_recall_ce": 0.23977, "rouge_w_1.2_precision": 0.44155, "rouge_w_1.2_precision_cb": 0.44155, "rouge_w_1.2_precision_ce": 0.44155, "rouge_w_1.2_f_score": 0.31078, "rouge_w_1.2_f_score_cb": 0.31078, "rouge_w_1.2_f_score_ce": 0.31078, "rouge_s*_recall": 0.2, "rouge_s*_recall_cb": 0.2, "rouge_s*_recall_ce": 0.2, "rouge_s*_precision": 0.23077, "rouge_s*_precision_cb": 0.23077, "rouge_s*_precision_ce": 0.23077, "rouge_s*_f_score": 0.21429, "rouge_s*_f_score_cb": 0.21429, "rouge_s*_f_score_ce": 0.21429, "rouge_su*_recall": 0.23529, "rouge_su*_recall_cb": 0.23529, "rouge_su*_recall_ce": 0.23529, "rouge_su*_precision": 0.26923, "rouge_su*_precision_cb": 0.26923, "rouge_su*_precision_ce": 0.26923, "rouge_su*_f_score": 0.25112, "rouge_su*_f_score_cb": 0.25112, "rouge_su*_f_score_ce": 0.25112}}, {"id": 19, "filename": "NumpyEval_19.txt", "dataset_comment": "Create an array of shape (5, 5) where every entry is the same value, specifically -1.", "generated_comment": "Create a 5x5 numpy array filled with -1.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.1875, "rouge_1_recall_cb": 0.1875, "rouge_1_recall_ce": 0.1875, "rouge_1_precision": 0.375, "rouge_1_precision_cb": 0.375, "rouge_1_precision_ce": 0.375, "rouge_1_f_score": 0.25, "rouge_1_f_score_cb": 0.25, "rouge_1_f_score_ce": 0.25, "rouge_2_recall": 0.0, "rouge_2_recall_cb": 0.0, "rouge_2_recall_ce": 0.0, "rouge_2_precision": 0.0, "rouge_2_precision_cb": 0.0, "rouge_2_precision_ce": 0.0, "rouge_2_f_score": 0.0, "rouge_2_f_score_cb": 0.0, "rouge_2_f_score_ce": 0.0, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.1875, "rouge_l_recall_cb": 0.1875, "rouge_l_recall_ce": 0.1875, "rouge_l_precision": 0.375, "rouge_l_precision_cb": 0.375, "rouge_l_precision_ce": 0.375, "rouge_l_f_score": 0.25, "rouge_l_f_score_cb": 0.25, "rouge_l_f_score_ce": 0.25, "rouge_w_1.2_recall": 0.08967, "rouge_w_1.2_recall_cb": 0.08967, "rouge_w_1.2_recall_ce": 0.08967, "rouge_w_1.2_precision": 0.31226, "rouge_w_1.2_precision_cb": 0.31226, "rouge_w_1.2_precision_ce": 0.31226, "rouge_w_1.2_f_score": 0.13933, "rouge_w_1.2_f_score_cb": 0.13933, "rouge_w_1.2_f_score_ce": 0.13933, "rouge_s*_recall": 0.025, "rouge_s*_recall_cb": 0.025, "rouge_s*_recall_ce": 0.025, "rouge_s*_precision": 0.10714, "rouge_s*_precision_cb": 0.10714, "rouge_s*_precision_ce": 0.10714, "rouge_s*_f_score": 0.04054, "rouge_s*_f_score_cb": 0.04054, "rouge_s*_f_score_ce": 0.04054, "rouge_su*_recall": 0.03704, "rouge_su*_recall_cb": 0.03704, "rouge_su*_recall_ce": 0.03704, "rouge_su*_precision": 0.14286, "rouge_su*_precision_cb": 0.14286, "rouge_su*_precision_ce": 0.14286, "rouge_su*_f_score": 0.05883, "rouge_su*_f_score_cb": 0.05883, "rouge_su*_f_score_ce": 0.05883}}, {"id": 20, "filename": "NumpyEval_20.txt", "dataset_comment": "Convert a numpy.ndarray to a string and then convert it back to a numpy.ndarray with dtype=int.", "generated_comment": "Convert the numpy array 'arr' to a string representation using tostring() method and then create a new numpy array 'new_arr' by converting the string back to integers using fromstring() method.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.63158, "rouge_1_recall_cb": 0.63158, "rouge_1_recall_ce": 0.63158, "rouge_1_precision": 0.3871, "rouge_1_precision_cb": 0.3871, "rouge_1_precision_ce": 0.3871, "rouge_1_f_score": 0.48, "rouge_1_f_score_cb": 0.48, "rouge_1_f_score_ce": 0.48, "rouge_2_recall": 0.22222, "rouge_2_recall_cb": 0.22222, "rouge_2_recall_ce": 0.22222, "rouge_2_precision": 0.13333, "rouge_2_precision_cb": 0.13333, "rouge_2_precision_ce": 0.13333, "rouge_2_f_score": 0.16666, "rouge_2_f_score_cb": 0.16666, "rouge_2_f_score_ce": 0.16666, "rouge_3_recall": 0.05882, "rouge_3_recall_cb": 0.05882, "rouge_3_recall_ce": 0.05882, "rouge_3_precision": 0.03448, "rouge_3_precision_cb": 0.03448, "rouge_3_precision_ce": 0.03448, "rouge_3_f_score": 0.04348, "rouge_3_f_score_cb": 0.04348, "rouge_3_f_score_ce": 0.04348, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.52632, "rouge_l_recall_cb": 0.52632, "rouge_l_recall_ce": 0.52632, "rouge_l_precision": 0.32258, "rouge_l_precision_cb": 0.32258, "rouge_l_precision_ce": 0.32258, "rouge_l_f_score": 0.4, "rouge_l_f_score_cb": 0.4, "rouge_l_f_score_ce": 0.4, "rouge_w_1.2_recall": 0.24576, "rouge_w_1.2_recall_cb": 0.24576, "rouge_w_1.2_recall_ce": 0.24576, "rouge_w_1.2_precision": 0.27143, "rouge_w_1.2_precision_cb": 0.27143, "rouge_w_1.2_precision_ce": 0.27143, "rouge_w_1.2_f_score": 0.25796, "rouge_w_1.2_f_score_cb": 0.25796, "rouge_w_1.2_f_score_ce": 0.25796, "rouge_s*_recall": 0.37427, "rouge_s*_recall_cb": 0.37427, "rouge_s*_recall_ce": 0.37427, "rouge_s*_precision": 0.13763, "rouge_s*_precision_cb": 0.13763, "rouge_s*_precision_ce": 0.13763, "rouge_s*_f_score": 0.20125, "rouge_s*_f_score_cb": 0.20125, "rouge_s*_f_score_ce": 0.20125, "rouge_su*_recall": 0.40212, "rouge_su*_recall_cb": 0.40212, "rouge_su*_recall_ce": 0.40212, "rouge_su*_precision": 0.15354, "rouge_su*_precision_cb": 0.15354, "rouge_su*_precision_ce": 0.15354, "rouge_su*_f_score": 0.22223, "rouge_su*_f_score_cb": 0.22223, "rouge_su*_f_score_ce": 0.22223}}, {"id": 21, "filename": "NumpyEval_21.txt", "dataset_comment": "Print a Numpy array without brackets by converting it into a string format, for example, converting a = np.array([1,2,3,4,5]) into a_string = \"1 2 3 4 5\".", "generated_comment": "Convert the numpy array 'a' to a string by joining each element with a space in between.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.25, "rouge_1_recall_cb": 0.25, "rouge_1_recall_ce": 0.25, "rouge_1_precision": 0.47059, "rouge_1_precision_cb": 0.47059, "rouge_1_precision_ce": 0.47059, "rouge_1_f_score": 0.32653, "rouge_1_f_score_cb": 0.32653, "rouge_1_f_score_ce": 0.32653, "rouge_2_recall": 0.06452, "rouge_2_recall_cb": 0.06452, "rouge_2_recall_ce": 0.06452, "rouge_2_precision": 0.125, "rouge_2_precision_cb": 0.125, "rouge_2_precision_ce": 0.125, "rouge_2_f_score": 0.08511, "rouge_2_f_score_cb": 0.08511, "rouge_2_f_score_ce": 0.08511, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.15625, "rouge_l_recall_cb": 0.15625, "rouge_l_recall_ce": 0.15625, "rouge_l_precision": 0.29412, "rouge_l_precision_cb": 0.29412, "rouge_l_precision_ce": 0.29412, "rouge_l_f_score": 0.20408, "rouge_l_f_score_cb": 0.20408, "rouge_l_f_score_ce": 0.20408, "rouge_w_1.2_recall": 0.06561, "rouge_w_1.2_recall_cb": 0.06561, "rouge_w_1.2_recall_ce": 0.06561, "rouge_w_1.2_precision": 0.247, "rouge_w_1.2_precision_cb": 0.247, "rouge_w_1.2_precision_ce": 0.247, "rouge_w_1.2_f_score": 0.10368, "rouge_w_1.2_f_score_cb": 0.10368, "rouge_w_1.2_f_score_ce": 0.10368, "rouge_s*_recall": 0.04839, "rouge_s*_recall_cb": 0.04839, "rouge_s*_recall_ce": 0.04839, "rouge_s*_precision": 0.17647, "rouge_s*_precision_cb": 0.17647, "rouge_s*_precision_ce": 0.17647, "rouge_s*_f_score": 0.07595, "rouge_s*_f_score_cb": 0.07595, "rouge_s*_f_score_ce": 0.07595, "rouge_su*_recall": 0.06072, "rouge_su*_recall_cb": 0.06072, "rouge_su*_recall_ce": 0.06072, "rouge_su*_precision": 0.21053, "rouge_su*_precision_cb": 0.21053, "rouge_su*_precision_ce": 0.21053, "rouge_su*_f_score": 0.09426, "rouge_su*_f_score_cb": 0.09426, "rouge_su*_f_score_ce": 0.09426}}, {"id": 22, "filename": "NumpyEval_22.txt", "dataset_comment": "Given a numpy array, create a new array that contains the average of every consecutive triplet of elements, resulting in an array that is one third the size of the original, and return it.", "generated_comment": "Calculate the average of every 3 elements in the input array by reshaping the array into a 2D array with 3 columns and then calculating the mean along the rows.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.38235, "rouge_1_recall_cb": 0.38235, "rouge_1_recall_ce": 0.38235, "rouge_1_precision": 0.43333, "rouge_1_precision_cb": 0.43333, "rouge_1_precision_ce": 0.43333, "rouge_1_f_score": 0.40625, "rouge_1_f_score_cb": 0.40625, "rouge_1_f_score_ce": 0.40625, "rouge_2_recall": 0.09091, "rouge_2_recall_cb": 0.09091, "rouge_2_recall_ce": 0.09091, "rouge_2_precision": 0.10345, "rouge_2_precision_cb": 0.10345, "rouge_2_precision_ce": 0.10345, "rouge_2_f_score": 0.09678, "rouge_2_f_score_cb": 0.09678, "rouge_2_f_score_ce": 0.09678, "rouge_3_recall": 0.0625, "rouge_3_recall_cb": 0.0625, "rouge_3_recall_ce": 0.0625, "rouge_3_precision": 0.07143, "rouge_3_precision_cb": 0.07143, "rouge_3_precision_ce": 0.07143, "rouge_3_f_score": 0.06667, "rouge_3_f_score_cb": 0.06667, "rouge_3_f_score_ce": 0.06667, "rouge_4_recall": 0.03226, "rouge_4_recall_cb": 0.03226, "rouge_4_recall_ce": 0.03226, "rouge_4_precision": 0.03704, "rouge_4_precision_cb": 0.03704, "rouge_4_precision_ce": 0.03704, "rouge_4_f_score": 0.03449, "rouge_4_f_score_cb": 0.03449, "rouge_4_f_score_ce": 0.03449, "rouge_l_recall": 0.26471, "rouge_l_recall_cb": 0.26471, "rouge_l_recall_ce": 0.26471, "rouge_l_precision": 0.3, "rouge_l_precision_cb": 0.3, "rouge_l_precision_ce": 0.3, "rouge_l_f_score": 0.28125, "rouge_l_f_score_cb": 0.28125, "rouge_l_f_score_ce": 0.28125, "rouge_w_1.2_recall": 0.10127, "rouge_w_1.2_recall_cb": 0.10127, "rouge_w_1.2_recall_ce": 0.10127, "rouge_w_1.2_precision": 0.23235, "rouge_w_1.2_precision_cb": 0.23235, "rouge_w_1.2_precision_ce": 0.23235, "rouge_w_1.2_f_score": 0.14106, "rouge_w_1.2_f_score_cb": 0.14106, "rouge_w_1.2_f_score_ce": 0.14106, "rouge_s*_recall": 0.1123, "rouge_s*_recall_cb": 0.1123, "rouge_s*_recall_ce": 0.1123, "rouge_s*_precision": 0.14483, "rouge_s*_precision_cb": 0.14483, "rouge_s*_precision_ce": 0.14483, "rouge_s*_f_score": 0.12651, "rouge_s*_f_score_cb": 0.12651, "rouge_s*_f_score_ce": 0.12651, "rouge_su*_recall": 0.12795, "rouge_su*_recall_cb": 0.12795, "rouge_su*_recall_ce": 0.12795, "rouge_su*_precision": 0.16379, "rouge_su*_precision_cb": 0.16379, "rouge_su*_precision_ce": 0.16379, "rouge_su*_f_score": 0.14367, "rouge_su*_f_score_cb": 0.14367, "rouge_su*_f_score_ce": 0.14367}}, {"id": 23, "filename": "NumpyEval_23.txt", "dataset_comment": "Define a numpy matrix that uses operations modulo 2, known as \"xor\". Arguments:    x: a numpy array    y: a numpy array    z: a numpy array Returns:    A numpy array containing the result of the operation.", "generated_comment": "Calculate the XOR operation of three input values x, y, and z.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.2, "rouge_1_recall_cb": 0.2, "rouge_1_recall_ce": 0.2, "rouge_1_precision": 0.58333, "rouge_1_precision_cb": 0.58333, "rouge_1_precision_ce": 0.58333, "rouge_1_f_score": 0.29787, "rouge_1_f_score_cb": 0.29787, "rouge_1_f_score_ce": 0.29787, "rouge_2_recall": 0.0, "rouge_2_recall_cb": 0.0, "rouge_2_recall_ce": 0.0, "rouge_2_precision": 0.0, "rouge_2_precision_cb": 0.0, "rouge_2_precision_ce": 0.0, "rouge_2_f_score": 0.0, "rouge_2_f_score_cb": 0.0, "rouge_2_f_score_ce": 0.0, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.11429, "rouge_l_recall_cb": 0.11429, "rouge_l_recall_ce": 0.11429, "rouge_l_precision": 0.33333, "rouge_l_precision_cb": 0.33333, "rouge_l_precision_ce": 0.33333, "rouge_l_f_score": 0.17022, "rouge_l_f_score_cb": 0.17022, "rouge_l_f_score_ce": 0.17022, "rouge_w_1.2_recall": 0.04455, "rouge_w_1.2_recall_cb": 0.04455, "rouge_w_1.2_recall_ce": 0.04455, "rouge_w_1.2_precision": 0.26457, "rouge_w_1.2_precision_cb": 0.26457, "rouge_w_1.2_precision_ce": 0.26457, "rouge_w_1.2_f_score": 0.07626, "rouge_w_1.2_f_score_cb": 0.07626, "rouge_w_1.2_f_score_ce": 0.07626, "rouge_s*_recall": 0.02353, "rouge_s*_recall_cb": 0.02353, "rouge_s*_recall_ce": 0.02353, "rouge_s*_precision": 0.21212, "rouge_s*_precision_cb": 0.21212, "rouge_s*_precision_ce": 0.21212, "rouge_s*_f_score": 0.04236, "rouge_s*_f_score_cb": 0.04236, "rouge_s*_f_score_ce": 0.04236, "rouge_su*_recall": 0.0318, "rouge_su*_recall_cb": 0.0318, "rouge_su*_recall_ce": 0.0318, "rouge_su*_precision": 0.25974, "rouge_su*_precision_cb": 0.25974, "rouge_su*_precision_ce": 0.25974, "rouge_su*_f_score": 0.05666, "rouge_su*_f_score_cb": 0.05666, "rouge_su*_f_score_ce": 0.05666}}, {"id": 24, "filename": "NumpyEval_24.txt", "dataset_comment": "Define the function c(i, j) as c(i, j) = a(i) + b(j) * 2.", "generated_comment": "Perform element-wise multiplication between array 'a' and each element in array 'b' after broadcasting 'b' to have the same shape as 'a'.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.26667, "rouge_1_recall_cb": 0.26667, "rouge_1_recall_ce": 0.26667, "rouge_1_precision": 0.17391, "rouge_1_precision_cb": 0.17391, "rouge_1_precision_ce": 0.17391, "rouge_1_f_score": 0.21053, "rouge_1_f_score_cb": 0.21053, "rouge_1_f_score_ce": 0.21053, "rouge_2_recall": 0.0, "rouge_2_recall_cb": 0.0, "rouge_2_recall_ce": 0.0, "rouge_2_precision": 0.0, "rouge_2_precision_cb": 0.0, "rouge_2_precision_ce": 0.0, "rouge_2_f_score": 0.0, "rouge_2_f_score_cb": 0.0, "rouge_2_f_score_ce": 0.0, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.2, "rouge_l_recall_cb": 0.2, "rouge_l_recall_ce": 0.2, "rouge_l_precision": 0.13043, "rouge_l_precision_cb": 0.13043, "rouge_l_precision_ce": 0.13043, "rouge_l_f_score": 0.15789, "rouge_l_f_score_cb": 0.15789, "rouge_l_f_score_ce": 0.15789, "rouge_w_1.2_recall": 0.09689, "rouge_w_1.2_recall_cb": 0.09689, "rouge_w_1.2_recall_ce": 0.09689, "rouge_w_1.2_precision": 0.10861, "rouge_w_1.2_precision_cb": 0.10861, "rouge_w_1.2_precision_ce": 0.10861, "rouge_w_1.2_f_score": 0.10242, "rouge_w_1.2_f_score_cb": 0.10242, "rouge_w_1.2_f_score_ce": 0.10242, "rouge_s*_recall": 0.0381, "rouge_s*_recall_cb": 0.0381, "rouge_s*_recall_ce": 0.0381, "rouge_s*_precision": 0.01581, "rouge_s*_precision_cb": 0.01581, "rouge_s*_precision_ce": 0.01581, "rouge_s*_f_score": 0.02235, "rouge_s*_f_score_cb": 0.02235, "rouge_s*_f_score_ce": 0.02235, "rouge_su*_recall": 0.06723, "rouge_su*_recall_cb": 0.06723, "rouge_su*_recall_ce": 0.06723, "rouge_su*_precision": 0.02909, "rouge_su*_precision_cb": 0.02909, "rouge_su*_precision_ce": 0.02909, "rouge_su*_f_score": 0.04061, "rouge_su*_f_score_cb": 0.04061, "rouge_su*_f_score_ce": 0.04061}}, {"id": 25, "filename": "NumpyEval_25.txt", "dataset_comment": "Implement a function that returns an array with the results of dividing each element by the previous one, similar to a \"diff()\" operation. Example (non-numpy): source = [1, 3, 6, 24, 36] target = [j / i for i, j in zip(source[:-1], source[1:])] Return the target array implemented in numpy.", "generated_comment": "Calculate the division of each element in the input array 't' by its preceding element.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.15686, "rouge_1_recall_cb": 0.15686, "rouge_1_recall_ce": 0.15686, "rouge_1_precision": 0.53333, "rouge_1_precision_cb": 0.53333, "rouge_1_precision_ce": 0.53333, "rouge_1_f_score": 0.24242, "rouge_1_f_score_cb": 0.24242, "rouge_1_f_score_ce": 0.24242, "rouge_2_recall": 0.02, "rouge_2_recall_cb": 0.02, "rouge_2_recall_ce": 0.02, "rouge_2_precision": 0.07143, "rouge_2_precision_cb": 0.07143, "rouge_2_precision_ce": 0.07143, "rouge_2_f_score": 0.03125, "rouge_2_f_score_cb": 0.03125, "rouge_2_f_score_ce": 0.03125, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.13725, "rouge_l_recall_cb": 0.13725, "rouge_l_recall_ce": 0.13725, "rouge_l_precision": 0.46667, "rouge_l_precision_cb": 0.46667, "rouge_l_precision_ce": 0.46667, "rouge_l_f_score": 0.21212, "rouge_l_f_score_cb": 0.21212, "rouge_l_f_score_ce": 0.21212, "rouge_w_1.2_recall": 0.0468, "rouge_w_1.2_recall_cb": 0.0468, "rouge_w_1.2_recall_ce": 0.0468, "rouge_w_1.2_precision": 0.34931, "rouge_w_1.2_precision_cb": 0.34931, "rouge_w_1.2_precision_ce": 0.34931, "rouge_w_1.2_f_score": 0.08254, "rouge_w_1.2_f_score_cb": 0.08254, "rouge_w_1.2_f_score_ce": 0.08254, "rouge_s*_recall": 0.02118, "rouge_s*_recall_cb": 0.02118, "rouge_s*_recall_ce": 0.02118, "rouge_s*_precision": 0.25714, "rouge_s*_precision_cb": 0.25714, "rouge_s*_precision_ce": 0.25714, "rouge_s*_f_score": 0.03914, "rouge_s*_f_score_cb": 0.03914, "rouge_s*_f_score_ce": 0.03914, "rouge_su*_recall": 0.02642, "rouge_su*_recall_cb": 0.02642, "rouge_su*_recall_ce": 0.02642, "rouge_su*_precision": 0.29412, "rouge_su*_precision_cb": 0.29412, "rouge_su*_precision_ce": 0.29412, "rouge_su*_f_score": 0.04848, "rouge_su*_f_score_cb": 0.04848, "rouge_su*_f_score_ce": 0.04848}}, {"id": 26, "filename": "NumpyEval_26.txt", "dataset_comment": "Stack them using the negative one axis.", "generated_comment": "List of arrays.Stack arrays in a sequence along the last dimension using numpy stack function.The input arrays in the list L are of shape (5, 4, 2, 5, 1, 2).", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.42857, "rouge_1_recall_cb": 0.42857, "rouge_1_recall_ce": 0.42857, "rouge_1_precision": 0.09375, "rouge_1_precision_cb": 0.09375, "rouge_1_precision_ce": 0.09375, "rouge_1_f_score": 0.15385, "rouge_1_f_score_cb": 0.15385, "rouge_1_f_score_ce": 0.15385, "rouge_2_recall": 0.0, "rouge_2_recall_cb": 0.0, "rouge_2_recall_ce": 0.0, "rouge_2_precision": 0.0, "rouge_2_precision_cb": 0.0, "rouge_2_precision_ce": 0.0, "rouge_2_f_score": 0.0, "rouge_2_f_score_cb": 0.0, "rouge_2_f_score_ce": 0.0, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.42857, "rouge_l_recall_cb": 0.42857, "rouge_l_recall_ce": 0.42857, "rouge_l_precision": 0.09375, "rouge_l_precision_cb": 0.09375, "rouge_l_precision_ce": 0.09375, "rouge_l_f_score": 0.15385, "rouge_l_f_score_cb": 0.15385, "rouge_l_f_score_ce": 0.15385, "rouge_w_1.2_recall": 0.26163, "rouge_w_1.2_recall_cb": 0.26163, "rouge_w_1.2_recall_ce": 0.26163, "rouge_w_1.2_precision": 0.08446, "rouge_w_1.2_precision_cb": 0.08446, "rouge_w_1.2_precision_ce": 0.08446, "rouge_w_1.2_f_score": 0.1277, "rouge_w_1.2_f_score_cb": 0.1277, "rouge_w_1.2_f_score_ce": 0.1277, "rouge_s*_recall": 0.14286, "rouge_s*_recall_cb": 0.14286, "rouge_s*_recall_ce": 0.14286, "rouge_s*_precision": 0.00605, "rouge_s*_precision_cb": 0.00605, "rouge_s*_precision_ce": 0.00605, "rouge_s*_f_score": 0.01161, "rouge_s*_f_score_cb": 0.01161, "rouge_s*_f_score_ce": 0.01161, "rouge_su*_recall": 0.22222, "rouge_su*_recall_cb": 0.22222, "rouge_su*_recall_ce": 0.22222, "rouge_su*_precision": 0.01139, "rouge_su*_precision_cb": 0.01139, "rouge_su*_precision_ce": 0.01139, "rouge_su*_f_score": 0.02167, "rouge_su*_f_score_cb": 0.02167, "rouge_su*_f_score_ce": 0.02167}}, {"id": 27, "filename": "NumpyEval_27.txt", "dataset_comment": "Invoke the standard deviation function on a 2D array with axis=0 to return a 1D array containing the standard deviation of each column.", "generated_comment": "Calculate the standard deviation along the columns of the numpy array 'arr' using np.std with axis=0.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.41667, "rouge_1_recall_cb": 0.41667, "rouge_1_recall_ce": 0.41667, "rouge_1_precision": 0.55556, "rouge_1_precision_cb": 0.55556, "rouge_1_precision_ce": 0.55556, "rouge_1_f_score": 0.47619, "rouge_1_f_score_cb": 0.47619, "rouge_1_f_score_ce": 0.47619, "rouge_2_recall": 0.17391, "rouge_2_recall_cb": 0.17391, "rouge_2_recall_ce": 0.17391, "rouge_2_precision": 0.23529, "rouge_2_precision_cb": 0.23529, "rouge_2_precision_ce": 0.23529, "rouge_2_f_score": 0.2, "rouge_2_f_score_cb": 0.2, "rouge_2_f_score_ce": 0.2, "rouge_3_recall": 0.09091, "rouge_3_recall_cb": 0.09091, "rouge_3_recall_ce": 0.09091, "rouge_3_precision": 0.125, "rouge_3_precision_cb": 0.125, "rouge_3_precision_ce": 0.125, "rouge_3_f_score": 0.10526, "rouge_3_f_score_cb": 0.10526, "rouge_3_f_score_ce": 0.10526, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.29167, "rouge_l_recall_cb": 0.29167, "rouge_l_recall_ce": 0.29167, "rouge_l_precision": 0.38889, "rouge_l_precision_cb": 0.38889, "rouge_l_precision_ce": 0.38889, "rouge_l_f_score": 0.33334, "rouge_l_f_score_cb": 0.33334, "rouge_l_f_score_ce": 0.33334, "rouge_w_1.2_recall": 0.1379, "rouge_w_1.2_recall_cb": 0.1379, "rouge_w_1.2_recall_ce": 0.1379, "rouge_w_1.2_precision": 0.34717, "rouge_w_1.2_precision_cb": 0.34717, "rouge_w_1.2_precision_ce": 0.34717, "rouge_w_1.2_f_score": 0.19739, "rouge_w_1.2_f_score_cb": 0.19739, "rouge_w_1.2_f_score_ce": 0.19739, "rouge_s*_recall": 0.11957, "rouge_s*_recall_cb": 0.11957, "rouge_s*_recall_ce": 0.11957, "rouge_s*_precision": 0.21569, "rouge_s*_precision_cb": 0.21569, "rouge_s*_precision_ce": 0.21569, "rouge_s*_f_score": 0.15385, "rouge_s*_f_score_cb": 0.15385, "rouge_s*_f_score_ce": 0.15385, "rouge_su*_recall": 0.13712, "rouge_su*_recall_cb": 0.13712, "rouge_su*_recall_ce": 0.13712, "rouge_su*_precision": 0.24118, "rouge_su*_precision_cb": 0.24118, "rouge_su*_precision_ce": 0.24118, "rouge_su*_f_score": 0.17484, "rouge_su*_f_score_cb": 0.17484, "rouge_su*_f_score_ce": 0.17484}}, {"id": 28, "filename": "NumpyEval_28.txt", "dataset_comment": "Given a matrix `M` of shape 1*N, extract an array containing N elements in an elegant manner.", "generated_comment": "Convert a matrix into a 1D array by removing any single-dimensional entries and returning a flattened array.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.16667, "rouge_1_recall_cb": 0.16667, "rouge_1_recall_ce": 0.16667, "rouge_1_precision": 0.16667, "rouge_1_precision_cb": 0.16667, "rouge_1_precision_ce": 0.16667, "rouge_1_f_score": 0.16667, "rouge_1_f_score_cb": 0.16667, "rouge_1_f_score_ce": 0.16667, "rouge_2_recall": 0.05882, "rouge_2_recall_cb": 0.05882, "rouge_2_recall_ce": 0.05882, "rouge_2_precision": 0.05882, "rouge_2_precision_cb": 0.05882, "rouge_2_precision_ce": 0.05882, "rouge_2_f_score": 0.05882, "rouge_2_f_score_cb": 0.05882, "rouge_2_f_score_ce": 0.05882, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.16667, "rouge_l_recall_cb": 0.16667, "rouge_l_recall_ce": 0.16667, "rouge_l_precision": 0.16667, "rouge_l_precision_cb": 0.16667, "rouge_l_precision_ce": 0.16667, "rouge_l_f_score": 0.16667, "rouge_l_f_score_cb": 0.16667, "rouge_l_f_score_ce": 0.16667, "rouge_w_1.2_recall": 0.08423, "rouge_w_1.2_recall_cb": 0.08423, "rouge_w_1.2_recall_ce": 0.08423, "rouge_w_1.2_precision": 0.15015, "rouge_w_1.2_precision_cb": 0.15015, "rouge_w_1.2_precision_ce": 0.15015, "rouge_w_1.2_f_score": 0.10792, "rouge_w_1.2_f_score_cb": 0.10792, "rouge_w_1.2_f_score_ce": 0.10792, "rouge_s*_recall": 0.01961, "rouge_s*_recall_cb": 0.01961, "rouge_s*_recall_ce": 0.01961, "rouge_s*_precision": 0.01961, "rouge_s*_precision_cb": 0.01961, "rouge_s*_precision_ce": 0.01961, "rouge_s*_f_score": 0.01961, "rouge_s*_f_score_cb": 0.01961, "rouge_s*_f_score_ce": 0.01961, "rouge_su*_recall": 0.03529, "rouge_su*_recall_cb": 0.03529, "rouge_su*_recall_ce": 0.03529, "rouge_su*_precision": 0.03529, "rouge_su*_precision_cb": 0.03529, "rouge_su*_precision_ce": 0.03529, "rouge_su*_f_score": 0.03529, "rouge_su*_f_score_cb": 0.03529, "rouge_su*_f_score_ce": 0.03529}}, {"id": 29, "filename": "NumpyEval_29.txt", "dataset_comment": "Get the index of the maximum element in a NumPy array along the specified axis_value and return the result.", "generated_comment": "Find the index of the maximum element along a given axis in the input array using numpy and return it.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.75, "rouge_1_recall_cb": 0.75, "rouge_1_recall_ce": 0.75, "rouge_1_precision": 0.75, "rouge_1_precision_cb": 0.75, "rouge_1_precision_ce": 0.75, "rouge_1_f_score": 0.75, "rouge_1_f_score_cb": 0.75, "rouge_1_f_score_ce": 0.75, "rouge_2_recall": 0.31579, "rouge_2_recall_cb": 0.31579, "rouge_2_recall_ce": 0.31579, "rouge_2_precision": 0.31579, "rouge_2_precision_cb": 0.31579, "rouge_2_precision_ce": 0.31579, "rouge_2_f_score": 0.31579, "rouge_2_f_score_cb": 0.31579, "rouge_2_f_score_ce": 0.31579, "rouge_3_recall": 0.22222, "rouge_3_recall_cb": 0.22222, "rouge_3_recall_ce": 0.22222, "rouge_3_precision": 0.22222, "rouge_3_precision_cb": 0.22222, "rouge_3_precision_ce": 0.22222, "rouge_3_f_score": 0.22222, "rouge_3_f_score_cb": 0.22222, "rouge_3_f_score_ce": 0.22222, "rouge_4_recall": 0.17647, "rouge_4_recall_cb": 0.17647, "rouge_4_recall_ce": 0.17647, "rouge_4_precision": 0.17647, "rouge_4_precision_cb": 0.17647, "rouge_4_precision_ce": 0.17647, "rouge_4_f_score": 0.17647, "rouge_4_f_score_cb": 0.17647, "rouge_4_f_score_ce": 0.17647, "rouge_l_recall": 0.5, "rouge_l_recall_cb": 0.5, "rouge_l_recall_ce": 0.5, "rouge_l_precision": 0.5, "rouge_l_precision_cb": 0.5, "rouge_l_precision_ce": 0.5, "rouge_l_f_score": 0.5, "rouge_l_f_score_cb": 0.5, "rouge_l_f_score_ce": 0.5, "rouge_w_1.2_recall": 0.24217, "rouge_w_1.2_recall_cb": 0.24217, "rouge_w_1.2_recall_ce": 0.24217, "rouge_w_1.2_precision": 0.44088, "rouge_w_1.2_precision_cb": 0.44088, "rouge_w_1.2_precision_ce": 0.44088, "rouge_w_1.2_f_score": 0.31262, "rouge_w_1.2_f_score_cb": 0.31262, "rouge_w_1.2_f_score_ce": 0.31262, "rouge_s*_recall": 0.49474, "rouge_s*_recall_cb": 0.49474, "rouge_s*_recall_ce": 0.49474, "rouge_s*_precision": 0.49474, "rouge_s*_precision_cb": 0.49474, "rouge_s*_precision_ce": 0.49474, "rouge_s*_f_score": 0.49474, "rouge_s*_f_score_cb": 0.49474, "rouge_s*_f_score_ce": 0.49474, "rouge_su*_recall": 0.52153, "rouge_su*_recall_cb": 0.52153, "rouge_su*_recall_ce": 0.52153, "rouge_su*_precision": 0.52153, "rouge_su*_precision_cb": 0.52153, "rouge_su*_precision_ce": 0.52153, "rouge_su*_f_score": 0.52153, "rouge_su*_f_score_cb": 0.52153, "rouge_su*_f_score_ce": 0.52153}}, {"id": 30, "filename": "NumpyEval_30.txt", "dataset_comment": "Convert numpy array type and values from Float64 to Float32.", "generated_comment": "Convert the data type of array 'a' to float32 from float64 by using the astype() method.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.7, "rouge_1_recall_cb": 0.7, "rouge_1_recall_ce": 0.7, "rouge_1_precision": 0.4375, "rouge_1_precision_cb": 0.4375, "rouge_1_precision_ce": 0.4375, "rouge_1_f_score": 0.53846, "rouge_1_f_score_cb": 0.53846, "rouge_1_f_score_ce": 0.53846, "rouge_2_recall": 0.22222, "rouge_2_recall_cb": 0.22222, "rouge_2_recall_ce": 0.22222, "rouge_2_precision": 0.13333, "rouge_2_precision_cb": 0.13333, "rouge_2_precision_ce": 0.13333, "rouge_2_f_score": 0.16666, "rouge_2_f_score_cb": 0.16666, "rouge_2_f_score_ce": 0.16666, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.4, "rouge_l_recall_cb": 0.4, "rouge_l_recall_ce": 0.4, "rouge_l_precision": 0.25, "rouge_l_precision_cb": 0.25, "rouge_l_precision_ce": 0.25, "rouge_l_f_score": 0.30769, "rouge_l_f_score_cb": 0.30769, "rouge_l_f_score_ce": 0.30769, "rouge_w_1.2_recall": 0.21265, "rouge_w_1.2_recall_cb": 0.21265, "rouge_w_1.2_recall_ce": 0.21265, "rouge_w_1.2_precision": 0.21065, "rouge_w_1.2_precision_cb": 0.21065, "rouge_w_1.2_precision_ce": 0.21065, "rouge_w_1.2_f_score": 0.21165, "rouge_w_1.2_f_score_cb": 0.21165, "rouge_w_1.2_f_score_ce": 0.21165, "rouge_s*_recall": 0.35556, "rouge_s*_recall_cb": 0.35556, "rouge_s*_recall_ce": 0.35556, "rouge_s*_precision": 0.13333, "rouge_s*_precision_cb": 0.13333, "rouge_s*_precision_ce": 0.13333, "rouge_s*_f_score": 0.19394, "rouge_s*_f_score_cb": 0.19394, "rouge_s*_f_score_ce": 0.19394, "rouge_su*_recall": 0.40741, "rouge_su*_recall_cb": 0.40741, "rouge_su*_recall_ce": 0.40741, "rouge_su*_precision": 0.16296, "rouge_su*_precision_cb": 0.16296, "rouge_su*_precision_ce": 0.16296, "rouge_su*_f_score": 0.2328, "rouge_su*_f_score_cb": 0.2328, "rouge_su*_f_score_ce": 0.2328}}, {"id": 31, "filename": "NumpyEval_31.txt", "dataset_comment": "Use b to index a to obtain the value 4 instead of the list [a[1], a[1]]. The code below provides the solution.", "generated_comment": "Access the elements in the numpy array 'a' using the index values from the numpy array 'b'.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.33333, "rouge_1_recall_cb": 0.33333, "rouge_1_recall_ce": 0.33333, "rouge_1_precision": 0.47059, "rouge_1_precision_cb": 0.47059, "rouge_1_precision_ce": 0.47059, "rouge_1_f_score": 0.39024, "rouge_1_f_score_cb": 0.39024, "rouge_1_f_score_ce": 0.39024, "rouge_2_recall": 0.0, "rouge_2_recall_cb": 0.0, "rouge_2_recall_ce": 0.0, "rouge_2_precision": 0.0, "rouge_2_precision_cb": 0.0, "rouge_2_precision_ce": 0.0, "rouge_2_f_score": 0.0, "rouge_2_f_score_cb": 0.0, "rouge_2_f_score_ce": 0.0, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.20833, "rouge_l_recall_cb": 0.20833, "rouge_l_recall_ce": 0.20833, "rouge_l_precision": 0.29412, "rouge_l_precision_cb": 0.29412, "rouge_l_precision_ce": 0.29412, "rouge_l_f_score": 0.2439, "rouge_l_f_score_cb": 0.2439, "rouge_l_f_score_ce": 0.2439, "rouge_w_1.2_recall": 0.08438, "rouge_w_1.2_recall_cb": 0.08438, "rouge_w_1.2_recall_ce": 0.08438, "rouge_w_1.2_precision": 0.22492, "rouge_w_1.2_precision_cb": 0.22492, "rouge_w_1.2_precision_ce": 0.22492, "rouge_w_1.2_f_score": 0.12272, "rouge_w_1.2_f_score_cb": 0.12272, "rouge_w_1.2_f_score_ce": 0.12272, "rouge_s*_recall": 0.05435, "rouge_s*_recall_cb": 0.05435, "rouge_s*_recall_ce": 0.05435, "rouge_s*_precision": 0.11029, "rouge_s*_precision_cb": 0.11029, "rouge_s*_precision_ce": 0.11029, "rouge_s*_f_score": 0.07282, "rouge_s*_f_score_cb": 0.07282, "rouge_s*_f_score_ce": 0.07282, "rouge_su*_recall": 0.07358, "rouge_su*_recall_cb": 0.07358, "rouge_su*_recall_ce": 0.07358, "rouge_su*_precision": 0.14474, "rouge_su*_precision_cb": 0.14474, "rouge_su*_precision_ce": 0.14474, "rouge_su*_f_score": 0.09756, "rouge_su*_f_score_cb": 0.09756, "rouge_su*_f_score_ce": 0.09756}}, {"id": 32, "filename": "NumpyEval_32.txt", "dataset_comment": "Create a matrix of sub-sequences from the given array of length L with stride S and return the numpy array of sub-sequences.", "generated_comment": "Calculate the number of rows needed based on the window length L and stride length S. Return the broadcasting view of the input array a with specified window length and stride length.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.54167, "rouge_1_recall_cb": 0.54167, "rouge_1_recall_ce": 0.54167, "rouge_1_precision": 0.40625, "rouge_1_precision_cb": 0.40625, "rouge_1_precision_ce": 0.40625, "rouge_1_f_score": 0.46429, "rouge_1_f_score_cb": 0.46429, "rouge_1_f_score_ce": 0.46429, "rouge_2_recall": 0.08696, "rouge_2_recall_cb": 0.08696, "rouge_2_recall_ce": 0.08696, "rouge_2_precision": 0.06452, "rouge_2_precision_cb": 0.06452, "rouge_2_precision_ce": 0.06452, "rouge_2_f_score": 0.07408, "rouge_2_f_score_cb": 0.07408, "rouge_2_f_score_ce": 0.07408, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.375, "rouge_l_recall_cb": 0.375, "rouge_l_recall_ce": 0.375, "rouge_l_precision": 0.28125, "rouge_l_precision_cb": 0.28125, "rouge_l_precision_ce": 0.28125, "rouge_l_f_score": 0.32143, "rouge_l_f_score_cb": 0.32143, "rouge_l_f_score_ce": 0.32143, "rouge_w_1.2_recall": 0.14899, "rouge_w_1.2_recall_cb": 0.14899, "rouge_w_1.2_recall_ce": 0.14899, "rouge_w_1.2_precision": 0.21099, "rouge_w_1.2_precision_cb": 0.21099, "rouge_w_1.2_precision_ce": 0.21099, "rouge_w_1.2_f_score": 0.17465, "rouge_w_1.2_f_score_cb": 0.17465, "rouge_w_1.2_f_score_ce": 0.17465, "rouge_s*_recall": 0.27536, "rouge_s*_recall_cb": 0.27536, "rouge_s*_recall_ce": 0.27536, "rouge_s*_precision": 0.15323, "rouge_s*_precision_cb": 0.15323, "rouge_s*_precision_ce": 0.15323, "rouge_s*_f_score": 0.19689, "rouge_s*_f_score_cb": 0.19689, "rouge_s*_f_score_ce": 0.19689, "rouge_su*_recall": 0.29766, "rouge_su*_recall_cb": 0.29766, "rouge_su*_recall_ce": 0.29766, "rouge_su*_precision": 0.16888, "rouge_su*_precision_cb": 0.16888, "rouge_su*_precision_ce": 0.16888, "rouge_su*_f_score": 0.2155, "rouge_su*_f_score_cb": 0.2155, "rouge_su*_f_score_ce": 0.2155}}, {"id": 33, "filename": "NumpyEval_33.txt", "dataset_comment": "Sub-flatten a numpy array of dimensions (50,100,25) to obtain resultant dimensions (5000,25).", "generated_comment": "Reshape the input array 'arr' from a shape of (50, 100, 25) to a shape of (5000, 25) using np.reshape() function.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.5625, "rouge_1_recall_cb": 0.5625, "rouge_1_recall_ce": 0.5625, "rouge_1_precision": 0.40909, "rouge_1_precision_cb": 0.40909, "rouge_1_precision_ce": 0.40909, "rouge_1_f_score": 0.47368, "rouge_1_f_score_cb": 0.47368, "rouge_1_f_score_ce": 0.47368, "rouge_2_recall": 0.26667, "rouge_2_recall_cb": 0.26667, "rouge_2_recall_ce": 0.26667, "rouge_2_precision": 0.19048, "rouge_2_precision_cb": 0.19048, "rouge_2_precision_ce": 0.19048, "rouge_2_f_score": 0.22223, "rouge_2_f_score_cb": 0.22223, "rouge_2_f_score_ce": 0.22223, "rouge_3_recall": 0.14286, "rouge_3_recall_cb": 0.14286, "rouge_3_recall_ce": 0.14286, "rouge_3_precision": 0.1, "rouge_3_precision_cb": 0.1, "rouge_3_precision_ce": 0.1, "rouge_3_f_score": 0.11765, "rouge_3_f_score_cb": 0.11765, "rouge_3_f_score_ce": 0.11765, "rouge_4_recall": 0.07692, "rouge_4_recall_cb": 0.07692, "rouge_4_recall_ce": 0.07692, "rouge_4_precision": 0.05263, "rouge_4_precision_cb": 0.05263, "rouge_4_precision_ce": 0.05263, "rouge_4_f_score": 0.0625, "rouge_4_f_score_cb": 0.0625, "rouge_4_f_score_ce": 0.0625, "rouge_l_recall": 0.5, "rouge_l_recall_cb": 0.5, "rouge_l_recall_ce": 0.5, "rouge_l_precision": 0.36364, "rouge_l_precision_cb": 0.36364, "rouge_l_precision_ce": 0.36364, "rouge_l_f_score": 0.42106, "rouge_l_f_score_cb": 0.42106, "rouge_l_f_score_ce": 0.42106, "rouge_w_1.2_recall": 0.23588, "rouge_w_1.2_recall_cb": 0.23588, "rouge_w_1.2_recall_ce": 0.23588, "rouge_w_1.2_precision": 0.29868, "rouge_w_1.2_precision_cb": 0.29868, "rouge_w_1.2_precision_ce": 0.29868, "rouge_w_1.2_f_score": 0.26359, "rouge_w_1.2_f_score_cb": 0.26359, "rouge_w_1.2_f_score_ce": 0.26359, "rouge_s*_recall": 0.29167, "rouge_s*_recall_cb": 0.29167, "rouge_s*_recall_ce": 0.29167, "rouge_s*_precision": 0.15152, "rouge_s*_precision_cb": 0.15152, "rouge_s*_precision_ce": 0.15152, "rouge_s*_f_score": 0.19944, "rouge_s*_f_score_cb": 0.19944, "rouge_s*_f_score_ce": 0.19944, "rouge_su*_recall": 0.31852, "rouge_su*_recall_cb": 0.31852, "rouge_su*_recall_ce": 0.31852, "rouge_su*_precision": 0.17063, "rouge_su*_precision_cb": 0.17063, "rouge_su*_precision_ce": 0.17063, "rouge_su*_f_score": 0.22222, "rouge_su*_f_score_cb": 0.22222, "rouge_su*_f_score_ce": 0.22222}}, {"id": 34, "filename": "NumpyEval_34.txt", "dataset_comment": "Remove masked values from the variable m.", "generated_comment": "Filter out values larger than 2 using numpy masked arrays to create a mask where values are larger than 2, then apply the mask to the original array and return the compressed array without the masked values.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.42857, "rouge_1_recall_cb": 0.42857, "rouge_1_recall_ce": 0.42857, "rouge_1_precision": 0.08108, "rouge_1_precision_cb": 0.08108, "rouge_1_precision_ce": 0.08108, "rouge_1_f_score": 0.13636, "rouge_1_f_score_cb": 0.13636, "rouge_1_f_score_ce": 0.13636, "rouge_2_recall": 0.16667, "rouge_2_recall_cb": 0.16667, "rouge_2_recall_ce": 0.16667, "rouge_2_precision": 0.02778, "rouge_2_precision_cb": 0.02778, "rouge_2_precision_ce": 0.02778, "rouge_2_f_score": 0.04762, "rouge_2_f_score_cb": 0.04762, "rouge_2_f_score_ce": 0.04762, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.42857, "rouge_l_recall_cb": 0.42857, "rouge_l_recall_ce": 0.42857, "rouge_l_precision": 0.08108, "rouge_l_precision_cb": 0.08108, "rouge_l_precision_ce": 0.08108, "rouge_l_f_score": 0.13636, "rouge_l_f_score_cb": 0.13636, "rouge_l_f_score_ce": 0.13636, "rouge_w_1.2_recall": 0.26163, "rouge_w_1.2_recall_cb": 0.26163, "rouge_w_1.2_recall_ce": 0.26163, "rouge_w_1.2_precision": 0.07305, "rouge_w_1.2_precision_cb": 0.07305, "rouge_w_1.2_precision_ce": 0.07305, "rouge_w_1.2_f_score": 0.11421, "rouge_w_1.2_f_score_cb": 0.11421, "rouge_w_1.2_f_score_ce": 0.11421, "rouge_s*_recall": 0.14286, "rouge_s*_recall_cb": 0.14286, "rouge_s*_recall_ce": 0.14286, "rouge_s*_precision": 0.0045, "rouge_s*_precision_cb": 0.0045, "rouge_s*_precision_ce": 0.0045, "rouge_s*_f_score": 0.00873, "rouge_s*_f_score_cb": 0.00873, "rouge_s*_f_score_ce": 0.00873, "rouge_su*_recall": 0.22222, "rouge_su*_recall_cb": 0.22222, "rouge_su*_recall_ce": 0.22222, "rouge_su*_precision": 0.00855, "rouge_su*_precision_cb": 0.00855, "rouge_su*_precision_ce": 0.00855, "rouge_su*_f_score": 0.01647, "rouge_su*_f_score_cb": 0.01647, "rouge_su*_f_score_ce": 0.01647}}, {"id": 35, "filename": "NumpyEval_35.txt", "dataset_comment": "Create a numpy array composed of the list [[8, 7, 2], [5, 6, 1], [8, 2, 6]]", "generated_comment": "Find each index where the value changes in an efficient way using numpy by comparing each element with its neighbor and utilizing np.where(condition).", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.11765, "rouge_1_recall_cb": 0.11765, "rouge_1_recall_ce": 0.11765, "rouge_1_precision": 0.08, "rouge_1_precision_cb": 0.08, "rouge_1_precision_ce": 0.08, "rouge_1_f_score": 0.09524, "rouge_1_f_score_cb": 0.09524, "rouge_1_f_score_ce": 0.09524, "rouge_2_recall": 0.0, "rouge_2_recall_cb": 0.0, "rouge_2_recall_ce": 0.0, "rouge_2_precision": 0.0, "rouge_2_precision_cb": 0.0, "rouge_2_precision_ce": 0.0, "rouge_2_f_score": 0.0, "rouge_2_f_score_cb": 0.0, "rouge_2_f_score_ce": 0.0, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.05882, "rouge_l_recall_cb": 0.05882, "rouge_l_recall_ce": 0.05882, "rouge_l_precision": 0.04, "rouge_l_precision_cb": 0.04, "rouge_l_precision_ce": 0.04, "rouge_l_f_score": 0.04762, "rouge_l_f_score_cb": 0.04762, "rouge_l_f_score_ce": 0.04762, "rouge_w_1.2_recall": 0.03338, "rouge_w_1.2_recall_cb": 0.03338, "rouge_w_1.2_recall_ce": 0.03338, "rouge_w_1.2_precision": 0.04, "rouge_w_1.2_precision_cb": 0.04, "rouge_w_1.2_precision_ce": 0.04, "rouge_w_1.2_f_score": 0.03639, "rouge_w_1.2_f_score_cb": 0.03639, "rouge_w_1.2_f_score_ce": 0.03639, "rouge_s*_recall": 0.0, "rouge_s*_recall_cb": 0.0, "rouge_s*_recall_ce": 0.0, "rouge_s*_precision": 0.0, "rouge_s*_precision_cb": 0.0, "rouge_s*_precision_ce": 0.0, "rouge_s*_f_score": 0.0, "rouge_s*_f_score_cb": 0.0, "rouge_s*_f_score_ce": 0.0, "rouge_su*_recall": 0.01316, "rouge_su*_recall_cb": 0.01316, "rouge_su*_recall_ce": 0.01316, "rouge_su*_precision": 0.00617, "rouge_su*_precision_cb": 0.00617, "rouge_su*_precision_ce": 0.00617, "rouge_su*_f_score": 0.0084, "rouge_su*_f_score_cb": 0.0084, "rouge_su*_f_score_ce": 0.0084}}, {"id": 36, "filename": "NumpyEval_36.txt", "dataset_comment": "Given a NumPy array, retrieve the values at the index positions 1 and 4.", "generated_comment": "Extract specific elements from the NumPy array 'arr' based on the indices 1 and 4.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.57143, "rouge_1_recall_cb": 0.57143, "rouge_1_recall_ce": 0.57143, "rouge_1_precision": 0.53333, "rouge_1_precision_cb": 0.53333, "rouge_1_precision_ce": 0.53333, "rouge_1_f_score": 0.55172, "rouge_1_f_score_cb": 0.55172, "rouge_1_f_score_ce": 0.55172, "rouge_2_recall": 0.30769, "rouge_2_recall_cb": 0.30769, "rouge_2_recall_ce": 0.30769, "rouge_2_precision": 0.28571, "rouge_2_precision_cb": 0.28571, "rouge_2_precision_ce": 0.28571, "rouge_2_f_score": 0.29629, "rouge_2_f_score_cb": 0.29629, "rouge_2_f_score_ce": 0.29629, "rouge_3_recall": 0.08333, "rouge_3_recall_cb": 0.08333, "rouge_3_recall_ce": 0.08333, "rouge_3_precision": 0.07692, "rouge_3_precision_cb": 0.07692, "rouge_3_precision_ce": 0.07692, "rouge_3_f_score": 0.08, "rouge_3_f_score_cb": 0.08, "rouge_3_f_score_ce": 0.08, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.5, "rouge_l_recall_cb": 0.5, "rouge_l_recall_ce": 0.5, "rouge_l_precision": 0.46667, "rouge_l_precision_cb": 0.46667, "rouge_l_precision_ce": 0.46667, "rouge_l_f_score": 0.48276, "rouge_l_f_score_cb": 0.48276, "rouge_l_f_score_ce": 0.48276, "rouge_w_1.2_recall": 0.24657, "rouge_w_1.2_recall_cb": 0.24657, "rouge_w_1.2_recall_ce": 0.24657, "rouge_w_1.2_precision": 0.39012, "rouge_w_1.2_precision_cb": 0.39012, "rouge_w_1.2_precision_ce": 0.39012, "rouge_w_1.2_f_score": 0.30216, "rouge_w_1.2_f_score_cb": 0.30216, "rouge_w_1.2_f_score_ce": 0.30216, "rouge_s*_recall": 0.28571, "rouge_s*_recall_cb": 0.28571, "rouge_s*_recall_ce": 0.28571, "rouge_s*_precision": 0.24762, "rouge_s*_precision_cb": 0.24762, "rouge_s*_precision_ce": 0.24762, "rouge_s*_f_score": 0.2653, "rouge_s*_f_score_cb": 0.2653, "rouge_s*_f_score_ce": 0.2653, "rouge_su*_recall": 0.31731, "rouge_su*_recall_cb": 0.31731, "rouge_su*_recall_ce": 0.31731, "rouge_su*_precision": 0.27731, "rouge_su*_precision_cb": 0.27731, "rouge_su*_precision_ce": 0.27731, "rouge_su*_f_score": 0.29596, "rouge_su*_f_score_cb": 0.29596, "rouge_su*_f_score_ce": 0.29596}}, {"id": 37, "filename": "NumpyEval_37.txt", "dataset_comment": "Find the most frequent number in a NumPy array and return it.", "generated_comment": "Find the most frequent number in the input array 'arr' using numpy's bincount function and return the index of the maximum count.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.83333, "rouge_1_recall_cb": 0.83333, "rouge_1_recall_ce": 0.83333, "rouge_1_precision": 0.43478, "rouge_1_precision_cb": 0.43478, "rouge_1_precision_ce": 0.43478, "rouge_1_f_score": 0.57143, "rouge_1_f_score_cb": 0.57143, "rouge_1_f_score_ce": 0.57143, "rouge_2_recall": 0.54545, "rouge_2_recall_cb": 0.54545, "rouge_2_recall_ce": 0.54545, "rouge_2_precision": 0.27273, "rouge_2_precision_cb": 0.27273, "rouge_2_precision_ce": 0.27273, "rouge_2_f_score": 0.36364, "rouge_2_f_score_cb": 0.36364, "rouge_2_f_score_ce": 0.36364, "rouge_3_recall": 0.4, "rouge_3_recall_cb": 0.4, "rouge_3_recall_ce": 0.4, "rouge_3_precision": 0.19048, "rouge_3_precision_cb": 0.19048, "rouge_3_precision_ce": 0.19048, "rouge_3_f_score": 0.25807, "rouge_3_f_score_cb": 0.25807, "rouge_3_f_score_ce": 0.25807, "rouge_4_recall": 0.33333, "rouge_4_recall_cb": 0.33333, "rouge_4_recall_ce": 0.33333, "rouge_4_precision": 0.15, "rouge_4_precision_cb": 0.15, "rouge_4_precision_ce": 0.15, "rouge_4_f_score": 0.2069, "rouge_4_f_score_cb": 0.2069, "rouge_4_f_score_ce": 0.2069, "rouge_l_recall": 0.75, "rouge_l_recall_cb": 0.75, "rouge_l_recall_ce": 0.75, "rouge_l_precision": 0.3913, "rouge_l_precision_cb": 0.3913, "rouge_l_precision_ce": 0.3913, "rouge_l_f_score": 0.51428, "rouge_l_f_score_cb": 0.51428, "rouge_l_f_score_ce": 0.51428, "rouge_w_1.2_recall": 0.39881, "rouge_w_1.2_recall_cb": 0.39881, "rouge_w_1.2_recall_ce": 0.39881, "rouge_w_1.2_precision": 0.34202, "rouge_w_1.2_precision_cb": 0.34202, "rouge_w_1.2_precision_ce": 0.34202, "rouge_w_1.2_f_score": 0.36824, "rouge_w_1.2_f_score_cb": 0.36824, "rouge_w_1.2_f_score_ce": 0.36824, "rouge_s*_recall": 0.66667, "rouge_s*_recall_cb": 0.66667, "rouge_s*_recall_ce": 0.66667, "rouge_s*_precision": 0.17391, "rouge_s*_precision_cb": 0.17391, "rouge_s*_precision_ce": 0.17391, "rouge_s*_f_score": 0.27586, "rouge_s*_f_score_cb": 0.27586, "rouge_s*_f_score_ce": 0.27586, "rouge_su*_recall": 0.7013, "rouge_su*_recall_cb": 0.7013, "rouge_su*_recall_ce": 0.7013, "rouge_su*_precision": 0.19636, "rouge_su*_precision_cb": 0.19636, "rouge_su*_precision_ce": 0.19636, "rouge_su*_f_score": 0.30681, "rouge_su*_f_score_cb": 0.30681, "rouge_su*_f_score_ce": 0.30681}}, {"id": 38, "filename": "NumpyEval_38.txt", "dataset_comment": "Given a list containing numpy arrays L=[a,b,c] where a, b, and c are numpy arrays with sizes N_a in T, N_b in T, and N_c in T, row-wise concatenate a, b, and c to obtain a numpy array with shape (N_a+N_b+N_c, T) in a pythonic way.", "generated_comment": "Concatenate the arrays in the list L along the first axis to create a single array using np.concatenate() function.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.13793, "rouge_1_recall_cb": 0.13793, "rouge_1_recall_ce": 0.13793, "rouge_1_precision": 0.4, "rouge_1_precision_cb": 0.4, "rouge_1_precision_ce": 0.4, "rouge_1_f_score": 0.20513, "rouge_1_f_score_cb": 0.20513, "rouge_1_f_score_ce": 0.20513, "rouge_2_recall": 0.0, "rouge_2_recall_cb": 0.0, "rouge_2_recall_ce": 0.0, "rouge_2_precision": 0.0, "rouge_2_precision_cb": 0.0, "rouge_2_precision_ce": 0.0, "rouge_2_f_score": 0.0, "rouge_2_f_score_cb": 0.0, "rouge_2_f_score_ce": 0.0, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.08621, "rouge_l_recall_cb": 0.08621, "rouge_l_recall_ce": 0.08621, "rouge_l_precision": 0.25, "rouge_l_precision_cb": 0.25, "rouge_l_precision_ce": 0.25, "rouge_l_f_score": 0.12821, "rouge_l_f_score_cb": 0.12821, "rouge_l_f_score_ce": 0.12821, "rouge_w_1.2_recall": 0.03071, "rouge_w_1.2_recall_cb": 0.03071, "rouge_w_1.2_recall_ce": 0.03071, "rouge_w_1.2_precision": 0.20061, "rouge_w_1.2_precision_cb": 0.20061, "rouge_w_1.2_precision_ce": 0.20061, "rouge_w_1.2_f_score": 0.05327, "rouge_w_1.2_f_score_cb": 0.05327, "rouge_w_1.2_f_score_ce": 0.05327, "rouge_s*_recall": 0.01694, "rouge_s*_recall_cb": 0.01694, "rouge_s*_recall_ce": 0.01694, "rouge_s*_precision": 0.14737, "rouge_s*_precision_cb": 0.14737, "rouge_s*_precision_ce": 0.14737, "rouge_s*_f_score": 0.03039, "rouge_s*_f_score_cb": 0.03039, "rouge_s*_f_score_ce": 0.03039, "rouge_su*_recall": 0.02105, "rouge_su*_recall_cb": 0.02105, "rouge_su*_recall_ce": 0.02105, "rouge_su*_precision": 0.17225, "rouge_su*_precision_cb": 0.17225, "rouge_su*_precision_ce": 0.17225, "rouge_su*_f_score": 0.03752, "rouge_su*_f_score_cb": 0.03752, "rouge_su*_f_score_ce": 0.03752}}, {"id": 39, "filename": "NumpyEval_39.txt", "dataset_comment": "Select the row where the first column value is 0 and the second column value is 1, possibly using np.where() for better efficiency.", "generated_comment": "Filter the rows in the numpy array 'a' where the first column is 0 and the second column is 1.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.58333, "rouge_1_recall_cb": 0.58333, "rouge_1_recall_ce": 0.58333, "rouge_1_precision": 0.7, "rouge_1_precision_cb": 0.7, "rouge_1_precision_ce": 0.7, "rouge_1_f_score": 0.63636, "rouge_1_f_score_cb": 0.63636, "rouge_1_f_score_ce": 0.63636, "rouge_2_recall": 0.43478, "rouge_2_recall_cb": 0.43478, "rouge_2_recall_ce": 0.43478, "rouge_2_precision": 0.52632, "rouge_2_precision_cb": 0.52632, "rouge_2_precision_ce": 0.52632, "rouge_2_f_score": 0.47619, "rouge_2_f_score_cb": 0.47619, "rouge_2_f_score_ce": 0.47619, "rouge_3_recall": 0.27273, "rouge_3_recall_cb": 0.27273, "rouge_3_recall_ce": 0.27273, "rouge_3_precision": 0.33333, "rouge_3_precision_cb": 0.33333, "rouge_3_precision_ce": 0.33333, "rouge_3_f_score": 0.3, "rouge_3_f_score_cb": 0.3, "rouge_3_f_score_ce": 0.3, "rouge_4_recall": 0.19048, "rouge_4_recall_cb": 0.19048, "rouge_4_recall_ce": 0.19048, "rouge_4_precision": 0.23529, "rouge_4_precision_cb": 0.23529, "rouge_4_precision_ce": 0.23529, "rouge_4_f_score": 0.21053, "rouge_4_f_score_cb": 0.21053, "rouge_4_f_score_ce": 0.21053, "rouge_l_recall": 0.58333, "rouge_l_recall_cb": 0.58333, "rouge_l_recall_ce": 0.58333, "rouge_l_precision": 0.7, "rouge_l_precision_cb": 0.7, "rouge_l_precision_ce": 0.7, "rouge_l_f_score": 0.63636, "rouge_l_f_score_cb": 0.63636, "rouge_l_f_score_ce": 0.63636, "rouge_w_1.2_recall": 0.26194, "rouge_w_1.2_recall_cb": 0.26194, "rouge_w_1.2_recall_ce": 0.26194, "rouge_w_1.2_precision": 0.5935, "rouge_w_1.2_precision_cb": 0.5935, "rouge_w_1.2_precision_ce": 0.5935, "rouge_w_1.2_f_score": 0.36347, "rouge_w_1.2_f_score_cb": 0.36347, "rouge_w_1.2_f_score_ce": 0.36347, "rouge_s*_recall": 0.33333, "rouge_s*_recall_cb": 0.33333, "rouge_s*_recall_ce": 0.33333, "rouge_s*_precision": 0.48421, "rouge_s*_precision_cb": 0.48421, "rouge_s*_precision_ce": 0.48421, "rouge_s*_f_score": 0.39485, "rouge_s*_f_score_cb": 0.39485, "rouge_s*_f_score_ce": 0.39485, "rouge_su*_recall": 0.35117, "rouge_su*_recall_cb": 0.35117, "rouge_su*_recall_ce": 0.35117, "rouge_su*_precision": 0.50239, "rouge_su*_precision_cb": 0.50239, "rouge_su*_precision_ce": 0.50239, "rouge_su*_f_score": 0.41338, "rouge_su*_f_score_cb": 0.41338, "rouge_su*_f_score_ce": 0.41338}}, {"id": 40, "filename": "NumpyEval_40.txt", "dataset_comment": "Interweave two sequences a and b efficiently, assuming that length(a) == length(b).", "generated_comment": "Interweave two arrays 'a' and 'b' into a single array 'c' by placing elements from 'a' at even indices and elements from 'b' at odd indices.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.53846, "rouge_1_recall_cb": 0.53846, "rouge_1_recall_ce": 0.53846, "rouge_1_precision": 0.26923, "rouge_1_precision_cb": 0.26923, "rouge_1_precision_ce": 0.26923, "rouge_1_f_score": 0.35897, "rouge_1_f_score_cb": 0.35897, "rouge_1_f_score_ce": 0.35897, "rouge_2_recall": 0.25, "rouge_2_recall_cb": 0.25, "rouge_2_recall_ce": 0.25, "rouge_2_precision": 0.12, "rouge_2_precision_cb": 0.12, "rouge_2_precision_ce": 0.12, "rouge_2_f_score": 0.16216, "rouge_2_f_score_cb": 0.16216, "rouge_2_f_score_ce": 0.16216, "rouge_3_recall": 0.09091, "rouge_3_recall_cb": 0.09091, "rouge_3_recall_ce": 0.09091, "rouge_3_precision": 0.04167, "rouge_3_precision_cb": 0.04167, "rouge_3_precision_ce": 0.04167, "rouge_3_f_score": 0.05715, "rouge_3_f_score_cb": 0.05715, "rouge_3_f_score_ce": 0.05715, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.53846, "rouge_l_recall_cb": 0.53846, "rouge_l_recall_ce": 0.53846, "rouge_l_precision": 0.26923, "rouge_l_precision_cb": 0.26923, "rouge_l_precision_ce": 0.26923, "rouge_l_f_score": 0.35897, "rouge_l_f_score_cb": 0.35897, "rouge_l_f_score_ce": 0.35897, "rouge_w_1.2_recall": 0.26146, "rouge_w_1.2_recall_cb": 0.26146, "rouge_w_1.2_recall_ce": 0.26146, "rouge_w_1.2_precision": 0.21835, "rouge_w_1.2_precision_cb": 0.21835, "rouge_w_1.2_precision_ce": 0.21835, "rouge_w_1.2_f_score": 0.23797, "rouge_w_1.2_f_score_cb": 0.23797, "rouge_w_1.2_f_score_ce": 0.23797, "rouge_s*_recall": 0.26923, "rouge_s*_recall_cb": 0.26923, "rouge_s*_recall_ce": 0.26923, "rouge_s*_precision": 0.06462, "rouge_s*_precision_cb": 0.06462, "rouge_s*_precision_ce": 0.06462, "rouge_s*_f_score": 0.10422, "rouge_s*_f_score_cb": 0.10422, "rouge_s*_f_score_ce": 0.10422, "rouge_su*_recall": 0.3, "rouge_su*_recall_cb": 0.3, "rouge_su*_recall_ce": 0.3, "rouge_su*_precision": 0.07714, "rouge_su*_precision_cb": 0.07714, "rouge_su*_precision_ce": 0.07714, "rouge_su*_f_score": 0.12272, "rouge_su*_f_score_cb": 0.12272, "rouge_su*_f_score_ce": 0.12272}}, {"id": 41, "filename": "NumpyEval_41.txt", "dataset_comment": "Copy numpy array 'a' into the specified part of another array 'b' in the range [1:4, 1:4].", "generated_comment": "Set a subarray within a larger array 'b' starting from index (1, 1) to (4, 4) with the values from array 'a'.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.47368, "rouge_1_recall_cb": 0.47368, "rouge_1_recall_ce": 0.47368, "rouge_1_precision": 0.40909, "rouge_1_precision_cb": 0.40909, "rouge_1_precision_ce": 0.40909, "rouge_1_f_score": 0.43902, "rouge_1_f_score_cb": 0.43902, "rouge_1_f_score_ce": 0.43902, "rouge_2_recall": 0.11111, "rouge_2_recall_cb": 0.11111, "rouge_2_recall_ce": 0.11111, "rouge_2_precision": 0.09524, "rouge_2_precision_cb": 0.09524, "rouge_2_precision_ce": 0.09524, "rouge_2_f_score": 0.10256, "rouge_2_f_score_cb": 0.10256, "rouge_2_f_score_ce": 0.10256, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.31579, "rouge_l_recall_cb": 0.31579, "rouge_l_recall_ce": 0.31579, "rouge_l_precision": 0.27273, "rouge_l_precision_cb": 0.27273, "rouge_l_precision_ce": 0.27273, "rouge_l_f_score": 0.29268, "rouge_l_f_score_cb": 0.29268, "rouge_l_f_score_ce": 0.29268, "rouge_w_1.2_recall": 0.14066, "rouge_w_1.2_recall_cb": 0.14066, "rouge_w_1.2_recall_ce": 0.14066, "rouge_w_1.2_precision": 0.2189, "rouge_w_1.2_precision_cb": 0.2189, "rouge_w_1.2_precision_ce": 0.2189, "rouge_w_1.2_f_score": 0.17127, "rouge_w_1.2_f_score_cb": 0.17127, "rouge_w_1.2_f_score_ce": 0.17127, "rouge_s*_recall": 0.15789, "rouge_s*_recall_cb": 0.15789, "rouge_s*_recall_ce": 0.15789, "rouge_s*_precision": 0.11688, "rouge_s*_precision_cb": 0.11688, "rouge_s*_precision_ce": 0.11688, "rouge_s*_f_score": 0.13432, "rouge_s*_f_score_cb": 0.13432, "rouge_s*_f_score_ce": 0.13432, "rouge_su*_recall": 0.18519, "rouge_su*_recall_cb": 0.18519, "rouge_su*_recall_ce": 0.18519, "rouge_su*_precision": 0.13889, "rouge_su*_precision_cb": 0.13889, "rouge_su*_precision_ce": 0.13889, "rouge_su*_f_score": 0.15873, "rouge_su*_f_score_cb": 0.15873, "rouge_su*_f_score_ce": 0.15873}}, {"id": 42, "filename": "NumpyEval_42.txt", "dataset_comment": "Find unique rows in a numpy array.", "generated_comment": "Find unique rows in a 2D numpy array 'a' by comparing rows along the specified axis (axis=0) using np.unique.", "indicator_name": "rouge", "score": {"rouge_1_recall": 1.0, "rouge_1_recall_cb": 1.0, "rouge_1_recall_ce": 1.0, "rouge_1_precision": 0.33333, "rouge_1_precision_cb": 0.33333, "rouge_1_precision_ce": 0.33333, "rouge_1_f_score": 0.5, "rouge_1_f_score_cb": 0.5, "rouge_1_f_score_ce": 0.5, "rouge_2_recall": 0.83333, "rouge_2_recall_cb": 0.83333, "rouge_2_recall_ce": 0.83333, "rouge_2_precision": 0.25, "rouge_2_precision_cb": 0.25, "rouge_2_precision_ce": 0.25, "rouge_2_f_score": 0.38462, "rouge_2_f_score_cb": 0.38462, "rouge_2_f_score_ce": 0.38462, "rouge_3_recall": 0.6, "rouge_3_recall_cb": 0.6, "rouge_3_recall_ce": 0.6, "rouge_3_precision": 0.15789, "rouge_3_precision_cb": 0.15789, "rouge_3_precision_ce": 0.15789, "rouge_3_f_score": 0.24999, "rouge_3_f_score_cb": 0.24999, "rouge_3_f_score_ce": 0.24999, "rouge_4_recall": 0.5, "rouge_4_recall_cb": 0.5, "rouge_4_recall_ce": 0.5, "rouge_4_precision": 0.11111, "rouge_4_precision_cb": 0.11111, "rouge_4_precision_ce": 0.11111, "rouge_4_f_score": 0.18182, "rouge_4_f_score_cb": 0.18182, "rouge_4_f_score_ce": 0.18182, "rouge_l_recall": 1.0, "rouge_l_recall_cb": 1.0, "rouge_l_recall_ce": 1.0, "rouge_l_precision": 0.33333, "rouge_l_precision_cb": 0.33333, "rouge_l_precision_ce": 0.33333, "rouge_l_f_score": 0.5, "rouge_l_f_score_cb": 0.5, "rouge_l_f_score_ce": 0.5, "rouge_w_1.2_recall": 0.67761, "rouge_w_1.2_recall_cb": 0.67761, "rouge_w_1.2_recall_ce": 0.67761, "rouge_w_1.2_precision": 0.33333, "rouge_w_1.2_precision_cb": 0.33333, "rouge_w_1.2_precision_ce": 0.33333, "rouge_w_1.2_f_score": 0.44685, "rouge_w_1.2_f_score_cb": 0.44685, "rouge_w_1.2_f_score_ce": 0.44685, "rouge_s*_recall": 1.0, "rouge_s*_recall_cb": 1.0, "rouge_s*_recall_ce": 1.0, "rouge_s*_precision": 0.1, "rouge_s*_precision_cb": 0.1, "rouge_s*_precision_ce": 0.1, "rouge_s*_f_score": 0.18182, "rouge_s*_f_score_cb": 0.18182, "rouge_s*_f_score_ce": 0.18182, "rouge_su*_recall": 1.0, "rouge_su*_recall_cb": 1.0, "rouge_su*_recall_ce": 1.0, "rouge_su*_precision": 0.11739, "rouge_su*_precision_cb": 0.11739, "rouge_su*_precision_ce": 0.11739, "rouge_su*_f_score": 0.21011, "rouge_su*_f_score_cb": 0.21011, "rouge_su*_f_score_ce": 0.21011}}, {"id": 43, "filename": "NumpyEval_43.txt", "dataset_comment": "Given two simple one-dimensional arrays in NumPy, concatenate them using numpy.concatenate.", "generated_comment": "Concatenate two numpy arrays 'a' and 'b' into a single numpy array 'c'.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.38462, "rouge_1_recall_cb": 0.38462, "rouge_1_recall_ce": 0.38462, "rouge_1_precision": 0.38462, "rouge_1_precision_cb": 0.38462, "rouge_1_precision_ce": 0.38462, "rouge_1_f_score": 0.38462, "rouge_1_f_score_cb": 0.38462, "rouge_1_f_score_ce": 0.38462, "rouge_2_recall": 0.0, "rouge_2_recall_cb": 0.0, "rouge_2_recall_ce": 0.0, "rouge_2_precision": 0.0, "rouge_2_precision_cb": 0.0, "rouge_2_precision_ce": 0.0, "rouge_2_f_score": 0.0, "rouge_2_f_score_cb": 0.0, "rouge_2_f_score_ce": 0.0, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.23077, "rouge_l_recall_cb": 0.23077, "rouge_l_recall_ce": 0.23077, "rouge_l_precision": 0.23077, "rouge_l_precision_cb": 0.23077, "rouge_l_precision_ce": 0.23077, "rouge_l_f_score": 0.23077, "rouge_l_f_score_cb": 0.23077, "rouge_l_f_score_ce": 0.23077, "rouge_w_1.2_recall": 0.11505, "rouge_w_1.2_recall_cb": 0.11505, "rouge_w_1.2_recall_ce": 0.11505, "rouge_w_1.2_precision": 0.19216, "rouge_w_1.2_precision_cb": 0.19216, "rouge_w_1.2_precision_ce": 0.19216, "rouge_w_1.2_f_score": 0.14393, "rouge_w_1.2_f_score_cb": 0.14393, "rouge_w_1.2_f_score_ce": 0.14393, "rouge_s*_recall": 0.07692, "rouge_s*_recall_cb": 0.07692, "rouge_s*_recall_ce": 0.07692, "rouge_s*_precision": 0.07692, "rouge_s*_precision_cb": 0.07692, "rouge_s*_precision_ce": 0.07692, "rouge_s*_f_score": 0.07692, "rouge_s*_f_score_cb": 0.07692, "rouge_s*_f_score_ce": 0.07692, "rouge_su*_recall": 0.12222, "rouge_su*_recall_cb": 0.12222, "rouge_su*_recall_ce": 0.12222, "rouge_su*_precision": 0.12222, "rouge_su*_precision_cb": 0.12222, "rouge_su*_precision_ce": 0.12222, "rouge_su*_f_score": 0.12222, "rouge_su*_f_score_cb": 0.12222, "rouge_su*_f_score_ce": 0.12222}}, {"id": 44, "filename": "NumpyEval_44.txt", "dataset_comment": "Multiply a nD array with a 1D array, where len(1D-array) == len(nD array) by converting the array b to a (2, 1) shape array using None or numpy.newaxis in the index tuple.", "generated_comment": "Perform element-wise multiplication between a 2D numpy array 'a' and a 1D numpy array 'b' by broadcasting 'b' to the same shape as 'a' using np.newaxis.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.4, "rouge_1_recall_cb": 0.4, "rouge_1_recall_ce": 0.4, "rouge_1_precision": 0.5, "rouge_1_precision_cb": 0.5, "rouge_1_precision_ce": 0.5, "rouge_1_f_score": 0.44444, "rouge_1_f_score_cb": 0.44444, "rouge_1_f_score_ce": 0.44444, "rouge_2_recall": 0.08824, "rouge_2_recall_cb": 0.08824, "rouge_2_recall_ce": 0.08824, "rouge_2_precision": 0.11111, "rouge_2_precision_cb": 0.11111, "rouge_2_precision_ce": 0.11111, "rouge_2_f_score": 0.09836, "rouge_2_f_score_cb": 0.09836, "rouge_2_f_score_ce": 0.09836, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.31429, "rouge_l_recall_cb": 0.31429, "rouge_l_recall_ce": 0.31429, "rouge_l_precision": 0.39286, "rouge_l_precision_cb": 0.39286, "rouge_l_precision_ce": 0.39286, "rouge_l_f_score": 0.34921, "rouge_l_f_score_cb": 0.34921, "rouge_l_f_score_ce": 0.34921, "rouge_w_1.2_recall": 0.11494, "rouge_w_1.2_recall_cb": 0.11494, "rouge_w_1.2_recall_ce": 0.11494, "rouge_w_1.2_precision": 0.29254, "rouge_w_1.2_precision_cb": 0.29254, "rouge_w_1.2_precision_ce": 0.29254, "rouge_w_1.2_f_score": 0.16504, "rouge_w_1.2_f_score_cb": 0.16504, "rouge_w_1.2_f_score_ce": 0.16504, "rouge_s*_recall": 0.15462, "rouge_s*_recall_cb": 0.15462, "rouge_s*_recall_ce": 0.15462, "rouge_s*_precision": 0.24339, "rouge_s*_precision_cb": 0.24339, "rouge_s*_precision_ce": 0.24339, "rouge_s*_f_score": 0.18911, "rouge_s*_f_score_cb": 0.18911, "rouge_s*_f_score_ce": 0.18911, "rouge_su*_recall": 0.16693, "rouge_su*_recall_cb": 0.16693, "rouge_su*_recall_ce": 0.16693, "rouge_su*_precision": 0.25926, "rouge_su*_precision_cb": 0.25926, "rouge_su*_precision_ce": 0.25926, "rouge_su*_f_score": 0.20309, "rouge_su*_f_score_cb": 0.20309, "rouge_su*_f_score_ce": 0.20309}}, {"id": 45, "filename": "NumpyEval_45.txt", "dataset_comment": "Add items into a numpy array by using the column stack operation to add one element to each row.", "generated_comment": "Combine array 'a' and array 'b' by stacking them side by side using numpy's column_stack function.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.36842, "rouge_1_recall_cb": 0.36842, "rouge_1_recall_ce": 0.36842, "rouge_1_precision": 0.38889, "rouge_1_precision_cb": 0.38889, "rouge_1_precision_ce": 0.38889, "rouge_1_f_score": 0.37838, "rouge_1_f_score_cb": 0.37838, "rouge_1_f_score_ce": 0.37838, "rouge_2_recall": 0.05556, "rouge_2_recall_cb": 0.05556, "rouge_2_recall_ce": 0.05556, "rouge_2_precision": 0.05882, "rouge_2_precision_cb": 0.05882, "rouge_2_precision_ce": 0.05882, "rouge_2_f_score": 0.05714, "rouge_2_f_score_cb": 0.05714, "rouge_2_f_score_ce": 0.05714, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.31579, "rouge_l_recall_cb": 0.31579, "rouge_l_recall_ce": 0.31579, "rouge_l_precision": 0.33333, "rouge_l_precision_cb": 0.33333, "rouge_l_precision_ce": 0.33333, "rouge_l_f_score": 0.32432, "rouge_l_f_score_cb": 0.32432, "rouge_l_f_score_ce": 0.32432, "rouge_w_1.2_recall": 0.14843, "rouge_w_1.2_recall_cb": 0.14843, "rouge_w_1.2_recall_ce": 0.14843, "rouge_w_1.2_precision": 0.28233, "rouge_w_1.2_precision_cb": 0.28233, "rouge_w_1.2_precision_ce": 0.28233, "rouge_w_1.2_f_score": 0.19457, "rouge_w_1.2_f_score_cb": 0.19457, "rouge_w_1.2_f_score_ce": 0.19457, "rouge_s*_recall": 0.10526, "rouge_s*_recall_cb": 0.10526, "rouge_s*_recall_ce": 0.10526, "rouge_s*_precision": 0.11765, "rouge_s*_precision_cb": 0.11765, "rouge_s*_precision_ce": 0.11765, "rouge_s*_f_score": 0.11111, "rouge_s*_f_score_cb": 0.11111, "rouge_s*_f_score_ce": 0.11111, "rouge_su*_recall": 0.13228, "rouge_su*_recall_cb": 0.13228, "rouge_su*_recall_ce": 0.13228, "rouge_su*_precision": 0.14706, "rouge_su*_precision_cb": 0.14706, "rouge_su*_precision_ce": 0.14706, "rouge_su*_f_score": 0.13928, "rouge_su*_f_score_cb": 0.13928, "rouge_su*_f_score_ce": 0.13928}}, {"id": 46, "filename": "NumpyEval_46.txt", "dataset_comment": "Generate a list of one-dimensional numpy arrays in a loop and later convert this list to a 2D numpy array.  Preallocate a 2D numpy array if the number of items is known ahead of time; otherwise, collect them in a list. Evaluate if there is a more performance-efficient method to collect sequential numerical data (numpy arrays)  other than using a list followed by conversion to a numpy array.  Investigate the availability of an \"expandable\" matrix data structure in a well-tested module.", "generated_comment": "Create a list of arrays where each array consists of two elements, being the result of multiplying each number from 0 to 4 with a two-element array filled with that number.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.14286, "rouge_1_recall_cb": 0.14286, "rouge_1_recall_ce": 0.14286, "rouge_1_precision": 0.375, "rouge_1_precision_cb": 0.375, "rouge_1_precision_ce": 0.375, "rouge_1_f_score": 0.2069, "rouge_1_f_score_cb": 0.2069, "rouge_1_f_score_ce": 0.2069, "rouge_2_recall": 0.0241, "rouge_2_recall_cb": 0.0241, "rouge_2_recall_ce": 0.0241, "rouge_2_precision": 0.06452, "rouge_2_precision_cb": 0.06452, "rouge_2_precision_ce": 0.06452, "rouge_2_f_score": 0.03509, "rouge_2_f_score_cb": 0.03509, "rouge_2_f_score_ce": 0.03509, "rouge_3_recall": 0.0122, "rouge_3_recall_cb": 0.0122, "rouge_3_recall_ce": 0.0122, "rouge_3_precision": 0.03333, "rouge_3_precision_cb": 0.03333, "rouge_3_precision_ce": 0.03333, "rouge_3_f_score": 0.01786, "rouge_3_f_score_cb": 0.01786, "rouge_3_f_score_ce": 0.01786, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.11905, "rouge_l_recall_cb": 0.11905, "rouge_l_recall_ce": 0.11905, "rouge_l_precision": 0.3125, "rouge_l_precision_cb": 0.3125, "rouge_l_precision_ce": 0.3125, "rouge_l_f_score": 0.17242, "rouge_l_f_score_cb": 0.17242, "rouge_l_f_score_ce": 0.17242, "rouge_w_1.2_recall": 0.03629, "rouge_w_1.2_recall_cb": 0.03629, "rouge_w_1.2_recall_ce": 0.03629, "rouge_w_1.2_precision": 0.23111, "rouge_w_1.2_precision_cb": 0.23111, "rouge_w_1.2_precision_ce": 0.23111, "rouge_w_1.2_f_score": 0.06273, "rouge_w_1.2_f_score_cb": 0.06273, "rouge_w_1.2_f_score_ce": 0.06273, "rouge_s*_recall": 0.01979, "rouge_s*_recall_cb": 0.01979, "rouge_s*_recall_ce": 0.01979, "rouge_s*_precision": 0.13911, "rouge_s*_precision_cb": 0.13911, "rouge_s*_precision_ce": 0.13911, "rouge_s*_f_score": 0.03465, "rouge_s*_f_score_cb": 0.03465, "rouge_s*_f_score_ce": 0.03465, "rouge_su*_recall": 0.0227, "rouge_su*_recall_cb": 0.0227, "rouge_su*_recall_ce": 0.0227, "rouge_su*_precision": 0.1537, "rouge_su*_precision_cb": 0.1537, "rouge_su*_precision_ce": 0.1537, "rouge_su*_f_score": 0.03956, "rouge_su*_f_score_cb": 0.03956, "rouge_su*_f_score_ce": 0.03956}}, {"id": 47, "filename": "NumpyEval_47.txt", "dataset_comment": "Perform a symmetric difference between two numpy arrays using setxor1d directly without converting the arrays to sets.", "generated_comment": "Find the set exclusive-or of two arrays using numpy to get elements that are in only one of the arrays.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.47059, "rouge_1_recall_cb": 0.47059, "rouge_1_recall_ce": 0.47059, "rouge_1_precision": 0.38095, "rouge_1_precision_cb": 0.38095, "rouge_1_precision_ce": 0.38095, "rouge_1_f_score": 0.42105, "rouge_1_f_score_cb": 0.42105, "rouge_1_f_score_ce": 0.42105, "rouge_2_recall": 0.125, "rouge_2_recall_cb": 0.125, "rouge_2_recall_ce": 0.125, "rouge_2_precision": 0.1, "rouge_2_precision_cb": 0.1, "rouge_2_precision_ce": 0.1, "rouge_2_f_score": 0.11111, "rouge_2_f_score_cb": 0.11111, "rouge_2_f_score_ce": 0.11111, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.29412, "rouge_l_recall_cb": 0.29412, "rouge_l_recall_ce": 0.29412, "rouge_l_precision": 0.2381, "rouge_l_precision_cb": 0.2381, "rouge_l_precision_ce": 0.2381, "rouge_l_f_score": 0.26316, "rouge_l_f_score_cb": 0.26316, "rouge_l_f_score_ce": 0.26316, "rouge_w_1.2_recall": 0.14016, "rouge_w_1.2_recall_cb": 0.14016, "rouge_w_1.2_recall_ce": 0.14016, "rouge_w_1.2_precision": 0.19996, "rouge_w_1.2_precision_cb": 0.19996, "rouge_w_1.2_precision_ce": 0.19996, "rouge_w_1.2_f_score": 0.1648, "rouge_w_1.2_f_score_cb": 0.1648, "rouge_w_1.2_f_score_ce": 0.1648, "rouge_s*_recall": 0.13971, "rouge_s*_recall_cb": 0.13971, "rouge_s*_recall_ce": 0.13971, "rouge_s*_precision": 0.09048, "rouge_s*_precision_cb": 0.09048, "rouge_s*_precision_ce": 0.09048, "rouge_s*_f_score": 0.10983, "rouge_s*_f_score_cb": 0.10983, "rouge_s*_f_score_ce": 0.10983, "rouge_su*_recall": 0.16447, "rouge_su*_recall_cb": 0.16447, "rouge_su*_recall_ce": 0.16447, "rouge_su*_precision": 0.1087, "rouge_su*_precision_cb": 0.1087, "rouge_su*_precision_ce": 0.1087, "rouge_su*_f_score": 0.13089, "rouge_su*_f_score_cb": 0.13089, "rouge_su*_f_score_ce": 0.13089}}, {"id": 48, "filename": "NumpyEval_48.txt", "dataset_comment": "Count the number of true elements in a NumPy bool array and return the count value.", "generated_comment": "Calculate the total number of True values in the input numpy array by summing up all the True values.Test cases:", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.5625, "rouge_1_recall_cb": 0.5625, "rouge_1_recall_ce": 0.5625, "rouge_1_precision": 0.42857, "rouge_1_precision_cb": 0.42857, "rouge_1_precision_ce": 0.42857, "rouge_1_f_score": 0.48649, "rouge_1_f_score_cb": 0.48649, "rouge_1_f_score_ce": 0.48649, "rouge_2_recall": 0.13333, "rouge_2_recall_cb": 0.13333, "rouge_2_recall_ce": 0.13333, "rouge_2_precision": 0.1, "rouge_2_precision_cb": 0.1, "rouge_2_precision_ce": 0.1, "rouge_2_f_score": 0.11428, "rouge_2_f_score_cb": 0.11428, "rouge_2_f_score_ce": 0.11428, "rouge_3_recall": 0.07143, "rouge_3_recall_cb": 0.07143, "rouge_3_recall_ce": 0.07143, "rouge_3_precision": 0.05263, "rouge_3_precision_cb": 0.05263, "rouge_3_precision_ce": 0.05263, "rouge_3_f_score": 0.06061, "rouge_3_f_score_cb": 0.06061, "rouge_3_f_score_ce": 0.06061, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.5625, "rouge_l_recall_cb": 0.5625, "rouge_l_recall_ce": 0.5625, "rouge_l_precision": 0.42857, "rouge_l_precision_cb": 0.42857, "rouge_l_precision_ce": 0.42857, "rouge_l_f_score": 0.48649, "rouge_l_f_score_cb": 0.48649, "rouge_l_f_score_ce": 0.48649, "rouge_w_1.2_recall": 0.25022, "rouge_w_1.2_recall_cb": 0.25022, "rouge_w_1.2_recall_ce": 0.25022, "rouge_w_1.2_precision": 0.33192, "rouge_w_1.2_precision_cb": 0.33192, "rouge_w_1.2_precision_ce": 0.33192, "rouge_w_1.2_f_score": 0.28534, "rouge_w_1.2_f_score_cb": 0.28534, "rouge_w_1.2_f_score_ce": 0.28534, "rouge_s*_recall": 0.3, "rouge_s*_recall_cb": 0.3, "rouge_s*_recall_ce": 0.3, "rouge_s*_precision": 0.17143, "rouge_s*_precision_cb": 0.17143, "rouge_s*_precision_ce": 0.17143, "rouge_s*_f_score": 0.21818, "rouge_s*_f_score_cb": 0.21818, "rouge_s*_f_score_ce": 0.21818, "rouge_su*_recall": 0.32593, "rouge_su*_recall_cb": 0.32593, "rouge_su*_recall_ce": 0.32593, "rouge_su*_precision": 0.1913, "rouge_su*_precision_cb": 0.1913, "rouge_su*_precision_ce": 0.1913, "rouge_su*_f_score": 0.24109, "rouge_su*_f_score_cb": 0.24109, "rouge_su*_f_score_ce": 0.24109}}, {"id": 49, "filename": "NumpyEval_49.txt", "dataset_comment": "Add a new row to an empty numpy array given two input arrays and return the new array.   Example: Input: np.array([1,2,3]) and np.array([4,5,6]) -> Output: np.array([[1,2,3],[4,5,6]])", "generated_comment": "Create an empty numpy array to store the concatenated arrays and then vertically stack the new array with arr2 and horizontally stack the result with arr1.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.275, "rouge_1_recall_cb": 0.275, "rouge_1_recall_ce": 0.275, "rouge_1_precision": 0.42308, "rouge_1_precision_cb": 0.42308, "rouge_1_precision_ce": 0.42308, "rouge_1_f_score": 0.33333, "rouge_1_f_score_cb": 0.33333, "rouge_1_f_score_ce": 0.33333, "rouge_2_recall": 0.15385, "rouge_2_recall_cb": 0.15385, "rouge_2_recall_ce": 0.15385, "rouge_2_precision": 0.24, "rouge_2_precision_cb": 0.24, "rouge_2_precision_ce": 0.24, "rouge_2_f_score": 0.1875, "rouge_2_f_score_cb": 0.1875, "rouge_2_f_score_ce": 0.1875, "rouge_3_recall": 0.07895, "rouge_3_recall_cb": 0.07895, "rouge_3_recall_ce": 0.07895, "rouge_3_precision": 0.125, "rouge_3_precision_cb": 0.125, "rouge_3_precision_ce": 0.125, "rouge_3_f_score": 0.09678, "rouge_3_f_score_cb": 0.09678, "rouge_3_f_score_ce": 0.09678, "rouge_4_recall": 0.02703, "rouge_4_recall_cb": 0.02703, "rouge_4_recall_ce": 0.02703, "rouge_4_precision": 0.04348, "rouge_4_precision_cb": 0.04348, "rouge_4_precision_ce": 0.04348, "rouge_4_f_score": 0.03334, "rouge_4_f_score_cb": 0.03334, "rouge_4_f_score_ce": 0.03334, "rouge_l_recall": 0.25, "rouge_l_recall_cb": 0.25, "rouge_l_recall_ce": 0.25, "rouge_l_precision": 0.38462, "rouge_l_precision_cb": 0.38462, "rouge_l_precision_ce": 0.38462, "rouge_l_f_score": 0.30303, "rouge_l_f_score_cb": 0.30303, "rouge_l_f_score_ce": 0.30303, "rouge_w_1.2_recall": 0.09686, "rouge_w_1.2_recall_cb": 0.09686, "rouge_w_1.2_recall_ce": 0.09686, "rouge_w_1.2_precision": 0.31164, "rouge_w_1.2_precision_cb": 0.31164, "rouge_w_1.2_precision_ce": 0.31164, "rouge_w_1.2_f_score": 0.14779, "rouge_w_1.2_f_score_cb": 0.14779, "rouge_w_1.2_f_score_ce": 0.14779, "rouge_s*_recall": 0.06923, "rouge_s*_recall_cb": 0.06923, "rouge_s*_recall_ce": 0.06923, "rouge_s*_precision": 0.16615, "rouge_s*_precision_cb": 0.16615, "rouge_s*_precision_ce": 0.16615, "rouge_s*_f_score": 0.09774, "rouge_s*_f_score_cb": 0.09774, "rouge_s*_f_score_ce": 0.09774, "rouge_su*_recall": 0.07937, "rouge_su*_recall_cb": 0.07937, "rouge_su*_recall_ce": 0.07937, "rouge_su*_precision": 0.18571, "rouge_su*_precision_cb": 0.18571, "rouge_su*_precision_ce": 0.18571, "rouge_su*_f_score": 0.11121, "rouge_su*_f_score_cb": 0.11121, "rouge_su*_f_score_ce": 0.11121}}, {"id": 50, "filename": "NumpyEval_50.txt", "dataset_comment": "Calculate the element-wise average between a, b, and c.", "generated_comment": "Calculate the mean of the arrays a, b, and c along axis 0.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.6, "rouge_1_recall_cb": 0.6, "rouge_1_recall_ce": 0.6, "rouge_1_precision": 0.46154, "rouge_1_precision_cb": 0.46154, "rouge_1_precision_ce": 0.46154, "rouge_1_f_score": 0.52174, "rouge_1_f_score_cb": 0.52174, "rouge_1_f_score_ce": 0.52174, "rouge_2_recall": 0.44444, "rouge_2_recall_cb": 0.44444, "rouge_2_recall_ce": 0.44444, "rouge_2_precision": 0.33333, "rouge_2_precision_cb": 0.33333, "rouge_2_precision_ce": 0.33333, "rouge_2_f_score": 0.38095, "rouge_2_f_score_cb": 0.38095, "rouge_2_f_score_ce": 0.38095, "rouge_3_recall": 0.25, "rouge_3_recall_cb": 0.25, "rouge_3_recall_ce": 0.25, "rouge_3_precision": 0.18182, "rouge_3_precision_cb": 0.18182, "rouge_3_precision_ce": 0.18182, "rouge_3_f_score": 0.21053, "rouge_3_f_score_cb": 0.21053, "rouge_3_f_score_ce": 0.21053, "rouge_4_recall": 0.14286, "rouge_4_recall_cb": 0.14286, "rouge_4_recall_ce": 0.14286, "rouge_4_precision": 0.1, "rouge_4_precision_cb": 0.1, "rouge_4_precision_ce": 0.1, "rouge_4_f_score": 0.11765, "rouge_4_f_score_cb": 0.11765, "rouge_4_f_score_ce": 0.11765, "rouge_l_recall": 0.6, "rouge_l_recall_cb": 0.6, "rouge_l_recall_ce": 0.6, "rouge_l_precision": 0.46154, "rouge_l_precision_cb": 0.46154, "rouge_l_precision_ce": 0.46154, "rouge_l_f_score": 0.52174, "rouge_l_f_score_cb": 0.52174, "rouge_l_f_score_ce": 0.52174, "rouge_w_1.2_recall": 0.34107, "rouge_w_1.2_recall_cb": 0.34107, "rouge_w_1.2_recall_ce": 0.34107, "rouge_w_1.2_precision": 0.41581, "rouge_w_1.2_precision_cb": 0.41581, "rouge_w_1.2_precision_ce": 0.41581, "rouge_w_1.2_f_score": 0.37475, "rouge_w_1.2_f_score_cb": 0.37475, "rouge_w_1.2_f_score_ce": 0.37475, "rouge_s*_recall": 0.33333, "rouge_s*_recall_cb": 0.33333, "rouge_s*_recall_ce": 0.33333, "rouge_s*_precision": 0.19231, "rouge_s*_precision_cb": 0.19231, "rouge_s*_precision_ce": 0.19231, "rouge_s*_f_score": 0.2439, "rouge_s*_f_score_cb": 0.2439, "rouge_s*_f_score_ce": 0.2439, "rouge_su*_recall": 0.37037, "rouge_su*_recall_cb": 0.37037, "rouge_su*_recall_ce": 0.37037, "rouge_su*_precision": 0.22222, "rouge_su*_precision_cb": 0.22222, "rouge_su*_precision_ce": 0.22222, "rouge_su*_f_score": 0.27778, "rouge_su*_f_score_cb": 0.27778, "rouge_su*_f_score_ce": 0.27778}}, {"id": 51, "filename": "NumpyEval_51.txt", "dataset_comment": "Find the index of the k smallest values in a numpy array.", "generated_comment": "Find the indices of the k smallest elements in array A efficiently using numpy by partially sorting the array with np.argpartition().", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.91667, "rouge_1_recall_cb": 0.91667, "rouge_1_recall_ce": 0.91667, "rouge_1_precision": 0.5, "rouge_1_precision_cb": 0.5, "rouge_1_precision_ce": 0.5, "rouge_1_f_score": 0.64706, "rouge_1_f_score_cb": 0.64706, "rouge_1_f_score_ce": 0.64706, "rouge_2_recall": 0.54545, "rouge_2_recall_cb": 0.54545, "rouge_2_recall_ce": 0.54545, "rouge_2_precision": 0.28571, "rouge_2_precision_cb": 0.28571, "rouge_2_precision_ce": 0.28571, "rouge_2_f_score": 0.375, "rouge_2_f_score_cb": 0.375, "rouge_2_f_score_ce": 0.375, "rouge_3_recall": 0.5, "rouge_3_recall_cb": 0.5, "rouge_3_recall_ce": 0.5, "rouge_3_precision": 0.25, "rouge_3_precision_cb": 0.25, "rouge_3_precision_ce": 0.25, "rouge_3_f_score": 0.33333, "rouge_3_f_score_cb": 0.33333, "rouge_3_f_score_ce": 0.33333, "rouge_4_recall": 0.44444, "rouge_4_recall_cb": 0.44444, "rouge_4_recall_ce": 0.44444, "rouge_4_precision": 0.21053, "rouge_4_precision_cb": 0.21053, "rouge_4_precision_ce": 0.21053, "rouge_4_f_score": 0.28572, "rouge_4_f_score_cb": 0.28572, "rouge_4_f_score_ce": 0.28572, "rouge_l_recall": 0.91667, "rouge_l_recall_cb": 0.91667, "rouge_l_recall_ce": 0.91667, "rouge_l_precision": 0.5, "rouge_l_precision_cb": 0.5, "rouge_l_precision_ce": 0.5, "rouge_l_f_score": 0.64706, "rouge_l_f_score_cb": 0.64706, "rouge_l_f_score_ce": 0.64706, "rouge_w_1.2_recall": 0.50055, "rouge_w_1.2_recall_cb": 0.50055, "rouge_w_1.2_recall_ce": 0.50055, "rouge_w_1.2_precision": 0.44879, "rouge_w_1.2_precision_cb": 0.44879, "rouge_w_1.2_precision_ce": 0.44879, "rouge_w_1.2_f_score": 0.47326, "rouge_w_1.2_f_score_cb": 0.47326, "rouge_w_1.2_f_score_ce": 0.47326, "rouge_s*_recall": 0.83333, "rouge_s*_recall_cb": 0.83333, "rouge_s*_recall_ce": 0.83333, "rouge_s*_precision": 0.2381, "rouge_s*_precision_cb": 0.2381, "rouge_s*_precision_ce": 0.2381, "rouge_s*_f_score": 0.37038, "rouge_s*_f_score_cb": 0.37038, "rouge_s*_f_score_ce": 0.37038, "rouge_su*_recall": 0.84416, "rouge_su*_recall_cb": 0.84416, "rouge_su*_recall_ce": 0.84416, "rouge_su*_precision": 0.25794, "rouge_su*_precision_cb": 0.25794, "rouge_su*_precision_ce": 0.25794, "rouge_su*_f_score": 0.39514, "rouge_su*_f_score_cb": 0.39514, "rouge_su*_f_score_ce": 0.39514}}, {"id": 52, "filename": "NumpyEval_52.txt", "dataset_comment": "Sort the points by x-coordinate, and then by y-coordinate in cases where the x-coordinate is the same, updating the values inplace.", "generated_comment": "I have a 2D numpy array of shape (N,2) which is holding N points.Sort the array 'a' based on the second column first, then based on the first column.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.29167, "rouge_1_recall_cb": 0.29167, "rouge_1_recall_ce": 0.29167, "rouge_1_precision": 0.22581, "rouge_1_precision_cb": 0.22581, "rouge_1_precision_ce": 0.22581, "rouge_1_f_score": 0.25455, "rouge_1_f_score_cb": 0.25455, "rouge_1_f_score_ce": 0.25455, "rouge_2_recall": 0.04348, "rouge_2_recall_cb": 0.04348, "rouge_2_recall_ce": 0.04348, "rouge_2_precision": 0.03333, "rouge_2_precision_cb": 0.03333, "rouge_2_precision_ce": 0.03333, "rouge_2_f_score": 0.03773, "rouge_2_f_score_cb": 0.03773, "rouge_2_f_score_ce": 0.03773, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.16667, "rouge_l_recall_cb": 0.16667, "rouge_l_recall_ce": 0.16667, "rouge_l_precision": 0.12903, "rouge_l_precision_cb": 0.12903, "rouge_l_precision_ce": 0.12903, "rouge_l_f_score": 0.14545, "rouge_l_f_score_cb": 0.14545, "rouge_l_f_score_ce": 0.14545, "rouge_w_1.2_recall": 0.07437, "rouge_w_1.2_recall_cb": 0.07437, "rouge_w_1.2_recall_ce": 0.07437, "rouge_w_1.2_precision": 0.10872, "rouge_w_1.2_precision_cb": 0.10872, "rouge_w_1.2_precision_ce": 0.10872, "rouge_w_1.2_f_score": 0.08832, "rouge_w_1.2_f_score_cb": 0.08832, "rouge_w_1.2_f_score_ce": 0.08832, "rouge_s*_recall": 0.05435, "rouge_s*_recall_cb": 0.05435, "rouge_s*_recall_ce": 0.05435, "rouge_s*_precision": 0.03226, "rouge_s*_precision_cb": 0.03226, "rouge_s*_precision_ce": 0.03226, "rouge_s*_f_score": 0.04049, "rouge_s*_f_score_cb": 0.04049, "rouge_s*_f_score_ce": 0.04049, "rouge_su*_recall": 0.07358, "rouge_su*_recall_cb": 0.07358, "rouge_su*_recall_ce": 0.07358, "rouge_su*_precision": 0.04444, "rouge_su*_precision_cb": 0.04444, "rouge_su*_precision_ce": 0.04444, "rouge_su*_f_score": 0.05541, "rouge_su*_f_score_cb": 0.05541, "rouge_su*_f_score_ce": 0.05541}}, {"id": 53, "filename": "NumpyEval_53.txt", "dataset_comment": "Find the minimum value of each column with axis 0, then subtract the minimum value from each element of the column.", "generated_comment": "Subtract the minimum value along each column(axis=0) from all elements in the numpy array 'a'.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.52381, "rouge_1_recall_cb": 0.52381, "rouge_1_recall_ce": 0.52381, "rouge_1_precision": 0.64706, "rouge_1_precision_cb": 0.64706, "rouge_1_precision_ce": 0.64706, "rouge_1_f_score": 0.57895, "rouge_1_f_score_cb": 0.57895, "rouge_1_f_score_ce": 0.57895, "rouge_2_recall": 0.25, "rouge_2_recall_cb": 0.25, "rouge_2_recall_ce": 0.25, "rouge_2_precision": 0.3125, "rouge_2_precision_cb": 0.3125, "rouge_2_precision_ce": 0.3125, "rouge_2_f_score": 0.27778, "rouge_2_f_score_cb": 0.27778, "rouge_2_f_score_ce": 0.27778, "rouge_3_recall": 0.10526, "rouge_3_recall_cb": 0.10526, "rouge_3_recall_ce": 0.10526, "rouge_3_precision": 0.13333, "rouge_3_precision_cb": 0.13333, "rouge_3_precision_ce": 0.13333, "rouge_3_f_score": 0.11764, "rouge_3_f_score_cb": 0.11764, "rouge_3_f_score_ce": 0.11764, "rouge_4_recall": 0.05556, "rouge_4_recall_cb": 0.05556, "rouge_4_recall_ce": 0.05556, "rouge_4_precision": 0.07143, "rouge_4_precision_cb": 0.07143, "rouge_4_precision_ce": 0.07143, "rouge_4_f_score": 0.0625, "rouge_4_f_score_cb": 0.0625, "rouge_4_f_score_ce": 0.0625, "rouge_l_recall": 0.47619, "rouge_l_recall_cb": 0.47619, "rouge_l_recall_ce": 0.47619, "rouge_l_precision": 0.58824, "rouge_l_precision_cb": 0.58824, "rouge_l_precision_ce": 0.58824, "rouge_l_f_score": 0.52632, "rouge_l_f_score_cb": 0.52632, "rouge_l_f_score_ce": 0.52632, "rouge_w_1.2_recall": 0.19585, "rouge_w_1.2_recall_cb": 0.19585, "rouge_w_1.2_recall_ce": 0.19585, "rouge_w_1.2_precision": 0.44477, "rouge_w_1.2_precision_cb": 0.44477, "rouge_w_1.2_precision_ce": 0.44477, "rouge_w_1.2_f_score": 0.27195, "rouge_w_1.2_f_score_cb": 0.27195, "rouge_w_1.2_f_score_ce": 0.27195, "rouge_s*_recall": 0.25238, "rouge_s*_recall_cb": 0.25238, "rouge_s*_recall_ce": 0.25238, "rouge_s*_precision": 0.38971, "rouge_s*_precision_cb": 0.38971, "rouge_s*_precision_ce": 0.38971, "rouge_s*_f_score": 0.30636, "rouge_s*_f_score_cb": 0.30636, "rouge_s*_f_score_ce": 0.30636, "rouge_su*_recall": 0.27826, "rouge_su*_recall_cb": 0.27826, "rouge_su*_recall_ce": 0.27826, "rouge_su*_precision": 0.42105, "rouge_su*_precision_cb": 0.42105, "rouge_su*_precision_ce": 0.42105, "rouge_su*_f_score": 0.33508, "rouge_su*_f_score_cb": 0.33508, "rouge_su*_f_score_ce": 0.33508}}, {"id": 54, "filename": "NumpyEval_54.txt", "dataset_comment": "Access the elements from index 4 to the end.", "generated_comment": "Extract a subset of the numpy array 'a' starting from the 4th index till the end.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.55556, "rouge_1_recall_cb": 0.55556, "rouge_1_recall_ce": 0.55556, "rouge_1_precision": 0.3125, "rouge_1_precision_cb": 0.3125, "rouge_1_precision_ce": 0.3125, "rouge_1_f_score": 0.4, "rouge_1_f_score_cb": 0.4, "rouge_1_f_score_ce": 0.4, "rouge_2_recall": 0.125, "rouge_2_recall_cb": 0.125, "rouge_2_recall_ce": 0.125, "rouge_2_precision": 0.06667, "rouge_2_precision_cb": 0.06667, "rouge_2_precision_ce": 0.06667, "rouge_2_f_score": 0.08696, "rouge_2_f_score_cb": 0.08696, "rouge_2_f_score_ce": 0.08696, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.55556, "rouge_l_recall_cb": 0.55556, "rouge_l_recall_ce": 0.55556, "rouge_l_precision": 0.3125, "rouge_l_precision_cb": 0.3125, "rouge_l_precision_ce": 0.3125, "rouge_l_f_score": 0.4, "rouge_l_f_score_cb": 0.4, "rouge_l_f_score_ce": 0.4, "rouge_w_1.2_recall": 0.30065, "rouge_w_1.2_recall_cb": 0.30065, "rouge_w_1.2_recall_ce": 0.30065, "rouge_w_1.2_precision": 0.26244, "rouge_w_1.2_precision_cb": 0.26244, "rouge_w_1.2_precision_ce": 0.26244, "rouge_w_1.2_f_score": 0.28025, "rouge_w_1.2_f_score_cb": 0.28025, "rouge_w_1.2_f_score_ce": 0.28025, "rouge_s*_recall": 0.27778, "rouge_s*_recall_cb": 0.27778, "rouge_s*_recall_ce": 0.27778, "rouge_s*_precision": 0.08333, "rouge_s*_precision_cb": 0.08333, "rouge_s*_precision_ce": 0.08333, "rouge_s*_f_score": 0.1282, "rouge_s*_f_score_cb": 0.1282, "rouge_s*_f_score_ce": 0.1282, "rouge_su*_recall": 0.31818, "rouge_su*_recall_cb": 0.31818, "rouge_su*_recall_ce": 0.31818, "rouge_su*_precision": 0.1037, "rouge_su*_precision_cb": 0.1037, "rouge_su*_precision_ce": 0.1037, "rouge_su*_f_score": 0.15642, "rouge_su*_f_score_cb": 0.15642, "rouge_su*_f_score_ce": 0.15642}}, {"id": 55, "filename": "NumpyEval_55.txt", "dataset_comment": "Replace all negative values in an array with `0` using a NumPy function `where`.", "generated_comment": "Utilize numpy to replace negative values in the array 'a' with 0, maintaining the rest of the elements unchanged.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.64286, "rouge_1_recall_cb": 0.64286, "rouge_1_recall_ce": 0.64286, "rouge_1_precision": 0.47368, "rouge_1_precision_cb": 0.47368, "rouge_1_precision_ce": 0.47368, "rouge_1_f_score": 0.54545, "rouge_1_f_score_cb": 0.54545, "rouge_1_f_score_ce": 0.54545, "rouge_2_recall": 0.23077, "rouge_2_recall_cb": 0.23077, "rouge_2_recall_ce": 0.23077, "rouge_2_precision": 0.16667, "rouge_2_precision_cb": 0.16667, "rouge_2_precision_ce": 0.16667, "rouge_2_f_score": 0.19355, "rouge_2_f_score_cb": 0.19355, "rouge_2_f_score_ce": 0.19355, "rouge_3_recall": 0.08333, "rouge_3_recall_cb": 0.08333, "rouge_3_recall_ce": 0.08333, "rouge_3_precision": 0.05882, "rouge_3_precision_cb": 0.05882, "rouge_3_precision_ce": 0.05882, "rouge_3_f_score": 0.06896, "rouge_3_f_score_cb": 0.06896, "rouge_3_f_score_ce": 0.06896, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.5, "rouge_l_recall_cb": 0.5, "rouge_l_recall_ce": 0.5, "rouge_l_precision": 0.36842, "rouge_l_precision_cb": 0.36842, "rouge_l_precision_ce": 0.36842, "rouge_l_f_score": 0.42424, "rouge_l_f_score_cb": 0.42424, "rouge_l_f_score_ce": 0.42424, "rouge_w_1.2_recall": 0.25007, "rouge_w_1.2_recall_cb": 0.25007, "rouge_w_1.2_recall_ce": 0.25007, "rouge_w_1.2_precision": 0.31237, "rouge_w_1.2_precision_cb": 0.31237, "rouge_w_1.2_precision_ce": 0.31237, "rouge_w_1.2_f_score": 0.27777, "rouge_w_1.2_f_score_cb": 0.27777, "rouge_w_1.2_f_score_ce": 0.27777, "rouge_s*_recall": 0.28571, "rouge_s*_recall_cb": 0.28571, "rouge_s*_recall_ce": 0.28571, "rouge_s*_precision": 0.15205, "rouge_s*_precision_cb": 0.15205, "rouge_s*_precision_ce": 0.15205, "rouge_s*_f_score": 0.19847, "rouge_s*_f_score_cb": 0.19847, "rouge_s*_f_score_ce": 0.19847, "rouge_su*_recall": 0.33654, "rouge_su*_recall_cb": 0.33654, "rouge_su*_recall_ce": 0.33654, "rouge_su*_precision": 0.18519, "rouge_su*_precision_cb": 0.18519, "rouge_su*_precision_ce": 0.18519, "rouge_su*_f_score": 0.23891, "rouge_su*_f_score_cb": 0.23891, "rouge_su*_f_score_ce": 0.23891}}, {"id": 56, "filename": "NumpyEval_56.txt", "dataset_comment": "Select elements from the array of distances called dists that are within the range [r, r+dr].", "generated_comment": "Select elements in the numpy array 'dists' that are within the range of 'r' to 'r+dr' inclusively using np.logical_and(condition1, condition2) and np.where().", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.82353, "rouge_1_recall_cb": 0.82353, "rouge_1_recall_ce": 0.82353, "rouge_1_precision": 0.51852, "rouge_1_precision_cb": 0.51852, "rouge_1_precision_ce": 0.51852, "rouge_1_f_score": 0.63636, "rouge_1_f_score_cb": 0.63636, "rouge_1_f_score_ce": 0.63636, "rouge_2_recall": 0.4375, "rouge_2_recall_cb": 0.4375, "rouge_2_recall_ce": 0.4375, "rouge_2_precision": 0.26923, "rouge_2_precision_cb": 0.26923, "rouge_2_precision_ce": 0.26923, "rouge_2_f_score": 0.33333, "rouge_2_f_score_cb": 0.33333, "rouge_2_f_score_ce": 0.33333, "rouge_3_recall": 0.26667, "rouge_3_recall_cb": 0.26667, "rouge_3_recall_ce": 0.26667, "rouge_3_precision": 0.16, "rouge_3_precision_cb": 0.16, "rouge_3_precision_ce": 0.16, "rouge_3_f_score": 0.2, "rouge_3_f_score_cb": 0.2, "rouge_3_f_score_ce": 0.2, "rouge_4_recall": 0.21429, "rouge_4_recall_cb": 0.21429, "rouge_4_recall_ce": 0.21429, "rouge_4_precision": 0.125, "rouge_4_precision_cb": 0.125, "rouge_4_precision_ce": 0.125, "rouge_4_f_score": 0.1579, "rouge_4_f_score_cb": 0.1579, "rouge_4_f_score_ce": 0.1579, "rouge_l_recall": 0.76471, "rouge_l_recall_cb": 0.76471, "rouge_l_recall_ce": 0.76471, "rouge_l_precision": 0.48148, "rouge_l_precision_cb": 0.48148, "rouge_l_precision_ce": 0.48148, "rouge_l_f_score": 0.59091, "rouge_l_f_score_cb": 0.59091, "rouge_l_f_score_ce": 0.59091, "rouge_w_1.2_recall": 0.38075, "rouge_w_1.2_recall_cb": 0.38075, "rouge_w_1.2_recall_ce": 0.38075, "rouge_w_1.2_precision": 0.42249, "rouge_w_1.2_precision_cb": 0.42249, "rouge_w_1.2_precision_ce": 0.42249, "rouge_w_1.2_f_score": 0.40054, "rouge_w_1.2_f_score_cb": 0.40054, "rouge_w_1.2_f_score_ce": 0.40054, "rouge_s*_recall": 0.625, "rouge_s*_recall_cb": 0.625, "rouge_s*_recall_ce": 0.625, "rouge_s*_precision": 0.24217, "rouge_s*_precision_cb": 0.24217, "rouge_s*_precision_ce": 0.24217, "rouge_s*_f_score": 0.34908, "rouge_s*_f_score_cb": 0.34908, "rouge_s*_f_score_ce": 0.34908, "rouge_su*_recall": 0.64474, "rouge_su*_recall_cb": 0.64474, "rouge_su*_recall_ce": 0.64474, "rouge_su*_precision": 0.25995, "rouge_su*_precision_cb": 0.25995, "rouge_su*_precision_ce": 0.25995, "rouge_su*_f_score": 0.37051, "rouge_su*_f_score_cb": 0.37051, "rouge_su*_f_score_ce": 0.37051}}, {"id": 57, "filename": "NumpyEval_57.txt", "dataset_comment": "Given an array a, repeat the elements of a n times if they are even or positive. Only elements that meet the specified condition will be repeated; other elements will not be displayed.", "generated_comment": "Repeat each element in the array 'a' that satisfies the condition 'cond' (even numbers) 'n' times.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.33333, "rouge_1_recall_cb": 0.33333, "rouge_1_recall_ce": 0.33333, "rouge_1_precision": 0.6875, "rouge_1_precision_cb": 0.6875, "rouge_1_precision_ce": 0.6875, "rouge_1_f_score": 0.44898, "rouge_1_f_score_cb": 0.44898, "rouge_1_f_score_ce": 0.44898, "rouge_2_recall": 0.0625, "rouge_2_recall_cb": 0.0625, "rouge_2_recall_ce": 0.0625, "rouge_2_precision": 0.13333, "rouge_2_precision_cb": 0.13333, "rouge_2_precision_ce": 0.13333, "rouge_2_f_score": 0.08511, "rouge_2_f_score_cb": 0.08511, "rouge_2_f_score_ce": 0.08511, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.18182, "rouge_l_recall_cb": 0.18182, "rouge_l_recall_ce": 0.18182, "rouge_l_precision": 0.375, "rouge_l_precision_cb": 0.375, "rouge_l_precision_ce": 0.375, "rouge_l_f_score": 0.2449, "rouge_l_f_score_cb": 0.2449, "rouge_l_f_score_ce": 0.2449, "rouge_w_1.2_recall": 0.06978, "rouge_w_1.2_recall_cb": 0.06978, "rouge_w_1.2_recall_ce": 0.06978, "rouge_w_1.2_precision": 0.28963, "rouge_w_1.2_precision_cb": 0.28963, "rouge_w_1.2_precision_ce": 0.28963, "rouge_w_1.2_f_score": 0.11246, "rouge_w_1.2_f_score_cb": 0.11246, "rouge_w_1.2_f_score_ce": 0.11246, "rouge_s*_recall": 0.07765, "rouge_s*_recall_cb": 0.07765, "rouge_s*_recall_ce": 0.07765, "rouge_s*_precision": 0.34167, "rouge_s*_precision_cb": 0.34167, "rouge_s*_precision_ce": 0.34167, "rouge_s*_f_score": 0.12654, "rouge_s*_f_score_cb": 0.12654, "rouge_s*_f_score_ce": 0.12654, "rouge_su*_recall": 0.09107, "rouge_su*_recall_cb": 0.09107, "rouge_su*_recall_ce": 0.09107, "rouge_su*_precision": 0.37778, "rouge_su*_precision_cb": 0.37778, "rouge_su*_precision_ce": 0.37778, "rouge_su*_f_score": 0.14676, "rouge_su*_f_score_cb": 0.14676, "rouge_su*_f_score_ce": 0.14676}}, {"id": 58, "filename": "NumpyEval_58.txt", "dataset_comment": "Check if a given NumPy array is sorted using numpy.all.", "generated_comment": "Check if the array 'a' is sorted in ascending order by comparing each element with its neighbor using numpy and return a boolean value.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.72727, "rouge_1_recall_cb": 0.72727, "rouge_1_recall_ce": 0.72727, "rouge_1_precision": 0.33333, "rouge_1_precision_cb": 0.33333, "rouge_1_precision_ce": 0.33333, "rouge_1_f_score": 0.45714, "rouge_1_f_score_cb": 0.45714, "rouge_1_f_score_ce": 0.45714, "rouge_2_recall": 0.3, "rouge_2_recall_cb": 0.3, "rouge_2_recall_ce": 0.3, "rouge_2_precision": 0.13043, "rouge_2_precision_cb": 0.13043, "rouge_2_precision_ce": 0.13043, "rouge_2_f_score": 0.18181, "rouge_2_f_score_cb": 0.18181, "rouge_2_f_score_ce": 0.18181, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.63636, "rouge_l_recall_cb": 0.63636, "rouge_l_recall_ce": 0.63636, "rouge_l_precision": 0.29167, "rouge_l_precision_cb": 0.29167, "rouge_l_precision_ce": 0.29167, "rouge_l_f_score": 0.4, "rouge_l_f_score_cb": 0.4, "rouge_l_f_score_ce": 0.4, "rouge_w_1.2_recall": 0.35168, "rouge_w_1.2_recall_cb": 0.35168, "rouge_w_1.2_recall_ce": 0.35168, "rouge_w_1.2_precision": 0.26038, "rouge_w_1.2_precision_cb": 0.26038, "rouge_w_1.2_precision_ce": 0.26038, "rouge_w_1.2_f_score": 0.29922, "rouge_w_1.2_f_score_cb": 0.29922, "rouge_w_1.2_f_score_ce": 0.29922, "rouge_s*_recall": 0.49091, "rouge_s*_recall_cb": 0.49091, "rouge_s*_recall_ce": 0.49091, "rouge_s*_precision": 0.09783, "rouge_s*_precision_cb": 0.09783, "rouge_s*_precision_ce": 0.09783, "rouge_s*_f_score": 0.16315, "rouge_s*_f_score_cb": 0.16315, "rouge_s*_f_score_ce": 0.16315, "rouge_su*_recall": 0.53846, "rouge_su*_recall_cb": 0.53846, "rouge_su*_recall_ce": 0.53846, "rouge_su*_precision": 0.11706, "rouge_su*_precision_cb": 0.11706, "rouge_su*_precision_ce": 0.11706, "rouge_su*_f_score": 0.19231, "rouge_su*_f_score_cb": 0.19231, "rouge_su*_f_score_ce": 0.19231}}, {"id": 59, "filename": "NumpyEval_59.txt", "dataset_comment": "Reshape array 'a' into (2, 4, 2, 4) and then transpose it by (0, 2, 1, 3) to obtain array 'c'.", "generated_comment": "Reshape the array 'a' into a new shape (2, 4, 2, 4) and then transpose the axes to obtain array 'c' with shape (2, 2, 4, 4).", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.7619, "rouge_1_recall_cb": 0.7619, "rouge_1_recall_ce": 0.7619, "rouge_1_precision": 0.59259, "rouge_1_precision_cb": 0.59259, "rouge_1_precision_ce": 0.59259, "rouge_1_f_score": 0.66666, "rouge_1_f_score_cb": 0.66666, "rouge_1_f_score_ce": 0.66666, "rouge_2_recall": 0.55, "rouge_2_recall_cb": 0.55, "rouge_2_recall_ce": 0.55, "rouge_2_precision": 0.42308, "rouge_2_precision_cb": 0.42308, "rouge_2_precision_ce": 0.42308, "rouge_2_f_score": 0.47826, "rouge_2_f_score_cb": 0.47826, "rouge_2_f_score_ce": 0.47826, "rouge_3_recall": 0.42105, "rouge_3_recall_cb": 0.42105, "rouge_3_recall_ce": 0.42105, "rouge_3_precision": 0.32, "rouge_3_precision_cb": 0.32, "rouge_3_precision_ce": 0.32, "rouge_3_f_score": 0.36364, "rouge_3_f_score_cb": 0.36364, "rouge_3_f_score_ce": 0.36364, "rouge_4_recall": 0.27778, "rouge_4_recall_cb": 0.27778, "rouge_4_recall_ce": 0.27778, "rouge_4_precision": 0.20833, "rouge_4_precision_cb": 0.20833, "rouge_4_precision_ce": 0.20833, "rouge_4_f_score": 0.23809, "rouge_4_f_score_cb": 0.23809, "rouge_4_f_score_ce": 0.23809, "rouge_l_recall": 0.71429, "rouge_l_recall_cb": 0.71429, "rouge_l_recall_ce": 0.71429, "rouge_l_precision": 0.55556, "rouge_l_precision_cb": 0.55556, "rouge_l_precision_ce": 0.55556, "rouge_l_f_score": 0.625, "rouge_l_f_score_cb": 0.625, "rouge_l_f_score_ce": 0.625, "rouge_w_1.2_recall": 0.35388, "rouge_w_1.2_recall_cb": 0.35388, "rouge_w_1.2_recall_ce": 0.35388, "rouge_w_1.2_precision": 0.506, "rouge_w_1.2_precision_cb": 0.506, "rouge_w_1.2_precision_ce": 0.506, "rouge_w_1.2_f_score": 0.41648, "rouge_w_1.2_f_score_cb": 0.41648, "rouge_w_1.2_f_score_ce": 0.41648, "rouge_s*_recall": 0.55238, "rouge_s*_recall_cb": 0.55238, "rouge_s*_recall_ce": 0.55238, "rouge_s*_precision": 0.33048, "rouge_s*_precision_cb": 0.33048, "rouge_s*_precision_ce": 0.33048, "rouge_s*_f_score": 0.41354, "rouge_s*_f_score_cb": 0.41354, "rouge_s*_f_score_ce": 0.41354, "rouge_su*_recall": 0.56957, "rouge_su*_recall_cb": 0.56957, "rouge_su*_recall_ce": 0.56957, "rouge_su*_precision": 0.34748, "rouge_su*_precision_cb": 0.34748, "rouge_su*_precision_ce": 0.34748, "rouge_su*_f_score": 0.43163, "rouge_su*_f_score_cb": 0.43163, "rouge_su*_f_score_ce": 0.43163}}, {"id": 60, "filename": "NumpyEval_60.txt", "dataset_comment": "Return the indices of the minimum values along axis zero.", "generated_comment": "Find the indices of the minimum values along the specified axis (axis=0) in the input numpy array x.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.8, "rouge_1_recall_cb": 0.8, "rouge_1_recall_ce": 0.8, "rouge_1_precision": 0.42105, "rouge_1_precision_cb": 0.42105, "rouge_1_precision_ce": 0.42105, "rouge_1_f_score": 0.55172, "rouge_1_f_score_cb": 0.55172, "rouge_1_f_score_ce": 0.55172, "rouge_2_recall": 0.66667, "rouge_2_recall_cb": 0.66667, "rouge_2_recall_ce": 0.66667, "rouge_2_precision": 0.33333, "rouge_2_precision_cb": 0.33333, "rouge_2_precision_ce": 0.33333, "rouge_2_f_score": 0.44444, "rouge_2_f_score_cb": 0.44444, "rouge_2_f_score_ce": 0.44444, "rouge_3_recall": 0.625, "rouge_3_recall_cb": 0.625, "rouge_3_recall_ce": 0.625, "rouge_3_precision": 0.29412, "rouge_3_precision_cb": 0.29412, "rouge_3_precision_ce": 0.29412, "rouge_3_f_score": 0.4, "rouge_3_f_score_cb": 0.4, "rouge_3_f_score_ce": 0.4, "rouge_4_recall": 0.57143, "rouge_4_recall_cb": 0.57143, "rouge_4_recall_ce": 0.57143, "rouge_4_precision": 0.25, "rouge_4_precision_cb": 0.25, "rouge_4_precision_ce": 0.25, "rouge_4_f_score": 0.34783, "rouge_4_f_score_cb": 0.34783, "rouge_4_f_score_ce": 0.34783, "rouge_l_recall": 0.8, "rouge_l_recall_cb": 0.8, "rouge_l_recall_ce": 0.8, "rouge_l_precision": 0.42105, "rouge_l_precision_cb": 0.42105, "rouge_l_precision_ce": 0.42105, "rouge_l_f_score": 0.55172, "rouge_l_f_score_cb": 0.55172, "rouge_l_f_score_ce": 0.55172, "rouge_w_1.2_recall": 0.50477, "rouge_w_1.2_recall_cb": 0.50477, "rouge_w_1.2_recall_ce": 0.50477, "rouge_w_1.2_precision": 0.42105, "rouge_w_1.2_precision_cb": 0.42105, "rouge_w_1.2_precision_ce": 0.42105, "rouge_w_1.2_f_score": 0.45912, "rouge_w_1.2_f_score_cb": 0.45912, "rouge_w_1.2_f_score_ce": 0.45912, "rouge_s*_recall": 0.62222, "rouge_s*_recall_cb": 0.62222, "rouge_s*_recall_ce": 0.62222, "rouge_s*_precision": 0.16374, "rouge_s*_precision_cb": 0.16374, "rouge_s*_precision_ce": 0.16374, "rouge_s*_f_score": 0.25926, "rouge_s*_f_score_cb": 0.25926, "rouge_s*_f_score_ce": 0.25926, "rouge_su*_recall": 0.66667, "rouge_su*_recall_cb": 0.66667, "rouge_su*_recall_ce": 0.66667, "rouge_su*_precision": 0.19048, "rouge_su*_precision_cb": 0.19048, "rouge_su*_precision_ce": 0.19048, "rouge_su*_f_score": 0.2963, "rouge_su*_f_score_cb": 0.2963, "rouge_su*_f_score_ce": 0.2963}}, {"id": 61, "filename": "NumpyEval_61.txt", "dataset_comment": "Dynamically slice a NumPy array along a specific axis using the slice(start, end) method.", "generated_comment": "Create a slice object to extract a subarray from a numpy array 'm' along a specific axis defined by the variable 'axis', starting from index 'start' and ending at index 'end'.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.73333, "rouge_1_recall_cb": 0.73333, "rouge_1_recall_ce": 0.73333, "rouge_1_precision": 0.35484, "rouge_1_precision_cb": 0.35484, "rouge_1_precision_ce": 0.35484, "rouge_1_f_score": 0.47826, "rouge_1_f_score_cb": 0.47826, "rouge_1_f_score_ce": 0.47826, "rouge_2_recall": 0.35714, "rouge_2_recall_cb": 0.35714, "rouge_2_recall_ce": 0.35714, "rouge_2_precision": 0.16667, "rouge_2_precision_cb": 0.16667, "rouge_2_precision_ce": 0.16667, "rouge_2_f_score": 0.22728, "rouge_2_f_score_cb": 0.22728, "rouge_2_f_score_ce": 0.22728, "rouge_3_recall": 0.23077, "rouge_3_recall_cb": 0.23077, "rouge_3_recall_ce": 0.23077, "rouge_3_precision": 0.10345, "rouge_3_precision_cb": 0.10345, "rouge_3_precision_ce": 0.10345, "rouge_3_f_score": 0.14286, "rouge_3_f_score_cb": 0.14286, "rouge_3_f_score_ce": 0.14286, "rouge_4_recall": 0.08333, "rouge_4_recall_cb": 0.08333, "rouge_4_recall_ce": 0.08333, "rouge_4_precision": 0.03571, "rouge_4_precision_cb": 0.03571, "rouge_4_precision_ce": 0.03571, "rouge_4_f_score": 0.05, "rouge_4_f_score_cb": 0.05, "rouge_4_f_score_ce": 0.05, "rouge_l_recall": 0.73333, "rouge_l_recall_cb": 0.73333, "rouge_l_recall_ce": 0.73333, "rouge_l_precision": 0.35484, "rouge_l_precision_cb": 0.35484, "rouge_l_precision_ce": 0.35484, "rouge_l_f_score": 0.47826, "rouge_l_f_score_cb": 0.47826, "rouge_l_f_score_ce": 0.47826, "rouge_w_1.2_recall": 0.37917, "rouge_w_1.2_recall_cb": 0.37917, "rouge_w_1.2_recall_ce": 0.37917, "rouge_w_1.2_precision": 0.31534, "rouge_w_1.2_precision_cb": 0.31534, "rouge_w_1.2_precision_ce": 0.31534, "rouge_w_1.2_f_score": 0.34432, "rouge_w_1.2_f_score_cb": 0.34432, "rouge_w_1.2_f_score_ce": 0.34432, "rouge_s*_recall": 0.55238, "rouge_s*_recall_cb": 0.55238, "rouge_s*_recall_ce": 0.55238, "rouge_s*_precision": 0.12473, "rouge_s*_precision_cb": 0.12473, "rouge_s*_precision_ce": 0.12473, "rouge_s*_f_score": 0.20351, "rouge_s*_f_score_cb": 0.20351, "rouge_s*_f_score_ce": 0.20351, "rouge_su*_recall": 0.57983, "rouge_su*_recall_cb": 0.57983, "rouge_su*_recall_ce": 0.57983, "rouge_su*_precision": 0.13939, "rouge_su*_precision_cb": 0.13939, "rouge_su*_precision_ce": 0.13939, "rouge_su*_f_score": 0.22475, "rouge_su*_f_score_cb": 0.22475, "rouge_su*_f_score_ce": 0.22475}}, {"id": 62, "filename": "NumpyEval_62.txt", "dataset_comment": "Convert a 2D numpy array to a structured array using numpy.core.records.fromarrays. Transpose the array and reset the names to 'col1', 'col2', 'col3'.", "generated_comment": "Convert a 2D numpy array to a record array with specified column names.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.4, "rouge_1_recall_cb": 0.4, "rouge_1_recall_ce": 0.4, "rouge_1_precision": 0.76923, "rouge_1_precision_cb": 0.76923, "rouge_1_precision_ce": 0.76923, "rouge_1_f_score": 0.52632, "rouge_1_f_score_cb": 0.52632, "rouge_1_f_score_ce": 0.52632, "rouge_2_recall": 0.25, "rouge_2_recall_cb": 0.25, "rouge_2_recall_ce": 0.25, "rouge_2_precision": 0.5, "rouge_2_precision_cb": 0.5, "rouge_2_precision_ce": 0.5, "rouge_2_f_score": 0.33333, "rouge_2_f_score_cb": 0.33333, "rouge_2_f_score_ce": 0.33333, "rouge_3_recall": 0.21739, "rouge_3_recall_cb": 0.21739, "rouge_3_recall_ce": 0.21739, "rouge_3_precision": 0.45455, "rouge_3_precision_cb": 0.45455, "rouge_3_precision_ce": 0.45455, "rouge_3_f_score": 0.29412, "rouge_3_f_score_cb": 0.29412, "rouge_3_f_score_ce": 0.29412, "rouge_4_recall": 0.18182, "rouge_4_recall_cb": 0.18182, "rouge_4_recall_ce": 0.18182, "rouge_4_precision": 0.4, "rouge_4_precision_cb": 0.4, "rouge_4_precision_ce": 0.4, "rouge_4_f_score": 0.25, "rouge_4_f_score_cb": 0.25, "rouge_4_f_score_ce": 0.25, "rouge_l_recall": 0.4, "rouge_l_recall_cb": 0.4, "rouge_l_recall_ce": 0.4, "rouge_l_precision": 0.76923, "rouge_l_precision_cb": 0.76923, "rouge_l_precision_ce": 0.76923, "rouge_l_f_score": 0.52632, "rouge_l_f_score_cb": 0.52632, "rouge_l_f_score_ce": 0.52632, "rouge_w_1.2_recall": 0.1819, "rouge_w_1.2_recall_cb": 0.1819, "rouge_w_1.2_recall_ce": 0.1819, "rouge_w_1.2_precision": 0.66593, "rouge_w_1.2_precision_cb": 0.66593, "rouge_w_1.2_precision_ce": 0.66593, "rouge_w_1.2_f_score": 0.28575, "rouge_w_1.2_f_score_cb": 0.28575, "rouge_w_1.2_f_score_ce": 0.28575, "rouge_s*_recall": 0.15, "rouge_s*_recall_cb": 0.15, "rouge_s*_recall_ce": 0.15, "rouge_s*_precision": 0.57692, "rouge_s*_precision_cb": 0.57692, "rouge_s*_precision_ce": 0.57692, "rouge_s*_f_score": 0.23809, "rouge_s*_f_score_cb": 0.23809, "rouge_s*_f_score_ce": 0.23809, "rouge_su*_recall": 0.16667, "rouge_su*_recall_cb": 0.16667, "rouge_su*_recall_ce": 0.16667, "rouge_su*_precision": 0.6, "rouge_su*_precision_cb": 0.6, "rouge_su*_precision_ce": 0.6, "rouge_su*_f_score": 0.26087, "rouge_su*_f_score_cb": 0.26087, "rouge_su*_f_score_ce": 0.26087}}, {"id": 63, "filename": "NumpyEval_63.txt", "dataset_comment": "Check if each element in a numpy array is in another array.  Given two numpy arrays (A and B), obtain the indices of A where the elements of A are in B,  as well as the indices of A where the elements are not in B.", "generated_comment": "Get the indices in array A where elements of array B could be inserted in sorted order using np.searchsorted().Delete the elements at indices where B can be inserted in A to get the remaining indices using np.delete().", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.41304, "rouge_1_recall_cb": 0.41304, "rouge_1_recall_ce": 0.41304, "rouge_1_precision": 0.475, "rouge_1_precision_cb": 0.475, "rouge_1_precision_ce": 0.475, "rouge_1_f_score": 0.44186, "rouge_1_f_score_cb": 0.44186, "rouge_1_f_score_ce": 0.44186, "rouge_2_recall": 0.13333, "rouge_2_recall_cb": 0.13333, "rouge_2_recall_ce": 0.13333, "rouge_2_precision": 0.15385, "rouge_2_precision_cb": 0.15385, "rouge_2_precision_ce": 0.15385, "rouge_2_f_score": 0.14286, "rouge_2_f_score_cb": 0.14286, "rouge_2_f_score_ce": 0.14286, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.23913, "rouge_l_recall_cb": 0.23913, "rouge_l_recall_ce": 0.23913, "rouge_l_precision": 0.275, "rouge_l_precision_cb": 0.275, "rouge_l_precision_ce": 0.275, "rouge_l_f_score": 0.25581, "rouge_l_f_score_cb": 0.25581, "rouge_l_f_score_ce": 0.25581, "rouge_w_1.2_recall": 0.08122, "rouge_w_1.2_recall_cb": 0.08122, "rouge_w_1.2_recall_ce": 0.08122, "rouge_w_1.2_precision": 0.20088, "rouge_w_1.2_precision_cb": 0.20088, "rouge_w_1.2_precision_ce": 0.20088, "rouge_w_1.2_f_score": 0.11567, "rouge_w_1.2_f_score_cb": 0.11567, "rouge_w_1.2_f_score_ce": 0.11567, "rouge_s*_recall": 0.17005, "rouge_s*_recall_cb": 0.17005, "rouge_s*_recall_ce": 0.17005, "rouge_s*_precision": 0.22564, "rouge_s*_precision_cb": 0.22564, "rouge_s*_precision_ce": 0.22564, "rouge_s*_f_score": 0.19394, "rouge_s*_f_score_cb": 0.19394, "rouge_s*_f_score_ce": 0.19394, "rouge_su*_recall": 0.18056, "rouge_su*_recall_cb": 0.18056, "rouge_su*_recall_ce": 0.18056, "rouge_su*_precision": 0.2381, "rouge_su*_precision_cb": 0.2381, "rouge_su*_precision_ce": 0.2381, "rouge_su*_f_score": 0.20538, "rouge_su*_f_score_cb": 0.20538, "rouge_su*_f_score_ce": 0.20538}}, {"id": 64, "filename": "NumpyEval_64.txt", "dataset_comment": "Convert integer arrays to string arrays in NumPy without truncation.", "generated_comment": "Convert each element in the numpy array 'a' to a string and store the result in a new numpy array 'a_str'.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.7, "rouge_1_recall_cb": 0.7, "rouge_1_recall_ce": 0.7, "rouge_1_precision": 0.31818, "rouge_1_precision_cb": 0.31818, "rouge_1_precision_ce": 0.31818, "rouge_1_f_score": 0.4375, "rouge_1_f_score_cb": 0.4375, "rouge_1_f_score_ce": 0.4375, "rouge_2_recall": 0.0, "rouge_2_recall_cb": 0.0, "rouge_2_recall_ce": 0.0, "rouge_2_precision": 0.0, "rouge_2_precision_cb": 0.0, "rouge_2_precision_ce": 0.0, "rouge_2_f_score": 0.0, "rouge_2_f_score_cb": 0.0, "rouge_2_f_score_ce": 0.0, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.6, "rouge_l_recall_cb": 0.6, "rouge_l_recall_ce": 0.6, "rouge_l_precision": 0.27273, "rouge_l_precision_cb": 0.27273, "rouge_l_precision_ce": 0.27273, "rouge_l_f_score": 0.375, "rouge_l_f_score_cb": 0.375, "rouge_l_f_score_ce": 0.375, "rouge_w_1.2_recall": 0.32065, "rouge_w_1.2_recall_cb": 0.32065, "rouge_w_1.2_recall_ce": 0.32065, "rouge_w_1.2_precision": 0.231, "rouge_w_1.2_precision_cb": 0.231, "rouge_w_1.2_precision_ce": 0.231, "rouge_w_1.2_f_score": 0.26854, "rouge_w_1.2_f_score_cb": 0.26854, "rouge_w_1.2_f_score_ce": 0.26854, "rouge_s*_recall": 0.42222, "rouge_s*_recall_cb": 0.42222, "rouge_s*_recall_ce": 0.42222, "rouge_s*_precision": 0.08225, "rouge_s*_precision_cb": 0.08225, "rouge_s*_precision_ce": 0.08225, "rouge_s*_f_score": 0.13768, "rouge_s*_f_score_cb": 0.13768, "rouge_s*_f_score_ce": 0.13768, "rouge_su*_recall": 0.48148, "rouge_su*_recall_cb": 0.48148, "rouge_su*_recall_ce": 0.48148, "rouge_su*_precision": 0.10317, "rouge_su*_precision_cb": 0.10317, "rouge_su*_precision_ce": 0.10317, "rouge_su*_f_score": 0.16993, "rouge_su*_f_score_cb": 0.16993, "rouge_su*_f_score_ce": 0.16993}}, {"id": 65, "filename": "NumpyEval_65.txt", "dataset_comment": "Add rows to a numpy array in a numpythonic way.", "generated_comment": "Add a new row to a NumPy array by vertically stacking the existing array with the new row.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.7, "rouge_1_recall_cb": 0.7, "rouge_1_recall_ce": 0.7, "rouge_1_precision": 0.38889, "rouge_1_precision_cb": 0.38889, "rouge_1_precision_ce": 0.38889, "rouge_1_f_score": 0.5, "rouge_1_f_score_cb": 0.5, "rouge_1_f_score_ce": 0.5, "rouge_2_recall": 0.44444, "rouge_2_recall_cb": 0.44444, "rouge_2_recall_ce": 0.44444, "rouge_2_precision": 0.23529, "rouge_2_precision_cb": 0.23529, "rouge_2_precision_ce": 0.23529, "rouge_2_f_score": 0.30769, "rouge_2_f_score_cb": 0.30769, "rouge_2_f_score_ce": 0.30769, "rouge_3_recall": 0.375, "rouge_3_recall_cb": 0.375, "rouge_3_recall_ce": 0.375, "rouge_3_precision": 0.1875, "rouge_3_precision_cb": 0.1875, "rouge_3_precision_ce": 0.1875, "rouge_3_f_score": 0.25, "rouge_3_f_score_cb": 0.25, "rouge_3_f_score_ce": 0.25, "rouge_4_recall": 0.28571, "rouge_4_recall_cb": 0.28571, "rouge_4_recall_ce": 0.28571, "rouge_4_precision": 0.13333, "rouge_4_precision_cb": 0.13333, "rouge_4_precision_ce": 0.13333, "rouge_4_f_score": 0.18181, "rouge_4_f_score_cb": 0.18181, "rouge_4_f_score_ce": 0.18181, "rouge_l_recall": 0.6, "rouge_l_recall_cb": 0.6, "rouge_l_recall_ce": 0.6, "rouge_l_precision": 0.33333, "rouge_l_precision_cb": 0.33333, "rouge_l_precision_ce": 0.33333, "rouge_l_f_score": 0.42857, "rouge_l_f_score_cb": 0.42857, "rouge_l_f_score_ce": 0.42857, "rouge_w_1.2_recall": 0.37857, "rouge_w_1.2_recall_cb": 0.37857, "rouge_w_1.2_recall_ce": 0.37857, "rouge_w_1.2_precision": 0.33333, "rouge_w_1.2_precision_cb": 0.33333, "rouge_w_1.2_precision_ce": 0.33333, "rouge_w_1.2_f_score": 0.35451, "rouge_w_1.2_f_score_cb": 0.35451, "rouge_w_1.2_f_score_ce": 0.35451, "rouge_s*_recall": 0.37778, "rouge_s*_recall_cb": 0.37778, "rouge_s*_recall_ce": 0.37778, "rouge_s*_precision": 0.11111, "rouge_s*_precision_cb": 0.11111, "rouge_s*_precision_ce": 0.11111, "rouge_s*_f_score": 0.17172, "rouge_s*_f_score_cb": 0.17172, "rouge_s*_f_score_ce": 0.17172, "rouge_su*_recall": 0.44444, "rouge_su*_recall_cb": 0.44444, "rouge_su*_recall_ce": 0.44444, "rouge_su*_precision": 0.14118, "rouge_su*_precision_cb": 0.14118, "rouge_su*_precision_ce": 0.14118, "rouge_su*_f_score": 0.21429, "rouge_su*_f_score_cb": 0.21429, "rouge_su*_f_score_ce": 0.21429}}, {"id": 66, "filename": "NumpyEval_66.txt", "dataset_comment": "Join the arrays using numpy methods by transposing and flattening them.", "generated_comment": "Reshape the arrays 'a', 'b', and 'c' into a single array where the values are interleaved by column, utilizing numpy's transpose and flatten functions.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.63636, "rouge_1_recall_cb": 0.63636, "rouge_1_recall_ce": 0.63636, "rouge_1_precision": 0.28, "rouge_1_precision_cb": 0.28, "rouge_1_precision_ce": 0.28, "rouge_1_f_score": 0.38889, "rouge_1_f_score_cb": 0.38889, "rouge_1_f_score_ce": 0.38889, "rouge_2_recall": 0.3, "rouge_2_recall_cb": 0.3, "rouge_2_recall_ce": 0.3, "rouge_2_precision": 0.125, "rouge_2_precision_cb": 0.125, "rouge_2_precision_ce": 0.125, "rouge_2_f_score": 0.17647, "rouge_2_f_score_cb": 0.17647, "rouge_2_f_score_ce": 0.17647, "rouge_3_recall": 0.11111, "rouge_3_recall_cb": 0.11111, "rouge_3_recall_ce": 0.11111, "rouge_3_precision": 0.04348, "rouge_3_precision_cb": 0.04348, "rouge_3_precision_ce": 0.04348, "rouge_3_f_score": 0.0625, "rouge_3_f_score_cb": 0.0625, "rouge_3_f_score_ce": 0.0625, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.54545, "rouge_l_recall_cb": 0.54545, "rouge_l_recall_ce": 0.54545, "rouge_l_precision": 0.24, "rouge_l_precision_cb": 0.24, "rouge_l_precision_ce": 0.24, "rouge_l_f_score": 0.33333, "rouge_l_f_score_cb": 0.33333, "rouge_l_f_score_ce": 0.33333, "rouge_w_1.2_recall": 0.286, "rouge_w_1.2_recall_cb": 0.286, "rouge_w_1.2_recall_ce": 0.286, "rouge_w_1.2_precision": 0.20328, "rouge_w_1.2_precision_cb": 0.20328, "rouge_w_1.2_precision_ce": 0.20328, "rouge_w_1.2_f_score": 0.23765, "rouge_w_1.2_f_score_cb": 0.23765, "rouge_w_1.2_f_score_ce": 0.23765, "rouge_s*_recall": 0.36364, "rouge_s*_recall_cb": 0.36364, "rouge_s*_recall_ce": 0.36364, "rouge_s*_precision": 0.06667, "rouge_s*_precision_cb": 0.06667, "rouge_s*_precision_ce": 0.06667, "rouge_s*_f_score": 0.11268, "rouge_s*_f_score_cb": 0.11268, "rouge_s*_f_score_ce": 0.11268, "rouge_su*_recall": 0.41538, "rouge_su*_recall_cb": 0.41538, "rouge_su*_recall_ce": 0.41538, "rouge_su*_precision": 0.08333, "rouge_su*_precision_cb": 0.08333, "rouge_su*_precision_ce": 0.08333, "rouge_su*_f_score": 0.13881, "rouge_su*_f_score_cb": 0.13881, "rouge_su*_f_score_ce": 0.13881}}, {"id": 67, "filename": "NumpyEval_67.txt", "dataset_comment": "Find the indices of elements equal to zero in a NumPy array and return them.", "generated_comment": "Find the indices of elements in the input array that are equal to zero using numpy and return them.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.93333, "rouge_1_recall_cb": 0.93333, "rouge_1_recall_ce": 0.93333, "rouge_1_precision": 0.73684, "rouge_1_precision_cb": 0.73684, "rouge_1_precision_ce": 0.73684, "rouge_1_f_score": 0.82353, "rouge_1_f_score_cb": 0.82353, "rouge_1_f_score_ce": 0.82353, "rouge_2_recall": 0.57143, "rouge_2_recall_cb": 0.57143, "rouge_2_recall_ce": 0.57143, "rouge_2_precision": 0.44444, "rouge_2_precision_cb": 0.44444, "rouge_2_precision_ce": 0.44444, "rouge_2_f_score": 0.5, "rouge_2_f_score_cb": 0.5, "rouge_2_f_score_ce": 0.5, "rouge_3_recall": 0.38462, "rouge_3_recall_cb": 0.38462, "rouge_3_recall_ce": 0.38462, "rouge_3_precision": 0.29412, "rouge_3_precision_cb": 0.29412, "rouge_3_precision_ce": 0.29412, "rouge_3_f_score": 0.33334, "rouge_3_f_score_cb": 0.33334, "rouge_3_f_score_ce": 0.33334, "rouge_4_recall": 0.16667, "rouge_4_recall_cb": 0.16667, "rouge_4_recall_ce": 0.16667, "rouge_4_precision": 0.125, "rouge_4_precision_cb": 0.125, "rouge_4_precision_ce": 0.125, "rouge_4_f_score": 0.14286, "rouge_4_f_score_cb": 0.14286, "rouge_4_f_score_ce": 0.14286, "rouge_l_recall": 0.8, "rouge_l_recall_cb": 0.8, "rouge_l_recall_ce": 0.8, "rouge_l_precision": 0.63158, "rouge_l_precision_cb": 0.63158, "rouge_l_precision_ce": 0.63158, "rouge_l_f_score": 0.70588, "rouge_l_f_score_cb": 0.70588, "rouge_l_f_score_ce": 0.70588, "rouge_w_1.2_recall": 0.40845, "rouge_w_1.2_recall_cb": 0.40845, "rouge_w_1.2_recall_ce": 0.40845, "rouge_w_1.2_precision": 0.55423, "rouge_w_1.2_precision_cb": 0.55423, "rouge_w_1.2_precision_ce": 0.55423, "rouge_w_1.2_f_score": 0.4703, "rouge_w_1.2_f_score_cb": 0.4703, "rouge_w_1.2_f_score_ce": 0.4703, "rouge_s*_recall": 0.8, "rouge_s*_recall_cb": 0.8, "rouge_s*_recall_ce": 0.8, "rouge_s*_precision": 0.49123, "rouge_s*_precision_cb": 0.49123, "rouge_s*_precision_ce": 0.49123, "rouge_s*_f_score": 0.6087, "rouge_s*_f_score_cb": 0.6087, "rouge_s*_f_score_ce": 0.6087, "rouge_su*_recall": 0.81513, "rouge_su*_recall_cb": 0.81513, "rouge_su*_recall_ce": 0.81513, "rouge_su*_precision": 0.51323, "rouge_su*_precision_cb": 0.51323, "rouge_su*_precision_ce": 0.51323, "rouge_su*_f_score": 0.62987, "rouge_su*_f_score_cb": 0.62987, "rouge_su*_f_score_ce": 0.62987}}, {"id": 68, "filename": "NumpyEval_68.txt", "dataset_comment": "Convert an array of indices to a 1-hot encoded numpy array.", "generated_comment": "We need to initialize a 2D array `result` with zeros, where the number of rows is equal to the size of `data` and the number of columns is equal to the maximum value in `data`.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.33333, "rouge_1_recall_cb": 0.33333, "rouge_1_recall_ce": 0.33333, "rouge_1_precision": 0.11429, "rouge_1_precision_cb": 0.11429, "rouge_1_precision_ce": 0.11429, "rouge_1_f_score": 0.17022, "rouge_1_f_score_cb": 0.17022, "rouge_1_f_score_ce": 0.17022, "rouge_2_recall": 0.0, "rouge_2_recall_cb": 0.0, "rouge_2_recall_ce": 0.0, "rouge_2_precision": 0.0, "rouge_2_precision_cb": 0.0, "rouge_2_precision_ce": 0.0, "rouge_2_f_score": 0.0, "rouge_2_f_score_cb": 0.0, "rouge_2_f_score_ce": 0.0, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.25, "rouge_l_recall_cb": 0.25, "rouge_l_recall_ce": 0.25, "rouge_l_precision": 0.08571, "rouge_l_precision_cb": 0.08571, "rouge_l_precision_ce": 0.08571, "rouge_l_f_score": 0.12765, "rouge_l_f_score_cb": 0.12765, "rouge_l_f_score_ce": 0.12765, "rouge_w_1.2_recall": 0.13702, "rouge_w_1.2_recall_cb": 0.13702, "rouge_w_1.2_recall_ce": 0.13702, "rouge_w_1.2_precision": 0.07722, "rouge_w_1.2_precision_cb": 0.07722, "rouge_w_1.2_precision_ce": 0.07722, "rouge_w_1.2_f_score": 0.09877, "rouge_w_1.2_f_score_cb": 0.09877, "rouge_w_1.2_f_score_ce": 0.09877, "rouge_s*_recall": 0.09091, "rouge_s*_recall_cb": 0.09091, "rouge_s*_recall_ce": 0.09091, "rouge_s*_precision": 0.01008, "rouge_s*_precision_cb": 0.01008, "rouge_s*_precision_ce": 0.01008, "rouge_s*_f_score": 0.01815, "rouge_s*_f_score_cb": 0.01815, "rouge_s*_f_score_ce": 0.01815, "rouge_su*_recall": 0.12987, "rouge_su*_recall_cb": 0.12987, "rouge_su*_recall_ce": 0.12987, "rouge_su*_precision": 0.0159, "rouge_su*_precision_cb": 0.0159, "rouge_su*_precision_ce": 0.0159, "rouge_su*_f_score": 0.02833, "rouge_su*_f_score_cb": 0.02833, "rouge_su*_f_score_ce": 0.02833}}, {"id": 69, "filename": "NumpyEval_69.txt", "dataset_comment": "Obtain the (row, column) index of the minimum value in a NumPy array/matrix using unravel_index().", "generated_comment": "Get the indices of the minimum value in a numpy array 'A' using np.unravel_index.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.76471, "rouge_1_recall_cb": 0.76471, "rouge_1_recall_ce": 0.76471, "rouge_1_precision": 0.8125, "rouge_1_precision_cb": 0.8125, "rouge_1_precision_ce": 0.8125, "rouge_1_f_score": 0.78788, "rouge_1_f_score_cb": 0.78788, "rouge_1_f_score_ce": 0.78788, "rouge_2_recall": 0.5625, "rouge_2_recall_cb": 0.5625, "rouge_2_recall_ce": 0.5625, "rouge_2_precision": 0.6, "rouge_2_precision_cb": 0.6, "rouge_2_precision_ce": 0.6, "rouge_2_f_score": 0.58065, "rouge_2_f_score_cb": 0.58065, "rouge_2_f_score_ce": 0.58065, "rouge_3_recall": 0.46667, "rouge_3_recall_cb": 0.46667, "rouge_3_recall_ce": 0.46667, "rouge_3_precision": 0.5, "rouge_3_precision_cb": 0.5, "rouge_3_precision_ce": 0.5, "rouge_3_f_score": 0.48276, "rouge_3_f_score_cb": 0.48276, "rouge_3_f_score_ce": 0.48276, "rouge_4_recall": 0.42857, "rouge_4_recall_cb": 0.42857, "rouge_4_recall_ce": 0.42857, "rouge_4_precision": 0.46154, "rouge_4_precision_cb": 0.46154, "rouge_4_precision_ce": 0.46154, "rouge_4_f_score": 0.44444, "rouge_4_f_score_cb": 0.44444, "rouge_4_f_score_ce": 0.44444, "rouge_l_recall": 0.76471, "rouge_l_recall_cb": 0.76471, "rouge_l_recall_ce": 0.76471, "rouge_l_precision": 0.8125, "rouge_l_precision_cb": 0.8125, "rouge_l_precision_ce": 0.8125, "rouge_l_f_score": 0.78788, "rouge_l_f_score_cb": 0.78788, "rouge_l_f_score_ce": 0.78788, "rouge_w_1.2_recall": 0.38318, "rouge_w_1.2_recall_cb": 0.38318, "rouge_w_1.2_recall_ce": 0.38318, "rouge_w_1.2_precision": 0.7175, "rouge_w_1.2_precision_cb": 0.7175, "rouge_w_1.2_precision_ce": 0.7175, "rouge_w_1.2_f_score": 0.49957, "rouge_w_1.2_f_score_cb": 0.49957, "rouge_w_1.2_f_score_ce": 0.49957, "rouge_s*_recall": 0.57353, "rouge_s*_recall_cb": 0.57353, "rouge_s*_recall_ce": 0.57353, "rouge_s*_precision": 0.65, "rouge_s*_precision_cb": 0.65, "rouge_s*_precision_ce": 0.65, "rouge_s*_f_score": 0.60938, "rouge_s*_f_score_cb": 0.60938, "rouge_s*_f_score_ce": 0.60938, "rouge_su*_recall": 0.59211, "rouge_su*_recall_cb": 0.59211, "rouge_su*_recall_ce": 0.59211, "rouge_su*_precision": 0.66667, "rouge_su*_precision_cb": 0.66667, "rouge_su*_precision_ce": 0.66667, "rouge_su*_f_score": 0.62718, "rouge_su*_f_score_cb": 0.62718, "rouge_su*_f_score_ce": 0.62718}}, {"id": 70, "filename": "NumpyEval_70.txt", "dataset_comment": "Calculate the mean values along the rows of a matrix while excluding NaN values from the calculation. If all row values are NaN, the mean value is set to NaN.", "generated_comment": "Calculate the mean along each row of the array 'mdat' after masking out any NaN values, then fill in the masked values with NaN.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.4, "rouge_1_recall_cb": 0.4, "rouge_1_recall_ce": 0.4, "rouge_1_precision": 0.5, "rouge_1_precision_cb": 0.5, "rouge_1_precision_ce": 0.5, "rouge_1_f_score": 0.44444, "rouge_1_f_score_cb": 0.44444, "rouge_1_f_score_ce": 0.44444, "rouge_2_recall": 0.13793, "rouge_2_recall_cb": 0.13793, "rouge_2_recall_ce": 0.13793, "rouge_2_precision": 0.17391, "rouge_2_precision_cb": 0.17391, "rouge_2_precision_ce": 0.17391, "rouge_2_f_score": 0.15384, "rouge_2_f_score_cb": 0.15384, "rouge_2_f_score_ce": 0.15384, "rouge_3_recall": 0.03571, "rouge_3_recall_cb": 0.03571, "rouge_3_recall_ce": 0.03571, "rouge_3_precision": 0.04545, "rouge_3_precision_cb": 0.04545, "rouge_3_precision_ce": 0.04545, "rouge_3_f_score": 0.04, "rouge_3_f_score_cb": 0.04, "rouge_3_f_score_ce": 0.04, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.36667, "rouge_l_recall_cb": 0.36667, "rouge_l_recall_ce": 0.36667, "rouge_l_precision": 0.45833, "rouge_l_precision_cb": 0.45833, "rouge_l_precision_ce": 0.45833, "rouge_l_f_score": 0.40741, "rouge_l_f_score_cb": 0.40741, "rouge_l_f_score_ce": 0.40741, "rouge_w_1.2_recall": 0.13698, "rouge_w_1.2_recall_cb": 0.13698, "rouge_w_1.2_recall_ce": 0.13698, "rouge_w_1.2_precision": 0.33805, "rouge_w_1.2_precision_cb": 0.33805, "rouge_w_1.2_precision_ce": 0.33805, "rouge_w_1.2_f_score": 0.19496, "rouge_w_1.2_f_score_cb": 0.19496, "rouge_w_1.2_f_score_ce": 0.19496, "rouge_s*_recall": 0.15172, "rouge_s*_recall_cb": 0.15172, "rouge_s*_recall_ce": 0.15172, "rouge_s*_precision": 0.23913, "rouge_s*_precision_cb": 0.23913, "rouge_s*_precision_ce": 0.23913, "rouge_s*_f_score": 0.18565, "rouge_s*_f_score_cb": 0.18565, "rouge_s*_f_score_ce": 0.18565, "rouge_su*_recall": 0.16595, "rouge_su*_recall_cb": 0.16595, "rouge_su*_recall_ce": 0.16595, "rouge_su*_precision": 0.25753, "rouge_su*_precision_cb": 0.25753, "rouge_su*_precision_ce": 0.25753, "rouge_su*_f_score": 0.20184, "rouge_su*_f_score_cb": 0.20184, "rouge_su*_f_score_ce": 0.20184}}, {"id": 71, "filename": "NumpyEval_71.txt", "dataset_comment": "Replace all elements of the Python NumPy array that are greater than `value` with `new_value` and return the array.", "generated_comment": "Replace elements in the input array that are greater than a specified value with a new value efficiently using numpy.The function takes three parameters: arr (input numpy array), value (threshold value for replacement), and new_value (value to replace with).The function directly modifies the input array 'arr' in place, replacing elements greater than 'value' with 'new_value'.Finally, the modified array is returned.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.85, "rouge_1_recall_cb": 0.85, "rouge_1_recall_ce": 0.85, "rouge_1_precision": 0.26154, "rouge_1_precision_cb": 0.26154, "rouge_1_precision_ce": 0.26154, "rouge_1_f_score": 0.4, "rouge_1_f_score_cb": 0.4, "rouge_1_f_score_ce": 0.4, "rouge_2_recall": 0.47368, "rouge_2_recall_cb": 0.47368, "rouge_2_recall_ce": 0.47368, "rouge_2_precision": 0.14062, "rouge_2_precision_cb": 0.14062, "rouge_2_precision_ce": 0.14062, "rouge_2_f_score": 0.21686, "rouge_2_f_score_cb": 0.21686, "rouge_2_f_score_ce": 0.21686, "rouge_3_recall": 0.38889, "rouge_3_recall_cb": 0.38889, "rouge_3_recall_ce": 0.38889, "rouge_3_precision": 0.11111, "rouge_3_precision_cb": 0.11111, "rouge_3_precision_ce": 0.11111, "rouge_3_f_score": 0.17284, "rouge_3_f_score_cb": 0.17284, "rouge_3_f_score_ce": 0.17284, "rouge_4_recall": 0.29412, "rouge_4_recall_cb": 0.29412, "rouge_4_recall_ce": 0.29412, "rouge_4_precision": 0.08065, "rouge_4_precision_cb": 0.08065, "rouge_4_precision_ce": 0.08065, "rouge_4_f_score": 0.12659, "rouge_4_f_score_cb": 0.12659, "rouge_4_f_score_ce": 0.12659, "rouge_l_recall": 0.75, "rouge_l_recall_cb": 0.75, "rouge_l_recall_ce": 0.75, "rouge_l_precision": 0.23077, "rouge_l_precision_cb": 0.23077, "rouge_l_precision_ce": 0.23077, "rouge_l_f_score": 0.35294, "rouge_l_f_score_cb": 0.35294, "rouge_l_f_score_ce": 0.35294, "rouge_w_1.2_recall": 0.32314, "rouge_w_1.2_recall_cb": 0.32314, "rouge_w_1.2_recall_ce": 0.32314, "rouge_w_1.2_precision": 0.18101, "rouge_w_1.2_precision_cb": 0.18101, "rouge_w_1.2_precision_ce": 0.18101, "rouge_w_1.2_f_score": 0.23204, "rouge_w_1.2_f_score_cb": 0.23204, "rouge_w_1.2_f_score_ce": 0.23204, "rouge_s*_recall": 0.69474, "rouge_s*_recall_cb": 0.69474, "rouge_s*_recall_ce": 0.69474, "rouge_s*_precision": 0.06346, "rouge_s*_precision_cb": 0.06346, "rouge_s*_precision_ce": 0.06346, "rouge_s*_f_score": 0.1163, "rouge_s*_f_score_cb": 0.1163, "rouge_s*_f_score_ce": 0.1163, "rouge_su*_recall": 0.70335, "rouge_su*_recall_cb": 0.70335, "rouge_su*_recall_ce": 0.70335, "rouge_su*_precision": 0.06856, "rouge_su*_precision_cb": 0.06856, "rouge_su*_precision_ce": 0.06856, "rouge_su*_f_score": 0.12494, "rouge_su*_f_score_cb": 0.12494, "rouge_su*_f_score_ce": 0.12494}}, {"id": 72, "filename": "NumpyEval_72.txt", "dataset_comment": "Slice a numpy array to obtain the i-th index in the last dimension without explicitly writing the array dimensions using Ellipsis. Returns a numpy array.", "generated_comment": "Access the i-th index in the last dimension of the input array 'arr'.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.38462, "rouge_1_recall_cb": 0.38462, "rouge_1_recall_ce": 0.38462, "rouge_1_precision": 0.71429, "rouge_1_precision_cb": 0.71429, "rouge_1_precision_ce": 0.71429, "rouge_1_f_score": 0.5, "rouge_1_f_score_cb": 0.5, "rouge_1_f_score_ce": 0.5, "rouge_2_recall": 0.28, "rouge_2_recall_cb": 0.28, "rouge_2_recall_ce": 0.28, "rouge_2_precision": 0.53846, "rouge_2_precision_cb": 0.53846, "rouge_2_precision_ce": 0.53846, "rouge_2_f_score": 0.36842, "rouge_2_f_score_cb": 0.36842, "rouge_2_f_score_ce": 0.36842, "rouge_3_recall": 0.25, "rouge_3_recall_cb": 0.25, "rouge_3_recall_ce": 0.25, "rouge_3_precision": 0.5, "rouge_3_precision_cb": 0.5, "rouge_3_precision_ce": 0.5, "rouge_3_f_score": 0.33333, "rouge_3_f_score_cb": 0.33333, "rouge_3_f_score_ce": 0.33333, "rouge_4_recall": 0.21739, "rouge_4_recall_cb": 0.21739, "rouge_4_recall_ce": 0.21739, "rouge_4_precision": 0.45455, "rouge_4_precision_cb": 0.45455, "rouge_4_precision_ce": 0.45455, "rouge_4_f_score": 0.29412, "rouge_4_f_score_cb": 0.29412, "rouge_4_f_score_ce": 0.29412, "rouge_l_recall": 0.38462, "rouge_l_recall_cb": 0.38462, "rouge_l_recall_ce": 0.38462, "rouge_l_precision": 0.71429, "rouge_l_precision_cb": 0.71429, "rouge_l_precision_ce": 0.71429, "rouge_l_f_score": 0.5, "rouge_l_f_score_cb": 0.5, "rouge_l_f_score_ce": 0.5, "rouge_w_1.2_recall": 0.18532, "rouge_w_1.2_recall_cb": 0.18532, "rouge_w_1.2_recall_ce": 0.18532, "rouge_w_1.2_precision": 0.66032, "rouge_w_1.2_precision_cb": 0.66032, "rouge_w_1.2_precision_ce": 0.66032, "rouge_w_1.2_f_score": 0.28942, "rouge_w_1.2_f_score_cb": 0.28942, "rouge_w_1.2_f_score_ce": 0.28942, "rouge_s*_recall": 0.13846, "rouge_s*_recall_cb": 0.13846, "rouge_s*_recall_ce": 0.13846, "rouge_s*_precision": 0.49451, "rouge_s*_precision_cb": 0.49451, "rouge_s*_precision_ce": 0.49451, "rouge_s*_f_score": 0.21634, "rouge_s*_f_score_cb": 0.21634, "rouge_s*_f_score_ce": 0.21634, "rouge_su*_recall": 0.15714, "rouge_su*_recall_cb": 0.15714, "rouge_su*_recall_ce": 0.15714, "rouge_su*_precision": 0.52885, "rouge_su*_precision_cb": 0.52885, "rouge_su*_precision_ce": 0.52885, "rouge_su*_f_score": 0.24229, "rouge_su*_f_score_cb": 0.24229, "rouge_su*_f_score_ce": 0.24229}}, {"id": 73, "filename": "NumpyEval_73.txt", "dataset_comment": "Find the nearest value in a numpy array and return the result.", "generated_comment": "Find the index of the element in the array that is closest to the given value.<array>: Input array to search for the nearest value.<value>: The value to which the nearest element in the array should be found.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.5, "rouge_1_recall_cb": 0.5, "rouge_1_recall_ce": 0.5, "rouge_1_precision": 0.375, "rouge_1_precision_cb": 0.375, "rouge_1_precision_ce": 0.375, "rouge_1_f_score": 0.42857, "rouge_1_f_score_cb": 0.42857, "rouge_1_f_score_ce": 0.42857, "rouge_2_recall": 0.09091, "rouge_2_recall_cb": 0.09091, "rouge_2_recall_ce": 0.09091, "rouge_2_precision": 0.06667, "rouge_2_precision_cb": 0.06667, "rouge_2_precision_ce": 0.06667, "rouge_2_f_score": 0.07693, "rouge_2_f_score_cb": 0.07693, "rouge_2_f_score_ce": 0.07693, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.41667, "rouge_l_recall_cb": 0.41667, "rouge_l_recall_ce": 0.41667, "rouge_l_precision": 0.3125, "rouge_l_precision_cb": 0.3125, "rouge_l_precision_ce": 0.3125, "rouge_l_f_score": 0.35714, "rouge_l_f_score_cb": 0.35714, "rouge_l_f_score_ce": 0.35714, "rouge_w_1.2_recall": 0.20341, "rouge_w_1.2_recall_cb": 0.20341, "rouge_w_1.2_recall_ce": 0.20341, "rouge_w_1.2_precision": 0.25076, "rouge_w_1.2_precision_cb": 0.25076, "rouge_w_1.2_precision_ce": 0.25076, "rouge_w_1.2_f_score": 0.22462, "rouge_w_1.2_f_score_cb": 0.22462, "rouge_w_1.2_f_score_ce": 0.22462, "rouge_s*_recall": 0.18182, "rouge_s*_recall_cb": 0.18182, "rouge_s*_recall_ce": 0.18182, "rouge_s*_precision": 0.1, "rouge_s*_precision_cb": 0.1, "rouge_s*_precision_ce": 0.1, "rouge_s*_f_score": 0.12903, "rouge_s*_f_score_cb": 0.12903, "rouge_s*_f_score_ce": 0.12903, "rouge_su*_recall": 0.22078, "rouge_su*_recall_cb": 0.22078, "rouge_su*_recall_ce": 0.22078, "rouge_su*_precision": 0.12593, "rouge_su*_precision_cb": 0.12593, "rouge_su*_precision_ce": 0.12593, "rouge_su*_f_score": 0.16038, "rouge_su*_f_score_cb": 0.16038, "rouge_su*_f_score_ce": 0.16038}}, {"id": 74, "filename": "NumpyEval_74.txt", "dataset_comment": "Find the index of the elements within the range [low, high] and return the final array of indices.", "generated_comment": "Find the indices of elements in the input array 'arr' that fall within the range specified by 'low' and 'high' values using numpy by applying logical_and operation with np.where().", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.72222, "rouge_1_recall_cb": 0.72222, "rouge_1_recall_ce": 0.72222, "rouge_1_precision": 0.41935, "rouge_1_precision_cb": 0.41935, "rouge_1_precision_ce": 0.41935, "rouge_1_f_score": 0.53061, "rouge_1_f_score_cb": 0.53061, "rouge_1_f_score_ce": 0.53061, "rouge_2_recall": 0.29412, "rouge_2_recall_cb": 0.29412, "rouge_2_recall_ce": 0.29412, "rouge_2_precision": 0.16667, "rouge_2_precision_cb": 0.16667, "rouge_2_precision_ce": 0.16667, "rouge_2_f_score": 0.21277, "rouge_2_f_score_cb": 0.21277, "rouge_2_f_score_ce": 0.21277, "rouge_3_recall": 0.1875, "rouge_3_recall_cb": 0.1875, "rouge_3_recall_ce": 0.1875, "rouge_3_precision": 0.10345, "rouge_3_precision_cb": 0.10345, "rouge_3_precision_ce": 0.10345, "rouge_3_f_score": 0.13333, "rouge_3_f_score_cb": 0.13333, "rouge_3_f_score_ce": 0.13333, "rouge_4_recall": 0.06667, "rouge_4_recall_cb": 0.06667, "rouge_4_recall_ce": 0.06667, "rouge_4_precision": 0.03571, "rouge_4_precision_cb": 0.03571, "rouge_4_precision_ce": 0.03571, "rouge_4_f_score": 0.04651, "rouge_4_f_score_cb": 0.04651, "rouge_4_f_score_ce": 0.04651, "rouge_l_recall": 0.61111, "rouge_l_recall_cb": 0.61111, "rouge_l_recall_ce": 0.61111, "rouge_l_precision": 0.35484, "rouge_l_precision_cb": 0.35484, "rouge_l_precision_ce": 0.35484, "rouge_l_f_score": 0.44898, "rouge_l_f_score_cb": 0.44898, "rouge_l_f_score_ce": 0.44898, "rouge_w_1.2_recall": 0.30567, "rouge_w_1.2_recall_cb": 0.30567, "rouge_w_1.2_recall_ce": 0.30567, "rouge_w_1.2_precision": 0.31639, "rouge_w_1.2_precision_cb": 0.31639, "rouge_w_1.2_precision_ce": 0.31639, "rouge_w_1.2_f_score": 0.31094, "rouge_w_1.2_f_score_cb": 0.31094, "rouge_w_1.2_f_score_ce": 0.31094, "rouge_s*_recall": 0.47059, "rouge_s*_recall_cb": 0.47059, "rouge_s*_recall_ce": 0.47059, "rouge_s*_precision": 0.15484, "rouge_s*_precision_cb": 0.15484, "rouge_s*_precision_ce": 0.15484, "rouge_s*_f_score": 0.23301, "rouge_s*_f_score_cb": 0.23301, "rouge_s*_f_score_ce": 0.23301, "rouge_su*_recall": 0.5, "rouge_su*_recall_cb": 0.5, "rouge_su*_recall_ce": 0.5, "rouge_su*_precision": 0.17172, "rouge_su*_precision_cb": 0.17172, "rouge_su*_precision_ce": 0.17172, "rouge_su*_f_score": 0.25564, "rouge_su*_f_score_cb": 0.25564, "rouge_su*_f_score_ce": 0.25564}}, {"id": 75, "filename": "NumpyEval_75.txt", "dataset_comment": "Sure! Here is the unified style of annotation for the comments you provided:```python This provides the values of interest. Generate a mask to identify all values that are even numbers. Determine if there is an efficient Numpy mechanism to retrieve the integer indexes of locations in an array based on a true condition, instead of using the Boolean mask array.```", "generated_comment": "Find the indices where the elements in the numpy array 'x' are divisible by 2 efficiently using numpy by applying the condition x % 2 == 0 and utilizing np.where() method.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.19672, "rouge_1_recall_cb": 0.19672, "rouge_1_recall_ce": 0.19672, "rouge_1_precision": 0.4, "rouge_1_precision_cb": 0.4, "rouge_1_precision_ce": 0.4, "rouge_1_f_score": 0.26374, "rouge_1_f_score_cb": 0.26374, "rouge_1_f_score_ce": 0.26374, "rouge_2_recall": 0.0, "rouge_2_recall_cb": 0.0, "rouge_2_recall_ce": 0.0, "rouge_2_precision": 0.0, "rouge_2_precision_cb": 0.0, "rouge_2_precision_ce": 0.0, "rouge_2_f_score": 0.0, "rouge_2_f_score_cb": 0.0, "rouge_2_f_score_ce": 0.0, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.13115, "rouge_l_recall_cb": 0.13115, "rouge_l_recall_ce": 0.13115, "rouge_l_precision": 0.26667, "rouge_l_precision_cb": 0.26667, "rouge_l_precision_ce": 0.26667, "rouge_l_f_score": 0.17583, "rouge_l_f_score_cb": 0.17583, "rouge_l_f_score_ce": 0.17583, "rouge_w_1.2_recall": 0.04201, "rouge_w_1.2_recall_cb": 0.04201, "rouge_w_1.2_recall_ce": 0.04201, "rouge_w_1.2_precision": 0.19439, "rouge_w_1.2_precision_cb": 0.19439, "rouge_w_1.2_precision_ce": 0.19439, "rouge_w_1.2_f_score": 0.06909, "rouge_w_1.2_f_score_cb": 0.06909, "rouge_w_1.2_f_score_ce": 0.06909, "rouge_s*_recall": 0.03005, "rouge_s*_recall_cb": 0.03005, "rouge_s*_recall_ce": 0.03005, "rouge_s*_precision": 0.12644, "rouge_s*_precision_cb": 0.12644, "rouge_s*_precision_ce": 0.12644, "rouge_s*_f_score": 0.04856, "rouge_s*_f_score_cb": 0.04856, "rouge_s*_f_score_ce": 0.04856, "rouge_su*_recall": 0.03545, "rouge_su*_recall_cb": 0.03545, "rouge_su*_recall_ce": 0.03545, "rouge_su*_precision": 0.1444, "rouge_su*_precision_cb": 0.1444, "rouge_su*_precision_ce": 0.1444, "rouge_su*_f_score": 0.05692, "rouge_su*_f_score_cb": 0.05692, "rouge_su*_f_score_ce": 0.05692}}, {"id": 76, "filename": "NumpyEval_76.txt", "dataset_comment": "Convert a dictionary to a NumPy structured array.", "generated_comment": "Create a structured NumPy array using the provided dictionary 'result' with keys 'id' and 'data' and corresponding float formats 'f8'.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.625, "rouge_1_recall_cb": 0.625, "rouge_1_recall_ce": 0.625, "rouge_1_precision": 0.25, "rouge_1_precision_cb": 0.25, "rouge_1_precision_ce": 0.25, "rouge_1_f_score": 0.35714, "rouge_1_f_score_cb": 0.35714, "rouge_1_f_score_ce": 0.35714, "rouge_2_recall": 0.0, "rouge_2_recall_cb": 0.0, "rouge_2_recall_ce": 0.0, "rouge_2_precision": 0.0, "rouge_2_precision_cb": 0.0, "rouge_2_precision_ce": 0.0, "rouge_2_f_score": 0.0, "rouge_2_f_score_cb": 0.0, "rouge_2_f_score_ce": 0.0, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.375, "rouge_l_recall_cb": 0.375, "rouge_l_recall_ce": 0.375, "rouge_l_precision": 0.15, "rouge_l_precision_cb": 0.15, "rouge_l_precision_ce": 0.15, "rouge_l_f_score": 0.21429, "rouge_l_f_score_cb": 0.21429, "rouge_l_f_score_ce": 0.21429, "rouge_w_1.2_recall": 0.20601, "rouge_w_1.2_recall_cb": 0.20601, "rouge_w_1.2_recall_ce": 0.20601, "rouge_w_1.2_precision": 0.1249, "rouge_w_1.2_precision_cb": 0.1249, "rouge_w_1.2_precision_ce": 0.1249, "rouge_w_1.2_f_score": 0.15551, "rouge_w_1.2_f_score_cb": 0.15551, "rouge_w_1.2_f_score_ce": 0.15551, "rouge_s*_recall": 0.21429, "rouge_s*_recall_cb": 0.21429, "rouge_s*_recall_ce": 0.21429, "rouge_s*_precision": 0.03158, "rouge_s*_precision_cb": 0.03158, "rouge_s*_precision_ce": 0.03158, "rouge_s*_f_score": 0.05505, "rouge_s*_f_score_cb": 0.05505, "rouge_s*_f_score_ce": 0.05505, "rouge_su*_recall": 0.28571, "rouge_su*_recall_cb": 0.28571, "rouge_su*_recall_ce": 0.28571, "rouge_su*_precision": 0.04785, "rouge_su*_precision_cb": 0.04785, "rouge_su*_precision_ce": 0.04785, "rouge_su*_f_score": 0.08197, "rouge_su*_f_score_cb": 0.08197, "rouge_su*_f_score_ce": 0.08197}}, {"id": 77, "filename": "NumpyEval_77.txt", "dataset_comment": "Determine the inverse of the NumPy cumsum function.", "generated_comment": "Set each element in the array to be equal to the previous element starting from the second element.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.25, "rouge_1_recall_cb": 0.25, "rouge_1_recall_ce": 0.25, "rouge_1_precision": 0.11111, "rouge_1_precision_cb": 0.11111, "rouge_1_precision_ce": 0.11111, "rouge_1_f_score": 0.15385, "rouge_1_f_score_cb": 0.15385, "rouge_1_f_score_ce": 0.15385, "rouge_2_recall": 0.0, "rouge_2_recall_cb": 0.0, "rouge_2_recall_ce": 0.0, "rouge_2_precision": 0.0, "rouge_2_precision_cb": 0.0, "rouge_2_precision_ce": 0.0, "rouge_2_f_score": 0.0, "rouge_2_f_score_cb": 0.0, "rouge_2_f_score_ce": 0.0, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.25, "rouge_l_recall_cb": 0.25, "rouge_l_recall_ce": 0.25, "rouge_l_precision": 0.11111, "rouge_l_precision_cb": 0.11111, "rouge_l_precision_ce": 0.11111, "rouge_l_f_score": 0.15385, "rouge_l_f_score_cb": 0.15385, "rouge_l_f_score_ce": 0.15385, "rouge_w_1.2_recall": 0.14694, "rouge_w_1.2_recall_cb": 0.14694, "rouge_w_1.2_recall_ce": 0.14694, "rouge_w_1.2_precision": 0.09899, "rouge_w_1.2_precision_cb": 0.09899, "rouge_w_1.2_precision_ce": 0.09899, "rouge_w_1.2_f_score": 0.11829, "rouge_w_1.2_f_score_cb": 0.11829, "rouge_w_1.2_f_score_ce": 0.11829, "rouge_s*_recall": 0.03571, "rouge_s*_recall_cb": 0.03571, "rouge_s*_recall_ce": 0.03571, "rouge_s*_precision": 0.00654, "rouge_s*_precision_cb": 0.00654, "rouge_s*_precision_ce": 0.00654, "rouge_s*_f_score": 0.01106, "rouge_s*_f_score_cb": 0.01106, "rouge_s*_f_score_ce": 0.01106, "rouge_su*_recall": 0.08571, "rouge_su*_recall_cb": 0.08571, "rouge_su*_recall_ce": 0.08571, "rouge_su*_precision": 0.01765, "rouge_su*_precision_cb": 0.01765, "rouge_su*_precision_ce": 0.01765, "rouge_su*_f_score": 0.02927, "rouge_su*_f_score_cb": 0.02927, "rouge_su*_f_score_ce": 0.02927}}, {"id": 78, "filename": "NumpyEval_78.txt", "dataset_comment": "Translate every element of a numpy array according to a given key using np.vectorize on the .get method of dictionaries.", "generated_comment": "Utilize np.vectorize to apply a dictionary lookup function to a numpy array and return the corresponding values.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.42857, "rouge_1_recall_cb": 0.42857, "rouge_1_recall_ce": 0.42857, "rouge_1_precision": 0.5, "rouge_1_precision_cb": 0.5, "rouge_1_precision_ce": 0.5, "rouge_1_f_score": 0.46154, "rouge_1_f_score_cb": 0.46154, "rouge_1_f_score_ce": 0.46154, "rouge_2_recall": 0.2, "rouge_2_recall_cb": 0.2, "rouge_2_recall_ce": 0.2, "rouge_2_precision": 0.23529, "rouge_2_precision_cb": 0.23529, "rouge_2_precision_ce": 0.23529, "rouge_2_f_score": 0.21621, "rouge_2_f_score_cb": 0.21621, "rouge_2_f_score_ce": 0.21621, "rouge_3_recall": 0.05263, "rouge_3_recall_cb": 0.05263, "rouge_3_recall_ce": 0.05263, "rouge_3_precision": 0.0625, "rouge_3_precision_cb": 0.0625, "rouge_3_precision_ce": 0.0625, "rouge_3_f_score": 0.05714, "rouge_3_f_score_cb": 0.05714, "rouge_3_f_score_ce": 0.05714, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.19048, "rouge_l_recall_cb": 0.19048, "rouge_l_recall_ce": 0.19048, "rouge_l_precision": 0.22222, "rouge_l_precision_cb": 0.22222, "rouge_l_precision_ce": 0.22222, "rouge_l_f_score": 0.20513, "rouge_l_f_score_cb": 0.20513, "rouge_l_f_score_ce": 0.20513, "rouge_w_1.2_recall": 0.09468, "rouge_w_1.2_recall_cb": 0.09468, "rouge_w_1.2_recall_ce": 0.09468, "rouge_w_1.2_precision": 0.20308, "rouge_w_1.2_precision_cb": 0.20308, "rouge_w_1.2_precision_ce": 0.20308, "rouge_w_1.2_f_score": 0.12915, "rouge_w_1.2_f_score_cb": 0.12915, "rouge_w_1.2_f_score_ce": 0.12915, "rouge_s*_recall": 0.08571, "rouge_s*_recall_cb": 0.08571, "rouge_s*_recall_ce": 0.08571, "rouge_s*_precision": 0.11765, "rouge_s*_precision_cb": 0.11765, "rouge_s*_precision_ce": 0.11765, "rouge_s*_f_score": 0.09917, "rouge_s*_f_score_cb": 0.09917, "rouge_s*_f_score_ce": 0.09917, "rouge_su*_recall": 0.11304, "rouge_su*_recall_cb": 0.11304, "rouge_su*_recall_ce": 0.11304, "rouge_su*_precision": 0.15294, "rouge_su*_precision_cb": 0.15294, "rouge_su*_precision_ce": 0.15294, "rouge_su*_f_score": 0.13, "rouge_su*_f_score_cb": 0.13, "rouge_su*_f_score_ce": 0.13}}, {"id": 79, "filename": "NumpyEval_79.txt", "dataset_comment": "Perform element-wise string concatenation using the appropriate method in numpy.", "generated_comment": "Perform element-wise string concatenation between two numpy arrays using np.core.defchararray.add.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.63636, "rouge_1_recall_cb": 0.63636, "rouge_1_recall_ce": 0.63636, "rouge_1_precision": 0.5, "rouge_1_precision_cb": 0.5, "rouge_1_precision_ce": 0.5, "rouge_1_f_score": 0.56, "rouge_1_f_score_cb": 0.56, "rouge_1_f_score_ce": 0.56, "rouge_2_recall": 0.4, "rouge_2_recall_cb": 0.4, "rouge_2_recall_ce": 0.4, "rouge_2_precision": 0.30769, "rouge_2_precision_cb": 0.30769, "rouge_2_precision_ce": 0.30769, "rouge_2_f_score": 0.34782, "rouge_2_f_score_cb": 0.34782, "rouge_2_f_score_ce": 0.34782, "rouge_3_recall": 0.33333, "rouge_3_recall_cb": 0.33333, "rouge_3_recall_ce": 0.33333, "rouge_3_precision": 0.25, "rouge_3_precision_cb": 0.25, "rouge_3_precision_ce": 0.25, "rouge_3_f_score": 0.28571, "rouge_3_f_score_cb": 0.28571, "rouge_3_f_score_ce": 0.28571, "rouge_4_recall": 0.25, "rouge_4_recall_cb": 0.25, "rouge_4_recall_ce": 0.25, "rouge_4_precision": 0.18182, "rouge_4_precision_cb": 0.18182, "rouge_4_precision_ce": 0.18182, "rouge_4_f_score": 0.21053, "rouge_4_f_score_cb": 0.21053, "rouge_4_f_score_ce": 0.21053, "rouge_l_recall": 0.54545, "rouge_l_recall_cb": 0.54545, "rouge_l_recall_ce": 0.54545, "rouge_l_precision": 0.42857, "rouge_l_precision_cb": 0.42857, "rouge_l_precision_ce": 0.42857, "rouge_l_f_score": 0.48, "rouge_l_f_score_cb": 0.48, "rouge_l_f_score_ce": 0.48, "rouge_w_1.2_recall": 0.33766, "rouge_w_1.2_recall_cb": 0.33766, "rouge_w_1.2_recall_ce": 0.33766, "rouge_w_1.2_precision": 0.42857, "rouge_w_1.2_precision_cb": 0.42857, "rouge_w_1.2_precision_ce": 0.42857, "rouge_w_1.2_f_score": 0.37772, "rouge_w_1.2_f_score_cb": 0.37772, "rouge_w_1.2_f_score_ce": 0.37772, "rouge_s*_recall": 0.36364, "rouge_s*_recall_cb": 0.36364, "rouge_s*_recall_ce": 0.36364, "rouge_s*_precision": 0.21978, "rouge_s*_precision_cb": 0.21978, "rouge_s*_precision_ce": 0.21978, "rouge_s*_f_score": 0.27397, "rouge_s*_f_score_cb": 0.27397, "rouge_s*_f_score_ce": 0.27397, "rouge_su*_recall": 0.4, "rouge_su*_recall_cb": 0.4, "rouge_su*_recall_ce": 0.4, "rouge_su*_precision": 0.25, "rouge_su*_precision_cb": 0.25, "rouge_su*_precision_ce": 0.25, "rouge_su*_f_score": 0.30769, "rouge_su*_f_score_cb": 0.30769, "rouge_su*_f_score_ce": 0.30769}}, {"id": 80, "filename": "NumpyEval_80.txt", "dataset_comment": "Partition the array into 3 chunks using NumPy.", "generated_comment": "Split the array x into 3 equal-sized subarrays.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.5, "rouge_1_recall_cb": 0.5, "rouge_1_recall_ce": 0.5, "rouge_1_precision": 0.44444, "rouge_1_precision_cb": 0.44444, "rouge_1_precision_ce": 0.44444, "rouge_1_f_score": 0.47059, "rouge_1_f_score_cb": 0.47059, "rouge_1_f_score_ce": 0.47059, "rouge_2_recall": 0.28571, "rouge_2_recall_cb": 0.28571, "rouge_2_recall_ce": 0.28571, "rouge_2_precision": 0.25, "rouge_2_precision_cb": 0.25, "rouge_2_precision_ce": 0.25, "rouge_2_f_score": 0.26666, "rouge_2_f_score_cb": 0.26666, "rouge_2_f_score_ce": 0.26666, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.5, "rouge_l_recall_cb": 0.5, "rouge_l_recall_ce": 0.5, "rouge_l_precision": 0.44444, "rouge_l_precision_cb": 0.44444, "rouge_l_precision_ce": 0.44444, "rouge_l_f_score": 0.47059, "rouge_l_f_score_cb": 0.47059, "rouge_l_f_score_ce": 0.47059, "rouge_w_1.2_recall": 0.32988, "rouge_w_1.2_recall_cb": 0.32988, "rouge_w_1.2_recall_ce": 0.32988, "rouge_w_1.2_precision": 0.44444, "rouge_w_1.2_precision_cb": 0.44444, "rouge_w_1.2_precision_ce": 0.44444, "rouge_w_1.2_f_score": 0.37869, "rouge_w_1.2_f_score_cb": 0.37869, "rouge_w_1.2_f_score_ce": 0.37869, "rouge_s*_recall": 0.21429, "rouge_s*_recall_cb": 0.21429, "rouge_s*_recall_ce": 0.21429, "rouge_s*_precision": 0.16667, "rouge_s*_precision_cb": 0.16667, "rouge_s*_precision_ce": 0.16667, "rouge_s*_f_score": 0.1875, "rouge_s*_f_score_cb": 0.1875, "rouge_s*_f_score_ce": 0.1875, "rouge_su*_recall": 0.28571, "rouge_su*_recall_cb": 0.28571, "rouge_su*_recall_ce": 0.28571, "rouge_su*_precision": 0.22727, "rouge_su*_precision_cb": 0.22727, "rouge_su*_precision_ce": 0.22727, "rouge_su*_f_score": 0.25316, "rouge_su*_f_score_cb": 0.25316, "rouge_su*_f_score_ce": 0.25316}}, {"id": 81, "filename": "NumpyEval_81.txt", "dataset_comment": "Extract a sub-array from a numpy 2D array with a specified size and return it.", "generated_comment": "Crop the input array 'arr' with the specified top, bottom, left, and right indices to extract a subarray.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.375, "rouge_1_recall_cb": 0.375, "rouge_1_recall_ce": 0.375, "rouge_1_precision": 0.33333, "rouge_1_precision_cb": 0.33333, "rouge_1_precision_ce": 0.33333, "rouge_1_f_score": 0.35294, "rouge_1_f_score_cb": 0.35294, "rouge_1_f_score_ce": 0.35294, "rouge_2_recall": 0.06667, "rouge_2_recall_cb": 0.06667, "rouge_2_recall_ce": 0.06667, "rouge_2_precision": 0.05882, "rouge_2_precision_cb": 0.05882, "rouge_2_precision_ce": 0.05882, "rouge_2_f_score": 0.0625, "rouge_2_f_score_cb": 0.0625, "rouge_2_f_score_ce": 0.0625, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.25, "rouge_l_recall_cb": 0.25, "rouge_l_recall_ce": 0.25, "rouge_l_precision": 0.22222, "rouge_l_precision_cb": 0.22222, "rouge_l_precision_ce": 0.22222, "rouge_l_f_score": 0.23529, "rouge_l_f_score_cb": 0.23529, "rouge_l_f_score_ce": 0.23529, "rouge_w_1.2_recall": 0.11397, "rouge_w_1.2_recall_cb": 0.11397, "rouge_w_1.2_recall_ce": 0.11397, "rouge_w_1.2_precision": 0.17638, "rouge_w_1.2_precision_cb": 0.17638, "rouge_w_1.2_precision_ce": 0.17638, "rouge_w_1.2_f_score": 0.13847, "rouge_w_1.2_f_score_cb": 0.13847, "rouge_w_1.2_f_score_ce": 0.13847, "rouge_s*_recall": 0.075, "rouge_s*_recall_cb": 0.075, "rouge_s*_recall_ce": 0.075, "rouge_s*_precision": 0.05882, "rouge_s*_precision_cb": 0.05882, "rouge_s*_precision_ce": 0.05882, "rouge_s*_f_score": 0.06593, "rouge_s*_f_score_cb": 0.06593, "rouge_s*_f_score_ce": 0.06593, "rouge_su*_recall": 0.11111, "rouge_su*_recall_cb": 0.11111, "rouge_su*_recall_ce": 0.11111, "rouge_su*_precision": 0.08824, "rouge_su*_precision_cb": 0.08824, "rouge_su*_precision_ce": 0.08824, "rouge_su*_f_score": 0.09836, "rouge_su*_f_score_cb": 0.09836, "rouge_su*_f_score_ce": 0.09836}}, {"id": 82, "filename": "NumpyEval_82.txt", "dataset_comment": "Append the first element to the end of the array and return the appended array.", "generated_comment": "Add the first element of the input array 'arr' to the end of the array using numpy's append function.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.8, "rouge_1_recall_cb": 0.8, "rouge_1_recall_ce": 0.8, "rouge_1_precision": 0.6, "rouge_1_precision_cb": 0.6, "rouge_1_precision_ce": 0.6, "rouge_1_f_score": 0.68571, "rouge_1_f_score_cb": 0.68571, "rouge_1_f_score_ce": 0.68571, "rouge_2_recall": 0.5, "rouge_2_recall_cb": 0.5, "rouge_2_recall_ce": 0.5, "rouge_2_precision": 0.36842, "rouge_2_precision_cb": 0.36842, "rouge_2_precision_ce": 0.36842, "rouge_2_f_score": 0.42424, "rouge_2_f_score_cb": 0.42424, "rouge_2_f_score_ce": 0.42424, "rouge_3_recall": 0.38462, "rouge_3_recall_cb": 0.38462, "rouge_3_recall_ce": 0.38462, "rouge_3_precision": 0.27778, "rouge_3_precision_cb": 0.27778, "rouge_3_precision_ce": 0.27778, "rouge_3_f_score": 0.32258, "rouge_3_f_score_cb": 0.32258, "rouge_3_f_score_ce": 0.32258, "rouge_4_recall": 0.25, "rouge_4_recall_cb": 0.25, "rouge_4_recall_ce": 0.25, "rouge_4_precision": 0.17647, "rouge_4_precision_cb": 0.17647, "rouge_4_precision_ce": 0.17647, "rouge_4_f_score": 0.2069, "rouge_4_f_score_cb": 0.2069, "rouge_4_f_score_ce": 0.2069, "rouge_l_recall": 0.66667, "rouge_l_recall_cb": 0.66667, "rouge_l_recall_ce": 0.66667, "rouge_l_precision": 0.5, "rouge_l_precision_cb": 0.5, "rouge_l_precision_ce": 0.5, "rouge_l_f_score": 0.57143, "rouge_l_f_score_cb": 0.57143, "rouge_l_f_score_ce": 0.57143, "rouge_w_1.2_recall": 0.36979, "rouge_w_1.2_recall_cb": 0.36979, "rouge_w_1.2_recall_ce": 0.36979, "rouge_w_1.2_precision": 0.47669, "rouge_w_1.2_precision_cb": 0.47669, "rouge_w_1.2_precision_ce": 0.47669, "rouge_w_1.2_f_score": 0.41649, "rouge_w_1.2_f_score_cb": 0.41649, "rouge_w_1.2_f_score_ce": 0.41649, "rouge_s*_recall": 0.57143, "rouge_s*_recall_cb": 0.57143, "rouge_s*_recall_ce": 0.57143, "rouge_s*_precision": 0.31579, "rouge_s*_precision_cb": 0.31579, "rouge_s*_precision_ce": 0.31579, "rouge_s*_f_score": 0.40678, "rouge_s*_f_score_cb": 0.40678, "rouge_s*_f_score_ce": 0.40678, "rouge_su*_recall": 0.59664, "rouge_su*_recall_cb": 0.59664, "rouge_su*_recall_ce": 0.59664, "rouge_su*_precision": 0.33971, "rouge_su*_precision_cb": 0.33971, "rouge_su*_precision_ce": 0.33971, "rouge_su*_f_score": 0.43292, "rouge_su*_f_score_cb": 0.43292, "rouge_su*_f_score_ce": 0.43292}}, {"id": 83, "filename": "NumpyEval_83.txt", "dataset_comment": "Separate the keys and values into two numpy arrays.", "generated_comment": "Create numpy arrays for keys and values from the given dictionary Samples.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.66667, "rouge_1_recall_cb": 0.66667, "rouge_1_recall_ce": 0.66667, "rouge_1_precision": 0.5, "rouge_1_precision_cb": 0.5, "rouge_1_precision_ce": 0.5, "rouge_1_f_score": 0.57143, "rouge_1_f_score_cb": 0.57143, "rouge_1_f_score_ce": 0.57143, "rouge_2_recall": 0.375, "rouge_2_recall_cb": 0.375, "rouge_2_recall_ce": 0.375, "rouge_2_precision": 0.27273, "rouge_2_precision_cb": 0.27273, "rouge_2_precision_ce": 0.27273, "rouge_2_f_score": 0.31579, "rouge_2_f_score_cb": 0.31579, "rouge_2_f_score_ce": 0.31579, "rouge_3_recall": 0.14286, "rouge_3_recall_cb": 0.14286, "rouge_3_recall_ce": 0.14286, "rouge_3_precision": 0.1, "rouge_3_precision_cb": 0.1, "rouge_3_precision_ce": 0.1, "rouge_3_f_score": 0.11765, "rouge_3_f_score_cb": 0.11765, "rouge_3_f_score_ce": 0.11765, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.33333, "rouge_l_recall_cb": 0.33333, "rouge_l_recall_ce": 0.33333, "rouge_l_precision": 0.25, "rouge_l_precision_cb": 0.25, "rouge_l_precision_ce": 0.25, "rouge_l_f_score": 0.28571, "rouge_l_f_score_cb": 0.28571, "rouge_l_f_score_ce": 0.28571, "rouge_w_1.2_recall": 0.2148, "rouge_w_1.2_recall_cb": 0.2148, "rouge_w_1.2_recall_ce": 0.2148, "rouge_w_1.2_precision": 0.25, "rouge_w_1.2_precision_cb": 0.25, "rouge_w_1.2_precision_ce": 0.25, "rouge_w_1.2_f_score": 0.23107, "rouge_w_1.2_f_score_cb": 0.23107, "rouge_w_1.2_f_score_ce": 0.23107, "rouge_s*_recall": 0.11111, "rouge_s*_recall_cb": 0.11111, "rouge_s*_recall_ce": 0.11111, "rouge_s*_precision": 0.06061, "rouge_s*_precision_cb": 0.06061, "rouge_s*_precision_ce": 0.06061, "rouge_s*_f_score": 0.07843, "rouge_s*_f_score_cb": 0.07843, "rouge_s*_f_score_ce": 0.07843, "rouge_su*_recall": 0.20455, "rouge_su*_recall_cb": 0.20455, "rouge_su*_recall_ce": 0.20455, "rouge_su*_precision": 0.11688, "rouge_su*_precision_cb": 0.11688, "rouge_su*_precision_ce": 0.11688, "rouge_su*_f_score": 0.14876, "rouge_su*_f_score_cb": 0.14876, "rouge_su*_f_score_ce": 0.14876}}, {"id": 84, "filename": "NumpyEval_84.txt", "dataset_comment": "Set the super low value named tol to zero in the fastest and easiest way, handling real and imaginary numbers separately.", "generated_comment": "Set real part of complex numbers in 'a' to 0 if the absolute value is less than 'tol'.Set imaginary part of complex numbers in 'a' to 0 if the absolute value is less than 'tol'.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.47619, "rouge_1_recall_cb": 0.47619, "rouge_1_recall_ce": 0.47619, "rouge_1_precision": 0.27778, "rouge_1_precision_cb": 0.27778, "rouge_1_precision_ce": 0.27778, "rouge_1_f_score": 0.35088, "rouge_1_f_score_cb": 0.35088, "rouge_1_f_score_ce": 0.35088, "rouge_2_recall": 0.0, "rouge_2_recall_cb": 0.0, "rouge_2_recall_ce": 0.0, "rouge_2_precision": 0.0, "rouge_2_precision_cb": 0.0, "rouge_2_precision_ce": 0.0, "rouge_2_f_score": 0.0, "rouge_2_f_score_cb": 0.0, "rouge_2_f_score_ce": 0.0, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.28571, "rouge_l_recall_cb": 0.28571, "rouge_l_recall_ce": 0.28571, "rouge_l_precision": 0.16667, "rouge_l_precision_cb": 0.16667, "rouge_l_precision_ce": 0.16667, "rouge_l_f_score": 0.21053, "rouge_l_f_score_cb": 0.21053, "rouge_l_f_score_ce": 0.21053, "rouge_w_1.2_recall": 0.12474, "rouge_w_1.2_recall_cb": 0.12474, "rouge_w_1.2_recall_ce": 0.12474, "rouge_w_1.2_precision": 0.13377, "rouge_w_1.2_precision_cb": 0.13377, "rouge_w_1.2_precision_ce": 0.13377, "rouge_w_1.2_f_score": 0.1291, "rouge_w_1.2_f_score_cb": 0.1291, "rouge_w_1.2_f_score_ce": 0.1291, "rouge_s*_recall": 0.17619, "rouge_s*_recall_cb": 0.17619, "rouge_s*_recall_ce": 0.17619, "rouge_s*_precision": 0.05873, "rouge_s*_precision_cb": 0.05873, "rouge_s*_precision_ce": 0.05873, "rouge_s*_f_score": 0.08809, "rouge_s*_f_score_cb": 0.08809, "rouge_s*_f_score_ce": 0.08809, "rouge_su*_recall": 0.20435, "rouge_su*_recall_cb": 0.20435, "rouge_su*_recall_ce": 0.20435, "rouge_su*_precision": 0.07068, "rouge_su*_precision_cb": 0.07068, "rouge_su*_precision_ce": 0.07068, "rouge_su*_f_score": 0.10503, "rouge_su*_f_score_cb": 0.10503, "rouge_su*_f_score_ce": 0.10503}}, {"id": 85, "filename": "NumpyEval_85.txt", "dataset_comment": "Test if the NumPy array contains only zeros and return the result.", "generated_comment": "Check if the input numpy array contains only zeros by utilizing np.any() function to return True if any element is non-zero, False otherwise.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.66667, "rouge_1_recall_cb": 0.66667, "rouge_1_recall_ce": 0.66667, "rouge_1_precision": 0.32, "rouge_1_precision_cb": 0.32, "rouge_1_precision_ce": 0.32, "rouge_1_f_score": 0.43243, "rouge_1_f_score_cb": 0.43243, "rouge_1_f_score_ce": 0.43243, "rouge_2_recall": 0.45455, "rouge_2_recall_cb": 0.45455, "rouge_2_recall_ce": 0.45455, "rouge_2_precision": 0.20833, "rouge_2_precision_cb": 0.20833, "rouge_2_precision_ce": 0.20833, "rouge_2_f_score": 0.28571, "rouge_2_f_score_cb": 0.28571, "rouge_2_f_score_ce": 0.28571, "rouge_3_recall": 0.3, "rouge_3_recall_cb": 0.3, "rouge_3_recall_ce": 0.3, "rouge_3_precision": 0.13043, "rouge_3_precision_cb": 0.13043, "rouge_3_precision_ce": 0.13043, "rouge_3_f_score": 0.18181, "rouge_3_f_score_cb": 0.18181, "rouge_3_f_score_ce": 0.18181, "rouge_4_recall": 0.22222, "rouge_4_recall_cb": 0.22222, "rouge_4_recall_ce": 0.22222, "rouge_4_precision": 0.09091, "rouge_4_precision_cb": 0.09091, "rouge_4_precision_ce": 0.09091, "rouge_4_f_score": 0.12903, "rouge_4_f_score_cb": 0.12903, "rouge_4_f_score_ce": 0.12903, "rouge_l_recall": 0.66667, "rouge_l_recall_cb": 0.66667, "rouge_l_recall_ce": 0.66667, "rouge_l_precision": 0.32, "rouge_l_precision_cb": 0.32, "rouge_l_precision_ce": 0.32, "rouge_l_f_score": 0.43243, "rouge_l_f_score_cb": 0.43243, "rouge_l_f_score_ce": 0.43243, "rouge_w_1.2_recall": 0.38328, "rouge_w_1.2_recall_cb": 0.38328, "rouge_w_1.2_recall_ce": 0.38328, "rouge_w_1.2_precision": 0.30241, "rouge_w_1.2_precision_cb": 0.30241, "rouge_w_1.2_precision_ce": 0.30241, "rouge_w_1.2_f_score": 0.33808, "rouge_w_1.2_f_score_cb": 0.33808, "rouge_w_1.2_f_score_ce": 0.33808, "rouge_s*_recall": 0.42424, "rouge_s*_recall_cb": 0.42424, "rouge_s*_recall_ce": 0.42424, "rouge_s*_precision": 0.09333, "rouge_s*_precision_cb": 0.09333, "rouge_s*_precision_ce": 0.09333, "rouge_s*_f_score": 0.153, "rouge_s*_f_score_cb": 0.153, "rouge_s*_f_score_ce": 0.153, "rouge_su*_recall": 0.46753, "rouge_su*_recall_cb": 0.46753, "rouge_su*_recall_ce": 0.46753, "rouge_su*_precision": 0.11111, "rouge_su*_precision_cb": 0.11111, "rouge_su*_precision_ce": 0.11111, "rouge_su*_f_score": 0.17955, "rouge_su*_f_score_cb": 0.17955, "rouge_su*_f_score_ce": 0.17955}}, {"id": 86, "filename": "NumpyEval_86.txt", "dataset_comment": "Convert Numpy Vector from (N, 1) dimension to (N,) dimension.", "generated_comment": "Reshape the input array 'x' into a 1-dimensional array of shape (3,) using numpy's reshape function.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.3, "rouge_1_recall_cb": 0.3, "rouge_1_recall_ce": 0.3, "rouge_1_precision": 0.16667, "rouge_1_precision_cb": 0.16667, "rouge_1_precision_ce": 0.16667, "rouge_1_f_score": 0.21429, "rouge_1_f_score_cb": 0.21429, "rouge_1_f_score_ce": 0.21429, "rouge_2_recall": 0.11111, "rouge_2_recall_cb": 0.11111, "rouge_2_recall_ce": 0.11111, "rouge_2_precision": 0.05882, "rouge_2_precision_cb": 0.05882, "rouge_2_precision_ce": 0.05882, "rouge_2_f_score": 0.07692, "rouge_2_f_score_cb": 0.07692, "rouge_2_f_score_ce": 0.07692, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.2, "rouge_l_recall_cb": 0.2, "rouge_l_recall_ce": 0.2, "rouge_l_precision": 0.11111, "rouge_l_precision_cb": 0.11111, "rouge_l_precision_ce": 0.11111, "rouge_l_f_score": 0.14286, "rouge_l_f_score_cb": 0.14286, "rouge_l_f_score_ce": 0.14286, "rouge_w_1.2_recall": 0.12619, "rouge_w_1.2_recall_cb": 0.12619, "rouge_w_1.2_recall_ce": 0.12619, "rouge_w_1.2_precision": 0.11111, "rouge_w_1.2_precision_cb": 0.11111, "rouge_w_1.2_precision_ce": 0.11111, "rouge_w_1.2_f_score": 0.11817, "rouge_w_1.2_f_score_cb": 0.11817, "rouge_w_1.2_f_score_ce": 0.11817, "rouge_s*_recall": 0.02222, "rouge_s*_recall_cb": 0.02222, "rouge_s*_recall_ce": 0.02222, "rouge_s*_precision": 0.00654, "rouge_s*_precision_cb": 0.00654, "rouge_s*_precision_ce": 0.00654, "rouge_s*_f_score": 0.01011, "rouge_s*_f_score_cb": 0.01011, "rouge_s*_f_score_ce": 0.01011, "rouge_su*_recall": 0.07407, "rouge_su*_recall_cb": 0.07407, "rouge_su*_recall_ce": 0.07407, "rouge_su*_precision": 0.02353, "rouge_su*_precision_cb": 0.02353, "rouge_su*_precision_ce": 0.02353, "rouge_su*_f_score": 0.03571, "rouge_su*_f_score_cb": 0.03571, "rouge_su*_f_score_ce": 0.03571}}, {"id": 87, "filename": "NumpyEval_87.txt", "dataset_comment": "Check if all values in the columns of a numpy array/matrix are the same. A column shares a common value if all the values in that column are True. The code checks if all values in the columns are the same using a == a[0,:] with axis=0.", "generated_comment": "Check if all rows in the numpy array 'a' are equal to the first row along axis 0.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.2449, "rouge_1_recall_cb": 0.2449, "rouge_1_recall_ce": 0.2449, "rouge_1_precision": 0.66667, "rouge_1_precision_cb": 0.66667, "rouge_1_precision_ce": 0.66667, "rouge_1_f_score": 0.35821, "rouge_1_f_score_cb": 0.35821, "rouge_1_f_score_ce": 0.35821, "rouge_2_recall": 0.10417, "rouge_2_recall_cb": 0.10417, "rouge_2_recall_ce": 0.10417, "rouge_2_precision": 0.29412, "rouge_2_precision_cb": 0.29412, "rouge_2_precision_ce": 0.29412, "rouge_2_f_score": 0.15385, "rouge_2_f_score_cb": 0.15385, "rouge_2_f_score_ce": 0.15385, "rouge_3_recall": 0.02128, "rouge_3_recall_cb": 0.02128, "rouge_3_recall_ce": 0.02128, "rouge_3_precision": 0.0625, "rouge_3_precision_cb": 0.0625, "rouge_3_precision_ce": 0.0625, "rouge_3_f_score": 0.03175, "rouge_3_f_score_cb": 0.03175, "rouge_3_f_score_ce": 0.03175, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.2449, "rouge_l_recall_cb": 0.2449, "rouge_l_recall_ce": 0.2449, "rouge_l_precision": 0.66667, "rouge_l_precision_cb": 0.66667, "rouge_l_precision_ce": 0.66667, "rouge_l_f_score": 0.35821, "rouge_l_f_score_cb": 0.35821, "rouge_l_f_score_ce": 0.35821, "rouge_w_1.2_recall": 0.08263, "rouge_w_1.2_recall_cb": 0.08263, "rouge_w_1.2_recall_ce": 0.08263, "rouge_w_1.2_precision": 0.48992, "rouge_w_1.2_precision_cb": 0.48992, "rouge_w_1.2_precision_ce": 0.48992, "rouge_w_1.2_f_score": 0.14141, "rouge_w_1.2_f_score_cb": 0.14141, "rouge_w_1.2_f_score_ce": 0.14141, "rouge_s*_recall": 0.05612, "rouge_s*_recall_cb": 0.05612, "rouge_s*_recall_ce": 0.05612, "rouge_s*_precision": 0.43137, "rouge_s*_precision_cb": 0.43137, "rouge_s*_precision_ce": 0.43137, "rouge_s*_f_score": 0.09932, "rouge_s*_f_score_cb": 0.09932, "rouge_s*_f_score_ce": 0.09932, "rouge_su*_recall": 0.06291, "rouge_su*_recall_cb": 0.06291, "rouge_su*_recall_ce": 0.06291, "rouge_su*_precision": 0.45294, "rouge_su*_precision_cb": 0.45294, "rouge_su*_precision_ce": 0.45294, "rouge_su*_f_score": 0.11048, "rouge_su*_f_score_cb": 0.11048, "rouge_su*_f_score_ce": 0.11048}}, {"id": 88, "filename": "NumpyEval_88.txt", "dataset_comment": "Convert NaN values to zero and return the changed array.", "generated_comment": "Replace all NaN values in the input NumPy array with zero.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.5, "rouge_1_recall_cb": 0.5, "rouge_1_recall_ce": 0.5, "rouge_1_precision": 0.45455, "rouge_1_precision_cb": 0.45455, "rouge_1_precision_ce": 0.45455, "rouge_1_f_score": 0.47619, "rouge_1_f_score_cb": 0.47619, "rouge_1_f_score_ce": 0.47619, "rouge_2_recall": 0.11111, "rouge_2_recall_cb": 0.11111, "rouge_2_recall_ce": 0.11111, "rouge_2_precision": 0.1, "rouge_2_precision_cb": 0.1, "rouge_2_precision_ce": 0.1, "rouge_2_f_score": 0.10526, "rouge_2_f_score_cb": 0.10526, "rouge_2_f_score_ce": 0.10526, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.4, "rouge_l_recall_cb": 0.4, "rouge_l_recall_ce": 0.4, "rouge_l_precision": 0.36364, "rouge_l_precision_cb": 0.36364, "rouge_l_precision_ce": 0.36364, "rouge_l_f_score": 0.38095, "rouge_l_f_score_cb": 0.38095, "rouge_l_f_score_ce": 0.38095, "rouge_w_1.2_recall": 0.21265, "rouge_w_1.2_recall_cb": 0.21265, "rouge_w_1.2_recall_ce": 0.21265, "rouge_w_1.2_precision": 0.30639, "rouge_w_1.2_precision_cb": 0.30639, "rouge_w_1.2_precision_ce": 0.30639, "rouge_w_1.2_f_score": 0.25106, "rouge_w_1.2_f_score_cb": 0.25106, "rouge_w_1.2_f_score_ce": 0.25106, "rouge_s*_recall": 0.17778, "rouge_s*_recall_cb": 0.17778, "rouge_s*_recall_ce": 0.17778, "rouge_s*_precision": 0.14545, "rouge_s*_precision_cb": 0.14545, "rouge_s*_precision_ce": 0.14545, "rouge_s*_f_score": 0.16, "rouge_s*_f_score_cb": 0.16, "rouge_s*_f_score_ce": 0.16, "rouge_su*_recall": 0.2037, "rouge_su*_recall_cb": 0.2037, "rouge_su*_recall_ce": 0.2037, "rouge_su*_precision": 0.16923, "rouge_su*_precision_cb": 0.16923, "rouge_su*_precision_ce": 0.16923, "rouge_su*_f_score": 0.18487, "rouge_su*_f_score_cb": 0.18487, "rouge_su*_f_score_ce": 0.18487}}, {"id": 89, "filename": "NumpyEval_89.txt", "dataset_comment": "Find the groups of consecutive elements in a NumPy array and return the number of consecutive elements.  Given a NumPy array, cluster the consecutive elements considering a specified difference limit.  For example, for the array a = [0, 47, 48, 49, 50, 97, 98, 99], the output should be a list of tuples as follows:  [(0), (47, 48, 49, 50), (97, 98, 99)].", "generated_comment": "Find the number of consecutive sequences in the input data array where the difference between consecutive elements is equal to the specified stepsize. Utilize numpy functions to split the array based on the condition of the difference not being equal to the stepsize.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.30645, "rouge_1_recall_cb": 0.30645, "rouge_1_recall_ce": 0.30645, "rouge_1_precision": 0.44186, "rouge_1_precision_cb": 0.44186, "rouge_1_precision_ce": 0.44186, "rouge_1_f_score": 0.3619, "rouge_1_f_score_cb": 0.3619, "rouge_1_f_score_ce": 0.3619, "rouge_2_recall": 0.09836, "rouge_2_recall_cb": 0.09836, "rouge_2_recall_ce": 0.09836, "rouge_2_precision": 0.14286, "rouge_2_precision_cb": 0.14286, "rouge_2_precision_ce": 0.14286, "rouge_2_f_score": 0.11651, "rouge_2_f_score_cb": 0.11651, "rouge_2_f_score_ce": 0.11651, "rouge_3_recall": 0.03333, "rouge_3_recall_cb": 0.03333, "rouge_3_recall_ce": 0.03333, "rouge_3_precision": 0.04878, "rouge_3_precision_cb": 0.04878, "rouge_3_precision_ce": 0.04878, "rouge_3_f_score": 0.0396, "rouge_3_f_score_cb": 0.0396, "rouge_3_f_score_ce": 0.0396, "rouge_4_recall": 0.01695, "rouge_4_recall_cb": 0.01695, "rouge_4_recall_ce": 0.01695, "rouge_4_precision": 0.025, "rouge_4_precision_cb": 0.025, "rouge_4_precision_ce": 0.025, "rouge_4_f_score": 0.0202, "rouge_4_f_score_cb": 0.0202, "rouge_4_f_score_ce": 0.0202, "rouge_l_recall": 0.24194, "rouge_l_recall_cb": 0.24194, "rouge_l_recall_ce": 0.24194, "rouge_l_precision": 0.34884, "rouge_l_precision_cb": 0.34884, "rouge_l_precision_ce": 0.34884, "rouge_l_f_score": 0.28572, "rouge_l_f_score_cb": 0.28572, "rouge_l_f_score_ce": 0.28572, "rouge_w_1.2_recall": 0.07192, "rouge_w_1.2_recall_cb": 0.07192, "rouge_w_1.2_recall_ce": 0.07192, "rouge_w_1.2_precision": 0.23672, "rouge_w_1.2_precision_cb": 0.23672, "rouge_w_1.2_precision_ce": 0.23672, "rouge_w_1.2_f_score": 0.11032, "rouge_w_1.2_f_score_cb": 0.11032, "rouge_w_1.2_f_score_ce": 0.11032, "rouge_s*_recall": 0.09942, "rouge_s*_recall_cb": 0.09942, "rouge_s*_recall_ce": 0.09942, "rouge_s*_precision": 0.20819, "rouge_s*_precision_cb": 0.20819, "rouge_s*_precision_ce": 0.20819, "rouge_s*_f_score": 0.13457, "rouge_s*_f_score_cb": 0.13457, "rouge_s*_f_score_ce": 0.13457, "rouge_su*_recall": 0.10605, "rouge_su*_recall_cb": 0.10605, "rouge_su*_recall_ce": 0.10605, "rouge_su*_precision": 0.21905, "rouge_su*_precision_cb": 0.21905, "rouge_su*_precision_ce": 0.21905, "rouge_su*_f_score": 0.14291, "rouge_su*_f_score_cb": 0.14291, "rouge_su*_f_score_ce": 0.14291}}, {"id": 90, "filename": "NumpyEval_90.txt", "dataset_comment": "Concatenate one NumPy array to another NumPy array.", "generated_comment": "Concatenate two numpy arrays 'arr1' and 'arr2' efficiently using numpy's concatenate function.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.5, "rouge_1_recall_cb": 0.5, "rouge_1_recall_ce": 0.5, "rouge_1_precision": 0.30769, "rouge_1_precision_cb": 0.30769, "rouge_1_precision_ce": 0.30769, "rouge_1_f_score": 0.38095, "rouge_1_f_score_cb": 0.38095, "rouge_1_f_score_ce": 0.38095, "rouge_2_recall": 0.14286, "rouge_2_recall_cb": 0.14286, "rouge_2_recall_ce": 0.14286, "rouge_2_precision": 0.08333, "rouge_2_precision_cb": 0.08333, "rouge_2_precision_ce": 0.08333, "rouge_2_f_score": 0.10526, "rouge_2_f_score_cb": 0.10526, "rouge_2_f_score_ce": 0.10526, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.5, "rouge_l_recall_cb": 0.5, "rouge_l_recall_ce": 0.5, "rouge_l_precision": 0.30769, "rouge_l_precision_cb": 0.30769, "rouge_l_precision_ce": 0.30769, "rouge_l_f_score": 0.38095, "rouge_l_f_score_cb": 0.38095, "rouge_l_f_score_ce": 0.38095, "rouge_w_1.2_recall": 0.27795, "rouge_w_1.2_recall_cb": 0.27795, "rouge_w_1.2_recall_ce": 0.27795, "rouge_w_1.2_precision": 0.25926, "rouge_w_1.2_precision_cb": 0.25926, "rouge_w_1.2_precision_ce": 0.25926, "rouge_w_1.2_f_score": 0.26828, "rouge_w_1.2_f_score_cb": 0.26828, "rouge_w_1.2_f_score_ce": 0.26828, "rouge_s*_recall": 0.21429, "rouge_s*_recall_cb": 0.21429, "rouge_s*_recall_ce": 0.21429, "rouge_s*_precision": 0.07692, "rouge_s*_precision_cb": 0.07692, "rouge_s*_precision_ce": 0.07692, "rouge_s*_f_score": 0.1132, "rouge_s*_f_score_cb": 0.1132, "rouge_s*_f_score_ce": 0.1132, "rouge_su*_recall": 0.28571, "rouge_su*_recall_cb": 0.28571, "rouge_su*_recall_ce": 0.28571, "rouge_su*_precision": 0.11111, "rouge_su*_precision_cb": 0.11111, "rouge_su*_precision_ce": 0.11111, "rouge_su*_f_score": 0.16, "rouge_su*_f_score_cb": 0.16, "rouge_su*_f_score_ce": 0.16}}, {"id": 91, "filename": "NumpyEval_91.txt", "dataset_comment": "Remove columns with index 1 and 3 in NumPy. To delete multiple columns, pass the indices of the columns to be deleted as a list to np.delete.", "generated_comment": "Remove columns at index 1 and 3 from a 2D numpy array efficiently using np.delete().", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.35714, "rouge_1_recall_cb": 0.35714, "rouge_1_recall_ce": 0.35714, "rouge_1_precision": 0.625, "rouge_1_precision_cb": 0.625, "rouge_1_precision_ce": 0.625, "rouge_1_f_score": 0.45454, "rouge_1_f_score_cb": 0.45454, "rouge_1_f_score_ce": 0.45454, "rouge_2_recall": 0.18519, "rouge_2_recall_cb": 0.18519, "rouge_2_recall_ce": 0.18519, "rouge_2_precision": 0.33333, "rouge_2_precision_cb": 0.33333, "rouge_2_precision_ce": 0.33333, "rouge_2_f_score": 0.2381, "rouge_2_f_score_cb": 0.2381, "rouge_2_f_score_ce": 0.2381, "rouge_3_recall": 0.07692, "rouge_3_recall_cb": 0.07692, "rouge_3_recall_ce": 0.07692, "rouge_3_precision": 0.14286, "rouge_3_precision_cb": 0.14286, "rouge_3_precision_ce": 0.14286, "rouge_3_f_score": 0.1, "rouge_3_f_score_cb": 0.1, "rouge_3_f_score_ce": 0.1, "rouge_4_recall": 0.04, "rouge_4_recall_cb": 0.04, "rouge_4_recall_ce": 0.04, "rouge_4_precision": 0.07692, "rouge_4_precision_cb": 0.07692, "rouge_4_precision_ce": 0.07692, "rouge_4_f_score": 0.05263, "rouge_4_f_score_cb": 0.05263, "rouge_4_f_score_ce": 0.05263, "rouge_l_recall": 0.32143, "rouge_l_recall_cb": 0.32143, "rouge_l_recall_ce": 0.32143, "rouge_l_precision": 0.5625, "rouge_l_precision_cb": 0.5625, "rouge_l_precision_ce": 0.5625, "rouge_l_f_score": 0.40909, "rouge_l_f_score_cb": 0.40909, "rouge_l_f_score_ce": 0.40909, "rouge_w_1.2_recall": 0.13398, "rouge_w_1.2_recall_cb": 0.13398, "rouge_w_1.2_recall_ce": 0.13398, "rouge_w_1.2_precision": 0.45656, "rouge_w_1.2_precision_cb": 0.45656, "rouge_w_1.2_precision_ce": 0.45656, "rouge_w_1.2_f_score": 0.20717, "rouge_w_1.2_f_score_cb": 0.20717, "rouge_w_1.2_f_score_ce": 0.20717, "rouge_s*_recall": 0.1164, "rouge_s*_recall_cb": 0.1164, "rouge_s*_recall_ce": 0.1164, "rouge_s*_precision": 0.36667, "rouge_s*_precision_cb": 0.36667, "rouge_s*_precision_ce": 0.36667, "rouge_s*_f_score": 0.1767, "rouge_s*_f_score_cb": 0.1767, "rouge_s*_f_score_ce": 0.1767, "rouge_su*_recall": 0.13086, "rouge_su*_recall_cb": 0.13086, "rouge_su*_recall_ce": 0.13086, "rouge_su*_precision": 0.39259, "rouge_su*_precision_cb": 0.39259, "rouge_su*_precision_ce": 0.39259, "rouge_su*_f_score": 0.19629, "rouge_su*_f_score_cb": 0.19629, "rouge_su*_f_score_ce": 0.19629}}, {"id": 92, "filename": "NumpyEval_92.txt", "dataset_comment": "Convert the matrix to a one-dimensional Python list containing all values of the matrix.", "generated_comment": "Convert the numpy matrix 'a' to a list by reshaping it to a 1D array and then converting it to a list.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.4, "rouge_1_recall_cb": 0.4, "rouge_1_recall_ce": 0.4, "rouge_1_precision": 0.27273, "rouge_1_precision_cb": 0.27273, "rouge_1_precision_ce": 0.27273, "rouge_1_f_score": 0.32433, "rouge_1_f_score_cb": 0.32433, "rouge_1_f_score_ce": 0.32433, "rouge_2_recall": 0.14286, "rouge_2_recall_cb": 0.14286, "rouge_2_recall_ce": 0.14286, "rouge_2_precision": 0.09524, "rouge_2_precision_cb": 0.09524, "rouge_2_precision_ce": 0.09524, "rouge_2_f_score": 0.11429, "rouge_2_f_score_cb": 0.11429, "rouge_2_f_score_ce": 0.11429, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.4, "rouge_l_recall_cb": 0.4, "rouge_l_recall_ce": 0.4, "rouge_l_precision": 0.27273, "rouge_l_precision_cb": 0.27273, "rouge_l_precision_ce": 0.27273, "rouge_l_f_score": 0.32433, "rouge_l_f_score_cb": 0.32433, "rouge_l_f_score_ce": 0.32433, "rouge_w_1.2_recall": 0.2171, "rouge_w_1.2_recall_cb": 0.2171, "rouge_w_1.2_recall_ce": 0.2171, "rouge_w_1.2_precision": 0.25441, "rouge_w_1.2_precision_cb": 0.25441, "rouge_w_1.2_precision_ce": 0.25441, "rouge_w_1.2_f_score": 0.23428, "rouge_w_1.2_f_score_cb": 0.23428, "rouge_w_1.2_f_score_ce": 0.23428, "rouge_s*_recall": 0.14286, "rouge_s*_recall_cb": 0.14286, "rouge_s*_recall_ce": 0.14286, "rouge_s*_precision": 0.06494, "rouge_s*_precision_cb": 0.06494, "rouge_s*_precision_ce": 0.06494, "rouge_s*_f_score": 0.08929, "rouge_s*_f_score_cb": 0.08929, "rouge_s*_f_score_ce": 0.08929, "rouge_su*_recall": 0.17647, "rouge_su*_recall_cb": 0.17647, "rouge_su*_recall_ce": 0.17647, "rouge_su*_precision": 0.08333, "rouge_su*_precision_cb": 0.08333, "rouge_su*_precision_ce": 0.08333, "rouge_su*_f_score": 0.1132, "rouge_su*_f_score_cb": 0.1132, "rouge_su*_f_score_ce": 0.1132}}, {"id": 93, "filename": "NumpyEval_93.txt", "dataset_comment": "Remove specific elements from a NumPy array by utilizing the indices provided (index=[2, 3, 6]).", "generated_comment": "Find the indices [2, 3, 6] in the data array and delete the elements at those indices using numpy's np.delete() function.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.5625, "rouge_1_recall_cb": 0.5625, "rouge_1_recall_ce": 0.5625, "rouge_1_precision": 0.3913, "rouge_1_precision_cb": 0.3913, "rouge_1_precision_ce": 0.3913, "rouge_1_f_score": 0.46154, "rouge_1_f_score_cb": 0.46154, "rouge_1_f_score_ce": 0.46154, "rouge_2_recall": 0.26667, "rouge_2_recall_cb": 0.26667, "rouge_2_recall_ce": 0.26667, "rouge_2_precision": 0.18182, "rouge_2_precision_cb": 0.18182, "rouge_2_precision_ce": 0.18182, "rouge_2_f_score": 0.21622, "rouge_2_f_score_cb": 0.21622, "rouge_2_f_score_ce": 0.21622, "rouge_3_recall": 0.14286, "rouge_3_recall_cb": 0.14286, "rouge_3_recall_ce": 0.14286, "rouge_3_precision": 0.09524, "rouge_3_precision_cb": 0.09524, "rouge_3_precision_ce": 0.09524, "rouge_3_f_score": 0.11429, "rouge_3_f_score_cb": 0.11429, "rouge_3_f_score_ce": 0.11429, "rouge_4_recall": 0.07692, "rouge_4_recall_cb": 0.07692, "rouge_4_recall_ce": 0.07692, "rouge_4_precision": 0.05, "rouge_4_precision_cb": 0.05, "rouge_4_precision_ce": 0.05, "rouge_4_f_score": 0.06061, "rouge_4_f_score_cb": 0.06061, "rouge_4_f_score_ce": 0.06061, "rouge_l_recall": 0.3125, "rouge_l_recall_cb": 0.3125, "rouge_l_recall_ce": 0.3125, "rouge_l_precision": 0.21739, "rouge_l_precision_cb": 0.21739, "rouge_l_precision_ce": 0.21739, "rouge_l_f_score": 0.25641, "rouge_l_f_score_cb": 0.25641, "rouge_l_f_score_ce": 0.25641, "rouge_w_1.2_recall": 0.16592, "rouge_w_1.2_recall_cb": 0.16592, "rouge_w_1.2_recall_ce": 0.16592, "rouge_w_1.2_precision": 0.20097, "rouge_w_1.2_precision_cb": 0.20097, "rouge_w_1.2_precision_ce": 0.20097, "rouge_w_1.2_f_score": 0.18177, "rouge_w_1.2_f_score_cb": 0.18177, "rouge_w_1.2_f_score_ce": 0.18177, "rouge_s*_recall": 0.13333, "rouge_s*_recall_cb": 0.13333, "rouge_s*_recall_ce": 0.13333, "rouge_s*_precision": 0.06324, "rouge_s*_precision_cb": 0.06324, "rouge_s*_precision_ce": 0.06324, "rouge_s*_f_score": 0.08579, "rouge_s*_f_score_cb": 0.08579, "rouge_s*_f_score_ce": 0.08579, "rouge_su*_recall": 0.17778, "rouge_su*_recall_cb": 0.17778, "rouge_su*_recall_ce": 0.17778, "rouge_su*_precision": 0.08727, "rouge_su*_precision_cb": 0.08727, "rouge_su*_precision_ce": 0.08727, "rouge_su*_f_score": 0.11707, "rouge_su*_f_score_cb": 0.11707, "rouge_su*_f_score_ce": 0.11707}}, {"id": 94, "filename": "NumpyEval_94.txt", "dataset_comment": "Remove zero rows from a 2-D numpy array using np.all with an axis argument.", "generated_comment": "Select rows in the numpy array where all elements are not equal to zero.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.3125, "rouge_1_recall_cb": 0.3125, "rouge_1_recall_ce": 0.3125, "rouge_1_precision": 0.35714, "rouge_1_precision_cb": 0.35714, "rouge_1_precision_ce": 0.35714, "rouge_1_f_score": 0.33333, "rouge_1_f_score_cb": 0.33333, "rouge_1_f_score_ce": 0.33333, "rouge_2_recall": 0.06667, "rouge_2_recall_cb": 0.06667, "rouge_2_recall_ce": 0.06667, "rouge_2_precision": 0.07692, "rouge_2_precision_cb": 0.07692, "rouge_2_precision_ce": 0.07692, "rouge_2_f_score": 0.07143, "rouge_2_f_score_cb": 0.07143, "rouge_2_f_score_ce": 0.07143, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.25, "rouge_l_recall_cb": 0.25, "rouge_l_recall_ce": 0.25, "rouge_l_precision": 0.28571, "rouge_l_precision_cb": 0.28571, "rouge_l_precision_ce": 0.28571, "rouge_l_f_score": 0.26666, "rouge_l_f_score_cb": 0.26666, "rouge_l_f_score_ce": 0.26666, "rouge_w_1.2_recall": 0.12098, "rouge_w_1.2_recall_cb": 0.12098, "rouge_w_1.2_recall_ce": 0.12098, "rouge_w_1.2_precision": 0.24074, "rouge_w_1.2_precision_cb": 0.24074, "rouge_w_1.2_precision_ce": 0.24074, "rouge_w_1.2_f_score": 0.16103, "rouge_w_1.2_f_score_cb": 0.16103, "rouge_w_1.2_f_score_ce": 0.16103, "rouge_s*_recall": 0.05, "rouge_s*_recall_cb": 0.05, "rouge_s*_recall_ce": 0.05, "rouge_s*_precision": 0.06593, "rouge_s*_precision_cb": 0.06593, "rouge_s*_precision_ce": 0.06593, "rouge_s*_f_score": 0.05687, "rouge_s*_f_score_cb": 0.05687, "rouge_s*_f_score_ce": 0.05687, "rouge_su*_recall": 0.07407, "rouge_su*_recall_cb": 0.07407, "rouge_su*_recall_ce": 0.07407, "rouge_su*_precision": 0.09615, "rouge_su*_precision_cb": 0.09615, "rouge_su*_precision_ce": 0.09615, "rouge_su*_f_score": 0.08368, "rouge_su*_f_score_cb": 0.08368, "rouge_su*_f_score_ce": 0.08368}}, {"id": 95, "filename": "NumpyEval_95.txt", "dataset_comment": "Compare the elements in array 'a' with those in array 'b' and return an array of booleans, where True indicates that an element in 'a' exists in 'b', and False indicates it does not.", "generated_comment": "Check which elements of array 'a' are also present in array 'b' using numpy function np.in1d().", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.20588, "rouge_1_recall_cb": 0.20588, "rouge_1_recall_ce": 0.20588, "rouge_1_precision": 0.41176, "rouge_1_precision_cb": 0.41176, "rouge_1_precision_ce": 0.41176, "rouge_1_f_score": 0.27451, "rouge_1_f_score_cb": 0.27451, "rouge_1_f_score_ce": 0.27451, "rouge_2_recall": 0.09091, "rouge_2_recall_cb": 0.09091, "rouge_2_recall_ce": 0.09091, "rouge_2_precision": 0.1875, "rouge_2_precision_cb": 0.1875, "rouge_2_precision_ce": 0.1875, "rouge_2_f_score": 0.12245, "rouge_2_f_score_cb": 0.12245, "rouge_2_f_score_ce": 0.12245, "rouge_3_recall": 0.03125, "rouge_3_recall_cb": 0.03125, "rouge_3_recall_ce": 0.03125, "rouge_3_precision": 0.06667, "rouge_3_precision_cb": 0.06667, "rouge_3_precision_ce": 0.06667, "rouge_3_f_score": 0.04255, "rouge_3_f_score_cb": 0.04255, "rouge_3_f_score_ce": 0.04255, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.17647, "rouge_l_recall_cb": 0.17647, "rouge_l_recall_ce": 0.17647, "rouge_l_precision": 0.35294, "rouge_l_precision_cb": 0.35294, "rouge_l_precision_ce": 0.35294, "rouge_l_f_score": 0.23529, "rouge_l_f_score_cb": 0.23529, "rouge_l_f_score_ce": 0.23529, "rouge_w_1.2_recall": 0.07383, "rouge_w_1.2_recall_cb": 0.07383, "rouge_w_1.2_recall_ce": 0.07383, "rouge_w_1.2_precision": 0.29894, "rouge_w_1.2_precision_cb": 0.29894, "rouge_w_1.2_precision_ce": 0.29894, "rouge_w_1.2_f_score": 0.11841, "rouge_w_1.2_f_score_cb": 0.11841, "rouge_w_1.2_f_score_ce": 0.11841, "rouge_s*_recall": 0.03387, "rouge_s*_recall_cb": 0.03387, "rouge_s*_recall_ce": 0.03387, "rouge_s*_precision": 0.13971, "rouge_s*_precision_cb": 0.13971, "rouge_s*_precision_ce": 0.13971, "rouge_s*_f_score": 0.05452, "rouge_s*_f_score_cb": 0.05452, "rouge_s*_f_score_ce": 0.05452, "rouge_su*_recall": 0.04377, "rouge_su*_recall_cb": 0.04377, "rouge_su*_recall_ce": 0.04377, "rouge_su*_precision": 0.17105, "rouge_su*_precision_cb": 0.17105, "rouge_su*_precision_ce": 0.17105, "rouge_su*_f_score": 0.0697, "rouge_su*_f_score_cb": 0.0697, "rouge_su*_f_score_ce": 0.0697}}, {"id": 96, "filename": "NumpyEval_96.txt", "dataset_comment": "Create a NumPy array of arbitrary shape 3x4 filled with all True values.", "generated_comment": "Create a 3x4 numpy array filled with True values.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.69231, "rouge_1_recall_cb": 0.69231, "rouge_1_recall_ce": 0.69231, "rouge_1_precision": 1.0, "rouge_1_precision_cb": 1.0, "rouge_1_precision_ce": 1.0, "rouge_1_f_score": 0.81818, "rouge_1_f_score_cb": 0.81818, "rouge_1_f_score_ce": 0.81818, "rouge_2_recall": 0.33333, "rouge_2_recall_cb": 0.33333, "rouge_2_recall_ce": 0.33333, "rouge_2_precision": 0.5, "rouge_2_precision_cb": 0.5, "rouge_2_precision_ce": 0.5, "rouge_2_f_score": 0.4, "rouge_2_f_score_cb": 0.4, "rouge_2_f_score_ce": 0.4, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.61538, "rouge_l_recall_cb": 0.61538, "rouge_l_recall_ce": 0.61538, "rouge_l_precision": 0.88889, "rouge_l_precision_cb": 0.88889, "rouge_l_precision_ce": 0.88889, "rouge_l_f_score": 0.72727, "rouge_l_f_score_cb": 0.72727, "rouge_l_f_score_ce": 0.72727, "rouge_w_1.2_recall": 0.31043, "rouge_w_1.2_recall_cb": 0.31043, "rouge_w_1.2_recall_ce": 0.31043, "rouge_w_1.2_precision": 0.74896, "rouge_w_1.2_precision_cb": 0.74896, "rouge_w_1.2_precision_ce": 0.74896, "rouge_w_1.2_f_score": 0.43893, "rouge_w_1.2_f_score_cb": 0.43893, "rouge_w_1.2_f_score_ce": 0.43893, "rouge_s*_recall": 0.4359, "rouge_s*_recall_cb": 0.4359, "rouge_s*_recall_ce": 0.4359, "rouge_s*_precision": 0.94444, "rouge_s*_precision_cb": 0.94444, "rouge_s*_precision_ce": 0.94444, "rouge_s*_f_score": 0.59649, "rouge_s*_f_score_cb": 0.59649, "rouge_s*_f_score_ce": 0.59649, "rouge_su*_recall": 0.46667, "rouge_su*_recall_cb": 0.46667, "rouge_su*_recall_ce": 0.46667, "rouge_su*_precision": 0.95455, "rouge_su*_precision_cb": 0.95455, "rouge_su*_precision_ce": 0.95455, "rouge_su*_f_score": 0.62687, "rouge_su*_f_score_cb": 0.62687, "rouge_su*_f_score_ce": 0.62687}}, {"id": 97, "filename": "NumpyEval_97.txt", "dataset_comment": "Multiply arrays row-wise, such that out[i] = a[i] * b[i], where a[i].shape is (2,) and b[i] is a scalar.", "generated_comment": "Perform element-wise multiplication between array 'a' and array 'b' with broadcasting to match their shapes.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.25, "rouge_1_recall_cb": 0.25, "rouge_1_recall_ce": 0.25, "rouge_1_precision": 0.375, "rouge_1_precision_cb": 0.375, "rouge_1_precision_ce": 0.375, "rouge_1_f_score": 0.3, "rouge_1_f_score_cb": 0.3, "rouge_1_f_score_ce": 0.3, "rouge_2_recall": 0.0, "rouge_2_recall_cb": 0.0, "rouge_2_recall_ce": 0.0, "rouge_2_precision": 0.0, "rouge_2_precision_cb": 0.0, "rouge_2_precision_ce": 0.0, "rouge_2_f_score": 0.0, "rouge_2_f_score_cb": 0.0, "rouge_2_f_score_ce": 0.0, "rouge_3_recall": 0.0, "rouge_3_recall_cb": 0.0, "rouge_3_recall_ce": 0.0, "rouge_3_precision": 0.0, "rouge_3_precision_cb": 0.0, "rouge_3_precision_ce": 0.0, "rouge_3_f_score": 0.0, "rouge_3_f_score_cb": 0.0, "rouge_3_f_score_ce": 0.0, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.16667, "rouge_l_recall_cb": 0.16667, "rouge_l_recall_ce": 0.16667, "rouge_l_precision": 0.25, "rouge_l_precision_cb": 0.25, "rouge_l_precision_ce": 0.25, "rouge_l_f_score": 0.2, "rouge_l_f_score_cb": 0.2, "rouge_l_f_score_ce": 0.2, "rouge_w_1.2_recall": 0.07006, "rouge_w_1.2_recall_cb": 0.07006, "rouge_w_1.2_recall_ce": 0.07006, "rouge_w_1.2_precision": 0.19843, "rouge_w_1.2_precision_cb": 0.19843, "rouge_w_1.2_precision_ce": 0.19843, "rouge_w_1.2_f_score": 0.10356, "rouge_w_1.2_f_score_cb": 0.10356, "rouge_w_1.2_f_score_ce": 0.10356, "rouge_s*_recall": 0.05072, "rouge_s*_recall_cb": 0.05072, "rouge_s*_recall_ce": 0.05072, "rouge_s*_precision": 0.11667, "rouge_s*_precision_cb": 0.11667, "rouge_s*_precision_ce": 0.11667, "rouge_s*_f_score": 0.0707, "rouge_s*_f_score_cb": 0.0707, "rouge_s*_f_score_ce": 0.0707, "rouge_su*_recall": 0.06355, "rouge_su*_recall_cb": 0.06355, "rouge_su*_recall_ce": 0.06355, "rouge_su*_precision": 0.14074, "rouge_su*_precision_cb": 0.14074, "rouge_su*_precision_ce": 0.14074, "rouge_su*_f_score": 0.08756, "rouge_su*_f_score_cb": 0.08756, "rouge_su*_f_score_ce": 0.08756}}, {"id": 98, "filename": "NumpyEval_98.txt", "dataset_comment": "Calculate the Euclidean distance using NumPy.", "generated_comment": "Calculate the Euclidean distance between two arrays 'a' and 'b' using numpy's linalg.norm function.", "indicator_name": "rouge", "score": {"rouge_1_recall": 1.0, "rouge_1_recall_cb": 1.0, "rouge_1_recall_ce": 1.0, "rouge_1_precision": 0.375, "rouge_1_precision_cb": 0.375, "rouge_1_precision_ce": 0.375, "rouge_1_f_score": 0.54545, "rouge_1_f_score_cb": 0.54545, "rouge_1_f_score_ce": 0.54545, "rouge_2_recall": 0.8, "rouge_2_recall_cb": 0.8, "rouge_2_recall_ce": 0.8, "rouge_2_precision": 0.26667, "rouge_2_precision_cb": 0.26667, "rouge_2_precision_ce": 0.26667, "rouge_2_f_score": 0.4, "rouge_2_f_score_cb": 0.4, "rouge_2_f_score_ce": 0.4, "rouge_3_recall": 0.5, "rouge_3_recall_cb": 0.5, "rouge_3_recall_ce": 0.5, "rouge_3_precision": 0.14286, "rouge_3_precision_cb": 0.14286, "rouge_3_precision_ce": 0.14286, "rouge_3_f_score": 0.22223, "rouge_3_f_score_cb": 0.22223, "rouge_3_f_score_ce": 0.22223, "rouge_4_recall": 0.33333, "rouge_4_recall_cb": 0.33333, "rouge_4_recall_ce": 0.33333, "rouge_4_precision": 0.07692, "rouge_4_precision_cb": 0.07692, "rouge_4_precision_ce": 0.07692, "rouge_4_f_score": 0.125, "rouge_4_f_score_cb": 0.125, "rouge_4_f_score_ce": 0.125, "rouge_l_recall": 1.0, "rouge_l_recall_cb": 1.0, "rouge_l_recall_ce": 1.0, "rouge_l_precision": 0.375, "rouge_l_precision_cb": 0.375, "rouge_l_precision_ce": 0.375, "rouge_l_f_score": 0.54545, "rouge_l_f_score_cb": 0.54545, "rouge_l_f_score_ce": 0.54545, "rouge_w_1.2_recall": 0.69883, "rouge_w_1.2_recall_cb": 0.69883, "rouge_w_1.2_recall_ce": 0.69883, "rouge_w_1.2_precision": 0.375, "rouge_w_1.2_precision_cb": 0.375, "rouge_w_1.2_precision_ce": 0.375, "rouge_w_1.2_f_score": 0.48809, "rouge_w_1.2_f_score_cb": 0.48809, "rouge_w_1.2_f_score_ce": 0.48809, "rouge_s*_recall": 1.0, "rouge_s*_recall_cb": 1.0, "rouge_s*_recall_ce": 1.0, "rouge_s*_precision": 0.125, "rouge_s*_precision_cb": 0.125, "rouge_s*_precision_ce": 0.125, "rouge_s*_f_score": 0.22222, "rouge_s*_f_score_cb": 0.22222, "rouge_s*_f_score_ce": 0.22222, "rouge_su*_recall": 1.0, "rouge_su*_recall_cb": 1.0, "rouge_su*_recall_ce": 1.0, "rouge_su*_precision": 0.14815, "rouge_su*_precision_cb": 0.14815, "rouge_su*_precision_ce": 0.14815, "rouge_su*_f_score": 0.25807, "rouge_su*_f_score_cb": 0.25807, "rouge_su*_f_score_ce": 0.25807}}, {"id": 99, "filename": "NumpyEval_99.txt", "dataset_comment": "Sum all values in a Pandas DataFrame and return the result as a numeric value.", "generated_comment": "Calculate the sum of all elements in the DataFrame by converting it to a numpy array and then summing all values.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.53333, "rouge_1_recall_cb": 0.53333, "rouge_1_recall_ce": 0.53333, "rouge_1_precision": 0.38095, "rouge_1_precision_cb": 0.38095, "rouge_1_precision_ce": 0.38095, "rouge_1_f_score": 0.44444, "rouge_1_f_score_cb": 0.44444, "rouge_1_f_score_ce": 0.44444, "rouge_2_recall": 0.14286, "rouge_2_recall_cb": 0.14286, "rouge_2_recall_ce": 0.14286, "rouge_2_precision": 0.1, "rouge_2_precision_cb": 0.1, "rouge_2_precision_ce": 0.1, "rouge_2_f_score": 0.11765, "rouge_2_f_score_cb": 0.11765, "rouge_2_f_score_ce": 0.11765, "rouge_3_recall": 0.07692, "rouge_3_recall_cb": 0.07692, "rouge_3_recall_ce": 0.07692, "rouge_3_precision": 0.05263, "rouge_3_precision_cb": 0.05263, "rouge_3_precision_ce": 0.05263, "rouge_3_f_score": 0.0625, "rouge_3_f_score_cb": 0.0625, "rouge_3_f_score_ce": 0.0625, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.4, "rouge_l_recall_cb": 0.4, "rouge_l_recall_ce": 0.4, "rouge_l_precision": 0.28571, "rouge_l_precision_cb": 0.28571, "rouge_l_precision_ce": 0.28571, "rouge_l_f_score": 0.33333, "rouge_l_f_score_cb": 0.33333, "rouge_l_f_score_ce": 0.33333, "rouge_w_1.2_recall": 0.18679, "rouge_w_1.2_recall_cb": 0.18679, "rouge_w_1.2_recall_ce": 0.18679, "rouge_w_1.2_precision": 0.22932, "rouge_w_1.2_precision_cb": 0.22932, "rouge_w_1.2_precision_ce": 0.22932, "rouge_w_1.2_f_score": 0.20588, "rouge_w_1.2_f_score_cb": 0.20588, "rouge_w_1.2_f_score_ce": 0.20588, "rouge_s*_recall": 0.26667, "rouge_s*_recall_cb": 0.26667, "rouge_s*_recall_ce": 0.26667, "rouge_s*_precision": 0.13333, "rouge_s*_precision_cb": 0.13333, "rouge_s*_precision_ce": 0.13333, "rouge_s*_f_score": 0.17778, "rouge_s*_f_score_cb": 0.17778, "rouge_s*_f_score_ce": 0.17778, "rouge_su*_recall": 0.29412, "rouge_su*_recall_cb": 0.29412, "rouge_su*_recall_ce": 0.29412, "rouge_su*_precision": 0.15217, "rouge_su*_precision_cb": 0.15217, "rouge_su*_precision_ce": 0.15217, "rouge_su*_f_score": 0.20057, "rouge_su*_f_score_cb": 0.20057, "rouge_su*_f_score_ce": 0.20057}}, {"id": 100, "filename": "NumpyEval_100.txt", "dataset_comment": "Prepend an element to a numpy array and return the array.", "generated_comment": "Insert a new element at the beginning of the input array 'arr' using numpy and return the modified array.", "indicator_name": "rouge", "score": {"rouge_1_recall": 0.72727, "rouge_1_recall_cb": 0.72727, "rouge_1_recall_ce": 0.72727, "rouge_1_precision": 0.42105, "rouge_1_precision_cb": 0.42105, "rouge_1_precision_ce": 0.42105, "rouge_1_f_score": 0.53333, "rouge_1_f_score_cb": 0.53333, "rouge_1_f_score_ce": 0.53333, "rouge_2_recall": 0.2, "rouge_2_recall_cb": 0.2, "rouge_2_recall_ce": 0.2, "rouge_2_precision": 0.11111, "rouge_2_precision_cb": 0.11111, "rouge_2_precision_ce": 0.11111, "rouge_2_f_score": 0.14286, "rouge_2_f_score_cb": 0.14286, "rouge_2_f_score_ce": 0.14286, "rouge_3_recall": 0.11111, "rouge_3_recall_cb": 0.11111, "rouge_3_recall_ce": 0.11111, "rouge_3_precision": 0.05882, "rouge_3_precision_cb": 0.05882, "rouge_3_precision_ce": 0.05882, "rouge_3_f_score": 0.07692, "rouge_3_f_score_cb": 0.07692, "rouge_3_f_score_ce": 0.07692, "rouge_4_recall": 0.0, "rouge_4_recall_cb": 0.0, "rouge_4_recall_ce": 0.0, "rouge_4_precision": 0.0, "rouge_4_precision_cb": 0.0, "rouge_4_precision_ce": 0.0, "rouge_4_f_score": 0.0, "rouge_4_f_score_cb": 0.0, "rouge_4_f_score_ce": 0.0, "rouge_l_recall": 0.54545, "rouge_l_recall_cb": 0.54545, "rouge_l_recall_ce": 0.54545, "rouge_l_precision": 0.31579, "rouge_l_precision_cb": 0.31579, "rouge_l_precision_ce": 0.31579, "rouge_l_f_score": 0.4, "rouge_l_f_score_cb": 0.4, "rouge_l_f_score_ce": 0.4, "rouge_w_1.2_recall": 0.29422, "rouge_w_1.2_recall_cb": 0.29422, "rouge_w_1.2_recall_ce": 0.29422, "rouge_w_1.2_precision": 0.27516, "rouge_w_1.2_precision_cb": 0.27516, "rouge_w_1.2_precision_ce": 0.27516, "rouge_w_1.2_f_score": 0.28437, "rouge_w_1.2_f_score_cb": 0.28437, "rouge_w_1.2_f_score_ce": 0.28437, "rouge_s*_recall": 0.47273, "rouge_s*_recall_cb": 0.47273, "rouge_s*_recall_ce": 0.47273, "rouge_s*_precision": 0.15205, "rouge_s*_precision_cb": 0.15205, "rouge_s*_precision_ce": 0.15205, "rouge_s*_f_score": 0.23009, "rouge_s*_f_score_cb": 0.23009, "rouge_s*_f_score_ce": 0.23009, "rouge_su*_recall": 0.50769, "rouge_su*_recall_cb": 0.50769, "rouge_su*_recall_ce": 0.50769, "rouge_su*_precision": 0.1746, "rouge_su*_precision_cb": 0.1746, "rouge_su*_precision_ce": 0.1746, "rouge_su*_f_score": 0.25984, "rouge_su*_f_score_cb": 0.25984, "rouge_su*_f_score_ce": 0.25984}}]