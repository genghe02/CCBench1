[
  {
    "id": 0,
    "filename": "PandasEval_0.txt",
    "dataset_comment": "Drop rows of Pandas DataFrame where the value in a specified column is NaN",
    "generated_comment": "Remove rows from a DataFrame where the specified column contains NaN values using pandas dropna() method.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.71429,
      "rouge_1_recall_cb": 0.71429,
      "rouge_1_recall_ce": 0.71429,
      "rouge_1_precision": 0.625,
      "rouge_1_precision_cb": 0.625,
      "rouge_1_precision_ce": 0.625,
      "rouge_1_f_score": 0.66667,
      "rouge_1_f_score_cb": 0.66667,
      "rouge_1_f_score_ce": 0.66667,
      "rouge_2_recall": 0.23077,
      "rouge_2_recall_cb": 0.23077,
      "rouge_2_recall_ce": 0.23077,
      "rouge_2_precision": 0.2,
      "rouge_2_precision_cb": 0.2,
      "rouge_2_precision_ce": 0.2,
      "rouge_2_f_score": 0.21429,
      "rouge_2_f_score_cb": 0.21429,
      "rouge_2_f_score_ce": 0.21429,
      "rouge_3_recall": 0.08333,
      "rouge_3_recall_cb": 0.08333,
      "rouge_3_recall_ce": 0.08333,
      "rouge_3_precision": 0.07143,
      "rouge_3_precision_cb": 0.07143,
      "rouge_3_precision_ce": 0.07143,
      "rouge_3_f_score": 0.07692,
      "rouge_3_f_score_cb": 0.07692,
      "rouge_3_f_score_ce": 0.07692,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.4375,
      "rouge_l_precision_cb": 0.4375,
      "rouge_l_precision_ce": 0.4375,
      "rouge_l_f_score": 0.46667,
      "rouge_l_f_score_cb": 0.46667,
      "rouge_l_f_score_ce": 0.46667,
      "rouge_w_1.2_recall": 0.23921,
      "rouge_w_1.2_recall_cb": 0.23921,
      "rouge_w_1.2_recall_ce": 0.23921,
      "rouge_w_1.2_precision": 0.35483,
      "rouge_w_1.2_precision_cb": 0.35483,
      "rouge_w_1.2_precision_ce": 0.35483,
      "rouge_w_1.2_f_score": 0.28577,
      "rouge_w_1.2_f_score_cb": 0.28577,
      "rouge_w_1.2_f_score_ce": 0.28577,
      "rouge_s*_recall": 0.32967,
      "rouge_s*_recall_cb": 0.32967,
      "rouge_s*_recall_ce": 0.32967,
      "rouge_s*_precision": 0.25,
      "rouge_s*_precision_cb": 0.25,
      "rouge_s*_precision_ce": 0.25,
      "rouge_s*_f_score": 0.28436,
      "rouge_s*_f_score_cb": 0.28436,
      "rouge_s*_f_score_ce": 0.28436,
      "rouge_su*_recall": 0.375,
      "rouge_su*_recall_cb": 0.375,
      "rouge_su*_recall_ce": 0.375,
      "rouge_su*_precision": 0.28889,
      "rouge_su*_precision_cb": 0.28889,
      "rouge_su*_precision_ce": 0.28889,
      "rouge_su*_f_score": 0.32636,
      "rouge_su*_f_score_cb": 0.32636,
      "rouge_su*_f_score_ce": 0.32636
    }
  },
  {
    "id": 1,
    "filename": "PandasEval_1.txt",
    "dataset_comment": "Replace fields that are entirely space or empty with NaN using regex and return the result.",
    "generated_comment": "Replace all blank values in a DataFrame with NaN using pandas and numpy.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.3125,
      "rouge_1_recall_cb": 0.3125,
      "rouge_1_recall_ce": 0.3125,
      "rouge_1_precision": 0.38462,
      "rouge_1_precision_cb": 0.38462,
      "rouge_1_precision_ce": 0.38462,
      "rouge_1_f_score": 0.34483,
      "rouge_1_f_score_cb": 0.34483,
      "rouge_1_f_score_ce": 0.34483,
      "rouge_2_recall": 0.13333,
      "rouge_2_recall_cb": 0.13333,
      "rouge_2_recall_ce": 0.13333,
      "rouge_2_precision": 0.16667,
      "rouge_2_precision_cb": 0.16667,
      "rouge_2_precision_ce": 0.16667,
      "rouge_2_f_score": 0.14815,
      "rouge_2_f_score_cb": 0.14815,
      "rouge_2_f_score_ce": 0.14815,
      "rouge_3_recall": 0.07143,
      "rouge_3_recall_cb": 0.07143,
      "rouge_3_recall_ce": 0.07143,
      "rouge_3_precision": 0.09091,
      "rouge_3_precision_cb": 0.09091,
      "rouge_3_precision_ce": 0.09091,
      "rouge_3_f_score": 0.08,
      "rouge_3_f_score_cb": 0.08,
      "rouge_3_f_score_ce": 0.08,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.3125,
      "rouge_l_recall_cb": 0.3125,
      "rouge_l_recall_ce": 0.3125,
      "rouge_l_precision": 0.38462,
      "rouge_l_precision_cb": 0.38462,
      "rouge_l_precision_ce": 0.38462,
      "rouge_l_f_score": 0.34483,
      "rouge_l_f_score_cb": 0.34483,
      "rouge_l_f_score_ce": 0.34483,
      "rouge_w_1.2_recall": 0.15392,
      "rouge_w_1.2_recall_cb": 0.15392,
      "rouge_w_1.2_recall_ce": 0.15392,
      "rouge_w_1.2_precision": 0.32984,
      "rouge_w_1.2_precision_cb": 0.32984,
      "rouge_w_1.2_precision_ce": 0.32984,
      "rouge_w_1.2_f_score": 0.20989,
      "rouge_w_1.2_f_score_cb": 0.20989,
      "rouge_w_1.2_f_score_ce": 0.20989,
      "rouge_s*_recall": 0.08333,
      "rouge_s*_recall_cb": 0.08333,
      "rouge_s*_recall_ce": 0.08333,
      "rouge_s*_precision": 0.12821,
      "rouge_s*_precision_cb": 0.12821,
      "rouge_s*_precision_ce": 0.12821,
      "rouge_s*_f_score": 0.10101,
      "rouge_s*_f_score_cb": 0.10101,
      "rouge_s*_f_score_ce": 0.10101,
      "rouge_su*_recall": 0.11111,
      "rouge_su*_recall_cb": 0.11111,
      "rouge_su*_recall_ce": 0.11111,
      "rouge_su*_precision": 0.16667,
      "rouge_su*_precision_cb": 0.16667,
      "rouge_su*_precision_ce": 0.16667,
      "rouge_su*_f_score": 0.13333,
      "rouge_su*_f_score_cb": 0.13333,
      "rouge_su*_f_score_ce": 0.13333
    }
  },
  {
    "id": 2,
    "filename": "PandasEval_2.txt",
    "dataset_comment": "Change the column labels of a pandas DataFrame from ['A', 'B', 'C'] to ['a', 'b', 'c'].",
    "generated_comment": "Change the column names of a pandas DataFrame to ['a', 'b', 'c'].",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.6875,
      "rouge_1_recall_cb": 0.6875,
      "rouge_1_recall_ce": 0.6875,
      "rouge_1_precision": 0.91667,
      "rouge_1_precision_cb": 0.91667,
      "rouge_1_precision_ce": 0.91667,
      "rouge_1_f_score": 0.78572,
      "rouge_1_f_score_cb": 0.78572,
      "rouge_1_f_score_ce": 0.78572,
      "rouge_2_recall": 0.53333,
      "rouge_2_recall_cb": 0.53333,
      "rouge_2_recall_ce": 0.53333,
      "rouge_2_precision": 0.72727,
      "rouge_2_precision_cb": 0.72727,
      "rouge_2_precision_ce": 0.72727,
      "rouge_2_f_score": 0.61538,
      "rouge_2_f_score_cb": 0.61538,
      "rouge_2_f_score_ce": 0.61538,
      "rouge_3_recall": 0.35714,
      "rouge_3_recall_cb": 0.35714,
      "rouge_3_recall_ce": 0.35714,
      "rouge_3_precision": 0.5,
      "rouge_3_precision_cb": 0.5,
      "rouge_3_precision_ce": 0.5,
      "rouge_3_f_score": 0.41666,
      "rouge_3_f_score_cb": 0.41666,
      "rouge_3_f_score_ce": 0.41666,
      "rouge_4_recall": 0.15385,
      "rouge_4_recall_cb": 0.15385,
      "rouge_4_recall_ce": 0.15385,
      "rouge_4_precision": 0.22222,
      "rouge_4_precision_cb": 0.22222,
      "rouge_4_precision_ce": 0.22222,
      "rouge_4_f_score": 0.18182,
      "rouge_4_f_score_cb": 0.18182,
      "rouge_4_f_score_ce": 0.18182,
      "rouge_l_recall": 0.6875,
      "rouge_l_recall_cb": 0.6875,
      "rouge_l_recall_ce": 0.6875,
      "rouge_l_precision": 0.91667,
      "rouge_l_precision_cb": 0.91667,
      "rouge_l_precision_ce": 0.91667,
      "rouge_l_f_score": 0.78572,
      "rouge_l_f_score_cb": 0.78572,
      "rouge_l_f_score_ce": 0.78572,
      "rouge_w_1.2_recall": 0.32936,
      "rouge_w_1.2_recall_cb": 0.32936,
      "rouge_w_1.2_recall_ce": 0.32936,
      "rouge_w_1.2_precision": 0.76459,
      "rouge_w_1.2_precision_cb": 0.76459,
      "rouge_w_1.2_precision_ce": 0.76459,
      "rouge_w_1.2_f_score": 0.4604,
      "rouge_w_1.2_f_score_cb": 0.4604,
      "rouge_w_1.2_f_score_ce": 0.4604,
      "rouge_s*_recall": 0.45833,
      "rouge_s*_recall_cb": 0.45833,
      "rouge_s*_recall_ce": 0.45833,
      "rouge_s*_precision": 0.83333,
      "rouge_s*_precision_cb": 0.83333,
      "rouge_s*_precision_ce": 0.83333,
      "rouge_s*_f_score": 0.59139,
      "rouge_s*_f_score_cb": 0.59139,
      "rouge_s*_f_score_ce": 0.59139,
      "rouge_su*_recall": 0.48148,
      "rouge_su*_recall_cb": 0.48148,
      "rouge_su*_recall_ce": 0.48148,
      "rouge_su*_precision": 0.84416,
      "rouge_su*_precision_cb": 0.84416,
      "rouge_su*_precision_ce": 0.84416,
      "rouge_su*_f_score": 0.61321,
      "rouge_su*_f_score_cb": 0.61321,
      "rouge_su*_f_score_ce": 0.61321
    }
  },
  {
    "id": 3,
    "filename": "PandasEval_3.txt",
    "dataset_comment": "Add leading zeros to strings in the col_name column of a Pandas DataFrame, ensuring a maximum string length of 15 characters, and return the DataFrame.",
    "generated_comment": "Add zeros to the beginning of each string in the specified column of the DataFrame to make the total length of each string 15 characters using pandas apply function.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.61538,
      "rouge_1_recall_cb": 0.61538,
      "rouge_1_recall_ce": 0.61538,
      "rouge_1_precision": 0.55172,
      "rouge_1_precision_cb": 0.55172,
      "rouge_1_precision_ce": 0.55172,
      "rouge_1_f_score": 0.58181,
      "rouge_1_f_score_cb": 0.58181,
      "rouge_1_f_score_ce": 0.58181,
      "rouge_2_recall": 0.28,
      "rouge_2_recall_cb": 0.28,
      "rouge_2_recall_ce": 0.28,
      "rouge_2_precision": 0.25,
      "rouge_2_precision_cb": 0.25,
      "rouge_2_precision_ce": 0.25,
      "rouge_2_f_score": 0.26415,
      "rouge_2_f_score_cb": 0.26415,
      "rouge_2_f_score_ce": 0.26415,
      "rouge_3_recall": 0.04167,
      "rouge_3_recall_cb": 0.04167,
      "rouge_3_recall_ce": 0.04167,
      "rouge_3_precision": 0.03704,
      "rouge_3_precision_cb": 0.03704,
      "rouge_3_precision_ce": 0.03704,
      "rouge_3_f_score": 0.03922,
      "rouge_3_f_score_cb": 0.03922,
      "rouge_3_f_score_ce": 0.03922,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.44828,
      "rouge_l_precision_cb": 0.44828,
      "rouge_l_precision_ce": 0.44828,
      "rouge_l_f_score": 0.47273,
      "rouge_l_f_score_cb": 0.47273,
      "rouge_l_f_score_ce": 0.47273,
      "rouge_w_1.2_recall": 0.20703,
      "rouge_w_1.2_recall_cb": 0.20703,
      "rouge_w_1.2_recall_ce": 0.20703,
      "rouge_w_1.2_precision": 0.35613,
      "rouge_w_1.2_precision_cb": 0.35613,
      "rouge_w_1.2_precision_ce": 0.35613,
      "rouge_w_1.2_f_score": 0.26184,
      "rouge_w_1.2_f_score_cb": 0.26184,
      "rouge_w_1.2_f_score_ce": 0.26184,
      "rouge_s*_recall": 0.34154,
      "rouge_s*_recall_cb": 0.34154,
      "rouge_s*_recall_ce": 0.34154,
      "rouge_s*_precision": 0.2734,
      "rouge_s*_precision_cb": 0.2734,
      "rouge_s*_precision_ce": 0.2734,
      "rouge_s*_f_score": 0.30369,
      "rouge_s*_f_score_cb": 0.30369,
      "rouge_s*_f_score_ce": 0.30369,
      "rouge_su*_recall": 0.36286,
      "rouge_su*_recall_cb": 0.36286,
      "rouge_su*_recall_ce": 0.36286,
      "rouge_su*_precision": 0.29263,
      "rouge_su*_precision_cb": 0.29263,
      "rouge_su*_precision_ce": 0.29263,
      "rouge_su*_f_score": 0.32398,
      "rouge_su*_f_score_cb": 0.32398,
      "rouge_su*_f_score_ce": 0.32398
    }
  },
  {
    "id": 4,
    "filename": "PandasEval_4.txt",
    "dataset_comment": "Convert a list_of_lists, with the format [header, [row1], [row2], ...], to a DataFrame. The header should be in the format [column1, column2, ...], and each row in the format [value1, value2, ...]. Return the resulting DataFrame.",
    "generated_comment": "Create a pandas DataFrame from a list of lists where the first list contains column names and the rest of the lists contain data entries.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.28571,
      "rouge_1_recall_cb": 0.28571,
      "rouge_1_recall_ce": 0.28571,
      "rouge_1_precision": 0.4,
      "rouge_1_precision_cb": 0.4,
      "rouge_1_precision_ce": 0.4,
      "rouge_1_f_score": 0.33333,
      "rouge_1_f_score_cb": 0.33333,
      "rouge_1_f_score_ce": 0.33333,
      "rouge_2_recall": 0.08824,
      "rouge_2_recall_cb": 0.08824,
      "rouge_2_recall_ce": 0.08824,
      "rouge_2_precision": 0.125,
      "rouge_2_precision_cb": 0.125,
      "rouge_2_precision_ce": 0.125,
      "rouge_2_f_score": 0.10345,
      "rouge_2_f_score_cb": 0.10345,
      "rouge_2_f_score_ce": 0.10345,
      "rouge_3_recall": 0.06061,
      "rouge_3_recall_cb": 0.06061,
      "rouge_3_recall_ce": 0.06061,
      "rouge_3_precision": 0.08696,
      "rouge_3_precision_cb": 0.08696,
      "rouge_3_precision_ce": 0.08696,
      "rouge_3_f_score": 0.07143,
      "rouge_3_f_score_cb": 0.07143,
      "rouge_3_f_score_ce": 0.07143,
      "rouge_4_recall": 0.03125,
      "rouge_4_recall_cb": 0.03125,
      "rouge_4_recall_ce": 0.03125,
      "rouge_4_precision": 0.04545,
      "rouge_4_precision_cb": 0.04545,
      "rouge_4_precision_ce": 0.04545,
      "rouge_4_f_score": 0.03704,
      "rouge_4_f_score_cb": 0.03704,
      "rouge_4_f_score_ce": 0.03704,
      "rouge_l_recall": 0.22857,
      "rouge_l_recall_cb": 0.22857,
      "rouge_l_recall_ce": 0.22857,
      "rouge_l_precision": 0.32,
      "rouge_l_precision_cb": 0.32,
      "rouge_l_precision_ce": 0.32,
      "rouge_l_f_score": 0.26667,
      "rouge_l_f_score_cb": 0.26667,
      "rouge_l_f_score_ce": 0.26667,
      "rouge_w_1.2_recall": 0.08981,
      "rouge_w_1.2_recall_cb": 0.08981,
      "rouge_w_1.2_recall_ce": 0.08981,
      "rouge_w_1.2_precision": 0.25602,
      "rouge_w_1.2_precision_cb": 0.25602,
      "rouge_w_1.2_precision_ce": 0.25602,
      "rouge_w_1.2_f_score": 0.13297,
      "rouge_w_1.2_f_score_cb": 0.13297,
      "rouge_w_1.2_f_score_ce": 0.13297,
      "rouge_s*_recall": 0.06891,
      "rouge_s*_recall_cb": 0.06891,
      "rouge_s*_recall_ce": 0.06891,
      "rouge_s*_precision": 0.13667,
      "rouge_s*_precision_cb": 0.13667,
      "rouge_s*_precision_ce": 0.13667,
      "rouge_s*_f_score": 0.09162,
      "rouge_s*_f_score_cb": 0.09162,
      "rouge_s*_f_score_ce": 0.09162,
      "rouge_su*_recall": 0.08108,
      "rouge_su*_recall_cb": 0.08108,
      "rouge_su*_recall_ce": 0.08108,
      "rouge_su*_precision": 0.15741,
      "rouge_su*_precision_cb": 0.15741,
      "rouge_su*_precision_ce": 0.15741,
      "rouge_su*_f_score": 0.10703,
      "rouge_su*_f_score_cb": 0.10703,
      "rouge_su*_f_score_ce": 0.10703
    }
  },
  {
    "id": 5,
    "filename": "PandasEval_5.txt",
    "dataset_comment": "Convert all column headers in the pandas DataFrame to lowercase. Return the modified DataFrame.",
    "generated_comment": "Make all columns in the DataFrame lowercase by applying the str.lower function to each column name.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.57143,
      "rouge_1_recall_cb": 0.57143,
      "rouge_1_recall_ce": 0.57143,
      "rouge_1_precision": 0.47059,
      "rouge_1_precision_cb": 0.47059,
      "rouge_1_precision_ce": 0.47059,
      "rouge_1_f_score": 0.51613,
      "rouge_1_f_score_cb": 0.51613,
      "rouge_1_f_score_ce": 0.51613,
      "rouge_2_recall": 0.15385,
      "rouge_2_recall_cb": 0.15385,
      "rouge_2_recall_ce": 0.15385,
      "rouge_2_precision": 0.125,
      "rouge_2_precision_cb": 0.125,
      "rouge_2_precision_ce": 0.125,
      "rouge_2_f_score": 0.13793,
      "rouge_2_f_score_cb": 0.13793,
      "rouge_2_f_score_ce": 0.13793,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.41176,
      "rouge_l_precision_cb": 0.41176,
      "rouge_l_precision_ce": 0.41176,
      "rouge_l_f_score": 0.45161,
      "rouge_l_f_score_cb": 0.45161,
      "rouge_l_f_score_ce": 0.45161,
      "rouge_w_1.2_recall": 0.22825,
      "rouge_w_1.2_recall_cb": 0.22825,
      "rouge_w_1.2_recall_ce": 0.22825,
      "rouge_w_1.2_precision": 0.31865,
      "rouge_w_1.2_precision_cb": 0.31865,
      "rouge_w_1.2_precision_ce": 0.31865,
      "rouge_w_1.2_f_score": 0.26598,
      "rouge_w_1.2_f_score_cb": 0.26598,
      "rouge_w_1.2_f_score_ce": 0.26598,
      "rouge_s*_recall": 0.28571,
      "rouge_s*_recall_cb": 0.28571,
      "rouge_s*_recall_ce": 0.28571,
      "rouge_s*_precision": 0.19118,
      "rouge_s*_precision_cb": 0.19118,
      "rouge_s*_precision_ce": 0.19118,
      "rouge_s*_f_score": 0.22908,
      "rouge_s*_f_score_cb": 0.22908,
      "rouge_s*_f_score_ce": 0.22908,
      "rouge_su*_recall": 0.32692,
      "rouge_su*_recall_cb": 0.32692,
      "rouge_su*_recall_ce": 0.32692,
      "rouge_su*_precision": 0.22368,
      "rouge_su*_precision_cb": 0.22368,
      "rouge_su*_precision_ce": 0.22368,
      "rouge_su*_f_score": 0.26562,
      "rouge_su*_f_score_cb": 0.26562,
      "rouge_su*_f_score_ce": 0.26562
    }
  },
  {
    "id": 6,
    "filename": "PandasEval_6.txt",
    "dataset_comment": "Change the dtype of multiple columns in the dataframe. The dataframe contains columns with different dtypes: some columns are float64, while others are int64. Convert all columns with dtype float64 to float32.",
    "generated_comment": "Select columns with data type float64 in a pandas DataFrame and convert them to data type np.float32.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.25,
      "rouge_1_recall_cb": 0.25,
      "rouge_1_recall_ce": 0.25,
      "rouge_1_precision": 0.44444,
      "rouge_1_precision_cb": 0.44444,
      "rouge_1_precision_ce": 0.44444,
      "rouge_1_f_score": 0.32,
      "rouge_1_f_score_cb": 0.32,
      "rouge_1_f_score_ce": 0.32,
      "rouge_2_recall": 0.03226,
      "rouge_2_recall_cb": 0.03226,
      "rouge_2_recall_ce": 0.03226,
      "rouge_2_precision": 0.05882,
      "rouge_2_precision_cb": 0.05882,
      "rouge_2_precision_ce": 0.05882,
      "rouge_2_f_score": 0.04167,
      "rouge_2_f_score_cb": 0.04167,
      "rouge_2_f_score_ce": 0.04167,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.1875,
      "rouge_l_recall_cb": 0.1875,
      "rouge_l_recall_ce": 0.1875,
      "rouge_l_precision": 0.33333,
      "rouge_l_precision_cb": 0.33333,
      "rouge_l_precision_ce": 0.33333,
      "rouge_l_f_score": 0.24,
      "rouge_l_f_score_cb": 0.24,
      "rouge_l_f_score_ce": 0.24,
      "rouge_w_1.2_recall": 0.07525,
      "rouge_w_1.2_recall_cb": 0.07525,
      "rouge_w_1.2_recall_ce": 0.07525,
      "rouge_w_1.2_precision": 0.26754,
      "rouge_w_1.2_precision_cb": 0.26754,
      "rouge_w_1.2_precision_ce": 0.26754,
      "rouge_w_1.2_f_score": 0.11746,
      "rouge_w_1.2_f_score_cb": 0.11746,
      "rouge_w_1.2_f_score_ce": 0.11746,
      "rouge_s*_recall": 0.04839,
      "rouge_s*_recall_cb": 0.04839,
      "rouge_s*_recall_ce": 0.04839,
      "rouge_s*_precision": 0.15686,
      "rouge_s*_precision_cb": 0.15686,
      "rouge_s*_precision_ce": 0.15686,
      "rouge_s*_f_score": 0.07396,
      "rouge_s*_f_score_cb": 0.07396,
      "rouge_s*_f_score_ce": 0.07396,
      "rouge_su*_recall": 0.05882,
      "rouge_su*_recall_cb": 0.05882,
      "rouge_su*_recall_ce": 0.05882,
      "rouge_su*_precision": 0.18235,
      "rouge_su*_precision_cb": 0.18235,
      "rouge_su*_precision_ce": 0.18235,
      "rouge_su*_f_score": 0.08895,
      "rouge_su*_f_score_cb": 0.08895,
      "rouge_su*_f_score_ce": 0.08895
    }
  },
  {
    "id": 7,
    "filename": "PandasEval_7.txt",
    "dataset_comment": "Convert the 'date' column to datetime type.Skip rows with strings that cannot be converted to datetime by using errors='coerce'.",
    "generated_comment": "Convert the 'date' column in the DataFrame to datetime format using pd.to_datetime() with error handling set to 'coerce'.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.57143,
      "rouge_1_recall_cb": 0.57143,
      "rouge_1_recall_ce": 0.57143,
      "rouge_1_precision": 0.6,
      "rouge_1_precision_cb": 0.6,
      "rouge_1_precision_ce": 0.6,
      "rouge_1_f_score": 0.58537,
      "rouge_1_f_score_cb": 0.58537,
      "rouge_1_f_score_ce": 0.58537,
      "rouge_2_recall": 0.25,
      "rouge_2_recall_cb": 0.25,
      "rouge_2_recall_ce": 0.25,
      "rouge_2_precision": 0.26316,
      "rouge_2_precision_cb": 0.26316,
      "rouge_2_precision_ce": 0.26316,
      "rouge_2_f_score": 0.25641,
      "rouge_2_f_score_cb": 0.25641,
      "rouge_2_f_score_ce": 0.25641,
      "rouge_3_recall": 0.10526,
      "rouge_3_recall_cb": 0.10526,
      "rouge_3_recall_ce": 0.10526,
      "rouge_3_precision": 0.11111,
      "rouge_3_precision_cb": 0.11111,
      "rouge_3_precision_ce": 0.11111,
      "rouge_3_f_score": 0.10811,
      "rouge_3_f_score_cb": 0.10811,
      "rouge_3_f_score_ce": 0.10811,
      "rouge_4_recall": 0.05556,
      "rouge_4_recall_cb": 0.05556,
      "rouge_4_recall_ce": 0.05556,
      "rouge_4_precision": 0.05882,
      "rouge_4_precision_cb": 0.05882,
      "rouge_4_precision_ce": 0.05882,
      "rouge_4_f_score": 0.05714,
      "rouge_4_f_score_cb": 0.05714,
      "rouge_4_f_score_ce": 0.05714,
      "rouge_l_recall": 0.47619,
      "rouge_l_recall_cb": 0.47619,
      "rouge_l_recall_ce": 0.47619,
      "rouge_l_precision": 0.5,
      "rouge_l_precision_cb": 0.5,
      "rouge_l_precision_ce": 0.5,
      "rouge_l_f_score": 0.4878,
      "rouge_l_f_score_cb": 0.4878,
      "rouge_l_f_score_ce": 0.4878,
      "rouge_w_1.2_recall": 0.22213,
      "rouge_w_1.2_recall_cb": 0.22213,
      "rouge_w_1.2_recall_ce": 0.22213,
      "rouge_w_1.2_precision": 0.42879,
      "rouge_w_1.2_precision_cb": 0.42879,
      "rouge_w_1.2_precision_ce": 0.42879,
      "rouge_w_1.2_f_score": 0.29265,
      "rouge_w_1.2_f_score_cb": 0.29265,
      "rouge_w_1.2_f_score_ce": 0.29265,
      "rouge_s*_recall": 0.3,
      "rouge_s*_recall_cb": 0.3,
      "rouge_s*_recall_ce": 0.3,
      "rouge_s*_precision": 0.33158,
      "rouge_s*_precision_cb": 0.33158,
      "rouge_s*_precision_ce": 0.33158,
      "rouge_s*_f_score": 0.315,
      "rouge_s*_f_score_cb": 0.315,
      "rouge_s*_f_score_ce": 0.315,
      "rouge_su*_recall": 0.32174,
      "rouge_su*_recall_cb": 0.32174,
      "rouge_su*_recall_ce": 0.32174,
      "rouge_su*_precision": 0.35407,
      "rouge_su*_precision_cb": 0.35407,
      "rouge_su*_precision_ce": 0.35407,
      "rouge_su*_f_score": 0.33713,
      "rouge_su*_f_score_cb": 0.33713,
      "rouge_su*_f_score_ce": 0.33713
    }
  },
  {
    "id": 8,
    "filename": "PandasEval_8.txt",
    "dataset_comment": "Filter the DataFrame to include only rows where the second column has the specific value 'Jimmy'.",
    "generated_comment": "Filter the DataFrame to only include rows where the value in the second column ('col2') is 'Jimmy'.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.875,
      "rouge_1_recall_cb": 0.875,
      "rouge_1_recall_ce": 0.875,
      "rouge_1_precision": 0.82353,
      "rouge_1_precision_cb": 0.82353,
      "rouge_1_precision_ce": 0.82353,
      "rouge_1_f_score": 0.84849,
      "rouge_1_f_score_cb": 0.84849,
      "rouge_1_f_score_ce": 0.84849,
      "rouge_2_recall": 0.46667,
      "rouge_2_recall_cb": 0.46667,
      "rouge_2_recall_ce": 0.46667,
      "rouge_2_precision": 0.4375,
      "rouge_2_precision_cb": 0.4375,
      "rouge_2_precision_ce": 0.4375,
      "rouge_2_f_score": 0.45161,
      "rouge_2_f_score_cb": 0.45161,
      "rouge_2_f_score_ce": 0.45161,
      "rouge_3_recall": 0.28571,
      "rouge_3_recall_cb": 0.28571,
      "rouge_3_recall_ce": 0.28571,
      "rouge_3_precision": 0.26667,
      "rouge_3_precision_cb": 0.26667,
      "rouge_3_precision_ce": 0.26667,
      "rouge_3_f_score": 0.27586,
      "rouge_3_f_score_cb": 0.27586,
      "rouge_3_f_score_ce": 0.27586,
      "rouge_4_recall": 0.07692,
      "rouge_4_recall_cb": 0.07692,
      "rouge_4_recall_ce": 0.07692,
      "rouge_4_precision": 0.07143,
      "rouge_4_precision_cb": 0.07143,
      "rouge_4_precision_ce": 0.07143,
      "rouge_4_f_score": 0.07407,
      "rouge_4_f_score_cb": 0.07407,
      "rouge_4_f_score_ce": 0.07407,
      "rouge_l_recall": 0.6875,
      "rouge_l_recall_cb": 0.6875,
      "rouge_l_recall_ce": 0.6875,
      "rouge_l_precision": 0.64706,
      "rouge_l_precision_cb": 0.64706,
      "rouge_l_precision_ce": 0.64706,
      "rouge_l_f_score": 0.66667,
      "rouge_l_f_score_cb": 0.66667,
      "rouge_l_f_score_ce": 0.66667,
      "rouge_w_1.2_recall": 0.33901,
      "rouge_w_1.2_recall_cb": 0.33901,
      "rouge_w_1.2_recall_ce": 0.33901,
      "rouge_w_1.2_precision": 0.55552,
      "rouge_w_1.2_precision_cb": 0.55552,
      "rouge_w_1.2_precision_ce": 0.55552,
      "rouge_w_1.2_f_score": 0.42106,
      "rouge_w_1.2_f_score_cb": 0.42106,
      "rouge_w_1.2_f_score_ce": 0.42106,
      "rouge_s*_recall": 0.70833,
      "rouge_s*_recall_cb": 0.70833,
      "rouge_s*_recall_ce": 0.70833,
      "rouge_s*_precision": 0.625,
      "rouge_s*_precision_cb": 0.625,
      "rouge_s*_precision_ce": 0.625,
      "rouge_s*_f_score": 0.66406,
      "rouge_s*_f_score_cb": 0.66406,
      "rouge_s*_f_score_ce": 0.66406,
      "rouge_su*_recall": 0.72593,
      "rouge_su*_recall_cb": 0.72593,
      "rouge_su*_recall_ce": 0.72593,
      "rouge_su*_precision": 0.64474,
      "rouge_su*_precision_cb": 0.64474,
      "rouge_su*_precision_ce": 0.64474,
      "rouge_su*_f_score": 0.68293,
      "rouge_su*_f_score_cb": 0.68293,
      "rouge_su*_f_score_ce": 0.68293
    }
  },
  {
    "id": 9,
    "filename": "PandasEval_9.txt",
    "dataset_comment": "Extract the first and last rows of a DataFrame in Pandas and return the resulting DataFrame",
    "generated_comment": "Extract the first and last rows of a DataFrame using iloc and return them.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.6875,
      "rouge_1_recall_cb": 0.6875,
      "rouge_1_recall_ce": 0.6875,
      "rouge_1_precision": 0.78571,
      "rouge_1_precision_cb": 0.78571,
      "rouge_1_precision_ce": 0.78571,
      "rouge_1_f_score": 0.73333,
      "rouge_1_f_score_cb": 0.73333,
      "rouge_1_f_score_ce": 0.73333,
      "rouge_2_recall": 0.6,
      "rouge_2_recall_cb": 0.6,
      "rouge_2_recall_ce": 0.6,
      "rouge_2_precision": 0.69231,
      "rouge_2_precision_cb": 0.69231,
      "rouge_2_precision_ce": 0.69231,
      "rouge_2_f_score": 0.64286,
      "rouge_2_f_score_cb": 0.64286,
      "rouge_2_f_score_ce": 0.64286,
      "rouge_3_recall": 0.5,
      "rouge_3_recall_cb": 0.5,
      "rouge_3_recall_ce": 0.5,
      "rouge_3_precision": 0.58333,
      "rouge_3_precision_cb": 0.58333,
      "rouge_3_precision_ce": 0.58333,
      "rouge_3_f_score": 0.53846,
      "rouge_3_f_score_cb": 0.53846,
      "rouge_3_f_score_ce": 0.53846,
      "rouge_4_recall": 0.46154,
      "rouge_4_recall_cb": 0.46154,
      "rouge_4_recall_ce": 0.46154,
      "rouge_4_precision": 0.54545,
      "rouge_4_precision_cb": 0.54545,
      "rouge_4_precision_ce": 0.54545,
      "rouge_4_f_score": 0.5,
      "rouge_4_f_score_cb": 0.5,
      "rouge_4_f_score_ce": 0.5,
      "rouge_l_recall": 0.6875,
      "rouge_l_recall_cb": 0.6875,
      "rouge_l_recall_ce": 0.6875,
      "rouge_l_precision": 0.78571,
      "rouge_l_precision_cb": 0.78571,
      "rouge_l_precision_ce": 0.78571,
      "rouge_l_f_score": 0.73333,
      "rouge_l_f_score_cb": 0.73333,
      "rouge_l_f_score_ce": 0.73333,
      "rouge_w_1.2_recall": 0.36679,
      "rouge_w_1.2_recall_cb": 0.36679,
      "rouge_w_1.2_recall_ce": 0.36679,
      "rouge_w_1.2_precision": 0.72984,
      "rouge_w_1.2_precision_cb": 0.72984,
      "rouge_w_1.2_precision_ce": 0.72984,
      "rouge_w_1.2_f_score": 0.48822,
      "rouge_w_1.2_f_score_cb": 0.48822,
      "rouge_w_1.2_f_score_ce": 0.48822,
      "rouge_s*_recall": 0.45833,
      "rouge_s*_recall_cb": 0.45833,
      "rouge_s*_recall_ce": 0.45833,
      "rouge_s*_precision": 0.6044,
      "rouge_s*_precision_cb": 0.6044,
      "rouge_s*_precision_ce": 0.6044,
      "rouge_s*_f_score": 0.52133,
      "rouge_s*_f_score_cb": 0.52133,
      "rouge_s*_f_score_ce": 0.52133,
      "rouge_su*_recall": 0.48889,
      "rouge_su*_recall_cb": 0.48889,
      "rouge_su*_recall_ce": 0.48889,
      "rouge_su*_precision": 0.63462,
      "rouge_su*_precision_cb": 0.63462,
      "rouge_su*_precision_ce": 0.63462,
      "rouge_su*_f_score": 0.5523,
      "rouge_su*_f_score_cb": 0.5523,
      "rouge_su*_f_score_ce": 0.5523
    }
  },
  {
    "id": 10,
    "filename": "PandasEval_10.txt",
    "dataset_comment": "Extract the first and last rows of a DataFrame in Pandas and return the resulting DataFrame",
    "generated_comment": "Group the DataFrame by 'Mt' and then filter each group to only include the row with the maximum value in the 'num' column.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.375,
      "rouge_1_recall_cb": 0.375,
      "rouge_1_recall_ce": 0.375,
      "rouge_1_precision": 0.26087,
      "rouge_1_precision_cb": 0.26087,
      "rouge_1_precision_ce": 0.26087,
      "rouge_1_f_score": 0.30769,
      "rouge_1_f_score_cb": 0.30769,
      "rouge_1_f_score_ce": 0.30769,
      "rouge_2_recall": 0.0,
      "rouge_2_recall_cb": 0.0,
      "rouge_2_recall_ce": 0.0,
      "rouge_2_precision": 0.0,
      "rouge_2_precision_cb": 0.0,
      "rouge_2_precision_ce": 0.0,
      "rouge_2_f_score": 0.0,
      "rouge_2_f_score_cb": 0.0,
      "rouge_2_f_score_ce": 0.0,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.3125,
      "rouge_l_recall_cb": 0.3125,
      "rouge_l_recall_ce": 0.3125,
      "rouge_l_precision": 0.21739,
      "rouge_l_precision_cb": 0.21739,
      "rouge_l_precision_ce": 0.21739,
      "rouge_l_f_score": 0.25641,
      "rouge_l_f_score_cb": 0.25641,
      "rouge_l_f_score_ce": 0.25641,
      "rouge_w_1.2_recall": 0.13726,
      "rouge_w_1.2_recall_cb": 0.13726,
      "rouge_w_1.2_recall_ce": 0.13726,
      "rouge_w_1.2_precision": 0.16624,
      "rouge_w_1.2_precision_cb": 0.16624,
      "rouge_w_1.2_precision_ce": 0.16624,
      "rouge_w_1.2_f_score": 0.15037,
      "rouge_w_1.2_f_score_cb": 0.15037,
      "rouge_w_1.2_f_score_ce": 0.15037,
      "rouge_s*_recall": 0.125,
      "rouge_s*_recall_cb": 0.125,
      "rouge_s*_recall_ce": 0.125,
      "rouge_s*_precision": 0.05929,
      "rouge_s*_precision_cb": 0.05929,
      "rouge_s*_precision_ce": 0.05929,
      "rouge_s*_f_score": 0.08043,
      "rouge_s*_f_score_cb": 0.08043,
      "rouge_s*_f_score_ce": 0.08043,
      "rouge_su*_recall": 0.15556,
      "rouge_su*_recall_cb": 0.15556,
      "rouge_su*_recall_ce": 0.15556,
      "rouge_su*_precision": 0.07636,
      "rouge_su*_precision_cb": 0.07636,
      "rouge_su*_precision_ce": 0.07636,
      "rouge_su*_f_score": 0.10244,
      "rouge_su*_f_score_cb": 0.10244,
      "rouge_su*_f_score_ce": 0.10244
    }
  },
  {
    "id": 11,
    "filename": "PandasEval_11.txt",
    "dataset_comment": "Select rows from a DataFrame df where the column value named col_name is in the iterable values and return these rows.",
    "generated_comment": "Select rows from a DataFrame based on the values in a specific column.Parameters:df (pd.DataFrame): The input DataFrame.col_name (str): The name of the column to filter on.values (list): A list of values to filter the DataFrame on.Returns:pd.DataFrame: The filtered DataFrame containing rows where the specified column matches the values provided.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.81818,
      "rouge_1_recall_cb": 0.81818,
      "rouge_1_recall_ce": 0.81818,
      "rouge_1_precision": 0.31034,
      "rouge_1_precision_cb": 0.31034,
      "rouge_1_precision_ce": 0.31034,
      "rouge_1_f_score": 0.44999,
      "rouge_1_f_score_cb": 0.44999,
      "rouge_1_f_score_ce": 0.44999,
      "rouge_2_recall": 0.33333,
      "rouge_2_recall_cb": 0.33333,
      "rouge_2_recall_ce": 0.33333,
      "rouge_2_precision": 0.12281,
      "rouge_2_precision_cb": 0.12281,
      "rouge_2_precision_ce": 0.12281,
      "rouge_2_f_score": 0.17949,
      "rouge_2_f_score_cb": 0.17949,
      "rouge_2_f_score_ce": 0.17949,
      "rouge_3_recall": 0.15,
      "rouge_3_recall_cb": 0.15,
      "rouge_3_recall_ce": 0.15,
      "rouge_3_precision": 0.05357,
      "rouge_3_precision_cb": 0.05357,
      "rouge_3_precision_ce": 0.05357,
      "rouge_3_f_score": 0.07895,
      "rouge_3_f_score_cb": 0.07895,
      "rouge_3_f_score_ce": 0.07895,
      "rouge_4_recall": 0.10526,
      "rouge_4_recall_cb": 0.10526,
      "rouge_4_recall_ce": 0.10526,
      "rouge_4_precision": 0.03636,
      "rouge_4_precision_cb": 0.03636,
      "rouge_4_precision_ce": 0.03636,
      "rouge_4_f_score": 0.05405,
      "rouge_4_f_score_cb": 0.05405,
      "rouge_4_f_score_ce": 0.05405,
      "rouge_l_recall": 0.59091,
      "rouge_l_recall_cb": 0.59091,
      "rouge_l_recall_ce": 0.59091,
      "rouge_l_precision": 0.22414,
      "rouge_l_precision_cb": 0.22414,
      "rouge_l_precision_ce": 0.22414,
      "rouge_l_f_score": 0.325,
      "rouge_l_f_score_cb": 0.325,
      "rouge_l_f_score_ce": 0.325,
      "rouge_w_1.2_recall": 0.2454,
      "rouge_w_1.2_recall_cb": 0.2454,
      "rouge_w_1.2_recall_ce": 0.2454,
      "rouge_w_1.2_precision": 0.17272,
      "rouge_w_1.2_precision_cb": 0.17272,
      "rouge_w_1.2_precision_ce": 0.17272,
      "rouge_w_1.2_f_score": 0.20274,
      "rouge_w_1.2_f_score_cb": 0.20274,
      "rouge_w_1.2_f_score_ce": 0.20274,
      "rouge_s*_recall": 0.60606,
      "rouge_s*_recall_cb": 0.60606,
      "rouge_s*_recall_ce": 0.60606,
      "rouge_s*_precision": 0.08469,
      "rouge_s*_precision_cb": 0.08469,
      "rouge_s*_precision_ce": 0.08469,
      "rouge_s*_f_score": 0.14861,
      "rouge_s*_f_score_cb": 0.14861,
      "rouge_s*_f_score_ce": 0.14861,
      "rouge_su*_recall": 0.62302,
      "rouge_su*_recall_cb": 0.62302,
      "rouge_su*_recall_ce": 0.62302,
      "rouge_su*_precision": 0.09181,
      "rouge_su*_precision_cb": 0.09181,
      "rouge_su*_precision_ce": 0.09181,
      "rouge_su*_f_score": 0.16004,
      "rouge_su*_f_score_cb": 0.16004,
      "rouge_su*_f_score_ce": 0.16004
    }
  },
  {
    "id": 12,
    "filename": "PandasEval_12.txt",
    "dataset_comment": "Return the number of rows in the DataFrame df",
    "generated_comment": "Calculate the number of rows in a pandas DataFrame by returning the length of the index of the DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.88889,
      "rouge_1_recall_cb": 0.88889,
      "rouge_1_recall_ce": 0.88889,
      "rouge_1_precision": 0.42105,
      "rouge_1_precision_cb": 0.42105,
      "rouge_1_precision_ce": 0.42105,
      "rouge_1_f_score": 0.57143,
      "rouge_1_f_score_cb": 0.57143,
      "rouge_1_f_score_ce": 0.57143,
      "rouge_2_recall": 0.75,
      "rouge_2_recall_cb": 0.75,
      "rouge_2_recall_ce": 0.75,
      "rouge_2_precision": 0.33333,
      "rouge_2_precision_cb": 0.33333,
      "rouge_2_precision_ce": 0.33333,
      "rouge_2_f_score": 0.46154,
      "rouge_2_f_score_cb": 0.46154,
      "rouge_2_f_score_ce": 0.46154,
      "rouge_3_recall": 0.42857,
      "rouge_3_recall_cb": 0.42857,
      "rouge_3_recall_ce": 0.42857,
      "rouge_3_precision": 0.17647,
      "rouge_3_precision_cb": 0.17647,
      "rouge_3_precision_ce": 0.17647,
      "rouge_3_f_score": 0.25,
      "rouge_3_f_score_cb": 0.25,
      "rouge_3_f_score_ce": 0.25,
      "rouge_4_recall": 0.33333,
      "rouge_4_recall_cb": 0.33333,
      "rouge_4_recall_ce": 0.33333,
      "rouge_4_precision": 0.125,
      "rouge_4_precision_cb": 0.125,
      "rouge_4_precision_ce": 0.125,
      "rouge_4_f_score": 0.18182,
      "rouge_4_f_score_cb": 0.18182,
      "rouge_4_f_score_ce": 0.18182,
      "rouge_l_recall": 0.77778,
      "rouge_l_recall_cb": 0.77778,
      "rouge_l_recall_ce": 0.77778,
      "rouge_l_precision": 0.36842,
      "rouge_l_precision_cb": 0.36842,
      "rouge_l_precision_ce": 0.36842,
      "rouge_l_f_score": 0.5,
      "rouge_l_f_score_cb": 0.5,
      "rouge_l_f_score_ce": 0.5,
      "rouge_w_1.2_recall": 0.5012,
      "rouge_w_1.2_recall_cb": 0.5012,
      "rouge_w_1.2_recall_ce": 0.5012,
      "rouge_w_1.2_precision": 0.36842,
      "rouge_w_1.2_precision_cb": 0.36842,
      "rouge_w_1.2_precision_ce": 0.36842,
      "rouge_w_1.2_f_score": 0.42467,
      "rouge_w_1.2_f_score_cb": 0.42467,
      "rouge_w_1.2_f_score_ce": 0.42467,
      "rouge_s*_recall": 0.69444,
      "rouge_s*_recall_cb": 0.69444,
      "rouge_s*_recall_ce": 0.69444,
      "rouge_s*_precision": 0.1462,
      "rouge_s*_precision_cb": 0.1462,
      "rouge_s*_precision_ce": 0.1462,
      "rouge_s*_f_score": 0.24155,
      "rouge_s*_f_score_cb": 0.24155,
      "rouge_s*_f_score_ce": 0.24155,
      "rouge_su*_recall": 0.75,
      "rouge_su*_recall_cb": 0.75,
      "rouge_su*_recall_ce": 0.75,
      "rouge_su*_precision": 0.1746,
      "rouge_su*_precision_cb": 0.1746,
      "rouge_su*_precision_ce": 0.1746,
      "rouge_su*_f_score": 0.28326,
      "rouge_su*_f_score_cb": 0.28326,
      "rouge_su*_f_score_ce": 0.28326
    }
  },
  {
    "id": 13,
    "filename": "PandasEval_13.txt",
    "dataset_comment": "Create an empty DataFrame in Pandas with only column names and return it.",
    "generated_comment": "Create an empty pandas DataFrame with the specified column names.The input parameter 'col_names' is a list of column names for the DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.61538,
      "rouge_1_recall_cb": 0.61538,
      "rouge_1_recall_ce": 0.61538,
      "rouge_1_precision": 0.33333,
      "rouge_1_precision_cb": 0.33333,
      "rouge_1_precision_ce": 0.33333,
      "rouge_1_f_score": 0.43243,
      "rouge_1_f_score_cb": 0.43243,
      "rouge_1_f_score_ce": 0.43243,
      "rouge_2_recall": 0.25,
      "rouge_2_recall_cb": 0.25,
      "rouge_2_recall_ce": 0.25,
      "rouge_2_precision": 0.13043,
      "rouge_2_precision_cb": 0.13043,
      "rouge_2_precision_ce": 0.13043,
      "rouge_2_f_score": 0.17142,
      "rouge_2_f_score_cb": 0.17142,
      "rouge_2_f_score_ce": 0.17142,
      "rouge_3_recall": 0.09091,
      "rouge_3_recall_cb": 0.09091,
      "rouge_3_recall_ce": 0.09091,
      "rouge_3_precision": 0.04545,
      "rouge_3_precision_cb": 0.04545,
      "rouge_3_precision_ce": 0.04545,
      "rouge_3_f_score": 0.0606,
      "rouge_3_f_score_cb": 0.0606,
      "rouge_3_f_score_ce": 0.0606,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.53846,
      "rouge_l_recall_cb": 0.53846,
      "rouge_l_recall_ce": 0.53846,
      "rouge_l_precision": 0.29167,
      "rouge_l_precision_cb": 0.29167,
      "rouge_l_precision_ce": 0.29167,
      "rouge_l_f_score": 0.37838,
      "rouge_l_f_score_cb": 0.37838,
      "rouge_l_f_score_ce": 0.37838,
      "rouge_w_1.2_recall": 0.27605,
      "rouge_w_1.2_recall_cb": 0.27605,
      "rouge_w_1.2_recall_ce": 0.27605,
      "rouge_w_1.2_precision": 0.24975,
      "rouge_w_1.2_precision_cb": 0.24975,
      "rouge_w_1.2_precision_ce": 0.24975,
      "rouge_w_1.2_f_score": 0.26224,
      "rouge_w_1.2_f_score_cb": 0.26224,
      "rouge_w_1.2_f_score_ce": 0.26224,
      "rouge_s*_recall": 0.34615,
      "rouge_s*_recall_cb": 0.34615,
      "rouge_s*_recall_ce": 0.34615,
      "rouge_s*_precision": 0.09783,
      "rouge_s*_precision_cb": 0.09783,
      "rouge_s*_precision_ce": 0.09783,
      "rouge_s*_f_score": 0.15255,
      "rouge_s*_f_score_cb": 0.15255,
      "rouge_s*_f_score_ce": 0.15255,
      "rouge_su*_recall": 0.38889,
      "rouge_su*_recall_cb": 0.38889,
      "rouge_su*_recall_ce": 0.38889,
      "rouge_su*_precision": 0.11706,
      "rouge_su*_precision_cb": 0.11706,
      "rouge_su*_precision_ce": 0.11706,
      "rouge_su*_f_score": 0.17995,
      "rouge_su*_f_score_cb": 0.17995,
      "rouge_su*_f_score_ce": 0.17995
    }
  },
  {
    "id": 14,
    "filename": "PandasEval_14.txt",
    "dataset_comment": "Calculate the difference between rows within each group using pandas, where row ordering is important. Use pandas.groupby() to group the data and apply a custom function to compute the difference between rows. Use the .iat method for selecting values by position. Return the resulting DataFrame.",
    "generated_comment": "Group the DataFrame by 'Group' column and calculate the differences between specific rows within each group for 'Value' and 'ID' columns. Return a DataFrame with the calculated differences and 'Group' column included.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.41304,
      "rouge_1_recall_cb": 0.41304,
      "rouge_1_recall_ce": 0.41304,
      "rouge_1_precision": 0.59375,
      "rouge_1_precision_cb": 0.59375,
      "rouge_1_precision_ce": 0.59375,
      "rouge_1_f_score": 0.48718,
      "rouge_1_f_score_cb": 0.48718,
      "rouge_1_f_score_ce": 0.48718,
      "rouge_2_recall": 0.15556,
      "rouge_2_recall_cb": 0.15556,
      "rouge_2_recall_ce": 0.15556,
      "rouge_2_precision": 0.22581,
      "rouge_2_precision_cb": 0.22581,
      "rouge_2_precision_ce": 0.22581,
      "rouge_2_f_score": 0.18421,
      "rouge_2_f_score_cb": 0.18421,
      "rouge_2_f_score_ce": 0.18421,
      "rouge_3_recall": 0.09091,
      "rouge_3_recall_cb": 0.09091,
      "rouge_3_recall_ce": 0.09091,
      "rouge_3_precision": 0.13333,
      "rouge_3_precision_cb": 0.13333,
      "rouge_3_precision_ce": 0.13333,
      "rouge_3_f_score": 0.10811,
      "rouge_3_f_score_cb": 0.10811,
      "rouge_3_f_score_ce": 0.10811,
      "rouge_4_recall": 0.04651,
      "rouge_4_recall_cb": 0.04651,
      "rouge_4_recall_ce": 0.04651,
      "rouge_4_precision": 0.06897,
      "rouge_4_precision_cb": 0.06897,
      "rouge_4_precision_ce": 0.06897,
      "rouge_4_f_score": 0.05556,
      "rouge_4_f_score_cb": 0.05556,
      "rouge_4_f_score_ce": 0.05556,
      "rouge_l_recall": 0.26087,
      "rouge_l_recall_cb": 0.26087,
      "rouge_l_recall_ce": 0.26087,
      "rouge_l_precision": 0.375,
      "rouge_l_precision_cb": 0.375,
      "rouge_l_precision_ce": 0.375,
      "rouge_l_f_score": 0.30769,
      "rouge_l_f_score_cb": 0.30769,
      "rouge_l_f_score_ce": 0.30769,
      "rouge_w_1.2_recall": 0.10413,
      "rouge_w_1.2_recall_cb": 0.10413,
      "rouge_w_1.2_recall_ce": 0.10413,
      "rouge_w_1.2_precision": 0.32191,
      "rouge_w_1.2_precision_cb": 0.32191,
      "rouge_w_1.2_precision_ce": 0.32191,
      "rouge_w_1.2_f_score": 0.15736,
      "rouge_w_1.2_f_score_cb": 0.15736,
      "rouge_w_1.2_f_score_ce": 0.15736,
      "rouge_s*_recall": 0.15266,
      "rouge_s*_recall_cb": 0.15266,
      "rouge_s*_recall_ce": 0.15266,
      "rouge_s*_precision": 0.31855,
      "rouge_s*_precision_cb": 0.31855,
      "rouge_s*_precision_ce": 0.31855,
      "rouge_s*_f_score": 0.2064,
      "rouge_s*_f_score_cb": 0.2064,
      "rouge_s*_f_score_ce": 0.2064,
      "rouge_su*_recall": 0.16296,
      "rouge_su*_recall_cb": 0.16296,
      "rouge_su*_recall_ce": 0.16296,
      "rouge_su*_precision": 0.33397,
      "rouge_su*_precision_cb": 0.33397,
      "rouge_su*_precision_ce": 0.33397,
      "rouge_su*_f_score": 0.21904,
      "rouge_su*_f_score_cb": 0.21904,
      "rouge_su*_f_score_ce": 0.21904
    }
  },
  {
    "id": 15,
    "filename": "PandasEval_15.txt",
    "dataset_comment": "Check if any value is NaN in a Pandas DataFrame and return the result.",
    "generated_comment": "Check if any value in the DataFrame is NaN by using the isnull() method followed by values.any() method.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.64286,
      "rouge_1_recall_cb": 0.64286,
      "rouge_1_recall_ce": 0.64286,
      "rouge_1_precision": 0.47368,
      "rouge_1_precision_cb": 0.47368,
      "rouge_1_precision_ce": 0.47368,
      "rouge_1_f_score": 0.54545,
      "rouge_1_f_score_cb": 0.54545,
      "rouge_1_f_score_ce": 0.54545,
      "rouge_2_recall": 0.30769,
      "rouge_2_recall_cb": 0.30769,
      "rouge_2_recall_ce": 0.30769,
      "rouge_2_precision": 0.22222,
      "rouge_2_precision_cb": 0.22222,
      "rouge_2_precision_ce": 0.22222,
      "rouge_2_f_score": 0.25806,
      "rouge_2_f_score_cb": 0.25806,
      "rouge_2_f_score_ce": 0.25806,
      "rouge_3_recall": 0.16667,
      "rouge_3_recall_cb": 0.16667,
      "rouge_3_recall_ce": 0.16667,
      "rouge_3_precision": 0.11765,
      "rouge_3_precision_cb": 0.11765,
      "rouge_3_precision_ce": 0.11765,
      "rouge_3_f_score": 0.13793,
      "rouge_3_f_score_cb": 0.13793,
      "rouge_3_f_score_ce": 0.13793,
      "rouge_4_recall": 0.09091,
      "rouge_4_recall_cb": 0.09091,
      "rouge_4_recall_ce": 0.09091,
      "rouge_4_precision": 0.0625,
      "rouge_4_precision_cb": 0.0625,
      "rouge_4_precision_ce": 0.0625,
      "rouge_4_f_score": 0.07407,
      "rouge_4_f_score_cb": 0.07407,
      "rouge_4_f_score_ce": 0.07407,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.36842,
      "rouge_l_precision_cb": 0.36842,
      "rouge_l_precision_ce": 0.36842,
      "rouge_l_f_score": 0.42424,
      "rouge_l_f_score_cb": 0.42424,
      "rouge_l_f_score_ce": 0.42424,
      "rouge_w_1.2_recall": 0.27712,
      "rouge_w_1.2_recall_cb": 0.27712,
      "rouge_w_1.2_recall_ce": 0.27712,
      "rouge_w_1.2_precision": 0.34615,
      "rouge_w_1.2_precision_cb": 0.34615,
      "rouge_w_1.2_precision_ce": 0.34615,
      "rouge_w_1.2_f_score": 0.30781,
      "rouge_w_1.2_f_score_cb": 0.30781,
      "rouge_w_1.2_f_score_ce": 0.30781,
      "rouge_s*_recall": 0.35165,
      "rouge_s*_recall_cb": 0.35165,
      "rouge_s*_recall_ce": 0.35165,
      "rouge_s*_precision": 0.18713,
      "rouge_s*_precision_cb": 0.18713,
      "rouge_s*_precision_ce": 0.18713,
      "rouge_s*_f_score": 0.24427,
      "rouge_s*_f_score_cb": 0.24427,
      "rouge_s*_f_score_ce": 0.24427,
      "rouge_su*_recall": 0.39423,
      "rouge_su*_recall_cb": 0.39423,
      "rouge_su*_recall_ce": 0.39423,
      "rouge_su*_precision": 0.21693,
      "rouge_su*_precision_cb": 0.21693,
      "rouge_su*_precision_ce": 0.21693,
      "rouge_su*_f_score": 0.27986,
      "rouge_su*_f_score_cb": 0.27986,
      "rouge_su*_f_score_ce": 0.27986
    }
  },
  {
    "id": 16,
    "filename": "PandasEval_16.txt",
    "dataset_comment": "Add a new column named 'column_name' with specified data to the existing DataFrame.",
    "generated_comment": "Add a new column to a pandas DataFrame with the specified column name and data.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.85714,
      "rouge_1_recall_cb": 0.85714,
      "rouge_1_recall_ce": 0.85714,
      "rouge_1_precision": 0.8,
      "rouge_1_precision_cb": 0.8,
      "rouge_1_precision_ce": 0.8,
      "rouge_1_f_score": 0.82758,
      "rouge_1_f_score_cb": 0.82758,
      "rouge_1_f_score_ce": 0.82758,
      "rouge_2_recall": 0.30769,
      "rouge_2_recall_cb": 0.30769,
      "rouge_2_recall_ce": 0.30769,
      "rouge_2_precision": 0.28571,
      "rouge_2_precision_cb": 0.28571,
      "rouge_2_precision_ce": 0.28571,
      "rouge_2_f_score": 0.29629,
      "rouge_2_f_score_cb": 0.29629,
      "rouge_2_f_score_ce": 0.29629,
      "rouge_3_recall": 0.16667,
      "rouge_3_recall_cb": 0.16667,
      "rouge_3_recall_ce": 0.16667,
      "rouge_3_precision": 0.15385,
      "rouge_3_precision_cb": 0.15385,
      "rouge_3_precision_ce": 0.15385,
      "rouge_3_f_score": 0.16,
      "rouge_3_f_score_cb": 0.16,
      "rouge_3_f_score_ce": 0.16,
      "rouge_4_recall": 0.09091,
      "rouge_4_recall_cb": 0.09091,
      "rouge_4_recall_ce": 0.09091,
      "rouge_4_precision": 0.08333,
      "rouge_4_precision_cb": 0.08333,
      "rouge_4_precision_ce": 0.08333,
      "rouge_4_f_score": 0.08696,
      "rouge_4_f_score_cb": 0.08696,
      "rouge_4_f_score_ce": 0.08696,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.46667,
      "rouge_l_precision_cb": 0.46667,
      "rouge_l_precision_ce": 0.46667,
      "rouge_l_f_score": 0.48276,
      "rouge_l_f_score_cb": 0.48276,
      "rouge_l_f_score_ce": 0.48276,
      "rouge_w_1.2_recall": 0.25256,
      "rouge_w_1.2_recall_cb": 0.25256,
      "rouge_w_1.2_recall_ce": 0.25256,
      "rouge_w_1.2_precision": 0.3996,
      "rouge_w_1.2_precision_cb": 0.3996,
      "rouge_w_1.2_precision_ce": 0.3996,
      "rouge_w_1.2_f_score": 0.3095,
      "rouge_w_1.2_f_score_cb": 0.3095,
      "rouge_w_1.2_f_score_ce": 0.3095,
      "rouge_s*_recall": 0.52747,
      "rouge_s*_recall_cb": 0.52747,
      "rouge_s*_recall_ce": 0.52747,
      "rouge_s*_precision": 0.45714,
      "rouge_s*_precision_cb": 0.45714,
      "rouge_s*_precision_ce": 0.45714,
      "rouge_s*_f_score": 0.48979,
      "rouge_s*_f_score_cb": 0.48979,
      "rouge_s*_f_score_ce": 0.48979,
      "rouge_su*_recall": 0.55769,
      "rouge_su*_recall_cb": 0.55769,
      "rouge_su*_recall_ce": 0.55769,
      "rouge_su*_precision": 0.48739,
      "rouge_su*_precision_cb": 0.48739,
      "rouge_su*_precision_ce": 0.48739,
      "rouge_su*_f_score": 0.52018,
      "rouge_su*_f_score_cb": 0.52018,
      "rouge_su*_f_score_ce": 0.52018
    }
  },
  {
    "id": 17,
    "filename": "PandasEval_17.txt",
    "dataset_comment": "Drop duplicate rows in the DataFrame based on column `col1`, keeping the row with the last value in column `col2`, and return the final DataFrame.",
    "generated_comment": "Remove duplicates from a DataFrame based on the values in two columns specified by col1 and col2 using pandas drop_duplicates() function.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.48,
      "rouge_1_recall_cb": 0.48,
      "rouge_1_recall_ce": 0.48,
      "rouge_1_precision": 0.54545,
      "rouge_1_precision_cb": 0.54545,
      "rouge_1_precision_ce": 0.54545,
      "rouge_1_f_score": 0.51064,
      "rouge_1_f_score_cb": 0.51064,
      "rouge_1_f_score_ce": 0.51064,
      "rouge_2_recall": 0.16667,
      "rouge_2_recall_cb": 0.16667,
      "rouge_2_recall_ce": 0.16667,
      "rouge_2_precision": 0.19048,
      "rouge_2_precision_cb": 0.19048,
      "rouge_2_precision_ce": 0.19048,
      "rouge_2_f_score": 0.17778,
      "rouge_2_f_score_cb": 0.17778,
      "rouge_2_f_score_ce": 0.17778,
      "rouge_3_recall": 0.04348,
      "rouge_3_recall_cb": 0.04348,
      "rouge_3_recall_ce": 0.04348,
      "rouge_3_precision": 0.05,
      "rouge_3_precision_cb": 0.05,
      "rouge_3_precision_ce": 0.05,
      "rouge_3_f_score": 0.04651,
      "rouge_3_f_score_cb": 0.04651,
      "rouge_3_f_score_ce": 0.04651,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.36,
      "rouge_l_recall_cb": 0.36,
      "rouge_l_recall_ce": 0.36,
      "rouge_l_precision": 0.40909,
      "rouge_l_precision_cb": 0.40909,
      "rouge_l_precision_ce": 0.40909,
      "rouge_l_f_score": 0.38298,
      "rouge_l_f_score_cb": 0.38298,
      "rouge_l_f_score_ce": 0.38298,
      "rouge_w_1.2_recall": 0.15517,
      "rouge_w_1.2_recall_cb": 0.15517,
      "rouge_w_1.2_recall_ce": 0.15517,
      "rouge_w_1.2_precision": 0.33566,
      "rouge_w_1.2_precision_cb": 0.33566,
      "rouge_w_1.2_precision_ce": 0.33566,
      "rouge_w_1.2_f_score": 0.21223,
      "rouge_w_1.2_f_score_cb": 0.21223,
      "rouge_w_1.2_f_score_ce": 0.21223,
      "rouge_s*_recall": 0.18,
      "rouge_s*_recall_cb": 0.18,
      "rouge_s*_recall_ce": 0.18,
      "rouge_s*_precision": 0.23377,
      "rouge_s*_precision_cb": 0.23377,
      "rouge_s*_precision_ce": 0.23377,
      "rouge_s*_f_score": 0.20339,
      "rouge_s*_f_score_cb": 0.20339,
      "rouge_s*_f_score_ce": 0.20339,
      "rouge_su*_recall": 0.2037,
      "rouge_su*_recall_cb": 0.2037,
      "rouge_su*_recall_ce": 0.2037,
      "rouge_su*_precision": 0.2619,
      "rouge_su*_precision_cb": 0.2619,
      "rouge_su*_precision_ce": 0.2619,
      "rouge_su*_f_score": 0.22916,
      "rouge_su*_f_score_cb": 0.22916,
      "rouge_su*_f_score_ce": 0.22916
    }
  },
  {
    "id": 18,
    "filename": "PandasEval_18.txt",
    "dataset_comment": "Retrieve the value at the nth row of a given column name in a Pandas DataFrame and return it.",
    "generated_comment": "Access the value at the nth row for a specific column in a pandas DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.63158,
      "rouge_1_recall_cb": 0.63158,
      "rouge_1_recall_ce": 0.63158,
      "rouge_1_precision": 0.8,
      "rouge_1_precision_cb": 0.8,
      "rouge_1_precision_ce": 0.8,
      "rouge_1_f_score": 0.70588,
      "rouge_1_f_score_cb": 0.70588,
      "rouge_1_f_score_ce": 0.70588,
      "rouge_2_recall": 0.44444,
      "rouge_2_recall_cb": 0.44444,
      "rouge_2_recall_ce": 0.44444,
      "rouge_2_precision": 0.57143,
      "rouge_2_precision_cb": 0.57143,
      "rouge_2_precision_ce": 0.57143,
      "rouge_2_f_score": 0.5,
      "rouge_2_f_score_cb": 0.5,
      "rouge_2_f_score_ce": 0.5,
      "rouge_3_recall": 0.35294,
      "rouge_3_recall_cb": 0.35294,
      "rouge_3_recall_ce": 0.35294,
      "rouge_3_precision": 0.46154,
      "rouge_3_precision_cb": 0.46154,
      "rouge_3_precision_ce": 0.46154,
      "rouge_3_f_score": 0.4,
      "rouge_3_f_score_cb": 0.4,
      "rouge_3_f_score_ce": 0.4,
      "rouge_4_recall": 0.25,
      "rouge_4_recall_cb": 0.25,
      "rouge_4_recall_ce": 0.25,
      "rouge_4_precision": 0.33333,
      "rouge_4_precision_cb": 0.33333,
      "rouge_4_precision_ce": 0.33333,
      "rouge_4_f_score": 0.28571,
      "rouge_4_f_score_cb": 0.28571,
      "rouge_4_f_score_ce": 0.28571,
      "rouge_l_recall": 0.63158,
      "rouge_l_recall_cb": 0.63158,
      "rouge_l_recall_ce": 0.63158,
      "rouge_l_precision": 0.8,
      "rouge_l_precision_cb": 0.8,
      "rouge_l_precision_ce": 0.8,
      "rouge_l_f_score": 0.70588,
      "rouge_l_f_score_cb": 0.70588,
      "rouge_l_f_score_ce": 0.70588,
      "rouge_w_1.2_recall": 0.2923,
      "rouge_w_1.2_recall_cb": 0.2923,
      "rouge_w_1.2_recall_ce": 0.2923,
      "rouge_w_1.2_precision": 0.66719,
      "rouge_w_1.2_precision_cb": 0.66719,
      "rouge_w_1.2_precision_ce": 0.66719,
      "rouge_w_1.2_f_score": 0.40651,
      "rouge_w_1.2_f_score_cb": 0.40651,
      "rouge_w_1.2_f_score_ce": 0.40651,
      "rouge_s*_recall": 0.38596,
      "rouge_s*_recall_cb": 0.38596,
      "rouge_s*_recall_ce": 0.38596,
      "rouge_s*_precision": 0.62857,
      "rouge_s*_precision_cb": 0.62857,
      "rouge_s*_precision_ce": 0.62857,
      "rouge_s*_f_score": 0.47826,
      "rouge_s*_f_score_cb": 0.47826,
      "rouge_s*_f_score_ce": 0.47826,
      "rouge_su*_recall": 0.40741,
      "rouge_su*_recall_cb": 0.40741,
      "rouge_su*_recall_ce": 0.40741,
      "rouge_su*_precision": 0.64706,
      "rouge_su*_precision_cb": 0.64706,
      "rouge_su*_precision_ce": 0.64706,
      "rouge_su*_f_score": 0.5,
      "rouge_su*_f_score_cb": 0.5,
      "rouge_su*_f_score_ce": 0.5
    }
  },
  {
    "id": 19,
    "filename": "PandasEval_19.txt",
    "dataset_comment": "Create a new DataFrame that is identical to df_original, but with no rows, and return the new DataFrame.",
    "generated_comment": "Create a new DataFrame with the same column structure as the original DataFrame without any rows.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.47368,
      "rouge_1_recall_cb": 0.47368,
      "rouge_1_recall_ce": 0.47368,
      "rouge_1_precision": 0.5625,
      "rouge_1_precision_cb": 0.5625,
      "rouge_1_precision_ce": 0.5625,
      "rouge_1_f_score": 0.51428,
      "rouge_1_f_score_cb": 0.51428,
      "rouge_1_f_score_ce": 0.51428,
      "rouge_2_recall": 0.16667,
      "rouge_2_recall_cb": 0.16667,
      "rouge_2_recall_ce": 0.16667,
      "rouge_2_precision": 0.2,
      "rouge_2_precision_cb": 0.2,
      "rouge_2_precision_ce": 0.2,
      "rouge_2_f_score": 0.18182,
      "rouge_2_f_score_cb": 0.18182,
      "rouge_2_f_score_ce": 0.18182,
      "rouge_3_recall": 0.11765,
      "rouge_3_recall_cb": 0.11765,
      "rouge_3_recall_ce": 0.11765,
      "rouge_3_precision": 0.14286,
      "rouge_3_precision_cb": 0.14286,
      "rouge_3_precision_ce": 0.14286,
      "rouge_3_f_score": 0.12904,
      "rouge_3_f_score_cb": 0.12904,
      "rouge_3_f_score_ce": 0.12904,
      "rouge_4_recall": 0.0625,
      "rouge_4_recall_cb": 0.0625,
      "rouge_4_recall_ce": 0.0625,
      "rouge_4_precision": 0.07692,
      "rouge_4_precision_cb": 0.07692,
      "rouge_4_precision_ce": 0.07692,
      "rouge_4_f_score": 0.06896,
      "rouge_4_f_score_cb": 0.06896,
      "rouge_4_f_score_ce": 0.06896,
      "rouge_l_recall": 0.36842,
      "rouge_l_recall_cb": 0.36842,
      "rouge_l_recall_ce": 0.36842,
      "rouge_l_precision": 0.4375,
      "rouge_l_precision_cb": 0.4375,
      "rouge_l_precision_ce": 0.4375,
      "rouge_l_f_score": 0.4,
      "rouge_l_f_score_cb": 0.4,
      "rouge_l_f_score_ce": 0.4,
      "rouge_w_1.2_recall": 0.16999,
      "rouge_w_1.2_recall_cb": 0.16999,
      "rouge_w_1.2_recall_ce": 0.16999,
      "rouge_w_1.2_precision": 0.36376,
      "rouge_w_1.2_precision_cb": 0.36376,
      "rouge_w_1.2_precision_ce": 0.36376,
      "rouge_w_1.2_f_score": 0.2317,
      "rouge_w_1.2_f_score_cb": 0.2317,
      "rouge_w_1.2_f_score_ce": 0.2317,
      "rouge_s*_recall": 0.18713,
      "rouge_s*_recall_cb": 0.18713,
      "rouge_s*_recall_ce": 0.18713,
      "rouge_s*_precision": 0.26667,
      "rouge_s*_precision_cb": 0.26667,
      "rouge_s*_precision_ce": 0.26667,
      "rouge_s*_f_score": 0.21993,
      "rouge_s*_f_score_cb": 0.21993,
      "rouge_s*_f_score_ce": 0.21993,
      "rouge_su*_recall": 0.20635,
      "rouge_su*_recall_cb": 0.20635,
      "rouge_su*_recall_ce": 0.20635,
      "rouge_su*_precision": 0.28889,
      "rouge_su*_precision_cb": 0.28889,
      "rouge_su*_precision_ce": 0.28889,
      "rouge_su*_f_score": 0.24074,
      "rouge_su*_f_score_cb": 0.24074,
      "rouge_su*_f_score_ce": 0.24074
    }
  },
  {
    "id": 20,
    "filename": "PandasEval_20.txt",
    "dataset_comment": "Count the number of missing/NaN values in each column of the DataFrame and return a series.",
    "generated_comment": "Calculate the number of missing values in each column of the DataFrame using pandas isnull() method and sum() method.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.70588,
      "rouge_1_recall_cb": 0.70588,
      "rouge_1_recall_ce": 0.70588,
      "rouge_1_precision": 0.63158,
      "rouge_1_precision_cb": 0.63158,
      "rouge_1_precision_ce": 0.63158,
      "rouge_1_f_score": 0.66667,
      "rouge_1_f_score_cb": 0.66667,
      "rouge_1_f_score_ce": 0.66667,
      "rouge_2_recall": 0.5625,
      "rouge_2_recall_cb": 0.5625,
      "rouge_2_recall_ce": 0.5625,
      "rouge_2_precision": 0.5,
      "rouge_2_precision_cb": 0.5,
      "rouge_2_precision_ce": 0.5,
      "rouge_2_f_score": 0.52941,
      "rouge_2_f_score_cb": 0.52941,
      "rouge_2_f_score_ce": 0.52941,
      "rouge_3_recall": 0.46667,
      "rouge_3_recall_cb": 0.46667,
      "rouge_3_recall_ce": 0.46667,
      "rouge_3_precision": 0.41176,
      "rouge_3_precision_cb": 0.41176,
      "rouge_3_precision_ce": 0.41176,
      "rouge_3_f_score": 0.4375,
      "rouge_3_f_score_cb": 0.4375,
      "rouge_3_f_score_ce": 0.4375,
      "rouge_4_recall": 0.35714,
      "rouge_4_recall_cb": 0.35714,
      "rouge_4_recall_ce": 0.35714,
      "rouge_4_precision": 0.3125,
      "rouge_4_precision_cb": 0.3125,
      "rouge_4_precision_ce": 0.3125,
      "rouge_4_f_score": 0.33333,
      "rouge_4_f_score_cb": 0.33333,
      "rouge_4_f_score_ce": 0.33333,
      "rouge_l_recall": 0.70588,
      "rouge_l_recall_cb": 0.70588,
      "rouge_l_recall_ce": 0.70588,
      "rouge_l_precision": 0.63158,
      "rouge_l_precision_cb": 0.63158,
      "rouge_l_precision_ce": 0.63158,
      "rouge_l_f_score": 0.66667,
      "rouge_l_f_score_cb": 0.66667,
      "rouge_l_f_score_ce": 0.66667,
      "rouge_w_1.2_recall": 0.36085,
      "rouge_w_1.2_recall_cb": 0.36085,
      "rouge_w_1.2_recall_ce": 0.36085,
      "rouge_w_1.2_precision": 0.569,
      "rouge_w_1.2_precision_cb": 0.569,
      "rouge_w_1.2_precision_ce": 0.569,
      "rouge_w_1.2_f_score": 0.44163,
      "rouge_w_1.2_f_score_cb": 0.44163,
      "rouge_w_1.2_f_score_ce": 0.44163,
      "rouge_s*_recall": 0.48529,
      "rouge_s*_recall_cb": 0.48529,
      "rouge_s*_recall_ce": 0.48529,
      "rouge_s*_precision": 0.38596,
      "rouge_s*_precision_cb": 0.38596,
      "rouge_s*_precision_ce": 0.38596,
      "rouge_s*_f_score": 0.42996,
      "rouge_s*_f_score_cb": 0.42996,
      "rouge_s*_f_score_ce": 0.42996,
      "rouge_su*_recall": 0.51316,
      "rouge_su*_recall_cb": 0.51316,
      "rouge_su*_recall_ce": 0.51316,
      "rouge_su*_precision": 0.4127,
      "rouge_su*_precision_cb": 0.4127,
      "rouge_su*_precision_ce": 0.4127,
      "rouge_su*_f_score": 0.45748,
      "rouge_su*_f_score_cb": 0.45748,
      "rouge_su*_f_score_ce": 0.45748
    }
  },
  {
    "id": 21,
    "filename": "PandasEval_21.txt",
    "dataset_comment": "Create a new dataframe by filtering values that exceed the mean value of the column from the original dataframe. Use indexing or the `where` function to compare values and add NaNs where necessary. Implement a custom function to remove NaNs, also ensure that NaNs are removed from the first rows by utilizing the `dropna` method.",
    "generated_comment": "Filter out values in the DataFrame that are greater than the mean of each column, then apply a lambda function to drop any NaN values and return a new DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.34545,
      "rouge_1_recall_cb": 0.34545,
      "rouge_1_recall_ce": 0.34545,
      "rouge_1_precision": 0.63333,
      "rouge_1_precision_cb": 0.63333,
      "rouge_1_precision_ce": 0.63333,
      "rouge_1_f_score": 0.44705,
      "rouge_1_f_score_cb": 0.44705,
      "rouge_1_f_score_ce": 0.44705,
      "rouge_2_recall": 0.09259,
      "rouge_2_recall_cb": 0.09259,
      "rouge_2_recall_ce": 0.09259,
      "rouge_2_precision": 0.17241,
      "rouge_2_precision_cb": 0.17241,
      "rouge_2_precision_ce": 0.17241,
      "rouge_2_f_score": 0.12048,
      "rouge_2_f_score_cb": 0.12048,
      "rouge_2_f_score_ce": 0.12048,
      "rouge_3_recall": 0.01887,
      "rouge_3_recall_cb": 0.01887,
      "rouge_3_recall_ce": 0.01887,
      "rouge_3_precision": 0.03571,
      "rouge_3_precision_cb": 0.03571,
      "rouge_3_precision_ce": 0.03571,
      "rouge_3_f_score": 0.02469,
      "rouge_3_f_score_cb": 0.02469,
      "rouge_3_f_score_ce": 0.02469,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.21818,
      "rouge_l_recall_cb": 0.21818,
      "rouge_l_recall_ce": 0.21818,
      "rouge_l_precision": 0.4,
      "rouge_l_precision_cb": 0.4,
      "rouge_l_precision_ce": 0.4,
      "rouge_l_f_score": 0.28235,
      "rouge_l_f_score_cb": 0.28235,
      "rouge_l_f_score_ce": 0.28235,
      "rouge_w_1.2_recall": 0.07194,
      "rouge_w_1.2_recall_cb": 0.07194,
      "rouge_w_1.2_recall_ce": 0.07194,
      "rouge_w_1.2_precision": 0.29395,
      "rouge_w_1.2_precision_cb": 0.29395,
      "rouge_w_1.2_precision_ce": 0.29395,
      "rouge_w_1.2_f_score": 0.11559,
      "rouge_w_1.2_f_score_cb": 0.11559,
      "rouge_w_1.2_f_score_ce": 0.11559,
      "rouge_s*_recall": 0.08687,
      "rouge_s*_recall_cb": 0.08687,
      "rouge_s*_recall_ce": 0.08687,
      "rouge_s*_precision": 0.29655,
      "rouge_s*_precision_cb": 0.29655,
      "rouge_s*_precision_ce": 0.29655,
      "rouge_s*_f_score": 0.13438,
      "rouge_s*_f_score_cb": 0.13438,
      "rouge_s*_f_score_ce": 0.13438,
      "rouge_su*_recall": 0.09552,
      "rouge_su*_recall_cb": 0.09552,
      "rouge_su*_recall_ce": 0.09552,
      "rouge_su*_precision": 0.31681,
      "rouge_su*_precision_cb": 0.31681,
      "rouge_su*_precision_ce": 0.31681,
      "rouge_su*_f_score": 0.14678,
      "rouge_su*_f_score_cb": 0.14678,
      "rouge_su*_f_score_ce": 0.14678
    }
  },
  {
    "id": 22,
    "filename": "PandasEval_22.txt",
    "dataset_comment": "Normalize the dataframe using pandas by subtracting the mean and dividing by the standard deviation on df.iloc[:, 0, -1] along axis zero, and return the normalized dataframe.",
    "generated_comment": "Normalize the input DataFrame by applying a function that subtracts the column mean and divides by the column standard deviation to all columns except the last one.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5,
      "rouge_1_recall_cb": 0.5,
      "rouge_1_recall_ce": 0.5,
      "rouge_1_precision": 0.51852,
      "rouge_1_precision_cb": 0.51852,
      "rouge_1_precision_ce": 0.51852,
      "rouge_1_f_score": 0.50909,
      "rouge_1_f_score_cb": 0.50909,
      "rouge_1_f_score_ce": 0.50909,
      "rouge_2_recall": 0.25926,
      "rouge_2_recall_cb": 0.25926,
      "rouge_2_recall_ce": 0.25926,
      "rouge_2_precision": 0.26923,
      "rouge_2_precision_cb": 0.26923,
      "rouge_2_precision_ce": 0.26923,
      "rouge_2_f_score": 0.26415,
      "rouge_2_f_score_cb": 0.26415,
      "rouge_2_f_score_ce": 0.26415,
      "rouge_3_recall": 0.11538,
      "rouge_3_recall_cb": 0.11538,
      "rouge_3_recall_ce": 0.11538,
      "rouge_3_precision": 0.12,
      "rouge_3_precision_cb": 0.12,
      "rouge_3_precision_ce": 0.12,
      "rouge_3_f_score": 0.11764,
      "rouge_3_f_score_cb": 0.11764,
      "rouge_3_f_score_ce": 0.11764,
      "rouge_4_recall": 0.08,
      "rouge_4_recall_cb": 0.08,
      "rouge_4_recall_ce": 0.08,
      "rouge_4_precision": 0.08333,
      "rouge_4_precision_cb": 0.08333,
      "rouge_4_precision_ce": 0.08333,
      "rouge_4_f_score": 0.08163,
      "rouge_4_f_score_cb": 0.08163,
      "rouge_4_f_score_ce": 0.08163,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.51852,
      "rouge_l_precision_cb": 0.51852,
      "rouge_l_precision_ce": 0.51852,
      "rouge_l_f_score": 0.50909,
      "rouge_l_f_score_cb": 0.50909,
      "rouge_l_f_score_ce": 0.50909,
      "rouge_w_1.2_recall": 0.22806,
      "rouge_w_1.2_recall_cb": 0.22806,
      "rouge_w_1.2_recall_ce": 0.22806,
      "rouge_w_1.2_precision": 0.46056,
      "rouge_w_1.2_precision_cb": 0.46056,
      "rouge_w_1.2_precision_ce": 0.46056,
      "rouge_w_1.2_f_score": 0.30506,
      "rouge_w_1.2_f_score_cb": 0.30506,
      "rouge_w_1.2_f_score_ce": 0.30506,
      "rouge_s*_recall": 0.24074,
      "rouge_s*_recall_cb": 0.24074,
      "rouge_s*_recall_ce": 0.24074,
      "rouge_s*_precision": 0.25926,
      "rouge_s*_precision_cb": 0.25926,
      "rouge_s*_precision_ce": 0.25926,
      "rouge_s*_f_score": 0.24966,
      "rouge_s*_f_score_cb": 0.24966,
      "rouge_s*_f_score_ce": 0.24966,
      "rouge_su*_recall": 0.25926,
      "rouge_su*_recall_cb": 0.25926,
      "rouge_su*_recall_ce": 0.25926,
      "rouge_su*_precision": 0.27851,
      "rouge_su*_precision_cb": 0.27851,
      "rouge_su*_precision_ce": 0.27851,
      "rouge_su*_f_score": 0.26854,
      "rouge_su*_f_score_cb": 0.26854,
      "rouge_su*_f_score_ce": 0.26854
    }
  },
  {
    "id": 23,
    "filename": "PandasEval_23.txt",
    "dataset_comment": "Determine which columns contain NaN values and return a list of the column names that contain NaNs.",
    "generated_comment": "Identify and return the list of column names in the DataFrame where there are missing values by utilizing pandas functionality to check for NaN values and extracting the relevant column names as a list.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.64706,
      "rouge_1_recall_cb": 0.64706,
      "rouge_1_recall_ce": 0.64706,
      "rouge_1_precision": 0.32353,
      "rouge_1_precision_cb": 0.32353,
      "rouge_1_precision_ce": 0.32353,
      "rouge_1_f_score": 0.43137,
      "rouge_1_f_score_cb": 0.43137,
      "rouge_1_f_score_ce": 0.43137,
      "rouge_2_recall": 0.375,
      "rouge_2_recall_cb": 0.375,
      "rouge_2_recall_ce": 0.375,
      "rouge_2_precision": 0.18182,
      "rouge_2_precision_cb": 0.18182,
      "rouge_2_precision_ce": 0.18182,
      "rouge_2_f_score": 0.2449,
      "rouge_2_f_score_cb": 0.2449,
      "rouge_2_f_score_ce": 0.2449,
      "rouge_3_recall": 0.06667,
      "rouge_3_recall_cb": 0.06667,
      "rouge_3_recall_ce": 0.06667,
      "rouge_3_precision": 0.03125,
      "rouge_3_precision_cb": 0.03125,
      "rouge_3_precision_ce": 0.03125,
      "rouge_3_f_score": 0.04255,
      "rouge_3_f_score_cb": 0.04255,
      "rouge_3_f_score_ce": 0.04255,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.41176,
      "rouge_l_recall_cb": 0.41176,
      "rouge_l_recall_ce": 0.41176,
      "rouge_l_precision": 0.20588,
      "rouge_l_precision_cb": 0.20588,
      "rouge_l_precision_ce": 0.20588,
      "rouge_l_f_score": 0.27451,
      "rouge_l_f_score_cb": 0.27451,
      "rouge_l_f_score_ce": 0.27451,
      "rouge_w_1.2_recall": 0.1981,
      "rouge_w_1.2_recall_cb": 0.1981,
      "rouge_w_1.2_recall_ce": 0.1981,
      "rouge_w_1.2_precision": 0.17456,
      "rouge_w_1.2_precision_cb": 0.17456,
      "rouge_w_1.2_precision_ce": 0.17456,
      "rouge_w_1.2_f_score": 0.18559,
      "rouge_w_1.2_f_score_cb": 0.18559,
      "rouge_w_1.2_f_score_ce": 0.18559,
      "rouge_s*_recall": 0.38235,
      "rouge_s*_recall_cb": 0.38235,
      "rouge_s*_recall_ce": 0.38235,
      "rouge_s*_precision": 0.09269,
      "rouge_s*_precision_cb": 0.09269,
      "rouge_s*_precision_ce": 0.09269,
      "rouge_s*_f_score": 0.14921,
      "rouge_s*_f_score_cb": 0.14921,
      "rouge_s*_f_score_ce": 0.14921,
      "rouge_su*_recall": 0.41447,
      "rouge_su*_recall_cb": 0.41447,
      "rouge_su*_recall_ce": 0.41447,
      "rouge_su*_precision": 0.10606,
      "rouge_su*_precision_cb": 0.10606,
      "rouge_su*_precision_ce": 0.10606,
      "rouge_su*_f_score": 0.1689,
      "rouge_su*_f_score_cb": 0.1689,
      "rouge_su*_f_score_ce": 0.1689
    }
  },
  {
    "id": 24,
    "filename": "PandasEval_24.txt",
    "dataset_comment": "Round a single column `A` and return the dataframe.",
    "generated_comment": "Round the values in column 'A' of the input DataFrame to the nearest integer.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.55556,
      "rouge_1_recall_cb": 0.55556,
      "rouge_1_recall_ce": 0.55556,
      "rouge_1_precision": 0.35714,
      "rouge_1_precision_cb": 0.35714,
      "rouge_1_precision_ce": 0.35714,
      "rouge_1_f_score": 0.43478,
      "rouge_1_f_score_cb": 0.43478,
      "rouge_1_f_score_ce": 0.43478,
      "rouge_2_recall": 0.125,
      "rouge_2_recall_cb": 0.125,
      "rouge_2_recall_ce": 0.125,
      "rouge_2_precision": 0.07692,
      "rouge_2_precision_cb": 0.07692,
      "rouge_2_precision_ce": 0.07692,
      "rouge_2_f_score": 0.09524,
      "rouge_2_f_score_cb": 0.09524,
      "rouge_2_f_score_ce": 0.09524,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.55556,
      "rouge_l_recall_cb": 0.55556,
      "rouge_l_recall_ce": 0.55556,
      "rouge_l_precision": 0.35714,
      "rouge_l_precision_cb": 0.35714,
      "rouge_l_precision_ce": 0.35714,
      "rouge_l_f_score": 0.43478,
      "rouge_l_f_score_cb": 0.43478,
      "rouge_l_f_score_ce": 0.43478,
      "rouge_w_1.2_recall": 0.30065,
      "rouge_w_1.2_recall_cb": 0.30065,
      "rouge_w_1.2_recall_ce": 0.30065,
      "rouge_w_1.2_precision": 0.29993,
      "rouge_w_1.2_precision_cb": 0.29993,
      "rouge_w_1.2_precision_ce": 0.29993,
      "rouge_w_1.2_f_score": 0.30029,
      "rouge_w_1.2_f_score_cb": 0.30029,
      "rouge_w_1.2_f_score_ce": 0.30029,
      "rouge_s*_recall": 0.30556,
      "rouge_s*_recall_cb": 0.30556,
      "rouge_s*_recall_ce": 0.30556,
      "rouge_s*_precision": 0.12088,
      "rouge_s*_precision_cb": 0.12088,
      "rouge_s*_precision_ce": 0.12088,
      "rouge_s*_f_score": 0.17323,
      "rouge_s*_f_score_cb": 0.17323,
      "rouge_s*_f_score_ce": 0.17323,
      "rouge_su*_recall": 0.34091,
      "rouge_su*_recall_cb": 0.34091,
      "rouge_su*_recall_ce": 0.34091,
      "rouge_su*_precision": 0.14423,
      "rouge_su*_precision_cb": 0.14423,
      "rouge_su*_precision_ce": 0.14423,
      "rouge_su*_f_score": 0.2027,
      "rouge_su*_f_score_cb": 0.2027,
      "rouge_su*_f_score_ce": 0.2027
    }
  },
  {
    "id": 25,
    "filename": "PandasEval_25.txt",
    "dataset_comment": "Group values of Pandas DataFrame by `id` and select the latest entry by `date` after sorting values in ascending order by `date`.",
    "generated_comment": "Sort the DataFrame by date in ascending order and then group by 'id' and keep the last row for each group.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.54545,
      "rouge_1_recall_cb": 0.54545,
      "rouge_1_recall_ce": 0.54545,
      "rouge_1_precision": 0.57143,
      "rouge_1_precision_cb": 0.57143,
      "rouge_1_precision_ce": 0.57143,
      "rouge_1_f_score": 0.55814,
      "rouge_1_f_score_cb": 0.55814,
      "rouge_1_f_score_ce": 0.55814,
      "rouge_2_recall": 0.28571,
      "rouge_2_recall_cb": 0.28571,
      "rouge_2_recall_ce": 0.28571,
      "rouge_2_precision": 0.3,
      "rouge_2_precision_cb": 0.3,
      "rouge_2_precision_ce": 0.3,
      "rouge_2_f_score": 0.29268,
      "rouge_2_f_score_cb": 0.29268,
      "rouge_2_f_score_ce": 0.29268,
      "rouge_3_recall": 0.1,
      "rouge_3_recall_cb": 0.1,
      "rouge_3_recall_ce": 0.1,
      "rouge_3_precision": 0.10526,
      "rouge_3_precision_cb": 0.10526,
      "rouge_3_precision_ce": 0.10526,
      "rouge_3_f_score": 0.10256,
      "rouge_3_f_score_cb": 0.10256,
      "rouge_3_f_score_ce": 0.10256,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.31818,
      "rouge_l_recall_cb": 0.31818,
      "rouge_l_recall_ce": 0.31818,
      "rouge_l_precision": 0.33333,
      "rouge_l_precision_cb": 0.33333,
      "rouge_l_precision_ce": 0.33333,
      "rouge_l_f_score": 0.32558,
      "rouge_l_f_score_cb": 0.32558,
      "rouge_l_f_score_ce": 0.32558,
      "rouge_w_1.2_recall": 0.14683,
      "rouge_w_1.2_recall_cb": 0.14683,
      "rouge_w_1.2_recall_ce": 0.14683,
      "rouge_w_1.2_precision": 0.28543,
      "rouge_w_1.2_precision_cb": 0.28543,
      "rouge_w_1.2_precision_ce": 0.28543,
      "rouge_w_1.2_f_score": 0.19391,
      "rouge_w_1.2_f_score_cb": 0.19391,
      "rouge_w_1.2_f_score_ce": 0.19391,
      "rouge_s*_recall": 0.19913,
      "rouge_s*_recall_cb": 0.19913,
      "rouge_s*_recall_ce": 0.19913,
      "rouge_s*_precision": 0.21905,
      "rouge_s*_precision_cb": 0.21905,
      "rouge_s*_precision_ce": 0.21905,
      "rouge_s*_f_score": 0.20862,
      "rouge_s*_f_score_cb": 0.20862,
      "rouge_s*_f_score_ce": 0.20862,
      "rouge_su*_recall": 0.23016,
      "rouge_su*_recall_cb": 0.23016,
      "rouge_su*_recall_ce": 0.23016,
      "rouge_su*_precision": 0.25217,
      "rouge_su*_precision_cb": 0.25217,
      "rouge_su*_precision_ce": 0.25217,
      "rouge_su*_f_score": 0.24066,
      "rouge_su*_f_score_cb": 0.24066,
      "rouge_su*_f_score_ce": 0.24066
    }
  },
  {
    "id": 26,
    "filename": "PandasEval_26.txt",
    "dataset_comment": "Shift the 'gdp' column in the Pandas DataFrame up by one and return the DataFrame with the changed 'gdp' column.",
    "generated_comment": "Shift the 'gdp' column values in the DataFrame up by one position by using the shift() function from pandas.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.6,
      "rouge_1_recall_cb": 0.6,
      "rouge_1_recall_ce": 0.6,
      "rouge_1_precision": 0.63158,
      "rouge_1_precision_cb": 0.63158,
      "rouge_1_precision_ce": 0.63158,
      "rouge_1_f_score": 0.61539,
      "rouge_1_f_score_cb": 0.61539,
      "rouge_1_f_score_ce": 0.61539,
      "rouge_2_recall": 0.42105,
      "rouge_2_recall_cb": 0.42105,
      "rouge_2_recall_ce": 0.42105,
      "rouge_2_precision": 0.44444,
      "rouge_2_precision_cb": 0.44444,
      "rouge_2_precision_ce": 0.44444,
      "rouge_2_f_score": 0.43243,
      "rouge_2_f_score_cb": 0.43243,
      "rouge_2_f_score_ce": 0.43243,
      "rouge_3_recall": 0.22222,
      "rouge_3_recall_cb": 0.22222,
      "rouge_3_recall_ce": 0.22222,
      "rouge_3_precision": 0.23529,
      "rouge_3_precision_cb": 0.23529,
      "rouge_3_precision_ce": 0.23529,
      "rouge_3_f_score": 0.22857,
      "rouge_3_f_score_cb": 0.22857,
      "rouge_3_f_score_ce": 0.22857,
      "rouge_4_recall": 0.11765,
      "rouge_4_recall_cb": 0.11765,
      "rouge_4_recall_ce": 0.11765,
      "rouge_4_precision": 0.125,
      "rouge_4_precision_cb": 0.125,
      "rouge_4_precision_ce": 0.125,
      "rouge_4_f_score": 0.12121,
      "rouge_4_f_score_cb": 0.12121,
      "rouge_4_f_score_ce": 0.12121,
      "rouge_l_recall": 0.55,
      "rouge_l_recall_cb": 0.55,
      "rouge_l_recall_ce": 0.55,
      "rouge_l_precision": 0.57895,
      "rouge_l_precision_cb": 0.57895,
      "rouge_l_precision_ce": 0.57895,
      "rouge_l_f_score": 0.5641,
      "rouge_l_f_score_cb": 0.5641,
      "rouge_l_f_score_ce": 0.5641,
      "rouge_w_1.2_recall": 0.26034,
      "rouge_w_1.2_recall_cb": 0.26034,
      "rouge_w_1.2_recall_ce": 0.26034,
      "rouge_w_1.2_precision": 0.49891,
      "rouge_w_1.2_precision_cb": 0.49891,
      "rouge_w_1.2_precision_ce": 0.49891,
      "rouge_w_1.2_f_score": 0.34214,
      "rouge_w_1.2_f_score_cb": 0.34214,
      "rouge_w_1.2_f_score_ce": 0.34214,
      "rouge_s*_recall": 0.32632,
      "rouge_s*_recall_cb": 0.32632,
      "rouge_s*_recall_ce": 0.32632,
      "rouge_s*_precision": 0.36257,
      "rouge_s*_precision_cb": 0.36257,
      "rouge_s*_precision_ce": 0.36257,
      "rouge_s*_f_score": 0.34349,
      "rouge_s*_f_score_cb": 0.34349,
      "rouge_s*_f_score_ce": 0.34349,
      "rouge_su*_recall": 0.34928,
      "rouge_su*_recall_cb": 0.34928,
      "rouge_su*_recall_ce": 0.34928,
      "rouge_su*_precision": 0.38624,
      "rouge_su*_precision_cb": 0.38624,
      "rouge_su*_precision_ce": 0.38624,
      "rouge_su*_f_score": 0.36683,
      "rouge_su*_f_score_cb": 0.36683,
      "rouge_su*_f_score_ce": 0.36683
    }
  },
  {
    "id": 27,
    "filename": "PandasEval_27.txt",
    "dataset_comment": "Remain the rows where line_num is not equal to 0 using the most efficient method.",
    "generated_comment": "Filter the DataFrame 'df' to exclude rows where the column 'line_num' is equal to 0.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.625,
      "rouge_1_recall_cb": 0.625,
      "rouge_1_recall_ce": 0.625,
      "rouge_1_precision": 0.625,
      "rouge_1_precision_cb": 0.625,
      "rouge_1_precision_ce": 0.625,
      "rouge_1_f_score": 0.625,
      "rouge_1_f_score_cb": 0.625,
      "rouge_1_f_score_ce": 0.625,
      "rouge_2_recall": 0.33333,
      "rouge_2_recall_cb": 0.33333,
      "rouge_2_recall_ce": 0.33333,
      "rouge_2_precision": 0.33333,
      "rouge_2_precision_cb": 0.33333,
      "rouge_2_precision_ce": 0.33333,
      "rouge_2_f_score": 0.33333,
      "rouge_2_f_score_cb": 0.33333,
      "rouge_2_f_score_ce": 0.33333,
      "rouge_3_recall": 0.14286,
      "rouge_3_recall_cb": 0.14286,
      "rouge_3_recall_ce": 0.14286,
      "rouge_3_precision": 0.14286,
      "rouge_3_precision_cb": 0.14286,
      "rouge_3_precision_ce": 0.14286,
      "rouge_3_f_score": 0.14286,
      "rouge_3_f_score_cb": 0.14286,
      "rouge_3_f_score_ce": 0.14286,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.5625,
      "rouge_l_recall_cb": 0.5625,
      "rouge_l_recall_ce": 0.5625,
      "rouge_l_precision": 0.5625,
      "rouge_l_precision_cb": 0.5625,
      "rouge_l_precision_ce": 0.5625,
      "rouge_l_f_score": 0.5625,
      "rouge_l_f_score_cb": 0.5625,
      "rouge_l_f_score_ce": 0.5625,
      "rouge_w_1.2_recall": 0.29106,
      "rouge_w_1.2_recall_cb": 0.29106,
      "rouge_w_1.2_recall_ce": 0.29106,
      "rouge_w_1.2_precision": 0.50677,
      "rouge_w_1.2_precision_cb": 0.50677,
      "rouge_w_1.2_precision_ce": 0.50677,
      "rouge_w_1.2_f_score": 0.36975,
      "rouge_w_1.2_f_score_cb": 0.36975,
      "rouge_w_1.2_f_score_ce": 0.36975,
      "rouge_s*_recall": 0.33333,
      "rouge_s*_recall_cb": 0.33333,
      "rouge_s*_recall_ce": 0.33333,
      "rouge_s*_precision": 0.33333,
      "rouge_s*_precision_cb": 0.33333,
      "rouge_s*_precision_ce": 0.33333,
      "rouge_s*_f_score": 0.33333,
      "rouge_s*_f_score_cb": 0.33333,
      "rouge_s*_f_score_ce": 0.33333,
      "rouge_su*_recall": 0.36296,
      "rouge_su*_recall_cb": 0.36296,
      "rouge_su*_recall_ce": 0.36296,
      "rouge_su*_precision": 0.36296,
      "rouge_su*_precision_cb": 0.36296,
      "rouge_su*_precision_ce": 0.36296,
      "rouge_su*_f_score": 0.36296,
      "rouge_su*_f_score_cb": 0.36296,
      "rouge_su*_f_score_ce": 0.36296
    }
  },
  {
    "id": 28,
    "filename": "PandasEval_28.txt",
    "dataset_comment": "In the code, several variables may either contain a pandas DataFrame or be empty.  Check if a certain DataFrame has been created.",
    "generated_comment": "Check if a DataFrame exists by verifying if it is not None.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.18182,
      "rouge_1_recall_cb": 0.18182,
      "rouge_1_recall_ce": 0.18182,
      "rouge_1_precision": 0.33333,
      "rouge_1_precision_cb": 0.33333,
      "rouge_1_precision_ce": 0.33333,
      "rouge_1_f_score": 0.23529,
      "rouge_1_f_score_cb": 0.23529,
      "rouge_1_f_score_ce": 0.23529,
      "rouge_2_recall": 0.09524,
      "rouge_2_recall_cb": 0.09524,
      "rouge_2_recall_ce": 0.09524,
      "rouge_2_precision": 0.18182,
      "rouge_2_precision_cb": 0.18182,
      "rouge_2_precision_ce": 0.18182,
      "rouge_2_f_score": 0.125,
      "rouge_2_f_score_cb": 0.125,
      "rouge_2_f_score_ce": 0.125,
      "rouge_3_recall": 0.05,
      "rouge_3_recall_cb": 0.05,
      "rouge_3_recall_ce": 0.05,
      "rouge_3_precision": 0.1,
      "rouge_3_precision_cb": 0.1,
      "rouge_3_precision_ce": 0.1,
      "rouge_3_f_score": 0.06667,
      "rouge_3_f_score_cb": 0.06667,
      "rouge_3_f_score_ce": 0.06667,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.18182,
      "rouge_l_recall_cb": 0.18182,
      "rouge_l_recall_ce": 0.18182,
      "rouge_l_precision": 0.33333,
      "rouge_l_precision_cb": 0.33333,
      "rouge_l_precision_ce": 0.33333,
      "rouge_l_f_score": 0.23529,
      "rouge_l_f_score_cb": 0.23529,
      "rouge_l_f_score_ce": 0.23529,
      "rouge_w_1.2_recall": 0.08954,
      "rouge_w_1.2_recall_cb": 0.08954,
      "rouge_w_1.2_recall_ce": 0.08954,
      "rouge_w_1.2_precision": 0.30462,
      "rouge_w_1.2_precision_cb": 0.30462,
      "rouge_w_1.2_precision_ce": 0.30462,
      "rouge_w_1.2_f_score": 0.1384,
      "rouge_w_1.2_f_score_cb": 0.1384,
      "rouge_w_1.2_f_score_ce": 0.1384,
      "rouge_s*_recall": 0.03463,
      "rouge_s*_recall_cb": 0.03463,
      "rouge_s*_recall_ce": 0.03463,
      "rouge_s*_precision": 0.12121,
      "rouge_s*_precision_cb": 0.12121,
      "rouge_s*_precision_ce": 0.12121,
      "rouge_s*_f_score": 0.05387,
      "rouge_s*_f_score_cb": 0.05387,
      "rouge_s*_f_score_ce": 0.05387,
      "rouge_su*_recall": 0.04762,
      "rouge_su*_recall_cb": 0.04762,
      "rouge_su*_recall_ce": 0.04762,
      "rouge_su*_precision": 0.15584,
      "rouge_su*_precision_cb": 0.15584,
      "rouge_su*_precision_ce": 0.15584,
      "rouge_su*_f_score": 0.07295,
      "rouge_su*_f_score_cb": 0.07295,
      "rouge_su*_f_score_ce": 0.07295
    }
  },
  {
    "id": 29,
    "filename": "PandasEval_29.txt",
    "dataset_comment": "Move each value from a column to the first empty row in a Pandas DataFrame. Use sorted to align non-NULL data at the top, and use dropna to remove all rows that contain only NaN.",
    "generated_comment": "Apply a lambda function to sort each column in the DataFrame based on whether the values are null or not, and then drop rows where all values are null.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.38889,
      "rouge_1_recall_cb": 0.38889,
      "rouge_1_recall_ce": 0.38889,
      "rouge_1_precision": 0.48276,
      "rouge_1_precision_cb": 0.48276,
      "rouge_1_precision_ce": 0.48276,
      "rouge_1_f_score": 0.43077,
      "rouge_1_f_score_cb": 0.43077,
      "rouge_1_f_score_ce": 0.43077,
      "rouge_2_recall": 0.0,
      "rouge_2_recall_cb": 0.0,
      "rouge_2_recall_ce": 0.0,
      "rouge_2_precision": 0.0,
      "rouge_2_precision_cb": 0.0,
      "rouge_2_precision_ce": 0.0,
      "rouge_2_f_score": 0.0,
      "rouge_2_f_score_cb": 0.0,
      "rouge_2_f_score_ce": 0.0,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.19444,
      "rouge_l_recall_cb": 0.19444,
      "rouge_l_recall_ce": 0.19444,
      "rouge_l_precision": 0.24138,
      "rouge_l_precision_cb": 0.24138,
      "rouge_l_precision_ce": 0.24138,
      "rouge_l_f_score": 0.21538,
      "rouge_l_f_score_cb": 0.21538,
      "rouge_l_f_score_ce": 0.21538,
      "rouge_w_1.2_recall": 0.06866,
      "rouge_w_1.2_recall_cb": 0.06866,
      "rouge_w_1.2_recall_ce": 0.06866,
      "rouge_w_1.2_precision": 0.17452,
      "rouge_w_1.2_precision_cb": 0.17452,
      "rouge_w_1.2_precision_ce": 0.17452,
      "rouge_w_1.2_f_score": 0.09855,
      "rouge_w_1.2_f_score_cb": 0.09855,
      "rouge_w_1.2_f_score_ce": 0.09855,
      "rouge_s*_recall": 0.12063,
      "rouge_s*_recall_cb": 0.12063,
      "rouge_s*_recall_ce": 0.12063,
      "rouge_s*_precision": 0.18719,
      "rouge_s*_precision_cb": 0.18719,
      "rouge_s*_precision_ce": 0.18719,
      "rouge_s*_f_score": 0.14671,
      "rouge_s*_f_score_cb": 0.14671,
      "rouge_s*_f_score_ce": 0.14671,
      "rouge_su*_recall": 0.13534,
      "rouge_su*_recall_cb": 0.13534,
      "rouge_su*_recall_ce": 0.13534,
      "rouge_su*_precision": 0.20737,
      "rouge_su*_precision_cb": 0.20737,
      "rouge_su*_precision_ce": 0.20737,
      "rouge_su*_f_score": 0.16379,
      "rouge_su*_f_score_cb": 0.16379,
      "rouge_su*_f_score_ce": 0.16379
    }
  },
  {
    "id": 30,
    "filename": "PandasEval_30.txt",
    "dataset_comment": "After assigning a list or array-like value to the columns, the column is considered as type object. Assign the emails to the first row and the 'Email' column.",
    "generated_comment": "I want to create a dataframe with one of the column as a list or array.Convert the 'Email' column to object type to store a list or array.Assign the list of emails to the 'Email' column for the first row in the dataframe.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.75862,
      "rouge_1_recall_cb": 0.75862,
      "rouge_1_recall_ce": 0.75862,
      "rouge_1_precision": 0.48889,
      "rouge_1_precision_cb": 0.48889,
      "rouge_1_precision_ce": 0.48889,
      "rouge_1_f_score": 0.5946,
      "rouge_1_f_score_cb": 0.5946,
      "rouge_1_f_score_ce": 0.5946,
      "rouge_2_recall": 0.42857,
      "rouge_2_recall_cb": 0.42857,
      "rouge_2_recall_ce": 0.42857,
      "rouge_2_precision": 0.27273,
      "rouge_2_precision_cb": 0.27273,
      "rouge_2_precision_ce": 0.27273,
      "rouge_2_f_score": 0.33333,
      "rouge_2_f_score_cb": 0.33333,
      "rouge_2_f_score_ce": 0.33333,
      "rouge_3_recall": 0.18519,
      "rouge_3_recall_cb": 0.18519,
      "rouge_3_recall_ce": 0.18519,
      "rouge_3_precision": 0.11628,
      "rouge_3_precision_cb": 0.11628,
      "rouge_3_precision_ce": 0.11628,
      "rouge_3_f_score": 0.14286,
      "rouge_3_f_score_cb": 0.14286,
      "rouge_3_f_score_ce": 0.14286,
      "rouge_4_recall": 0.03846,
      "rouge_4_recall_cb": 0.03846,
      "rouge_4_recall_ce": 0.03846,
      "rouge_4_precision": 0.02381,
      "rouge_4_precision_cb": 0.02381,
      "rouge_4_precision_ce": 0.02381,
      "rouge_4_f_score": 0.02941,
      "rouge_4_f_score_cb": 0.02941,
      "rouge_4_f_score_ce": 0.02941,
      "rouge_l_recall": 0.51724,
      "rouge_l_recall_cb": 0.51724,
      "rouge_l_recall_ce": 0.51724,
      "rouge_l_precision": 0.33333,
      "rouge_l_precision_cb": 0.33333,
      "rouge_l_precision_ce": 0.33333,
      "rouge_l_f_score": 0.4054,
      "rouge_l_f_score_cb": 0.4054,
      "rouge_l_f_score_ce": 0.4054,
      "rouge_w_1.2_recall": 0.21262,
      "rouge_w_1.2_recall_cb": 0.21262,
      "rouge_w_1.2_recall_ce": 0.21262,
      "rouge_w_1.2_precision": 0.2687,
      "rouge_w_1.2_precision_cb": 0.2687,
      "rouge_w_1.2_precision_ce": 0.2687,
      "rouge_w_1.2_f_score": 0.23739,
      "rouge_w_1.2_f_score_cb": 0.23739,
      "rouge_w_1.2_f_score_ce": 0.23739,
      "rouge_s*_recall": 0.5468,
      "rouge_s*_recall_cb": 0.5468,
      "rouge_s*_recall_ce": 0.5468,
      "rouge_s*_precision": 0.22424,
      "rouge_s*_precision_cb": 0.22424,
      "rouge_s*_precision_ce": 0.22424,
      "rouge_s*_f_score": 0.31805,
      "rouge_s*_f_score_cb": 0.31805,
      "rouge_s*_f_score_ce": 0.31805,
      "rouge_su*_recall": 0.55991,
      "rouge_su*_recall_cb": 0.55991,
      "rouge_su*_recall_ce": 0.55991,
      "rouge_su*_precision": 0.23501,
      "rouge_su*_precision_cb": 0.23501,
      "rouge_su*_precision_ce": 0.23501,
      "rouge_su*_f_score": 0.33106,
      "rouge_su*_f_score_cb": 0.33106,
      "rouge_su*_f_score_ce": 0.33106
    }
  },
  {
    "id": 31,
    "filename": "PandasEval_31.txt",
    "dataset_comment": "Drop consecutive duplicates and return the result.",
    "generated_comment": "Filter out consecutive duplicate values in a pandas Series by comparing each element with its neighbor using shift() function and returning only the elements that are not equal to their next neighbor.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.71429,
      "rouge_1_recall_cb": 0.71429,
      "rouge_1_recall_ce": 0.71429,
      "rouge_1_precision": 0.15625,
      "rouge_1_precision_cb": 0.15625,
      "rouge_1_precision_ce": 0.15625,
      "rouge_1_f_score": 0.25641,
      "rouge_1_f_score_cb": 0.25641,
      "rouge_1_f_score_ce": 0.25641,
      "rouge_2_recall": 0.33333,
      "rouge_2_recall_cb": 0.33333,
      "rouge_2_recall_ce": 0.33333,
      "rouge_2_precision": 0.06452,
      "rouge_2_precision_cb": 0.06452,
      "rouge_2_precision_ce": 0.06452,
      "rouge_2_f_score": 0.10811,
      "rouge_2_f_score_cb": 0.10811,
      "rouge_2_f_score_ce": 0.10811,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.71429,
      "rouge_l_recall_cb": 0.71429,
      "rouge_l_recall_ce": 0.71429,
      "rouge_l_precision": 0.15625,
      "rouge_l_precision_cb": 0.15625,
      "rouge_l_precision_ce": 0.15625,
      "rouge_l_f_score": 0.25641,
      "rouge_l_f_score_cb": 0.25641,
      "rouge_l_f_score_ce": 0.25641,
      "rouge_w_1.2_recall": 0.48401,
      "rouge_w_1.2_recall_cb": 0.48401,
      "rouge_w_1.2_recall_ce": 0.48401,
      "rouge_w_1.2_precision": 0.15625,
      "rouge_w_1.2_precision_cb": 0.15625,
      "rouge_w_1.2_precision_ce": 0.15625,
      "rouge_w_1.2_f_score": 0.23624,
      "rouge_w_1.2_f_score_cb": 0.23624,
      "rouge_w_1.2_f_score_ce": 0.23624,
      "rouge_s*_recall": 0.47619,
      "rouge_s*_recall_cb": 0.47619,
      "rouge_s*_recall_ce": 0.47619,
      "rouge_s*_precision": 0.02016,
      "rouge_s*_precision_cb": 0.02016,
      "rouge_s*_precision_ce": 0.02016,
      "rouge_s*_f_score": 0.03868,
      "rouge_s*_f_score_cb": 0.03868,
      "rouge_s*_f_score_ce": 0.03868,
      "rouge_su*_recall": 0.55556,
      "rouge_su*_recall_cb": 0.55556,
      "rouge_su*_recall_ce": 0.55556,
      "rouge_su*_precision": 0.02846,
      "rouge_su*_precision_cb": 0.02846,
      "rouge_su*_precision_ce": 0.02846,
      "rouge_su*_f_score": 0.05415,
      "rouge_su*_f_score_cb": 0.05415,
      "rouge_su*_f_score_ce": 0.05415
    }
  },
  {
    "id": 32,
    "filename": "PandasEval_32.txt",
    "dataset_comment": "Create a Series from the list [56, 24, 421, 90].",
    "generated_comment": "Create a pandas Series with the values [56, 24, 421, 90] to work with.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.8,
      "rouge_1_recall_cb": 0.8,
      "rouge_1_recall_ce": 0.8,
      "rouge_1_precision": 0.57143,
      "rouge_1_precision_cb": 0.57143,
      "rouge_1_precision_ce": 0.57143,
      "rouge_1_f_score": 0.66667,
      "rouge_1_f_score_cb": 0.66667,
      "rouge_1_f_score_ce": 0.66667,
      "rouge_2_recall": 0.44444,
      "rouge_2_recall_cb": 0.44444,
      "rouge_2_recall_ce": 0.44444,
      "rouge_2_precision": 0.30769,
      "rouge_2_precision_cb": 0.30769,
      "rouge_2_precision_ce": 0.30769,
      "rouge_2_f_score": 0.36363,
      "rouge_2_f_score_cb": 0.36363,
      "rouge_2_f_score_ce": 0.36363,
      "rouge_3_recall": 0.25,
      "rouge_3_recall_cb": 0.25,
      "rouge_3_recall_ce": 0.25,
      "rouge_3_precision": 0.16667,
      "rouge_3_precision_cb": 0.16667,
      "rouge_3_precision_ce": 0.16667,
      "rouge_3_f_score": 0.2,
      "rouge_3_f_score_cb": 0.2,
      "rouge_3_f_score_ce": 0.2,
      "rouge_4_recall": 0.14286,
      "rouge_4_recall_cb": 0.14286,
      "rouge_4_recall_ce": 0.14286,
      "rouge_4_precision": 0.09091,
      "rouge_4_precision_cb": 0.09091,
      "rouge_4_precision_ce": 0.09091,
      "rouge_4_f_score": 0.11111,
      "rouge_4_f_score_cb": 0.11111,
      "rouge_4_f_score_ce": 0.11111,
      "rouge_l_recall": 0.8,
      "rouge_l_recall_cb": 0.8,
      "rouge_l_recall_ce": 0.8,
      "rouge_l_precision": 0.57143,
      "rouge_l_precision_cb": 0.57143,
      "rouge_l_precision_ce": 0.57143,
      "rouge_l_f_score": 0.66667,
      "rouge_l_f_score_cb": 0.66667,
      "rouge_l_f_score_ce": 0.66667,
      "rouge_w_1.2_recall": 0.43041,
      "rouge_w_1.2_recall_cb": 0.43041,
      "rouge_w_1.2_recall_ce": 0.43041,
      "rouge_w_1.2_precision": 0.48725,
      "rouge_w_1.2_precision_cb": 0.48725,
      "rouge_w_1.2_precision_ce": 0.48725,
      "rouge_w_1.2_f_score": 0.45707,
      "rouge_w_1.2_f_score_cb": 0.45707,
      "rouge_w_1.2_f_score_ce": 0.45707,
      "rouge_s*_recall": 0.62222,
      "rouge_s*_recall_cb": 0.62222,
      "rouge_s*_recall_ce": 0.62222,
      "rouge_s*_precision": 0.30769,
      "rouge_s*_precision_cb": 0.30769,
      "rouge_s*_precision_ce": 0.30769,
      "rouge_s*_f_score": 0.41176,
      "rouge_s*_f_score_cb": 0.41176,
      "rouge_s*_f_score_ce": 0.41176,
      "rouge_su*_recall": 0.64815,
      "rouge_su*_recall_cb": 0.64815,
      "rouge_su*_recall_ce": 0.64815,
      "rouge_su*_precision": 0.33654,
      "rouge_su*_precision_cb": 0.33654,
      "rouge_su*_precision_ce": 0.33654,
      "rouge_su*_f_score": 0.44304,
      "rouge_su*_f_score_cb": 0.44304,
      "rouge_su*_f_score_ce": 0.44304
    }
  },
  {
    "id": 33,
    "filename": "PandasEval_33.txt",
    "dataset_comment": "Retrieve the last N rows of a pandas DataFrame.",
    "generated_comment": "Return the last 'n' rows of a DataFrame using the tail method in pandas.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.88889,
      "rouge_1_recall_cb": 0.88889,
      "rouge_1_recall_ce": 0.88889,
      "rouge_1_precision": 0.57143,
      "rouge_1_precision_cb": 0.57143,
      "rouge_1_precision_ce": 0.57143,
      "rouge_1_f_score": 0.69565,
      "rouge_1_f_score_cb": 0.69565,
      "rouge_1_f_score_ce": 0.69565,
      "rouge_2_recall": 0.625,
      "rouge_2_recall_cb": 0.625,
      "rouge_2_recall_ce": 0.625,
      "rouge_2_precision": 0.38462,
      "rouge_2_precision_cb": 0.38462,
      "rouge_2_precision_ce": 0.38462,
      "rouge_2_f_score": 0.47619,
      "rouge_2_f_score_cb": 0.47619,
      "rouge_2_f_score_ce": 0.47619,
      "rouge_3_recall": 0.57143,
      "rouge_3_recall_cb": 0.57143,
      "rouge_3_recall_ce": 0.57143,
      "rouge_3_precision": 0.33333,
      "rouge_3_precision_cb": 0.33333,
      "rouge_3_precision_ce": 0.33333,
      "rouge_3_f_score": 0.42105,
      "rouge_3_f_score_cb": 0.42105,
      "rouge_3_f_score_ce": 0.42105,
      "rouge_4_recall": 0.5,
      "rouge_4_recall_cb": 0.5,
      "rouge_4_recall_ce": 0.5,
      "rouge_4_precision": 0.27273,
      "rouge_4_precision_cb": 0.27273,
      "rouge_4_precision_ce": 0.27273,
      "rouge_4_f_score": 0.35294,
      "rouge_4_f_score_cb": 0.35294,
      "rouge_4_f_score_ce": 0.35294,
      "rouge_l_recall": 0.77778,
      "rouge_l_recall_cb": 0.77778,
      "rouge_l_recall_ce": 0.77778,
      "rouge_l_precision": 0.5,
      "rouge_l_precision_cb": 0.5,
      "rouge_l_precision_ce": 0.5,
      "rouge_l_f_score": 0.6087,
      "rouge_l_f_score_cb": 0.6087,
      "rouge_l_f_score_ce": 0.6087,
      "rouge_w_1.2_recall": 0.5012,
      "rouge_w_1.2_recall_cb": 0.5012,
      "rouge_w_1.2_recall_ce": 0.5012,
      "rouge_w_1.2_precision": 0.5,
      "rouge_w_1.2_precision_cb": 0.5,
      "rouge_w_1.2_precision_ce": 0.5,
      "rouge_w_1.2_f_score": 0.5006,
      "rouge_w_1.2_f_score_cb": 0.5006,
      "rouge_w_1.2_f_score_ce": 0.5006,
      "rouge_s*_recall": 0.75,
      "rouge_s*_recall_cb": 0.75,
      "rouge_s*_recall_ce": 0.75,
      "rouge_s*_precision": 0.2967,
      "rouge_s*_precision_cb": 0.2967,
      "rouge_s*_precision_ce": 0.2967,
      "rouge_s*_f_score": 0.42519,
      "rouge_s*_f_score_cb": 0.42519,
      "rouge_s*_f_score_ce": 0.42519,
      "rouge_su*_recall": 0.75,
      "rouge_su*_recall_cb": 0.75,
      "rouge_su*_recall_ce": 0.75,
      "rouge_su*_precision": 0.31731,
      "rouge_su*_precision_cb": 0.31731,
      "rouge_su*_precision_ce": 0.31731,
      "rouge_su*_f_score": 0.44595,
      "rouge_su*_f_score_cb": 0.44595,
      "rouge_su*_f_score_ce": 0.44595
    }
  },
  {
    "id": 34,
    "filename": "PandasEval_34.txt",
    "dataset_comment": "Append the dictionary to the DataFrame and return the DataFrame.",
    "generated_comment": "Append a dictionary to a pandas DataFrame efficiently by using the append method with the ignore_index parameter set to True.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.6,
      "rouge_1_recall_cb": 0.6,
      "rouge_1_recall_ce": 0.6,
      "rouge_1_precision": 0.28571,
      "rouge_1_precision_cb": 0.28571,
      "rouge_1_precision_ce": 0.28571,
      "rouge_1_f_score": 0.38709,
      "rouge_1_f_score_cb": 0.38709,
      "rouge_1_f_score_ce": 0.38709,
      "rouge_2_recall": 0.11111,
      "rouge_2_recall_cb": 0.11111,
      "rouge_2_recall_ce": 0.11111,
      "rouge_2_precision": 0.05,
      "rouge_2_precision_cb": 0.05,
      "rouge_2_precision_ce": 0.05,
      "rouge_2_f_score": 0.06897,
      "rouge_2_f_score_cb": 0.06897,
      "rouge_2_f_score_ce": 0.06897,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.2381,
      "rouge_l_precision_cb": 0.2381,
      "rouge_l_precision_ce": 0.2381,
      "rouge_l_f_score": 0.32259,
      "rouge_l_f_score_cb": 0.32259,
      "rouge_l_f_score_ce": 0.32259,
      "rouge_w_1.2_recall": 0.27055,
      "rouge_w_1.2_recall_cb": 0.27055,
      "rouge_w_1.2_recall_ce": 0.27055,
      "rouge_w_1.2_precision": 0.20419,
      "rouge_w_1.2_precision_cb": 0.20419,
      "rouge_w_1.2_precision_ce": 0.20419,
      "rouge_w_1.2_f_score": 0.23273,
      "rouge_w_1.2_f_score_cb": 0.23273,
      "rouge_w_1.2_f_score_ce": 0.23273,
      "rouge_s*_recall": 0.35556,
      "rouge_s*_recall_cb": 0.35556,
      "rouge_s*_recall_ce": 0.35556,
      "rouge_s*_precision": 0.07619,
      "rouge_s*_precision_cb": 0.07619,
      "rouge_s*_precision_ce": 0.07619,
      "rouge_s*_f_score": 0.12549,
      "rouge_s*_f_score_cb": 0.12549,
      "rouge_s*_f_score_ce": 0.12549,
      "rouge_su*_recall": 0.40741,
      "rouge_su*_recall_cb": 0.40741,
      "rouge_su*_recall_ce": 0.40741,
      "rouge_su*_precision": 0.09565,
      "rouge_su*_precision_cb": 0.09565,
      "rouge_su*_precision_ce": 0.09565,
      "rouge_su*_f_score": 0.15493,
      "rouge_su*_f_score_cb": 0.15493,
      "rouge_su*_f_score_ce": 0.15493
    }
  },
  {
    "id": 35,
    "filename": "PandasEval_35.txt",
    "dataset_comment": "Remove columns based on duplicate column names and return the duplicated dataframe.",
    "generated_comment": "Remove duplicates in a pandas DataFrame based on column names by keeping only the first occurrence of each column.Input: df (pandas DataFrame) - the DataFrame to remove duplicates from based on column names.Output: df (pandas DataFrame) - the DataFrame after removing duplicates based on column names.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.83333,
      "rouge_1_recall_cb": 0.83333,
      "rouge_1_recall_ce": 0.83333,
      "rouge_1_precision": 0.21739,
      "rouge_1_precision_cb": 0.21739,
      "rouge_1_precision_ce": 0.21739,
      "rouge_1_f_score": 0.34483,
      "rouge_1_f_score_cb": 0.34483,
      "rouge_1_f_score_ce": 0.34483,
      "rouge_2_recall": 0.18182,
      "rouge_2_recall_cb": 0.18182,
      "rouge_2_recall_ce": 0.18182,
      "rouge_2_precision": 0.04444,
      "rouge_2_precision_cb": 0.04444,
      "rouge_2_precision_ce": 0.04444,
      "rouge_2_f_score": 0.07142,
      "rouge_2_f_score_cb": 0.07142,
      "rouge_2_f_score_ce": 0.07142,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.66667,
      "rouge_l_recall_cb": 0.66667,
      "rouge_l_recall_ce": 0.66667,
      "rouge_l_precision": 0.17391,
      "rouge_l_precision_cb": 0.17391,
      "rouge_l_precision_ce": 0.17391,
      "rouge_l_f_score": 0.27586,
      "rouge_l_f_score_cb": 0.27586,
      "rouge_l_f_score_ce": 0.27586,
      "rouge_w_1.2_recall": 0.34173,
      "rouge_w_1.2_recall_cb": 0.34173,
      "rouge_w_1.2_recall_ce": 0.34173,
      "rouge_w_1.2_precision": 0.14654,
      "rouge_w_1.2_precision_cb": 0.14654,
      "rouge_w_1.2_precision_ce": 0.14654,
      "rouge_w_1.2_f_score": 0.20512,
      "rouge_w_1.2_f_score_cb": 0.20512,
      "rouge_w_1.2_f_score_ce": 0.20512,
      "rouge_s*_recall": 0.68182,
      "rouge_s*_recall_cb": 0.68182,
      "rouge_s*_recall_ce": 0.68182,
      "rouge_s*_precision": 0.04348,
      "rouge_s*_precision_cb": 0.04348,
      "rouge_s*_precision_ce": 0.04348,
      "rouge_s*_f_score": 0.08175,
      "rouge_s*_f_score_cb": 0.08175,
      "rouge_s*_f_score_ce": 0.08175,
      "rouge_su*_recall": 0.7013,
      "rouge_su*_recall_cb": 0.7013,
      "rouge_su*_recall_ce": 0.7013,
      "rouge_su*_precision": 0.05,
      "rouge_su*_precision_cb": 0.05,
      "rouge_su*_precision_ce": 0.05,
      "rouge_su*_f_score": 0.09334,
      "rouge_su*_f_score_cb": 0.09334,
      "rouge_su*_f_score_ce": 0.09334
    }
  },
  {
    "id": 36,
    "filename": "PandasEval_36.txt",
    "dataset_comment": "Obtain a pandas DataFrame without the index and print the entire DataFrame without displaying the index.",
    "generated_comment": "Convert the DataFrame to a string representation without including the index.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.375,
      "rouge_1_recall_cb": 0.375,
      "rouge_1_recall_ce": 0.375,
      "rouge_1_precision": 0.54545,
      "rouge_1_precision_cb": 0.54545,
      "rouge_1_precision_ce": 0.54545,
      "rouge_1_f_score": 0.44444,
      "rouge_1_f_score_cb": 0.44444,
      "rouge_1_f_score_ce": 0.44444,
      "rouge_2_recall": 0.06667,
      "rouge_2_recall_cb": 0.06667,
      "rouge_2_recall_ce": 0.06667,
      "rouge_2_precision": 0.1,
      "rouge_2_precision_cb": 0.1,
      "rouge_2_precision_ce": 0.1,
      "rouge_2_f_score": 0.08,
      "rouge_2_f_score_cb": 0.08,
      "rouge_2_f_score_ce": 0.08,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.3125,
      "rouge_l_recall_cb": 0.3125,
      "rouge_l_recall_ce": 0.3125,
      "rouge_l_precision": 0.45455,
      "rouge_l_precision_cb": 0.45455,
      "rouge_l_precision_ce": 0.45455,
      "rouge_l_f_score": 0.37037,
      "rouge_l_f_score_cb": 0.37037,
      "rouge_l_f_score_ce": 0.37037,
      "rouge_w_1.2_recall": 0.15073,
      "rouge_w_1.2_recall_cb": 0.15073,
      "rouge_w_1.2_recall_ce": 0.15073,
      "rouge_w_1.2_precision": 0.38173,
      "rouge_w_1.2_precision_cb": 0.38173,
      "rouge_w_1.2_precision_ce": 0.38173,
      "rouge_w_1.2_f_score": 0.21612,
      "rouge_w_1.2_f_score_cb": 0.21612,
      "rouge_w_1.2_f_score_ce": 0.21612,
      "rouge_s*_recall": 0.10833,
      "rouge_s*_recall_cb": 0.10833,
      "rouge_s*_recall_ce": 0.10833,
      "rouge_s*_precision": 0.23636,
      "rouge_s*_precision_cb": 0.23636,
      "rouge_s*_precision_ce": 0.23636,
      "rouge_s*_f_score": 0.14857,
      "rouge_s*_f_score_cb": 0.14857,
      "rouge_s*_f_score_ce": 0.14857,
      "rouge_su*_recall": 0.13333,
      "rouge_su*_recall_cb": 0.13333,
      "rouge_su*_recall_ce": 0.13333,
      "rouge_su*_precision": 0.27692,
      "rouge_su*_precision_cb": 0.27692,
      "rouge_su*_precision_ce": 0.27692,
      "rouge_su*_f_score": 0.18,
      "rouge_su*_f_score_cb": 0.18,
      "rouge_su*_f_score_ce": 0.18
    }
  },
  {
    "id": 37,
    "filename": "PandasEval_37.txt",
    "dataset_comment": "Clip the values of `col_1` between -2 and 2 where `col_0` is equal to 'a' using the `clip` function in Pandas.",
    "generated_comment": "Modify the 'col_1' values in the DataFrame where 'col_0' is 'a' to be within the range of -2 and 2 using the clip method in pandas.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.82609,
      "rouge_1_recall_cb": 0.82609,
      "rouge_1_recall_ce": 0.82609,
      "rouge_1_precision": 0.67857,
      "rouge_1_precision_cb": 0.67857,
      "rouge_1_precision_ce": 0.67857,
      "rouge_1_f_score": 0.7451,
      "rouge_1_f_score_cb": 0.7451,
      "rouge_1_f_score_ce": 0.7451,
      "rouge_2_recall": 0.40909,
      "rouge_2_recall_cb": 0.40909,
      "rouge_2_recall_ce": 0.40909,
      "rouge_2_precision": 0.33333,
      "rouge_2_precision_cb": 0.33333,
      "rouge_2_precision_ce": 0.33333,
      "rouge_2_f_score": 0.36734,
      "rouge_2_f_score_cb": 0.36734,
      "rouge_2_f_score_ce": 0.36734,
      "rouge_3_recall": 0.19048,
      "rouge_3_recall_cb": 0.19048,
      "rouge_3_recall_ce": 0.19048,
      "rouge_3_precision": 0.15385,
      "rouge_3_precision_cb": 0.15385,
      "rouge_3_precision_ce": 0.15385,
      "rouge_3_f_score": 0.17022,
      "rouge_3_f_score_cb": 0.17022,
      "rouge_3_f_score_ce": 0.17022,
      "rouge_4_recall": 0.05,
      "rouge_4_recall_cb": 0.05,
      "rouge_4_recall_ce": 0.05,
      "rouge_4_precision": 0.04,
      "rouge_4_precision_cb": 0.04,
      "rouge_4_precision_ce": 0.04,
      "rouge_4_f_score": 0.04444,
      "rouge_4_f_score_cb": 0.04444,
      "rouge_4_f_score_ce": 0.04444,
      "rouge_l_recall": 0.56522,
      "rouge_l_recall_cb": 0.56522,
      "rouge_l_recall_ce": 0.56522,
      "rouge_l_precision": 0.46429,
      "rouge_l_precision_cb": 0.46429,
      "rouge_l_precision_ce": 0.46429,
      "rouge_l_f_score": 0.50981,
      "rouge_l_f_score_cb": 0.50981,
      "rouge_l_f_score_ce": 0.50981,
      "rouge_w_1.2_recall": 0.22931,
      "rouge_w_1.2_recall_cb": 0.22931,
      "rouge_w_1.2_recall_ce": 0.22931,
      "rouge_w_1.2_precision": 0.35265,
      "rouge_w_1.2_precision_cb": 0.35265,
      "rouge_w_1.2_precision_ce": 0.35265,
      "rouge_w_1.2_f_score": 0.27791,
      "rouge_w_1.2_f_score_cb": 0.27791,
      "rouge_w_1.2_f_score_ce": 0.27791,
      "rouge_s*_recall": 0.56126,
      "rouge_s*_recall_cb": 0.56126,
      "rouge_s*_recall_ce": 0.56126,
      "rouge_s*_precision": 0.37566,
      "rouge_s*_precision_cb": 0.37566,
      "rouge_s*_precision_ce": 0.37566,
      "rouge_s*_f_score": 0.45008,
      "rouge_s*_f_score_cb": 0.45008,
      "rouge_s*_f_score_ce": 0.45008,
      "rouge_su*_recall": 0.58182,
      "rouge_su*_recall_cb": 0.58182,
      "rouge_su*_recall_ce": 0.58182,
      "rouge_su*_precision": 0.39506,
      "rouge_su*_precision_cb": 0.39506,
      "rouge_su*_precision_ce": 0.39506,
      "rouge_su*_f_score": 0.47059,
      "rouge_su*_f_score_cb": 0.47059,
      "rouge_su*_f_score_ce": 0.47059
    }
  },
  {
    "id": 38,
    "filename": "PandasEval_38.txt",
    "dataset_comment": "Change the column labels of df and return the renamed dataframe.",
    "generated_comment": "Rename the columns of a DataFrame by mapping the original column names to the new column names and utilizing the rename() function provided by pandas.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.63636,
      "rouge_1_recall_cb": 0.63636,
      "rouge_1_recall_ce": 0.63636,
      "rouge_1_precision": 0.28,
      "rouge_1_precision_cb": 0.28,
      "rouge_1_precision_ce": 0.28,
      "rouge_1_f_score": 0.38889,
      "rouge_1_f_score_cb": 0.38889,
      "rouge_1_f_score_ce": 0.38889,
      "rouge_2_recall": 0.2,
      "rouge_2_recall_cb": 0.2,
      "rouge_2_recall_ce": 0.2,
      "rouge_2_precision": 0.08333,
      "rouge_2_precision_cb": 0.08333,
      "rouge_2_precision_ce": 0.08333,
      "rouge_2_f_score": 0.11764,
      "rouge_2_f_score_cb": 0.11764,
      "rouge_2_f_score_ce": 0.11764,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.54545,
      "rouge_l_recall_cb": 0.54545,
      "rouge_l_recall_ce": 0.54545,
      "rouge_l_precision": 0.24,
      "rouge_l_precision_cb": 0.24,
      "rouge_l_precision_ce": 0.24,
      "rouge_l_f_score": 0.33333,
      "rouge_l_f_score_cb": 0.33333,
      "rouge_l_f_score_ce": 0.33333,
      "rouge_w_1.2_recall": 0.27102,
      "rouge_w_1.2_recall_cb": 0.27102,
      "rouge_w_1.2_recall_ce": 0.27102,
      "rouge_w_1.2_precision": 0.19263,
      "rouge_w_1.2_precision_cb": 0.19263,
      "rouge_w_1.2_precision_ce": 0.19263,
      "rouge_w_1.2_f_score": 0.2252,
      "rouge_w_1.2_f_score_cb": 0.2252,
      "rouge_w_1.2_f_score_ce": 0.2252,
      "rouge_s*_recall": 0.34545,
      "rouge_s*_recall_cb": 0.34545,
      "rouge_s*_recall_ce": 0.34545,
      "rouge_s*_precision": 0.06333,
      "rouge_s*_precision_cb": 0.06333,
      "rouge_s*_precision_ce": 0.06333,
      "rouge_s*_f_score": 0.10704,
      "rouge_s*_f_score_cb": 0.10704,
      "rouge_s*_f_score_ce": 0.10704,
      "rouge_su*_recall": 0.38462,
      "rouge_su*_recall_cb": 0.38462,
      "rouge_su*_recall_ce": 0.38462,
      "rouge_su*_precision": 0.07716,
      "rouge_su*_precision_cb": 0.07716,
      "rouge_su*_precision_ce": 0.07716,
      "rouge_su*_f_score": 0.12853,
      "rouge_su*_f_score_cb": 0.12853,
      "rouge_su*_f_score_ce": 0.12853
    }
  },
  {
    "id": 39,
    "filename": "PandasEval_39.txt",
    "dataset_comment": "Change all columns' types of the DataFrame to numeric and return the new DataFrame.",
    "generated_comment": "Convert all columns in a pandas DataFrame to numeric type using pd.to_numeric.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.42857,
      "rouge_1_recall_cb": 0.42857,
      "rouge_1_recall_ce": 0.42857,
      "rouge_1_precision": 0.42857,
      "rouge_1_precision_cb": 0.42857,
      "rouge_1_precision_ce": 0.42857,
      "rouge_1_f_score": 0.42857,
      "rouge_1_f_score_cb": 0.42857,
      "rouge_1_f_score_ce": 0.42857,
      "rouge_2_recall": 0.23077,
      "rouge_2_recall_cb": 0.23077,
      "rouge_2_recall_ce": 0.23077,
      "rouge_2_precision": 0.23077,
      "rouge_2_precision_cb": 0.23077,
      "rouge_2_precision_ce": 0.23077,
      "rouge_2_f_score": 0.23077,
      "rouge_2_f_score_cb": 0.23077,
      "rouge_2_f_score_ce": 0.23077,
      "rouge_3_recall": 0.08333,
      "rouge_3_recall_cb": 0.08333,
      "rouge_3_recall_ce": 0.08333,
      "rouge_3_precision": 0.08333,
      "rouge_3_precision_cb": 0.08333,
      "rouge_3_precision_ce": 0.08333,
      "rouge_3_f_score": 0.08333,
      "rouge_3_f_score_cb": 0.08333,
      "rouge_3_f_score_ce": 0.08333,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.35714,
      "rouge_l_recall_cb": 0.35714,
      "rouge_l_recall_ce": 0.35714,
      "rouge_l_precision": 0.35714,
      "rouge_l_precision_cb": 0.35714,
      "rouge_l_precision_ce": 0.35714,
      "rouge_l_f_score": 0.35714,
      "rouge_l_f_score_cb": 0.35714,
      "rouge_l_f_score_ce": 0.35714,
      "rouge_w_1.2_recall": 0.18845,
      "rouge_w_1.2_recall_cb": 0.18845,
      "rouge_w_1.2_recall_ce": 0.18845,
      "rouge_w_1.2_precision": 0.31946,
      "rouge_w_1.2_precision_cb": 0.31946,
      "rouge_w_1.2_precision_ce": 0.31946,
      "rouge_w_1.2_f_score": 0.23706,
      "rouge_w_1.2_f_score_cb": 0.23706,
      "rouge_w_1.2_f_score_ce": 0.23706,
      "rouge_s*_recall": 0.15385,
      "rouge_s*_recall_cb": 0.15385,
      "rouge_s*_recall_ce": 0.15385,
      "rouge_s*_precision": 0.15385,
      "rouge_s*_precision_cb": 0.15385,
      "rouge_s*_precision_ce": 0.15385,
      "rouge_s*_f_score": 0.15385,
      "rouge_s*_f_score_cb": 0.15385,
      "rouge_s*_f_score_ce": 0.15385,
      "rouge_su*_recall": 0.19231,
      "rouge_su*_recall_cb": 0.19231,
      "rouge_su*_recall_ce": 0.19231,
      "rouge_su*_precision": 0.19231,
      "rouge_su*_precision_cb": 0.19231,
      "rouge_su*_precision_ce": 0.19231,
      "rouge_su*_f_score": 0.19231,
      "rouge_su*_f_score_cb": 0.19231,
      "rouge_su*_f_score_ce": 0.19231
    }
  },
  {
    "id": 40,
    "filename": "PandasEval_40.txt",
    "dataset_comment": "Return the average/mean of the column.",
    "generated_comment": "Calculate the mean value of a specific column in a pandas DataFrame.Input:df: pandas DataFrame containing the datacol_name: name of the column for which the mean needs to be calculatedOutput:Mean value of the specified column.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.71429,
      "rouge_1_recall_cb": 0.71429,
      "rouge_1_recall_ce": 0.71429,
      "rouge_1_precision": 0.13158,
      "rouge_1_precision_cb": 0.13158,
      "rouge_1_precision_ce": 0.13158,
      "rouge_1_f_score": 0.22222,
      "rouge_1_f_score_cb": 0.22222,
      "rouge_1_f_score_ce": 0.22222,
      "rouge_2_recall": 0.33333,
      "rouge_2_recall_cb": 0.33333,
      "rouge_2_recall_ce": 0.33333,
      "rouge_2_precision": 0.05405,
      "rouge_2_precision_cb": 0.05405,
      "rouge_2_precision_ce": 0.05405,
      "rouge_2_f_score": 0.09302,
      "rouge_2_f_score_cb": 0.09302,
      "rouge_2_f_score_ce": 0.09302,
      "rouge_3_recall": 0.2,
      "rouge_3_recall_cb": 0.2,
      "rouge_3_recall_ce": 0.2,
      "rouge_3_precision": 0.02778,
      "rouge_3_precision_cb": 0.02778,
      "rouge_3_precision_ce": 0.02778,
      "rouge_3_f_score": 0.04878,
      "rouge_3_f_score_cb": 0.04878,
      "rouge_3_f_score_ce": 0.04878,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.71429,
      "rouge_l_recall_cb": 0.71429,
      "rouge_l_recall_ce": 0.71429,
      "rouge_l_precision": 0.13158,
      "rouge_l_precision_cb": 0.13158,
      "rouge_l_precision_ce": 0.13158,
      "rouge_l_f_score": 0.22222,
      "rouge_l_f_score_cb": 0.22222,
      "rouge_l_f_score_ce": 0.22222,
      "rouge_w_1.2_recall": 0.44744,
      "rouge_w_1.2_recall_cb": 0.44744,
      "rouge_w_1.2_recall_ce": 0.44744,
      "rouge_w_1.2_precision": 0.12164,
      "rouge_w_1.2_precision_cb": 0.12164,
      "rouge_w_1.2_precision_ce": 0.12164,
      "rouge_w_1.2_f_score": 0.19128,
      "rouge_w_1.2_f_score_cb": 0.19128,
      "rouge_w_1.2_f_score_ce": 0.19128,
      "rouge_s*_recall": 0.47619,
      "rouge_s*_recall_cb": 0.47619,
      "rouge_s*_recall_ce": 0.47619,
      "rouge_s*_precision": 0.01422,
      "rouge_s*_precision_cb": 0.01422,
      "rouge_s*_precision_ce": 0.01422,
      "rouge_s*_f_score": 0.02762,
      "rouge_s*_f_score_cb": 0.02762,
      "rouge_s*_f_score_ce": 0.02762,
      "rouge_su*_recall": 0.51852,
      "rouge_su*_recall_cb": 0.51852,
      "rouge_su*_recall_ce": 0.51852,
      "rouge_su*_precision": 0.01892,
      "rouge_su*_precision_cb": 0.01892,
      "rouge_su*_precision_ce": 0.01892,
      "rouge_su*_f_score": 0.03651,
      "rouge_su*_f_score_cb": 0.03651,
      "rouge_su*_f_score_ce": 0.03651
    }
  },
  {
    "id": 41,
    "filename": "PandasEval_41.txt",
    "dataset_comment": "Determine whether a Pandas Column contains a particular value and return the result.",
    "generated_comment": "Check if a particular value is contained within a pandas Series by using the unique() function and the 'in' operator.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.61538,
      "rouge_1_recall_cb": 0.61538,
      "rouge_1_recall_ce": 0.61538,
      "rouge_1_precision": 0.4,
      "rouge_1_precision_cb": 0.4,
      "rouge_1_precision_ce": 0.4,
      "rouge_1_f_score": 0.48485,
      "rouge_1_f_score_cb": 0.48485,
      "rouge_1_f_score_ce": 0.48485,
      "rouge_2_recall": 0.25,
      "rouge_2_recall_cb": 0.25,
      "rouge_2_recall_ce": 0.25,
      "rouge_2_precision": 0.15789,
      "rouge_2_precision_cb": 0.15789,
      "rouge_2_precision_ce": 0.15789,
      "rouge_2_f_score": 0.19354,
      "rouge_2_f_score_cb": 0.19354,
      "rouge_2_f_score_ce": 0.19354,
      "rouge_3_recall": 0.09091,
      "rouge_3_recall_cb": 0.09091,
      "rouge_3_recall_ce": 0.09091,
      "rouge_3_precision": 0.05556,
      "rouge_3_precision_cb": 0.05556,
      "rouge_3_precision_ce": 0.05556,
      "rouge_3_f_score": 0.06897,
      "rouge_3_f_score_cb": 0.06897,
      "rouge_3_f_score_ce": 0.06897,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.38462,
      "rouge_l_recall_cb": 0.38462,
      "rouge_l_recall_ce": 0.38462,
      "rouge_l_precision": 0.25,
      "rouge_l_precision_cb": 0.25,
      "rouge_l_precision_ce": 0.25,
      "rouge_l_f_score": 0.30303,
      "rouge_l_f_score_cb": 0.30303,
      "rouge_l_f_score_ce": 0.30303,
      "rouge_w_1.2_recall": 0.21287,
      "rouge_w_1.2_recall_cb": 0.21287,
      "rouge_w_1.2_recall_ce": 0.21287,
      "rouge_w_1.2_precision": 0.23111,
      "rouge_w_1.2_precision_cb": 0.23111,
      "rouge_w_1.2_precision_ce": 0.23111,
      "rouge_w_1.2_f_score": 0.22162,
      "rouge_w_1.2_f_score_cb": 0.22162,
      "rouge_w_1.2_f_score_ce": 0.22162,
      "rouge_s*_recall": 0.25641,
      "rouge_s*_recall_cb": 0.25641,
      "rouge_s*_recall_ce": 0.25641,
      "rouge_s*_precision": 0.10526,
      "rouge_s*_precision_cb": 0.10526,
      "rouge_s*_precision_ce": 0.10526,
      "rouge_s*_f_score": 0.14925,
      "rouge_s*_f_score_cb": 0.14925,
      "rouge_s*_f_score_ce": 0.14925,
      "rouge_su*_recall": 0.31111,
      "rouge_su*_recall_cb": 0.31111,
      "rouge_su*_recall_ce": 0.31111,
      "rouge_su*_precision": 0.13397,
      "rouge_su*_precision_cb": 0.13397,
      "rouge_su*_precision_ce": 0.13397,
      "rouge_su*_f_score": 0.18729,
      "rouge_su*_f_score_cb": 0.18729,
      "rouge_su*_f_score_ce": 0.18729
    }
  },
  {
    "id": 42,
    "filename": "PandasEval_42.txt",
    "dataset_comment": "Delete the first n rows of a DataFrame. Input:   df: DataFrame   n: int Return:   DataFrame after deleting the first n rows.",
    "generated_comment": "Remove the first n rows from a pandas DataFrame and return the updated DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.42857,
      "rouge_1_recall_cb": 0.42857,
      "rouge_1_recall_ce": 0.42857,
      "rouge_1_precision": 0.64286,
      "rouge_1_precision_cb": 0.64286,
      "rouge_1_precision_ce": 0.64286,
      "rouge_1_f_score": 0.51429,
      "rouge_1_f_score_cb": 0.51429,
      "rouge_1_f_score_ce": 0.51429,
      "rouge_2_recall": 0.15,
      "rouge_2_recall_cb": 0.15,
      "rouge_2_recall_ce": 0.15,
      "rouge_2_precision": 0.23077,
      "rouge_2_precision_cb": 0.23077,
      "rouge_2_precision_ce": 0.23077,
      "rouge_2_f_score": 0.18182,
      "rouge_2_f_score_cb": 0.18182,
      "rouge_2_f_score_ce": 0.18182,
      "rouge_3_recall": 0.10526,
      "rouge_3_recall_cb": 0.10526,
      "rouge_3_recall_ce": 0.10526,
      "rouge_3_precision": 0.16667,
      "rouge_3_precision_cb": 0.16667,
      "rouge_3_precision_ce": 0.16667,
      "rouge_3_f_score": 0.12903,
      "rouge_3_f_score_cb": 0.12903,
      "rouge_3_f_score_ce": 0.12903,
      "rouge_4_recall": 0.05556,
      "rouge_4_recall_cb": 0.05556,
      "rouge_4_recall_ce": 0.05556,
      "rouge_4_precision": 0.09091,
      "rouge_4_precision_cb": 0.09091,
      "rouge_4_precision_ce": 0.09091,
      "rouge_4_f_score": 0.06897,
      "rouge_4_f_score_cb": 0.06897,
      "rouge_4_f_score_ce": 0.06897,
      "rouge_l_recall": 0.38095,
      "rouge_l_recall_cb": 0.38095,
      "rouge_l_recall_ce": 0.38095,
      "rouge_l_precision": 0.57143,
      "rouge_l_precision_cb": 0.57143,
      "rouge_l_precision_ce": 0.57143,
      "rouge_l_f_score": 0.45714,
      "rouge_l_f_score_cb": 0.45714,
      "rouge_l_f_score_ce": 0.45714,
      "rouge_w_1.2_recall": 0.1746,
      "rouge_w_1.2_recall_cb": 0.1746,
      "rouge_w_1.2_recall_ce": 0.1746,
      "rouge_w_1.2_precision": 0.48147,
      "rouge_w_1.2_precision_cb": 0.48147,
      "rouge_w_1.2_precision_ce": 0.48147,
      "rouge_w_1.2_f_score": 0.25627,
      "rouge_w_1.2_f_score_cb": 0.25627,
      "rouge_w_1.2_f_score_ce": 0.25627,
      "rouge_s*_recall": 0.17143,
      "rouge_s*_recall_cb": 0.17143,
      "rouge_s*_recall_ce": 0.17143,
      "rouge_s*_precision": 0.3956,
      "rouge_s*_precision_cb": 0.3956,
      "rouge_s*_precision_ce": 0.3956,
      "rouge_s*_f_score": 0.2392,
      "rouge_s*_f_score_cb": 0.2392,
      "rouge_s*_f_score_ce": 0.2392,
      "rouge_su*_recall": 0.1913,
      "rouge_su*_recall_cb": 0.1913,
      "rouge_su*_recall_ce": 0.1913,
      "rouge_su*_precision": 0.42308,
      "rouge_su*_precision_cb": 0.42308,
      "rouge_su*_precision_ce": 0.42308,
      "rouge_su*_f_score": 0.26347,
      "rouge_su*_f_score_cb": 0.26347,
      "rouge_su*_f_score_ce": 0.26347
    }
  },
  {
    "id": 43,
    "filename": "PandasEval_43.txt",
    "dataset_comment": "Specify a new column named `mean_along_rows` that contains the mean of each row by computing the mean along the rows using axis=1. Finally, return the dataframe with the new column.",
    "generated_comment": "Compute the mean along the rows of the input DataFrame.Add a new column 'mean' to the DataFrame that contains the mean value of each row.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.60606,
      "rouge_1_recall_cb": 0.60606,
      "rouge_1_recall_ce": 0.60606,
      "rouge_1_precision": 0.76923,
      "rouge_1_precision_cb": 0.76923,
      "rouge_1_precision_ce": 0.76923,
      "rouge_1_f_score": 0.67797,
      "rouge_1_f_score_cb": 0.67797,
      "rouge_1_f_score_ce": 0.67797,
      "rouge_2_recall": 0.40625,
      "rouge_2_recall_cb": 0.40625,
      "rouge_2_recall_ce": 0.40625,
      "rouge_2_precision": 0.52,
      "rouge_2_precision_cb": 0.52,
      "rouge_2_precision_ce": 0.52,
      "rouge_2_f_score": 0.45614,
      "rouge_2_f_score_cb": 0.45614,
      "rouge_2_f_score_ce": 0.45614,
      "rouge_3_recall": 0.25806,
      "rouge_3_recall_cb": 0.25806,
      "rouge_3_recall_ce": 0.25806,
      "rouge_3_precision": 0.33333,
      "rouge_3_precision_cb": 0.33333,
      "rouge_3_precision_ce": 0.33333,
      "rouge_3_f_score": 0.2909,
      "rouge_3_f_score_cb": 0.2909,
      "rouge_3_f_score_ce": 0.2909,
      "rouge_4_recall": 0.13333,
      "rouge_4_recall_cb": 0.13333,
      "rouge_4_recall_ce": 0.13333,
      "rouge_4_precision": 0.17391,
      "rouge_4_precision_cb": 0.17391,
      "rouge_4_precision_ce": 0.17391,
      "rouge_4_f_score": 0.15094,
      "rouge_4_f_score_cb": 0.15094,
      "rouge_4_f_score_ce": 0.15094,
      "rouge_l_recall": 0.33333,
      "rouge_l_recall_cb": 0.33333,
      "rouge_l_recall_ce": 0.33333,
      "rouge_l_precision": 0.42308,
      "rouge_l_precision_cb": 0.42308,
      "rouge_l_precision_ce": 0.42308,
      "rouge_l_f_score": 0.37288,
      "rouge_l_f_score_cb": 0.37288,
      "rouge_l_f_score_ce": 0.37288,
      "rouge_w_1.2_recall": 0.1384,
      "rouge_w_1.2_recall_cb": 0.1384,
      "rouge_w_1.2_recall_ce": 0.1384,
      "rouge_w_1.2_precision": 0.3535,
      "rouge_w_1.2_precision_cb": 0.3535,
      "rouge_w_1.2_precision_ce": 0.3535,
      "rouge_w_1.2_f_score": 0.19892,
      "rouge_w_1.2_f_score_cb": 0.19892,
      "rouge_w_1.2_f_score_ce": 0.19892,
      "rouge_s*_recall": 0.28977,
      "rouge_s*_recall_cb": 0.28977,
      "rouge_s*_recall_ce": 0.28977,
      "rouge_s*_precision": 0.47077,
      "rouge_s*_precision_cb": 0.47077,
      "rouge_s*_precision_ce": 0.47077,
      "rouge_s*_f_score": 0.35873,
      "rouge_s*_f_score_cb": 0.35873,
      "rouge_s*_f_score_ce": 0.35873,
      "rouge_su*_recall": 0.30714,
      "rouge_su*_recall_cb": 0.30714,
      "rouge_su*_recall_ce": 0.30714,
      "rouge_su*_precision": 0.49143,
      "rouge_su*_precision_cb": 0.49143,
      "rouge_su*_precision_ce": 0.49143,
      "rouge_su*_f_score": 0.37802,
      "rouge_su*_f_score_cb": 0.37802,
      "rouge_su*_f_score_ce": 0.37802
    }
  },
  {
    "id": 44,
    "filename": "PandasEval_44.txt",
    "dataset_comment": "Delete a column from a Pandas DataFrame and return the changed DataFrame.",
    "generated_comment": "Remove a specified column from a pandas DataFrame.Args:df (pd.DataFrame): The pandas DataFrame from which the column will be removed.column_name (str): The name of the column to be deleted.Returns:pd.DataFrame: The DataFrame with the specified column removed.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.83333,
      "rouge_1_recall_cb": 0.83333,
      "rouge_1_recall_ce": 0.83333,
      "rouge_1_precision": 0.23256,
      "rouge_1_precision_cb": 0.23256,
      "rouge_1_precision_ce": 0.23256,
      "rouge_1_f_score": 0.36364,
      "rouge_1_f_score_cb": 0.36364,
      "rouge_1_f_score_ce": 0.36364,
      "rouge_2_recall": 0.36364,
      "rouge_2_recall_cb": 0.36364,
      "rouge_2_recall_ce": 0.36364,
      "rouge_2_precision": 0.09524,
      "rouge_2_precision_cb": 0.09524,
      "rouge_2_precision_ce": 0.09524,
      "rouge_2_f_score": 0.15095,
      "rouge_2_f_score_cb": 0.15095,
      "rouge_2_f_score_ce": 0.15095,
      "rouge_3_recall": 0.3,
      "rouge_3_recall_cb": 0.3,
      "rouge_3_recall_ce": 0.3,
      "rouge_3_precision": 0.07317,
      "rouge_3_precision_cb": 0.07317,
      "rouge_3_precision_ce": 0.07317,
      "rouge_3_f_score": 0.11765,
      "rouge_3_f_score_cb": 0.11765,
      "rouge_3_f_score_ce": 0.11765,
      "rouge_4_recall": 0.22222,
      "rouge_4_recall_cb": 0.22222,
      "rouge_4_recall_ce": 0.22222,
      "rouge_4_precision": 0.05,
      "rouge_4_precision_cb": 0.05,
      "rouge_4_precision_ce": 0.05,
      "rouge_4_f_score": 0.08163,
      "rouge_4_f_score_cb": 0.08163,
      "rouge_4_f_score_ce": 0.08163,
      "rouge_l_recall": 0.75,
      "rouge_l_recall_cb": 0.75,
      "rouge_l_recall_ce": 0.75,
      "rouge_l_precision": 0.2093,
      "rouge_l_precision_cb": 0.2093,
      "rouge_l_precision_ce": 0.2093,
      "rouge_l_f_score": 0.32727,
      "rouge_l_f_score_cb": 0.32727,
      "rouge_l_f_score_ce": 0.32727,
      "rouge_w_1.2_recall": 0.39881,
      "rouge_w_1.2_recall_cb": 0.39881,
      "rouge_w_1.2_recall_ce": 0.39881,
      "rouge_w_1.2_precision": 0.18294,
      "rouge_w_1.2_precision_cb": 0.18294,
      "rouge_w_1.2_precision_ce": 0.18294,
      "rouge_w_1.2_f_score": 0.25082,
      "rouge_w_1.2_f_score_cb": 0.25082,
      "rouge_w_1.2_f_score_ce": 0.25082,
      "rouge_s*_recall": 0.62121,
      "rouge_s*_recall_cb": 0.62121,
      "rouge_s*_recall_ce": 0.62121,
      "rouge_s*_precision": 0.0454,
      "rouge_s*_precision_cb": 0.0454,
      "rouge_s*_precision_ce": 0.0454,
      "rouge_s*_f_score": 0.08462,
      "rouge_s*_f_score_cb": 0.08462,
      "rouge_s*_f_score_ce": 0.08462,
      "rouge_su*_recall": 0.64935,
      "rouge_su*_recall_cb": 0.64935,
      "rouge_su*_recall_ce": 0.64935,
      "rouge_su*_precision": 0.05291,
      "rouge_su*_precision_cb": 0.05291,
      "rouge_su*_precision_ce": 0.05291,
      "rouge_su*_f_score": 0.09785,
      "rouge_su*_f_score_cb": 0.09785,
      "rouge_su*_f_score_ce": 0.09785
    }
  },
  {
    "id": 45,
    "filename": "PandasEval_45.txt",
    "dataset_comment": "Find the intersection between two series by first creating two sets, one for each series, and then obtaining the intersection of the two sets.",
    "generated_comment": "Convert the pandas Series s1 and s2 into sets for efficient intersection operationFind the intersection of the two sets s1 and s2 and store the result in intersection_result",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5,
      "rouge_1_recall_cb": 0.5,
      "rouge_1_recall_ce": 0.5,
      "rouge_1_precision": 0.41379,
      "rouge_1_precision_cb": 0.41379,
      "rouge_1_precision_ce": 0.41379,
      "rouge_1_f_score": 0.45283,
      "rouge_1_f_score_cb": 0.45283,
      "rouge_1_f_score_ce": 0.45283,
      "rouge_2_recall": 0.21739,
      "rouge_2_recall_cb": 0.21739,
      "rouge_2_recall_ce": 0.21739,
      "rouge_2_precision": 0.17857,
      "rouge_2_precision_cb": 0.17857,
      "rouge_2_precision_ce": 0.17857,
      "rouge_2_f_score": 0.19608,
      "rouge_2_f_score_cb": 0.19608,
      "rouge_2_f_score_ce": 0.19608,
      "rouge_3_recall": 0.18182,
      "rouge_3_recall_cb": 0.18182,
      "rouge_3_recall_ce": 0.18182,
      "rouge_3_precision": 0.14815,
      "rouge_3_precision_cb": 0.14815,
      "rouge_3_precision_ce": 0.14815,
      "rouge_3_f_score": 0.16327,
      "rouge_3_f_score_cb": 0.16327,
      "rouge_3_f_score_ce": 0.16327,
      "rouge_4_recall": 0.14286,
      "rouge_4_recall_cb": 0.14286,
      "rouge_4_recall_ce": 0.14286,
      "rouge_4_precision": 0.11538,
      "rouge_4_precision_cb": 0.11538,
      "rouge_4_precision_ce": 0.11538,
      "rouge_4_f_score": 0.12766,
      "rouge_4_f_score_cb": 0.12766,
      "rouge_4_f_score_ce": 0.12766,
      "rouge_l_recall": 0.41667,
      "rouge_l_recall_cb": 0.41667,
      "rouge_l_recall_ce": 0.41667,
      "rouge_l_precision": 0.34483,
      "rouge_l_precision_cb": 0.34483,
      "rouge_l_precision_ce": 0.34483,
      "rouge_l_f_score": 0.37736,
      "rouge_l_f_score_cb": 0.37736,
      "rouge_l_f_score_ce": 0.37736,
      "rouge_w_1.2_recall": 0.1821,
      "rouge_w_1.2_recall_cb": 0.1821,
      "rouge_w_1.2_recall_ce": 0.1821,
      "rouge_w_1.2_precision": 0.28456,
      "rouge_w_1.2_precision_cb": 0.28456,
      "rouge_w_1.2_precision_ce": 0.28456,
      "rouge_w_1.2_f_score": 0.22208,
      "rouge_w_1.2_f_score_cb": 0.22208,
      "rouge_w_1.2_f_score_ce": 0.22208,
      "rouge_s*_recall": 0.25362,
      "rouge_s*_recall_cb": 0.25362,
      "rouge_s*_recall_ce": 0.25362,
      "rouge_s*_precision": 0.17241,
      "rouge_s*_precision_cb": 0.17241,
      "rouge_s*_precision_ce": 0.17241,
      "rouge_s*_f_score": 0.20527,
      "rouge_s*_f_score_cb": 0.20527,
      "rouge_s*_f_score_ce": 0.20527,
      "rouge_su*_recall": 0.2709,
      "rouge_su*_recall_cb": 0.2709,
      "rouge_su*_recall_ce": 0.2709,
      "rouge_su*_precision": 0.18664,
      "rouge_su*_precision_cb": 0.18664,
      "rouge_su*_precision_ce": 0.18664,
      "rouge_su*_f_score": 0.22101,
      "rouge_su*_f_score_cb": 0.22101,
      "rouge_su*_f_score_ce": 0.22101
    }
  },
  {
    "id": 46,
    "filename": "PandasEval_46.txt",
    "dataset_comment": "Get the values of column `A` when column `B` equals 3.",
    "generated_comment": "Retrieve values from column 'A' in the DataFrame 'df' where the values in column 'B' are equal to 3.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.72727,
      "rouge_1_recall_cb": 0.72727,
      "rouge_1_recall_ce": 0.72727,
      "rouge_1_precision": 0.42105,
      "rouge_1_precision_cb": 0.42105,
      "rouge_1_precision_ce": 0.42105,
      "rouge_1_f_score": 0.53333,
      "rouge_1_f_score_cb": 0.53333,
      "rouge_1_f_score_ce": 0.53333,
      "rouge_2_recall": 0.3,
      "rouge_2_recall_cb": 0.3,
      "rouge_2_recall_ce": 0.3,
      "rouge_2_precision": 0.16667,
      "rouge_2_precision_cb": 0.16667,
      "rouge_2_precision_ce": 0.16667,
      "rouge_2_f_score": 0.21429,
      "rouge_2_f_score_cb": 0.21429,
      "rouge_2_f_score_ce": 0.21429,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.63636,
      "rouge_l_recall_cb": 0.63636,
      "rouge_l_recall_ce": 0.63636,
      "rouge_l_precision": 0.36842,
      "rouge_l_precision_cb": 0.36842,
      "rouge_l_precision_ce": 0.36842,
      "rouge_l_f_score": 0.46666,
      "rouge_l_f_score_cb": 0.46666,
      "rouge_l_f_score_ce": 0.46666,
      "rouge_w_1.2_recall": 0.33732,
      "rouge_w_1.2_recall_cb": 0.33732,
      "rouge_w_1.2_recall_ce": 0.33732,
      "rouge_w_1.2_precision": 0.31547,
      "rouge_w_1.2_precision_cb": 0.31547,
      "rouge_w_1.2_precision_ce": 0.31547,
      "rouge_w_1.2_f_score": 0.32603,
      "rouge_w_1.2_f_score_cb": 0.32603,
      "rouge_w_1.2_f_score_ce": 0.32603,
      "rouge_s*_recall": 0.49091,
      "rouge_s*_recall_cb": 0.49091,
      "rouge_s*_recall_ce": 0.49091,
      "rouge_s*_precision": 0.15789,
      "rouge_s*_precision_cb": 0.15789,
      "rouge_s*_precision_ce": 0.15789,
      "rouge_s*_f_score": 0.23893,
      "rouge_s*_f_score_cb": 0.23893,
      "rouge_s*_f_score_ce": 0.23893,
      "rouge_su*_recall": 0.52308,
      "rouge_su*_recall_cb": 0.52308,
      "rouge_su*_recall_ce": 0.52308,
      "rouge_su*_precision": 0.17989,
      "rouge_su*_precision_cb": 0.17989,
      "rouge_su*_precision_ce": 0.17989,
      "rouge_su*_f_score": 0.26771,
      "rouge_su*_f_score_cb": 0.26771,
      "rouge_su*_f_score_ce": 0.26771
    }
  },
  {
    "id": 47,
    "filename": "PandasEval_47.txt",
    "dataset_comment": "Make all column headers in the Pandas DataFrame lowercase.",
    "generated_comment": "Convert all column headers in the input dataframe to lowercase.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.77778,
      "rouge_1_recall_cb": 0.77778,
      "rouge_1_recall_ce": 0.77778,
      "rouge_1_precision": 0.7,
      "rouge_1_precision_cb": 0.7,
      "rouge_1_precision_ce": 0.7,
      "rouge_1_f_score": 0.73684,
      "rouge_1_f_score_cb": 0.73684,
      "rouge_1_f_score_ce": 0.73684,
      "rouge_2_recall": 0.5,
      "rouge_2_recall_cb": 0.5,
      "rouge_2_recall_ce": 0.5,
      "rouge_2_precision": 0.44444,
      "rouge_2_precision_cb": 0.44444,
      "rouge_2_precision_ce": 0.44444,
      "rouge_2_f_score": 0.47059,
      "rouge_2_f_score_cb": 0.47059,
      "rouge_2_f_score_ce": 0.47059,
      "rouge_3_recall": 0.42857,
      "rouge_3_recall_cb": 0.42857,
      "rouge_3_recall_ce": 0.42857,
      "rouge_3_precision": 0.375,
      "rouge_3_precision_cb": 0.375,
      "rouge_3_precision_ce": 0.375,
      "rouge_3_f_score": 0.4,
      "rouge_3_f_score_cb": 0.4,
      "rouge_3_f_score_ce": 0.4,
      "rouge_4_recall": 0.33333,
      "rouge_4_recall_cb": 0.33333,
      "rouge_4_recall_ce": 0.33333,
      "rouge_4_precision": 0.28571,
      "rouge_4_precision_cb": 0.28571,
      "rouge_4_precision_ce": 0.28571,
      "rouge_4_f_score": 0.30769,
      "rouge_4_f_score_cb": 0.30769,
      "rouge_4_f_score_ce": 0.30769,
      "rouge_l_recall": 0.77778,
      "rouge_l_recall_cb": 0.77778,
      "rouge_l_recall_ce": 0.77778,
      "rouge_l_precision": 0.7,
      "rouge_l_precision_cb": 0.7,
      "rouge_l_precision_ce": 0.7,
      "rouge_l_f_score": 0.73684,
      "rouge_l_f_score_cb": 0.73684,
      "rouge_l_f_score_ce": 0.73684,
      "rouge_w_1.2_recall": 0.45489,
      "rouge_w_1.2_recall_cb": 0.45489,
      "rouge_w_1.2_recall_ce": 0.45489,
      "rouge_w_1.2_precision": 0.63533,
      "rouge_w_1.2_precision_cb": 0.63533,
      "rouge_w_1.2_precision_ce": 0.63533,
      "rouge_w_1.2_f_score": 0.53018,
      "rouge_w_1.2_f_score_cb": 0.53018,
      "rouge_w_1.2_f_score_ce": 0.53018,
      "rouge_s*_recall": 0.58333,
      "rouge_s*_recall_cb": 0.58333,
      "rouge_s*_recall_ce": 0.58333,
      "rouge_s*_precision": 0.46667,
      "rouge_s*_precision_cb": 0.46667,
      "rouge_s*_precision_ce": 0.46667,
      "rouge_s*_f_score": 0.51852,
      "rouge_s*_f_score_cb": 0.51852,
      "rouge_s*_f_score_ce": 0.51852,
      "rouge_su*_recall": 0.61364,
      "rouge_su*_recall_cb": 0.61364,
      "rouge_su*_recall_ce": 0.61364,
      "rouge_su*_precision": 0.5,
      "rouge_su*_precision_cb": 0.5,
      "rouge_su*_precision_ce": 0.5,
      "rouge_su*_f_score": 0.55102,
      "rouge_su*_f_score_cb": 0.55102,
      "rouge_su*_f_score_ce": 0.55102
    }
  },
  {
    "id": 48,
    "filename": "PandasEval_48.txt",
    "dataset_comment": "Check if any word from `targets` is present in the sentence.",
    "generated_comment": "Filter the DataFrame to select rows where the 'col' column values are present in the 'targets' list.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.36364,
      "rouge_1_recall_cb": 0.36364,
      "rouge_1_recall_ce": 0.36364,
      "rouge_1_precision": 0.23529,
      "rouge_1_precision_cb": 0.23529,
      "rouge_1_precision_ce": 0.23529,
      "rouge_1_f_score": 0.28571,
      "rouge_1_f_score_cb": 0.28571,
      "rouge_1_f_score_ce": 0.28571,
      "rouge_2_recall": 0.2,
      "rouge_2_recall_cb": 0.2,
      "rouge_2_recall_ce": 0.2,
      "rouge_2_precision": 0.125,
      "rouge_2_precision_cb": 0.125,
      "rouge_2_precision_ce": 0.125,
      "rouge_2_f_score": 0.15385,
      "rouge_2_f_score_cb": 0.15385,
      "rouge_2_f_score_ce": 0.15385,
      "rouge_3_recall": 0.11111,
      "rouge_3_recall_cb": 0.11111,
      "rouge_3_recall_ce": 0.11111,
      "rouge_3_precision": 0.06667,
      "rouge_3_precision_cb": 0.06667,
      "rouge_3_precision_ce": 0.06667,
      "rouge_3_f_score": 0.08334,
      "rouge_3_f_score_cb": 0.08334,
      "rouge_3_f_score_ce": 0.08334,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.27273,
      "rouge_l_recall_cb": 0.27273,
      "rouge_l_recall_ce": 0.27273,
      "rouge_l_precision": 0.17647,
      "rouge_l_precision_cb": 0.17647,
      "rouge_l_precision_ce": 0.17647,
      "rouge_l_f_score": 0.21429,
      "rouge_l_f_score_cb": 0.21429,
      "rouge_l_f_score_ce": 0.21429,
      "rouge_w_1.2_recall": 0.16883,
      "rouge_w_1.2_recall_cb": 0.16883,
      "rouge_w_1.2_recall_ce": 0.16883,
      "rouge_w_1.2_precision": 0.17647,
      "rouge_w_1.2_precision_cb": 0.17647,
      "rouge_w_1.2_precision_ce": 0.17647,
      "rouge_w_1.2_f_score": 0.17257,
      "rouge_w_1.2_f_score_cb": 0.17257,
      "rouge_w_1.2_f_score_ce": 0.17257,
      "rouge_s*_recall": 0.05455,
      "rouge_s*_recall_cb": 0.05455,
      "rouge_s*_recall_ce": 0.05455,
      "rouge_s*_precision": 0.02206,
      "rouge_s*_precision_cb": 0.02206,
      "rouge_s*_precision_ce": 0.02206,
      "rouge_s*_f_score": 0.03142,
      "rouge_s*_f_score_cb": 0.03142,
      "rouge_s*_f_score_ce": 0.03142,
      "rouge_su*_recall": 0.10769,
      "rouge_su*_recall_cb": 0.10769,
      "rouge_su*_recall_ce": 0.10769,
      "rouge_su*_precision": 0.04605,
      "rouge_su*_precision_cb": 0.04605,
      "rouge_su*_precision_ce": 0.04605,
      "rouge_su*_f_score": 0.06451,
      "rouge_su*_f_score_cb": 0.06451,
      "rouge_su*_f_score_ce": 0.06451
    }
  },
  {
    "id": 49,
    "filename": "PandasEval_49.txt",
    "dataset_comment": "Find all unique values in a Pandas DataFrame, irrespective of rows or columns.  Use xx.values.ravel to get the flattened array of the DataFrame. Retrieve unique values using numpy.unique.",
    "generated_comment": "Get unique values from a Pandas DataFrame by flattening the DataFrame values into a 1D array and utilizing numpy's unique function.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.41935,
      "rouge_1_recall_cb": 0.41935,
      "rouge_1_recall_ce": 0.41935,
      "rouge_1_precision": 0.59091,
      "rouge_1_precision_cb": 0.59091,
      "rouge_1_precision_ce": 0.59091,
      "rouge_1_f_score": 0.49056,
      "rouge_1_f_score_cb": 0.49056,
      "rouge_1_f_score_ce": 0.49056,
      "rouge_2_recall": 0.13333,
      "rouge_2_recall_cb": 0.13333,
      "rouge_2_recall_ce": 0.13333,
      "rouge_2_precision": 0.19048,
      "rouge_2_precision_cb": 0.19048,
      "rouge_2_precision_ce": 0.19048,
      "rouge_2_f_score": 0.15686,
      "rouge_2_f_score_cb": 0.15686,
      "rouge_2_f_score_ce": 0.15686,
      "rouge_3_recall": 0.03448,
      "rouge_3_recall_cb": 0.03448,
      "rouge_3_recall_ce": 0.03448,
      "rouge_3_precision": 0.05,
      "rouge_3_precision_cb": 0.05,
      "rouge_3_precision_ce": 0.05,
      "rouge_3_f_score": 0.04081,
      "rouge_3_f_score_cb": 0.04081,
      "rouge_3_f_score_ce": 0.04081,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.35484,
      "rouge_l_recall_cb": 0.35484,
      "rouge_l_recall_ce": 0.35484,
      "rouge_l_precision": 0.5,
      "rouge_l_precision_cb": 0.5,
      "rouge_l_precision_ce": 0.5,
      "rouge_l_f_score": 0.4151,
      "rouge_l_f_score_cb": 0.4151,
      "rouge_l_f_score_ce": 0.4151,
      "rouge_w_1.2_recall": 0.13433,
      "rouge_w_1.2_recall_cb": 0.13433,
      "rouge_w_1.2_recall_ce": 0.13433,
      "rouge_w_1.2_precision": 0.37618,
      "rouge_w_1.2_precision_cb": 0.37618,
      "rouge_w_1.2_precision_ce": 0.37618,
      "rouge_w_1.2_f_score": 0.19797,
      "rouge_w_1.2_f_score_cb": 0.19797,
      "rouge_w_1.2_f_score_ce": 0.19797,
      "rouge_s*_recall": 0.15914,
      "rouge_s*_recall_cb": 0.15914,
      "rouge_s*_recall_ce": 0.15914,
      "rouge_s*_precision": 0.32035,
      "rouge_s*_precision_cb": 0.32035,
      "rouge_s*_precision_ce": 0.32035,
      "rouge_s*_f_score": 0.21264,
      "rouge_s*_f_score_cb": 0.21264,
      "rouge_s*_f_score_ce": 0.21264,
      "rouge_su*_recall": 0.17576,
      "rouge_su*_recall_cb": 0.17576,
      "rouge_su*_recall_ce": 0.17576,
      "rouge_su*_precision": 0.34524,
      "rouge_su*_precision_cb": 0.34524,
      "rouge_su*_precision_ce": 0.34524,
      "rouge_su*_f_score": 0.23293,
      "rouge_su*_f_score_cb": 0.23293,
      "rouge_su*_f_score_ce": 0.23293
    }
  },
  {
    "id": 50,
    "filename": "PandasEval_50.txt",
    "dataset_comment": "Add a new column C that is the sum of the values in columns A and B.",
    "generated_comment": "Add a new column 'C' to the DataFrame 'df' which is the sum of columns 'A' and 'B'.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.82353,
      "rouge_1_recall_cb": 0.82353,
      "rouge_1_recall_ce": 0.82353,
      "rouge_1_precision": 0.77778,
      "rouge_1_precision_cb": 0.77778,
      "rouge_1_precision_ce": 0.77778,
      "rouge_1_f_score": 0.8,
      "rouge_1_f_score_cb": 0.8,
      "rouge_1_f_score_ce": 0.8,
      "rouge_2_recall": 0.625,
      "rouge_2_recall_cb": 0.625,
      "rouge_2_recall_ce": 0.625,
      "rouge_2_precision": 0.58824,
      "rouge_2_precision_cb": 0.58824,
      "rouge_2_precision_ce": 0.58824,
      "rouge_2_f_score": 0.60606,
      "rouge_2_f_score_cb": 0.60606,
      "rouge_2_f_score_ce": 0.60606,
      "rouge_3_recall": 0.46667,
      "rouge_3_recall_cb": 0.46667,
      "rouge_3_recall_ce": 0.46667,
      "rouge_3_precision": 0.4375,
      "rouge_3_precision_cb": 0.4375,
      "rouge_3_precision_ce": 0.4375,
      "rouge_3_f_score": 0.45161,
      "rouge_3_f_score_cb": 0.45161,
      "rouge_3_f_score_ce": 0.45161,
      "rouge_4_recall": 0.28571,
      "rouge_4_recall_cb": 0.28571,
      "rouge_4_recall_ce": 0.28571,
      "rouge_4_precision": 0.26667,
      "rouge_4_precision_cb": 0.26667,
      "rouge_4_precision_ce": 0.26667,
      "rouge_4_f_score": 0.27586,
      "rouge_4_f_score_cb": 0.27586,
      "rouge_4_f_score_ce": 0.27586,
      "rouge_l_recall": 0.76471,
      "rouge_l_recall_cb": 0.76471,
      "rouge_l_recall_ce": 0.76471,
      "rouge_l_precision": 0.72222,
      "rouge_l_precision_cb": 0.72222,
      "rouge_l_precision_ce": 0.72222,
      "rouge_l_f_score": 0.74286,
      "rouge_l_f_score_cb": 0.74286,
      "rouge_l_f_score_ce": 0.74286,
      "rouge_w_1.2_recall": 0.36173,
      "rouge_w_1.2_recall_cb": 0.36173,
      "rouge_w_1.2_recall_ce": 0.36173,
      "rouge_w_1.2_precision": 0.60208,
      "rouge_w_1.2_precision_cb": 0.60208,
      "rouge_w_1.2_precision_ce": 0.60208,
      "rouge_w_1.2_f_score": 0.45194,
      "rouge_w_1.2_f_score_cb": 0.45194,
      "rouge_w_1.2_f_score_ce": 0.45194,
      "rouge_s*_recall": 0.64706,
      "rouge_s*_recall_cb": 0.64706,
      "rouge_s*_recall_ce": 0.64706,
      "rouge_s*_precision": 0.57516,
      "rouge_s*_precision_cb": 0.57516,
      "rouge_s*_precision_ce": 0.57516,
      "rouge_s*_f_score": 0.609,
      "rouge_s*_f_score_cb": 0.609,
      "rouge_s*_f_score_ce": 0.609,
      "rouge_su*_recall": 0.66447,
      "rouge_su*_recall_cb": 0.66447,
      "rouge_su*_recall_ce": 0.66447,
      "rouge_su*_precision": 0.59412,
      "rouge_su*_precision_cb": 0.59412,
      "rouge_su*_precision_ce": 0.59412,
      "rouge_su*_f_score": 0.62733,
      "rouge_su*_f_score_cb": 0.62733,
      "rouge_su*_f_score_ce": 0.62733
    }
  },
  {
    "id": 51,
    "filename": "PandasEval_51.txt",
    "dataset_comment": "Add a new column named 'Fruit Total' that sums the values of the other columns, ignoring the NaN values.",
    "generated_comment": "Calculate the total sum of each row in the DataFrame 'df' by applying the sum function on each row using the apply method with axis=1.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.31579,
      "rouge_1_recall_cb": 0.31579,
      "rouge_1_recall_ce": 0.31579,
      "rouge_1_precision": 0.23077,
      "rouge_1_precision_cb": 0.23077,
      "rouge_1_precision_ce": 0.23077,
      "rouge_1_f_score": 0.26667,
      "rouge_1_f_score_cb": 0.26667,
      "rouge_1_f_score_ce": 0.26667,
      "rouge_2_recall": 0.0,
      "rouge_2_recall_cb": 0.0,
      "rouge_2_recall_ce": 0.0,
      "rouge_2_precision": 0.0,
      "rouge_2_precision_cb": 0.0,
      "rouge_2_precision_ce": 0.0,
      "rouge_2_f_score": 0.0,
      "rouge_2_f_score_cb": 0.0,
      "rouge_2_f_score_ce": 0.0,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.26316,
      "rouge_l_recall_cb": 0.26316,
      "rouge_l_recall_ce": 0.26316,
      "rouge_l_precision": 0.19231,
      "rouge_l_precision_cb": 0.19231,
      "rouge_l_precision_ce": 0.19231,
      "rouge_l_f_score": 0.22222,
      "rouge_l_f_score_cb": 0.22222,
      "rouge_l_f_score_ce": 0.22222,
      "rouge_w_1.2_recall": 0.11719,
      "rouge_w_1.2_recall_cb": 0.11719,
      "rouge_w_1.2_recall_ce": 0.11719,
      "rouge_w_1.2_precision": 0.15432,
      "rouge_w_1.2_precision_cb": 0.15432,
      "rouge_w_1.2_precision_ce": 0.15432,
      "rouge_w_1.2_f_score": 0.13322,
      "rouge_w_1.2_f_score_cb": 0.13322,
      "rouge_w_1.2_f_score_ce": 0.13322,
      "rouge_s*_recall": 0.08772,
      "rouge_s*_recall_cb": 0.08772,
      "rouge_s*_recall_ce": 0.08772,
      "rouge_s*_precision": 0.04615,
      "rouge_s*_precision_cb": 0.04615,
      "rouge_s*_precision_ce": 0.04615,
      "rouge_s*_f_score": 0.06048,
      "rouge_s*_f_score_cb": 0.06048,
      "rouge_s*_f_score_ce": 0.06048,
      "rouge_su*_recall": 0.11111,
      "rouge_su*_recall_cb": 0.11111,
      "rouge_su*_recall_ce": 0.11111,
      "rouge_su*_precision": 0.06,
      "rouge_su*_precision_cb": 0.06,
      "rouge_su*_precision_ce": 0.06,
      "rouge_su*_f_score": 0.07792,
      "rouge_su*_f_score_cb": 0.07792,
      "rouge_su*_f_score_ce": 0.07792
    }
  },
  {
    "id": 52,
    "filename": "PandasEval_52.txt",
    "dataset_comment": "Combine two dataframes while ignoring the index and return the concatenated dataframe.",
    "generated_comment": "Combine two pandas DataFrames by appending df2 to df1 while ignoring the index of df2.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.58333,
      "rouge_1_recall_cb": 0.58333,
      "rouge_1_recall_ce": 0.58333,
      "rouge_1_precision": 0.46667,
      "rouge_1_precision_cb": 0.46667,
      "rouge_1_precision_ce": 0.46667,
      "rouge_1_f_score": 0.51852,
      "rouge_1_f_score_cb": 0.51852,
      "rouge_1_f_score_ce": 0.51852,
      "rouge_2_recall": 0.36364,
      "rouge_2_recall_cb": 0.36364,
      "rouge_2_recall_ce": 0.36364,
      "rouge_2_precision": 0.28571,
      "rouge_2_precision_cb": 0.28571,
      "rouge_2_precision_ce": 0.28571,
      "rouge_2_f_score": 0.32,
      "rouge_2_f_score_cb": 0.32,
      "rouge_2_f_score_ce": 0.32,
      "rouge_3_recall": 0.2,
      "rouge_3_recall_cb": 0.2,
      "rouge_3_recall_ce": 0.2,
      "rouge_3_precision": 0.15385,
      "rouge_3_precision_cb": 0.15385,
      "rouge_3_precision_ce": 0.15385,
      "rouge_3_f_score": 0.17392,
      "rouge_3_f_score_cb": 0.17392,
      "rouge_3_f_score_ce": 0.17392,
      "rouge_4_recall": 0.11111,
      "rouge_4_recall_cb": 0.11111,
      "rouge_4_recall_ce": 0.11111,
      "rouge_4_precision": 0.08333,
      "rouge_4_precision_cb": 0.08333,
      "rouge_4_precision_ce": 0.08333,
      "rouge_4_f_score": 0.09524,
      "rouge_4_f_score_cb": 0.09524,
      "rouge_4_f_score_ce": 0.09524,
      "rouge_l_recall": 0.58333,
      "rouge_l_recall_cb": 0.58333,
      "rouge_l_recall_ce": 0.58333,
      "rouge_l_precision": 0.46667,
      "rouge_l_precision_cb": 0.46667,
      "rouge_l_precision_ce": 0.46667,
      "rouge_l_f_score": 0.51852,
      "rouge_l_f_score_cb": 0.51852,
      "rouge_l_f_score_ce": 0.51852,
      "rouge_w_1.2_recall": 0.35488,
      "rouge_w_1.2_recall_cb": 0.35488,
      "rouge_w_1.2_recall_ce": 0.35488,
      "rouge_w_1.2_precision": 0.46667,
      "rouge_w_1.2_precision_cb": 0.46667,
      "rouge_w_1.2_precision_ce": 0.46667,
      "rouge_w_1.2_f_score": 0.40317,
      "rouge_w_1.2_f_score_cb": 0.40317,
      "rouge_w_1.2_f_score_ce": 0.40317,
      "rouge_s*_recall": 0.31818,
      "rouge_s*_recall_cb": 0.31818,
      "rouge_s*_recall_ce": 0.31818,
      "rouge_s*_precision": 0.2,
      "rouge_s*_precision_cb": 0.2,
      "rouge_s*_precision_ce": 0.2,
      "rouge_s*_f_score": 0.24561,
      "rouge_s*_f_score_cb": 0.24561,
      "rouge_s*_f_score_ce": 0.24561,
      "rouge_su*_recall": 0.36364,
      "rouge_su*_recall_cb": 0.36364,
      "rouge_su*_recall_ce": 0.36364,
      "rouge_su*_precision": 0.23529,
      "rouge_su*_precision_cb": 0.23529,
      "rouge_su*_precision_ce": 0.23529,
      "rouge_su*_f_score": 0.28571,
      "rouge_su*_f_score_cb": 0.28571,
      "rouge_su*_f_score_ce": 0.28571
    }
  },
  {
    "id": 53,
    "filename": "PandasEval_53.txt",
    "dataset_comment": "Retrieve the number of columns in a Pandas DataFrame and return it.",
    "generated_comment": "Count the number of columns in a pandas DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.66667,
      "rouge_1_recall_cb": 0.66667,
      "rouge_1_recall_ce": 0.66667,
      "rouge_1_precision": 0.88889,
      "rouge_1_precision_cb": 0.88889,
      "rouge_1_precision_ce": 0.88889,
      "rouge_1_f_score": 0.76191,
      "rouge_1_f_score_cb": 0.76191,
      "rouge_1_f_score_ce": 0.76191,
      "rouge_2_recall": 0.63636,
      "rouge_2_recall_cb": 0.63636,
      "rouge_2_recall_ce": 0.63636,
      "rouge_2_precision": 0.875,
      "rouge_2_precision_cb": 0.875,
      "rouge_2_precision_ce": 0.875,
      "rouge_2_f_score": 0.73684,
      "rouge_2_f_score_cb": 0.73684,
      "rouge_2_f_score_ce": 0.73684,
      "rouge_3_recall": 0.6,
      "rouge_3_recall_cb": 0.6,
      "rouge_3_recall_ce": 0.6,
      "rouge_3_precision": 0.85714,
      "rouge_3_precision_cb": 0.85714,
      "rouge_3_precision_ce": 0.85714,
      "rouge_3_f_score": 0.70588,
      "rouge_3_f_score_cb": 0.70588,
      "rouge_3_f_score_ce": 0.70588,
      "rouge_4_recall": 0.55556,
      "rouge_4_recall_cb": 0.55556,
      "rouge_4_recall_ce": 0.55556,
      "rouge_4_precision": 0.83333,
      "rouge_4_precision_cb": 0.83333,
      "rouge_4_precision_ce": 0.83333,
      "rouge_4_f_score": 0.66667,
      "rouge_4_f_score_cb": 0.66667,
      "rouge_4_f_score_ce": 0.66667,
      "rouge_l_recall": 0.66667,
      "rouge_l_recall_cb": 0.66667,
      "rouge_l_recall_ce": 0.66667,
      "rouge_l_precision": 0.88889,
      "rouge_l_precision_cb": 0.88889,
      "rouge_l_precision_ce": 0.88889,
      "rouge_l_f_score": 0.76191,
      "rouge_l_f_score_cb": 0.76191,
      "rouge_l_f_score_ce": 0.76191,
      "rouge_w_1.2_recall": 0.40558,
      "rouge_w_1.2_recall_cb": 0.40558,
      "rouge_w_1.2_recall_ce": 0.40558,
      "rouge_w_1.2_precision": 0.88889,
      "rouge_w_1.2_precision_cb": 0.88889,
      "rouge_w_1.2_precision_ce": 0.88889,
      "rouge_w_1.2_f_score": 0.55701,
      "rouge_w_1.2_f_score_cb": 0.55701,
      "rouge_w_1.2_f_score_ce": 0.55701,
      "rouge_s*_recall": 0.42424,
      "rouge_s*_recall_cb": 0.42424,
      "rouge_s*_recall_ce": 0.42424,
      "rouge_s*_precision": 0.77778,
      "rouge_s*_precision_cb": 0.77778,
      "rouge_s*_precision_ce": 0.77778,
      "rouge_s*_f_score": 0.54902,
      "rouge_s*_f_score_cb": 0.54902,
      "rouge_s*_f_score_ce": 0.54902,
      "rouge_su*_recall": 0.45455,
      "rouge_su*_recall_cb": 0.45455,
      "rouge_su*_recall_ce": 0.45455,
      "rouge_su*_precision": 0.79545,
      "rouge_su*_precision_cb": 0.79545,
      "rouge_su*_precision_ce": 0.79545,
      "rouge_su*_f_score": 0.57851,
      "rouge_su*_f_score_cb": 0.57851,
      "rouge_su*_f_score_ce": 0.57851
    }
  },
  {
    "id": 54,
    "filename": "PandasEval_54.txt",
    "dataset_comment": "Extract the last year (YY) from a fiscal date string in the format of YYYY-YY.  For example, the last year of '1999-00' would be 2000.  Implement logic to handle cases where it is the end of the century by adding to the first two digits.  The column_name refers to the column in the DataFrame that contains the date strings.  Return the numerical Series object of the last year.",
    "generated_comment": "Extract the last year from the given DataFrame column by splitting the strings based on '-' and converting the first element to numeric type, then adding 1 to obtain the final result.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.25352,
      "rouge_1_recall_cb": 0.25352,
      "rouge_1_recall_ce": 0.25352,
      "rouge_1_precision": 0.58065,
      "rouge_1_precision_cb": 0.58065,
      "rouge_1_precision_ce": 0.58065,
      "rouge_1_f_score": 0.35294,
      "rouge_1_f_score_cb": 0.35294,
      "rouge_1_f_score_ce": 0.35294,
      "rouge_2_recall": 0.05714,
      "rouge_2_recall_cb": 0.05714,
      "rouge_2_recall_ce": 0.05714,
      "rouge_2_precision": 0.13333,
      "rouge_2_precision_cb": 0.13333,
      "rouge_2_precision_ce": 0.13333,
      "rouge_2_f_score": 0.08,
      "rouge_2_f_score_cb": 0.08,
      "rouge_2_f_score_ce": 0.08,
      "rouge_3_recall": 0.02899,
      "rouge_3_recall_cb": 0.02899,
      "rouge_3_recall_ce": 0.02899,
      "rouge_3_precision": 0.06897,
      "rouge_3_precision_cb": 0.06897,
      "rouge_3_precision_ce": 0.06897,
      "rouge_3_f_score": 0.04082,
      "rouge_3_f_score_cb": 0.04082,
      "rouge_3_f_score_ce": 0.04082,
      "rouge_4_recall": 0.01471,
      "rouge_4_recall_cb": 0.01471,
      "rouge_4_recall_ce": 0.01471,
      "rouge_4_precision": 0.03571,
      "rouge_4_precision_cb": 0.03571,
      "rouge_4_precision_ce": 0.03571,
      "rouge_4_f_score": 0.02084,
      "rouge_4_f_score_cb": 0.02084,
      "rouge_4_f_score_ce": 0.02084,
      "rouge_l_recall": 0.16901,
      "rouge_l_recall_cb": 0.16901,
      "rouge_l_recall_ce": 0.16901,
      "rouge_l_precision": 0.3871,
      "rouge_l_precision_cb": 0.3871,
      "rouge_l_precision_ce": 0.3871,
      "rouge_l_f_score": 0.23529,
      "rouge_l_f_score_cb": 0.23529,
      "rouge_l_f_score_ce": 0.23529,
      "rouge_w_1.2_recall": 0.05278,
      "rouge_w_1.2_recall_cb": 0.05278,
      "rouge_w_1.2_recall_ce": 0.05278,
      "rouge_w_1.2_precision": 0.28353,
      "rouge_w_1.2_precision_cb": 0.28353,
      "rouge_w_1.2_precision_ce": 0.28353,
      "rouge_w_1.2_f_score": 0.08899,
      "rouge_w_1.2_f_score_cb": 0.08899,
      "rouge_w_1.2_f_score_ce": 0.08899,
      "rouge_s*_recall": 0.05594,
      "rouge_s*_recall_cb": 0.05594,
      "rouge_s*_recall_ce": 0.05594,
      "rouge_s*_precision": 0.29892,
      "rouge_s*_precision_cb": 0.29892,
      "rouge_s*_precision_ce": 0.29892,
      "rouge_s*_f_score": 0.09424,
      "rouge_s*_f_score_cb": 0.09424,
      "rouge_s*_f_score_ce": 0.09424,
      "rouge_su*_recall": 0.06145,
      "rouge_su*_recall_cb": 0.06145,
      "rouge_su*_recall_ce": 0.06145,
      "rouge_su*_precision": 0.31717,
      "rouge_su*_precision_cb": 0.31717,
      "rouge_su*_precision_ce": 0.31717,
      "rouge_su*_f_score": 0.10295,
      "rouge_su*_f_score_cb": 0.10295,
      "rouge_su*_f_score_ce": 0.10295
    }
  },
  {
    "id": 55,
    "filename": "PandasEval_55.txt",
    "dataset_comment": "Count consecutive positive values in a Python/Pandas array representing equity return data;  for example, if a positive day is represented as 1 and a negative day as 0,  a list y=[0,0,1,1,1,0,0,1,0,1,1] should return z=[0,0,1,2,3,0,0,1,0,1,2].  Return the result.",
    "generated_comment": "Count consecutive positive values in a pandas Series 'y' by grouping consecutive positive values together and assigning them a count based on their group. Return the modified Series with consecutive counts for positive values.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.23333,
      "rouge_1_recall_cb": 0.23333,
      "rouge_1_recall_ce": 0.23333,
      "rouge_1_precision": 0.41176,
      "rouge_1_precision_cb": 0.41176,
      "rouge_1_precision_ce": 0.41176,
      "rouge_1_f_score": 0.29787,
      "rouge_1_f_score_cb": 0.29787,
      "rouge_1_f_score_ce": 0.29787,
      "rouge_2_recall": 0.10169,
      "rouge_2_recall_cb": 0.10169,
      "rouge_2_recall_ce": 0.10169,
      "rouge_2_precision": 0.18182,
      "rouge_2_precision_cb": 0.18182,
      "rouge_2_precision_ce": 0.18182,
      "rouge_2_f_score": 0.13043,
      "rouge_2_f_score_cb": 0.13043,
      "rouge_2_f_score_ce": 0.13043,
      "rouge_3_recall": 0.06897,
      "rouge_3_recall_cb": 0.06897,
      "rouge_3_recall_ce": 0.06897,
      "rouge_3_precision": 0.125,
      "rouge_3_precision_cb": 0.125,
      "rouge_3_precision_ce": 0.125,
      "rouge_3_f_score": 0.08889,
      "rouge_3_f_score_cb": 0.08889,
      "rouge_3_f_score_ce": 0.08889,
      "rouge_4_recall": 0.05263,
      "rouge_4_recall_cb": 0.05263,
      "rouge_4_recall_ce": 0.05263,
      "rouge_4_precision": 0.09677,
      "rouge_4_precision_cb": 0.09677,
      "rouge_4_precision_ce": 0.09677,
      "rouge_4_f_score": 0.06818,
      "rouge_4_f_score_cb": 0.06818,
      "rouge_4_f_score_ce": 0.06818,
      "rouge_l_recall": 0.2,
      "rouge_l_recall_cb": 0.2,
      "rouge_l_recall_ce": 0.2,
      "rouge_l_precision": 0.35294,
      "rouge_l_precision_cb": 0.35294,
      "rouge_l_precision_ce": 0.35294,
      "rouge_l_f_score": 0.25532,
      "rouge_l_f_score_cb": 0.25532,
      "rouge_l_f_score_ce": 0.25532,
      "rouge_w_1.2_recall": 0.0709,
      "rouge_w_1.2_recall_cb": 0.0709,
      "rouge_w_1.2_recall_ce": 0.0709,
      "rouge_w_1.2_precision": 0.28375,
      "rouge_w_1.2_precision_cb": 0.28375,
      "rouge_w_1.2_precision_ce": 0.28375,
      "rouge_w_1.2_f_score": 0.11345,
      "rouge_w_1.2_f_score_cb": 0.11345,
      "rouge_w_1.2_f_score_ce": 0.11345,
      "rouge_s*_recall": 0.05141,
      "rouge_s*_recall_cb": 0.05141,
      "rouge_s*_recall_ce": 0.05141,
      "rouge_s*_precision": 0.16221,
      "rouge_s*_precision_cb": 0.16221,
      "rouge_s*_precision_ce": 0.16221,
      "rouge_s*_f_score": 0.07808,
      "rouge_s*_f_score_cb": 0.07808,
      "rouge_s*_f_score_ce": 0.07808,
      "rouge_su*_recall": 0.05741,
      "rouge_su*_recall_cb": 0.05741,
      "rouge_su*_recall_ce": 0.05741,
      "rouge_su*_precision": 0.17677,
      "rouge_su*_precision_cb": 0.17677,
      "rouge_su*_precision_ce": 0.17677,
      "rouge_su*_f_score": 0.08667,
      "rouge_su*_f_score_cb": 0.08667,
      "rouge_su*_f_score_ce": 0.08667
    }
  },
  {
    "id": 56,
    "filename": "PandasEval_56.txt",
    "dataset_comment": "Get the first largest value in column a using nlargest and iloc to implement this.",
    "generated_comment": "Get the largest value from column 'a' in the DataFrame using nlargest() function and return the last element using iloc[-1].",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.73333,
      "rouge_1_recall_cb": 0.73333,
      "rouge_1_recall_ce": 0.73333,
      "rouge_1_precision": 0.52381,
      "rouge_1_precision_cb": 0.52381,
      "rouge_1_precision_ce": 0.52381,
      "rouge_1_f_score": 0.61111,
      "rouge_1_f_score_cb": 0.61111,
      "rouge_1_f_score_ce": 0.61111,
      "rouge_2_recall": 0.28571,
      "rouge_2_recall_cb": 0.28571,
      "rouge_2_recall_ce": 0.28571,
      "rouge_2_precision": 0.2,
      "rouge_2_precision_cb": 0.2,
      "rouge_2_precision_ce": 0.2,
      "rouge_2_f_score": 0.23529,
      "rouge_2_f_score_cb": 0.23529,
      "rouge_2_f_score_ce": 0.23529,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.66667,
      "rouge_l_recall_cb": 0.66667,
      "rouge_l_recall_ce": 0.66667,
      "rouge_l_precision": 0.47619,
      "rouge_l_precision_cb": 0.47619,
      "rouge_l_precision_ce": 0.47619,
      "rouge_l_f_score": 0.55556,
      "rouge_l_f_score_cb": 0.55556,
      "rouge_l_f_score_ce": 0.55556,
      "rouge_w_1.2_recall": 0.33264,
      "rouge_w_1.2_recall_cb": 0.33264,
      "rouge_w_1.2_recall_ce": 0.33264,
      "rouge_w_1.2_precision": 0.40838,
      "rouge_w_1.2_precision_cb": 0.40838,
      "rouge_w_1.2_precision_ce": 0.40838,
      "rouge_w_1.2_f_score": 0.36664,
      "rouge_w_1.2_f_score_cb": 0.36664,
      "rouge_w_1.2_f_score_ce": 0.36664,
      "rouge_s*_recall": 0.50476,
      "rouge_s*_recall_cb": 0.50476,
      "rouge_s*_recall_ce": 0.50476,
      "rouge_s*_precision": 0.25238,
      "rouge_s*_precision_cb": 0.25238,
      "rouge_s*_precision_ce": 0.25238,
      "rouge_s*_f_score": 0.33651,
      "rouge_s*_f_score_cb": 0.33651,
      "rouge_s*_f_score_ce": 0.33651,
      "rouge_su*_recall": 0.53782,
      "rouge_su*_recall_cb": 0.53782,
      "rouge_su*_recall_ce": 0.53782,
      "rouge_su*_precision": 0.27826,
      "rouge_su*_precision_cb": 0.27826,
      "rouge_su*_precision_ce": 0.27826,
      "rouge_su*_f_score": 0.36676,
      "rouge_su*_f_score_cb": 0.36676,
      "rouge_su*_f_score_ce": 0.36676
    }
  },
  {
    "id": 57,
    "filename": "PandasEval_57.txt",
    "dataset_comment": "Sort columns in a Pandas DataFrame based on column name, with axis set to one.",
    "generated_comment": "Sort the columns of a pandas DataFrame based on column names in ascending order.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.66667,
      "rouge_1_recall_cb": 0.66667,
      "rouge_1_recall_ce": 0.66667,
      "rouge_1_precision": 0.71429,
      "rouge_1_precision_cb": 0.71429,
      "rouge_1_precision_ce": 0.71429,
      "rouge_1_f_score": 0.68966,
      "rouge_1_f_score_cb": 0.68966,
      "rouge_1_f_score_ce": 0.68966,
      "rouge_2_recall": 0.42857,
      "rouge_2_recall_cb": 0.42857,
      "rouge_2_recall_ce": 0.42857,
      "rouge_2_precision": 0.46154,
      "rouge_2_precision_cb": 0.46154,
      "rouge_2_precision_ce": 0.46154,
      "rouge_2_f_score": 0.44444,
      "rouge_2_f_score_cb": 0.44444,
      "rouge_2_f_score_ce": 0.44444,
      "rouge_3_recall": 0.38462,
      "rouge_3_recall_cb": 0.38462,
      "rouge_3_recall_ce": 0.38462,
      "rouge_3_precision": 0.41667,
      "rouge_3_precision_cb": 0.41667,
      "rouge_3_precision_ce": 0.41667,
      "rouge_3_f_score": 0.4,
      "rouge_3_f_score_cb": 0.4,
      "rouge_3_f_score_ce": 0.4,
      "rouge_4_recall": 0.33333,
      "rouge_4_recall_cb": 0.33333,
      "rouge_4_recall_ce": 0.33333,
      "rouge_4_precision": 0.36364,
      "rouge_4_precision_cb": 0.36364,
      "rouge_4_precision_ce": 0.36364,
      "rouge_4_f_score": 0.34783,
      "rouge_4_f_score_cb": 0.34783,
      "rouge_4_f_score_ce": 0.34783,
      "rouge_l_recall": 0.6,
      "rouge_l_recall_cb": 0.6,
      "rouge_l_recall_ce": 0.6,
      "rouge_l_precision": 0.64286,
      "rouge_l_precision_cb": 0.64286,
      "rouge_l_precision_ce": 0.64286,
      "rouge_l_f_score": 0.62069,
      "rouge_l_f_score_cb": 0.62069,
      "rouge_l_f_score_ce": 0.62069,
      "rouge_w_1.2_recall": 0.32097,
      "rouge_w_1.2_recall_cb": 0.32097,
      "rouge_w_1.2_recall_ce": 0.32097,
      "rouge_w_1.2_precision": 0.59108,
      "rouge_w_1.2_precision_cb": 0.59108,
      "rouge_w_1.2_precision_ce": 0.59108,
      "rouge_w_1.2_f_score": 0.41603,
      "rouge_w_1.2_f_score_cb": 0.41603,
      "rouge_w_1.2_f_score_ce": 0.41603,
      "rouge_s*_recall": 0.3619,
      "rouge_s*_recall_cb": 0.3619,
      "rouge_s*_recall_ce": 0.3619,
      "rouge_s*_precision": 0.41758,
      "rouge_s*_precision_cb": 0.41758,
      "rouge_s*_precision_ce": 0.41758,
      "rouge_s*_f_score": 0.38775,
      "rouge_s*_f_score_cb": 0.38775,
      "rouge_s*_f_score_ce": 0.38775,
      "rouge_su*_recall": 0.40336,
      "rouge_su*_recall_cb": 0.40336,
      "rouge_su*_recall_ce": 0.40336,
      "rouge_su*_precision": 0.46154,
      "rouge_su*_precision_cb": 0.46154,
      "rouge_su*_precision_ce": 0.46154,
      "rouge_su*_f_score": 0.43049,
      "rouge_su*_f_score_cb": 0.43049,
      "rouge_su*_f_score_ce": 0.43049
    }
  },
  {
    "id": 58,
    "filename": "PandasEval_58.txt",
    "dataset_comment": "Remove all the numbers from the Name column at the series/dataframe level.",
    "generated_comment": "Remove all digits from the 'Name' column in the DataFrame using the str.replace() method.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.69231,
      "rouge_1_recall_cb": 0.69231,
      "rouge_1_recall_ce": 0.69231,
      "rouge_1_precision": 0.6,
      "rouge_1_precision_cb": 0.6,
      "rouge_1_precision_ce": 0.6,
      "rouge_1_f_score": 0.64286,
      "rouge_1_f_score_cb": 0.64286,
      "rouge_1_f_score_ce": 0.64286,
      "rouge_2_recall": 0.33333,
      "rouge_2_recall_cb": 0.33333,
      "rouge_2_recall_ce": 0.33333,
      "rouge_2_precision": 0.28571,
      "rouge_2_precision_cb": 0.28571,
      "rouge_2_precision_ce": 0.28571,
      "rouge_2_f_score": 0.30769,
      "rouge_2_f_score_cb": 0.30769,
      "rouge_2_f_score_ce": 0.30769,
      "rouge_3_recall": 0.18182,
      "rouge_3_recall_cb": 0.18182,
      "rouge_3_recall_ce": 0.18182,
      "rouge_3_precision": 0.15385,
      "rouge_3_precision_cb": 0.15385,
      "rouge_3_precision_ce": 0.15385,
      "rouge_3_f_score": 0.16667,
      "rouge_3_f_score_cb": 0.16667,
      "rouge_3_f_score_ce": 0.16667,
      "rouge_4_recall": 0.1,
      "rouge_4_recall_cb": 0.1,
      "rouge_4_recall_ce": 0.1,
      "rouge_4_precision": 0.08333,
      "rouge_4_precision_cb": 0.08333,
      "rouge_4_precision_ce": 0.08333,
      "rouge_4_f_score": 0.09091,
      "rouge_4_f_score_cb": 0.09091,
      "rouge_4_f_score_ce": 0.09091,
      "rouge_l_recall": 0.61538,
      "rouge_l_recall_cb": 0.61538,
      "rouge_l_recall_ce": 0.61538,
      "rouge_l_precision": 0.53333,
      "rouge_l_precision_cb": 0.53333,
      "rouge_l_precision_ce": 0.53333,
      "rouge_l_f_score": 0.57142,
      "rouge_l_f_score_cb": 0.57142,
      "rouge_l_f_score_ce": 0.57142,
      "rouge_w_1.2_recall": 0.30262,
      "rouge_w_1.2_recall_cb": 0.30262,
      "rouge_w_1.2_recall_ce": 0.30262,
      "rouge_w_1.2_precision": 0.43807,
      "rouge_w_1.2_precision_cb": 0.43807,
      "rouge_w_1.2_precision_ce": 0.43807,
      "rouge_w_1.2_f_score": 0.35796,
      "rouge_w_1.2_f_score_cb": 0.35796,
      "rouge_w_1.2_f_score_ce": 0.35796,
      "rouge_s*_recall": 0.41026,
      "rouge_s*_recall_cb": 0.41026,
      "rouge_s*_recall_ce": 0.41026,
      "rouge_s*_precision": 0.30476,
      "rouge_s*_precision_cb": 0.30476,
      "rouge_s*_precision_ce": 0.30476,
      "rouge_s*_f_score": 0.34973,
      "rouge_s*_f_score_cb": 0.34973,
      "rouge_s*_f_score_ce": 0.34973,
      "rouge_su*_recall": 0.45556,
      "rouge_su*_recall_cb": 0.45556,
      "rouge_su*_recall_ce": 0.45556,
      "rouge_su*_precision": 0.34454,
      "rouge_su*_precision_cb": 0.34454,
      "rouge_su*_precision_ce": 0.34454,
      "rouge_su*_f_score": 0.39235,
      "rouge_su*_f_score_cb": 0.39235,
      "rouge_su*_f_score_ce": 0.39235
    }
  },
  {
    "id": 59,
    "filename": "PandasEval_59.txt",
    "dataset_comment": "Delete all columns from the DataFrame that contain only NaN values and return the result.",
    "generated_comment": "Delete all columns in the DataFrame where all values are NaN by utilizing the dropna method with the 'all' parameter set to True and specifying axis=1 for columns.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.6,
      "rouge_1_recall_cb": 0.6,
      "rouge_1_recall_ce": 0.6,
      "rouge_1_precision": 0.31034,
      "rouge_1_precision_cb": 0.31034,
      "rouge_1_precision_ce": 0.31034,
      "rouge_1_f_score": 0.40909,
      "rouge_1_f_score_cb": 0.40909,
      "rouge_1_f_score_ce": 0.40909,
      "rouge_2_recall": 0.21429,
      "rouge_2_recall_cb": 0.21429,
      "rouge_2_recall_ce": 0.21429,
      "rouge_2_precision": 0.10714,
      "rouge_2_precision_cb": 0.10714,
      "rouge_2_precision_ce": 0.10714,
      "rouge_2_f_score": 0.14286,
      "rouge_2_f_score_cb": 0.14286,
      "rouge_2_f_score_ce": 0.14286,
      "rouge_3_recall": 0.07692,
      "rouge_3_recall_cb": 0.07692,
      "rouge_3_recall_ce": 0.07692,
      "rouge_3_precision": 0.03704,
      "rouge_3_precision_cb": 0.03704,
      "rouge_3_precision_ce": 0.03704,
      "rouge_3_f_score": 0.05,
      "rouge_3_f_score_cb": 0.05,
      "rouge_3_f_score_ce": 0.05,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.46667,
      "rouge_l_recall_cb": 0.46667,
      "rouge_l_recall_ce": 0.46667,
      "rouge_l_precision": 0.24138,
      "rouge_l_precision_cb": 0.24138,
      "rouge_l_precision_ce": 0.24138,
      "rouge_l_f_score": 0.31818,
      "rouge_l_f_score_cb": 0.31818,
      "rouge_l_f_score_ce": 0.31818,
      "rouge_w_1.2_recall": 0.2202,
      "rouge_w_1.2_recall_cb": 0.2202,
      "rouge_w_1.2_recall_ce": 0.2202,
      "rouge_w_1.2_precision": 0.19577,
      "rouge_w_1.2_precision_cb": 0.19577,
      "rouge_w_1.2_precision_ce": 0.19577,
      "rouge_w_1.2_f_score": 0.20727,
      "rouge_w_1.2_f_score_cb": 0.20727,
      "rouge_w_1.2_f_score_ce": 0.20727,
      "rouge_s*_recall": 0.32381,
      "rouge_s*_recall_cb": 0.32381,
      "rouge_s*_recall_ce": 0.32381,
      "rouge_s*_precision": 0.08374,
      "rouge_s*_precision_cb": 0.08374,
      "rouge_s*_precision_ce": 0.08374,
      "rouge_s*_f_score": 0.13307,
      "rouge_s*_f_score_cb": 0.13307,
      "rouge_s*_f_score_ce": 0.13307,
      "rouge_su*_recall": 0.36134,
      "rouge_su*_recall_cb": 0.36134,
      "rouge_su*_recall_ce": 0.36134,
      "rouge_su*_precision": 0.09908,
      "rouge_su*_precision_cb": 0.09908,
      "rouge_su*_precision_ce": 0.09908,
      "rouge_su*_f_score": 0.15552,
      "rouge_su*_f_score_cb": 0.15552,
      "rouge_su*_f_score_ce": 0.15552
    }
  },
  {
    "id": 60,
    "filename": "PandasEval_60.txt",
    "dataset_comment": "Convert Column `Date` to Date Format using pandas function and return the converted dataframe.",
    "generated_comment": "Convert a specific column in a pandas DataFrame to datetime format using pd.to_datetime() function.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.57143,
      "rouge_1_recall_cb": 0.57143,
      "rouge_1_recall_ce": 0.57143,
      "rouge_1_precision": 0.5,
      "rouge_1_precision_cb": 0.5,
      "rouge_1_precision_ce": 0.5,
      "rouge_1_f_score": 0.53333,
      "rouge_1_f_score_cb": 0.53333,
      "rouge_1_f_score_ce": 0.53333,
      "rouge_2_recall": 0.07692,
      "rouge_2_recall_cb": 0.07692,
      "rouge_2_recall_ce": 0.07692,
      "rouge_2_precision": 0.06667,
      "rouge_2_precision_cb": 0.06667,
      "rouge_2_precision_ce": 0.06667,
      "rouge_2_f_score": 0.07143,
      "rouge_2_f_score_cb": 0.07143,
      "rouge_2_f_score_ce": 0.07143,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.42857,
      "rouge_l_recall_cb": 0.42857,
      "rouge_l_recall_ce": 0.42857,
      "rouge_l_precision": 0.375,
      "rouge_l_precision_cb": 0.375,
      "rouge_l_precision_ce": 0.375,
      "rouge_l_f_score": 0.4,
      "rouge_l_f_score_cb": 0.4,
      "rouge_l_f_score_ce": 0.4,
      "rouge_w_1.2_recall": 0.20291,
      "rouge_w_1.2_recall_cb": 0.20291,
      "rouge_w_1.2_recall_ce": 0.20291,
      "rouge_w_1.2_precision": 0.30099,
      "rouge_w_1.2_precision_cb": 0.30099,
      "rouge_w_1.2_precision_ce": 0.30099,
      "rouge_w_1.2_f_score": 0.2424,
      "rouge_w_1.2_f_score_cb": 0.2424,
      "rouge_w_1.2_f_score_ce": 0.2424,
      "rouge_s*_recall": 0.23077,
      "rouge_s*_recall_cb": 0.23077,
      "rouge_s*_recall_ce": 0.23077,
      "rouge_s*_precision": 0.175,
      "rouge_s*_precision_cb": 0.175,
      "rouge_s*_precision_ce": 0.175,
      "rouge_s*_f_score": 0.19905,
      "rouge_s*_f_score_cb": 0.19905,
      "rouge_s*_f_score_ce": 0.19905,
      "rouge_su*_recall": 0.25962,
      "rouge_su*_recall_cb": 0.25962,
      "rouge_su*_recall_ce": 0.25962,
      "rouge_su*_precision": 0.2,
      "rouge_su*_precision_cb": 0.2,
      "rouge_su*_precision_ce": 0.2,
      "rouge_su*_f_score": 0.22594,
      "rouge_su*_f_score_cb": 0.22594,
      "rouge_su*_f_score_ce": 0.22594
    }
  },
  {
    "id": 61,
    "filename": "PandasEval_61.txt",
    "dataset_comment": "Insert a row into a dataframe at a specified position without ignoring the index, and sort and reset the index with drop=True. Return the new dataframe.",
    "generated_comment": "Insert a row at an arbitrary position in a pandas DataFrame by appending the row to the DataFrame and then sorting the index to maintain the order.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.51852,
      "rouge_1_recall_cb": 0.51852,
      "rouge_1_recall_ce": 0.51852,
      "rouge_1_precision": 0.51852,
      "rouge_1_precision_cb": 0.51852,
      "rouge_1_precision_ce": 0.51852,
      "rouge_1_f_score": 0.51852,
      "rouge_1_f_score_cb": 0.51852,
      "rouge_1_f_score_ce": 0.51852,
      "rouge_2_recall": 0.11538,
      "rouge_2_recall_cb": 0.11538,
      "rouge_2_recall_ce": 0.11538,
      "rouge_2_precision": 0.11538,
      "rouge_2_precision_cb": 0.11538,
      "rouge_2_precision_ce": 0.11538,
      "rouge_2_f_score": 0.11538,
      "rouge_2_f_score_cb": 0.11538,
      "rouge_2_f_score_ce": 0.11538,
      "rouge_3_recall": 0.04,
      "rouge_3_recall_cb": 0.04,
      "rouge_3_recall_ce": 0.04,
      "rouge_3_precision": 0.04,
      "rouge_3_precision_cb": 0.04,
      "rouge_3_precision_ce": 0.04,
      "rouge_3_f_score": 0.04,
      "rouge_3_f_score_cb": 0.04,
      "rouge_3_f_score_ce": 0.04,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.40741,
      "rouge_l_recall_cb": 0.40741,
      "rouge_l_recall_ce": 0.40741,
      "rouge_l_precision": 0.40741,
      "rouge_l_precision_cb": 0.40741,
      "rouge_l_precision_ce": 0.40741,
      "rouge_l_f_score": 0.40741,
      "rouge_l_f_score_cb": 0.40741,
      "rouge_l_f_score_ce": 0.40741,
      "rouge_w_1.2_recall": 0.15856,
      "rouge_w_1.2_recall_cb": 0.15856,
      "rouge_w_1.2_recall_ce": 0.15856,
      "rouge_w_1.2_precision": 0.30652,
      "rouge_w_1.2_precision_cb": 0.30652,
      "rouge_w_1.2_precision_ce": 0.30652,
      "rouge_w_1.2_f_score": 0.209,
      "rouge_w_1.2_f_score_cb": 0.209,
      "rouge_w_1.2_f_score_ce": 0.209,
      "rouge_s*_recall": 0.26211,
      "rouge_s*_recall_cb": 0.26211,
      "rouge_s*_recall_ce": 0.26211,
      "rouge_s*_precision": 0.26211,
      "rouge_s*_precision_cb": 0.26211,
      "rouge_s*_precision_ce": 0.26211,
      "rouge_s*_f_score": 0.26211,
      "rouge_s*_f_score_cb": 0.26211,
      "rouge_s*_f_score_ce": 0.26211,
      "rouge_su*_recall": 0.27851,
      "rouge_su*_recall_cb": 0.27851,
      "rouge_su*_recall_ce": 0.27851,
      "rouge_su*_precision": 0.27851,
      "rouge_su*_precision_cb": 0.27851,
      "rouge_su*_precision_ce": 0.27851,
      "rouge_su*_f_score": 0.27851,
      "rouge_su*_f_score_cb": 0.27851,
      "rouge_su*_f_score_ce": 0.27851
    }
  },
  {
    "id": 62,
    "filename": "PandasEval_62.txt",
    "dataset_comment": "For each row in the DataFrame, insert row['MSRA'] as the key and row['THU'] as the value into a rows_dict. The method iterrows() yields both the index and row (as a Series).",
    "generated_comment": "Create a dictionary where the keys are values from the 'MSRA' column and the values are corresponding values from the 'THU' column by iterating over each row in the DataFrame 'df' and assigning the values accordingly.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.44118,
      "rouge_1_recall_cb": 0.44118,
      "rouge_1_recall_ce": 0.44118,
      "rouge_1_precision": 0.41667,
      "rouge_1_precision_cb": 0.41667,
      "rouge_1_precision_ce": 0.41667,
      "rouge_1_f_score": 0.42857,
      "rouge_1_f_score_cb": 0.42857,
      "rouge_1_f_score_ce": 0.42857,
      "rouge_2_recall": 0.15152,
      "rouge_2_recall_cb": 0.15152,
      "rouge_2_recall_ce": 0.15152,
      "rouge_2_precision": 0.14286,
      "rouge_2_precision_cb": 0.14286,
      "rouge_2_precision_ce": 0.14286,
      "rouge_2_f_score": 0.14706,
      "rouge_2_f_score_cb": 0.14706,
      "rouge_2_f_score_ce": 0.14706,
      "rouge_3_recall": 0.09375,
      "rouge_3_recall_cb": 0.09375,
      "rouge_3_recall_ce": 0.09375,
      "rouge_3_precision": 0.08824,
      "rouge_3_precision_cb": 0.08824,
      "rouge_3_precision_ce": 0.08824,
      "rouge_3_f_score": 0.09091,
      "rouge_3_f_score_cb": 0.09091,
      "rouge_3_f_score_ce": 0.09091,
      "rouge_4_recall": 0.06452,
      "rouge_4_recall_cb": 0.06452,
      "rouge_4_recall_ce": 0.06452,
      "rouge_4_precision": 0.06061,
      "rouge_4_precision_cb": 0.06061,
      "rouge_4_precision_ce": 0.06061,
      "rouge_4_f_score": 0.0625,
      "rouge_4_f_score_cb": 0.0625,
      "rouge_4_f_score_ce": 0.0625,
      "rouge_l_recall": 0.23529,
      "rouge_l_recall_cb": 0.23529,
      "rouge_l_recall_ce": 0.23529,
      "rouge_l_precision": 0.22222,
      "rouge_l_precision_cb": 0.22222,
      "rouge_l_precision_ce": 0.22222,
      "rouge_l_f_score": 0.22857,
      "rouge_l_f_score_cb": 0.22857,
      "rouge_l_f_score_ce": 0.22857,
      "rouge_w_1.2_recall": 0.1006,
      "rouge_w_1.2_recall_cb": 0.1006,
      "rouge_w_1.2_recall_ce": 0.1006,
      "rouge_w_1.2_precision": 0.19233,
      "rouge_w_1.2_precision_cb": 0.19233,
      "rouge_w_1.2_precision_ce": 0.19233,
      "rouge_w_1.2_f_score": 0.1321,
      "rouge_w_1.2_f_score_cb": 0.1321,
      "rouge_w_1.2_f_score_ce": 0.1321,
      "rouge_s*_recall": 0.14082,
      "rouge_s*_recall_cb": 0.14082,
      "rouge_s*_recall_ce": 0.14082,
      "rouge_s*_precision": 0.1254,
      "rouge_s*_precision_cb": 0.1254,
      "rouge_s*_precision_ce": 0.1254,
      "rouge_s*_f_score": 0.13266,
      "rouge_s*_f_score_cb": 0.13266,
      "rouge_s*_f_score_ce": 0.13266,
      "rouge_su*_recall": 0.15825,
      "rouge_su*_recall_cb": 0.15825,
      "rouge_su*_recall_ce": 0.15825,
      "rouge_su*_precision": 0.14135,
      "rouge_su*_precision_cb": 0.14135,
      "rouge_su*_precision_ce": 0.14135,
      "rouge_su*_f_score": 0.14932,
      "rouge_su*_f_score_cb": 0.14932,
      "rouge_su*_f_score_ce": 0.14932
    }
  },
  {
    "id": 63,
    "filename": "PandasEval_63.txt",
    "dataset_comment": "Merge two DataFrames by index and set left and right indices to True.",
    "generated_comment": "Merge two DataFrames 'df1' and 'df2' on their indices using pandas merge function with the left and right indices.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.69231,
      "rouge_1_recall_cb": 0.69231,
      "rouge_1_recall_ce": 0.69231,
      "rouge_1_precision": 0.47368,
      "rouge_1_precision_cb": 0.47368,
      "rouge_1_precision_ce": 0.47368,
      "rouge_1_f_score": 0.5625,
      "rouge_1_f_score_cb": 0.5625,
      "rouge_1_f_score_ce": 0.5625,
      "rouge_2_recall": 0.41667,
      "rouge_2_recall_cb": 0.41667,
      "rouge_2_recall_ce": 0.41667,
      "rouge_2_precision": 0.27778,
      "rouge_2_precision_cb": 0.27778,
      "rouge_2_precision_ce": 0.27778,
      "rouge_2_f_score": 0.33334,
      "rouge_2_f_score_cb": 0.33334,
      "rouge_2_f_score_ce": 0.33334,
      "rouge_3_recall": 0.27273,
      "rouge_3_recall_cb": 0.27273,
      "rouge_3_recall_ce": 0.27273,
      "rouge_3_precision": 0.17647,
      "rouge_3_precision_cb": 0.17647,
      "rouge_3_precision_ce": 0.17647,
      "rouge_3_f_score": 0.21429,
      "rouge_3_f_score_cb": 0.21429,
      "rouge_3_f_score_ce": 0.21429,
      "rouge_4_recall": 0.1,
      "rouge_4_recall_cb": 0.1,
      "rouge_4_recall_ce": 0.1,
      "rouge_4_precision": 0.0625,
      "rouge_4_precision_cb": 0.0625,
      "rouge_4_precision_ce": 0.0625,
      "rouge_4_f_score": 0.07692,
      "rouge_4_f_score_cb": 0.07692,
      "rouge_4_f_score_ce": 0.07692,
      "rouge_l_recall": 0.61538,
      "rouge_l_recall_cb": 0.61538,
      "rouge_l_recall_ce": 0.61538,
      "rouge_l_precision": 0.42105,
      "rouge_l_precision_cb": 0.42105,
      "rouge_l_precision_ce": 0.42105,
      "rouge_l_f_score": 0.5,
      "rouge_l_f_score_cb": 0.5,
      "rouge_l_f_score_ce": 0.5,
      "rouge_w_1.2_recall": 0.31416,
      "rouge_w_1.2_recall_cb": 0.31416,
      "rouge_w_1.2_recall_ce": 0.31416,
      "rouge_w_1.2_precision": 0.35903,
      "rouge_w_1.2_precision_cb": 0.35903,
      "rouge_w_1.2_precision_ce": 0.35903,
      "rouge_w_1.2_f_score": 0.3351,
      "rouge_w_1.2_f_score_cb": 0.3351,
      "rouge_w_1.2_f_score_ce": 0.3351,
      "rouge_s*_recall": 0.44872,
      "rouge_s*_recall_cb": 0.44872,
      "rouge_s*_recall_ce": 0.44872,
      "rouge_s*_precision": 0.20468,
      "rouge_s*_precision_cb": 0.20468,
      "rouge_s*_precision_ce": 0.20468,
      "rouge_s*_f_score": 0.28113,
      "rouge_s*_f_score_cb": 0.28113,
      "rouge_s*_f_score_ce": 0.28113,
      "rouge_su*_recall": 0.47778,
      "rouge_su*_recall_cb": 0.47778,
      "rouge_su*_recall_ce": 0.47778,
      "rouge_su*_precision": 0.22751,
      "rouge_su*_precision_cb": 0.22751,
      "rouge_su*_precision_ce": 0.22751,
      "rouge_su*_f_score": 0.30824,
      "rouge_su*_f_score_cb": 0.30824,
      "rouge_su*_f_score_ce": 0.30824
    }
  },
  {
    "id": 64,
    "filename": "PandasEval_64.txt",
    "dataset_comment": "Select only float64 columns from a Pandas DataFrame using an elegant and shorthand method.",
    "generated_comment": "Select columns in the DataFrame 'df' that have data type float64 and create a new DataFrame 'new_df' containing only those columns.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5,
      "rouge_1_recall_cb": 0.5,
      "rouge_1_recall_ce": 0.5,
      "rouge_1_precision": 0.31818,
      "rouge_1_precision_cb": 0.31818,
      "rouge_1_precision_ce": 0.31818,
      "rouge_1_f_score": 0.38889,
      "rouge_1_f_score_cb": 0.38889,
      "rouge_1_f_score_ce": 0.38889,
      "rouge_2_recall": 0.0,
      "rouge_2_recall_cb": 0.0,
      "rouge_2_recall_ce": 0.0,
      "rouge_2_precision": 0.0,
      "rouge_2_precision_cb": 0.0,
      "rouge_2_precision_ce": 0.0,
      "rouge_2_f_score": 0.0,
      "rouge_2_f_score_cb": 0.0,
      "rouge_2_f_score_ce": 0.0,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.28571,
      "rouge_l_recall_cb": 0.28571,
      "rouge_l_recall_ce": 0.28571,
      "rouge_l_precision": 0.18182,
      "rouge_l_precision_cb": 0.18182,
      "rouge_l_precision_ce": 0.18182,
      "rouge_l_f_score": 0.22222,
      "rouge_l_f_score_cb": 0.22222,
      "rouge_l_f_score_ce": 0.22222,
      "rouge_w_1.2_recall": 0.13377,
      "rouge_w_1.2_recall_cb": 0.13377,
      "rouge_w_1.2_recall_ce": 0.13377,
      "rouge_w_1.2_precision": 0.14431,
      "rouge_w_1.2_precision_cb": 0.14431,
      "rouge_w_1.2_precision_ce": 0.14431,
      "rouge_w_1.2_f_score": 0.13884,
      "rouge_w_1.2_f_score_cb": 0.13884,
      "rouge_w_1.2_f_score_ce": 0.13884,
      "rouge_s*_recall": 0.17582,
      "rouge_s*_recall_cb": 0.17582,
      "rouge_s*_recall_ce": 0.17582,
      "rouge_s*_precision": 0.06926,
      "rouge_s*_precision_cb": 0.06926,
      "rouge_s*_precision_ce": 0.06926,
      "rouge_s*_f_score": 0.09937,
      "rouge_s*_f_score_cb": 0.09937,
      "rouge_s*_f_score_ce": 0.09937,
      "rouge_su*_recall": 0.22115,
      "rouge_su*_recall_cb": 0.22115,
      "rouge_su*_recall_ce": 0.22115,
      "rouge_su*_precision": 0.09127,
      "rouge_su*_precision_cb": 0.09127,
      "rouge_su*_precision_ce": 0.09127,
      "rouge_su*_f_score": 0.12921,
      "rouge_su*_f_score_cb": 0.12921,
      "rouge_su*_f_score_ce": 0.12921
    }
  },
  {
    "id": 65,
    "filename": "PandasEval_65.txt",
    "dataset_comment": "Merge two DataFrames with different column names but the same number of rows.  Given two DataFrames in Pandas, df1 and df2, where df1 has columns 'a' and 'b', and df2 has a column 'c', merge them to create a new DataFrame with columns 'a', 'b', and 'c'.  Two methods can be used to achieve this, both resulting in the same output. Use the merge function with additional arguments to utilize the indexes,  specifically setting left_index and right_index to True.",
    "generated_comment": "Merge two pandas DataFrames df1 and df2 using the indexes of both DataFrames as the join keys. Return a new DataFrame that combines the columns of both input DataFrames based on the common index values.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.25926,
      "rouge_1_recall_cb": 0.25926,
      "rouge_1_recall_ce": 0.25926,
      "rouge_1_precision": 0.6,
      "rouge_1_precision_cb": 0.6,
      "rouge_1_precision_ce": 0.6,
      "rouge_1_f_score": 0.36207,
      "rouge_1_f_score_cb": 0.36207,
      "rouge_1_f_score_ce": 0.36207,
      "rouge_2_recall": 0.075,
      "rouge_2_recall_cb": 0.075,
      "rouge_2_recall_ce": 0.075,
      "rouge_2_precision": 0.17647,
      "rouge_2_precision_cb": 0.17647,
      "rouge_2_precision_ce": 0.17647,
      "rouge_2_f_score": 0.10526,
      "rouge_2_f_score_cb": 0.10526,
      "rouge_2_f_score_ce": 0.10526,
      "rouge_3_recall": 0.02532,
      "rouge_3_recall_cb": 0.02532,
      "rouge_3_recall_ce": 0.02532,
      "rouge_3_precision": 0.06061,
      "rouge_3_precision_cb": 0.06061,
      "rouge_3_precision_ce": 0.06061,
      "rouge_3_f_score": 0.03572,
      "rouge_3_f_score_cb": 0.03572,
      "rouge_3_f_score_ce": 0.03572,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.16049,
      "rouge_l_recall_cb": 0.16049,
      "rouge_l_recall_ce": 0.16049,
      "rouge_l_precision": 0.37143,
      "rouge_l_precision_cb": 0.37143,
      "rouge_l_precision_ce": 0.37143,
      "rouge_l_f_score": 0.22413,
      "rouge_l_f_score_cb": 0.22413,
      "rouge_l_f_score_ce": 0.22413,
      "rouge_w_1.2_recall": 0.04834,
      "rouge_w_1.2_recall_cb": 0.04834,
      "rouge_w_1.2_recall_ce": 0.04834,
      "rouge_w_1.2_precision": 0.26944,
      "rouge_w_1.2_precision_cb": 0.26944,
      "rouge_w_1.2_precision_ce": 0.26944,
      "rouge_w_1.2_f_score": 0.08197,
      "rouge_w_1.2_f_score_cb": 0.08197,
      "rouge_w_1.2_f_score_ce": 0.08197,
      "rouge_s*_recall": 0.06142,
      "rouge_s*_recall_cb": 0.06142,
      "rouge_s*_recall_ce": 0.06142,
      "rouge_s*_precision": 0.33445,
      "rouge_s*_precision_cb": 0.33445,
      "rouge_s*_precision_ce": 0.33445,
      "rouge_s*_f_score": 0.10378,
      "rouge_s*_f_score_cb": 0.10378,
      "rouge_s*_f_score_ce": 0.10378,
      "rouge_su*_recall": 0.06627,
      "rouge_su*_recall_cb": 0.06627,
      "rouge_su*_recall_ce": 0.06627,
      "rouge_su*_precision": 0.34976,
      "rouge_su*_precision_cb": 0.34976,
      "rouge_su*_precision_ce": 0.34976,
      "rouge_su*_f_score": 0.11143,
      "rouge_su*_f_score_cb": 0.11143,
      "rouge_su*_f_score_ce": 0.11143
    }
  },
  {
    "id": 66,
    "filename": "PandasEval_66.txt",
    "dataset_comment": "Given a pandas series representing frequencies of a value, convert those frequencies into percentages and return the percentage of each gender.",
    "generated_comment": "Calculate the percentage of each gender in the given pandas series by using the value_counts method with normalize parameter set to True.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.42857,
      "rouge_1_recall_cb": 0.42857,
      "rouge_1_recall_ce": 0.42857,
      "rouge_1_precision": 0.3913,
      "rouge_1_precision_cb": 0.3913,
      "rouge_1_precision_ce": 0.3913,
      "rouge_1_f_score": 0.40909,
      "rouge_1_f_score_cb": 0.40909,
      "rouge_1_f_score_ce": 0.40909,
      "rouge_2_recall": 0.25,
      "rouge_2_recall_cb": 0.25,
      "rouge_2_recall_ce": 0.25,
      "rouge_2_precision": 0.22727,
      "rouge_2_precision_cb": 0.22727,
      "rouge_2_precision_ce": 0.22727,
      "rouge_2_f_score": 0.23809,
      "rouge_2_f_score_cb": 0.23809,
      "rouge_2_f_score_ce": 0.23809,
      "rouge_3_recall": 0.15789,
      "rouge_3_recall_cb": 0.15789,
      "rouge_3_recall_ce": 0.15789,
      "rouge_3_precision": 0.14286,
      "rouge_3_precision_cb": 0.14286,
      "rouge_3_precision_ce": 0.14286,
      "rouge_3_f_score": 0.15,
      "rouge_3_f_score_cb": 0.15,
      "rouge_3_f_score_ce": 0.15,
      "rouge_4_recall": 0.11111,
      "rouge_4_recall_cb": 0.11111,
      "rouge_4_recall_ce": 0.11111,
      "rouge_4_precision": 0.1,
      "rouge_4_precision_cb": 0.1,
      "rouge_4_precision_ce": 0.1,
      "rouge_4_f_score": 0.10526,
      "rouge_4_f_score_cb": 0.10526,
      "rouge_4_f_score_ce": 0.10526,
      "rouge_l_recall": 0.2381,
      "rouge_l_recall_cb": 0.2381,
      "rouge_l_recall_ce": 0.2381,
      "rouge_l_precision": 0.21739,
      "rouge_l_precision_cb": 0.21739,
      "rouge_l_precision_ce": 0.21739,
      "rouge_l_f_score": 0.22727,
      "rouge_l_f_score_cb": 0.22727,
      "rouge_l_f_score_ce": 0.22727,
      "rouge_w_1.2_recall": 0.12951,
      "rouge_w_1.2_recall_cb": 0.12951,
      "rouge_w_1.2_recall_ce": 0.12951,
      "rouge_w_1.2_precision": 0.21739,
      "rouge_w_1.2_precision_cb": 0.21739,
      "rouge_w_1.2_precision_ce": 0.21739,
      "rouge_w_1.2_f_score": 0.16232,
      "rouge_w_1.2_f_score_cb": 0.16232,
      "rouge_w_1.2_f_score_ce": 0.16232,
      "rouge_s*_recall": 0.10476,
      "rouge_s*_recall_cb": 0.10476,
      "rouge_s*_recall_ce": 0.10476,
      "rouge_s*_precision": 0.08696,
      "rouge_s*_precision_cb": 0.08696,
      "rouge_s*_precision_ce": 0.08696,
      "rouge_s*_f_score": 0.09503,
      "rouge_s*_f_score_cb": 0.09503,
      "rouge_s*_f_score_ce": 0.09503,
      "rouge_su*_recall": 0.13043,
      "rouge_su*_recall_cb": 0.13043,
      "rouge_su*_recall_ce": 0.13043,
      "rouge_su*_precision": 0.10909,
      "rouge_su*_precision_cb": 0.10909,
      "rouge_su*_precision_ce": 0.10909,
      "rouge_su*_f_score": 0.11881,
      "rouge_su*_f_score_cb": 0.11881,
      "rouge_su*_f_score_ce": 0.11881
    }
  },
  {
    "id": 67,
    "filename": "PandasEval_67.txt",
    "dataset_comment": "Resort the index of the DataFrame in place.",
    "generated_comment": "add the row at top in df",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.25,
      "rouge_1_recall_cb": 0.25,
      "rouge_1_recall_ce": 0.25,
      "rouge_1_precision": 0.28571,
      "rouge_1_precision_cb": 0.28571,
      "rouge_1_precision_ce": 0.28571,
      "rouge_1_f_score": 0.26666,
      "rouge_1_f_score_cb": 0.26666,
      "rouge_1_f_score_ce": 0.26666,
      "rouge_2_recall": 0.0,
      "rouge_2_recall_cb": 0.0,
      "rouge_2_recall_ce": 0.0,
      "rouge_2_precision": 0.0,
      "rouge_2_precision_cb": 0.0,
      "rouge_2_precision_ce": 0.0,
      "rouge_2_f_score": 0.0,
      "rouge_2_f_score_cb": 0.0,
      "rouge_2_f_score_ce": 0.0,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.25,
      "rouge_l_recall_cb": 0.25,
      "rouge_l_recall_ce": 0.25,
      "rouge_l_precision": 0.28571,
      "rouge_l_precision_cb": 0.28571,
      "rouge_l_precision_ce": 0.28571,
      "rouge_l_f_score": 0.26666,
      "rouge_l_f_score_cb": 0.26666,
      "rouge_l_f_score_ce": 0.26666,
      "rouge_w_1.2_recall": 0.14694,
      "rouge_w_1.2_recall_cb": 0.14694,
      "rouge_w_1.2_recall_ce": 0.14694,
      "rouge_w_1.2_precision": 0.25454,
      "rouge_w_1.2_precision_cb": 0.25454,
      "rouge_w_1.2_precision_ce": 0.25454,
      "rouge_w_1.2_f_score": 0.18632,
      "rouge_w_1.2_f_score_cb": 0.18632,
      "rouge_w_1.2_f_score_ce": 0.18632,
      "rouge_s*_recall": 0.03571,
      "rouge_s*_recall_cb": 0.03571,
      "rouge_s*_recall_ce": 0.03571,
      "rouge_s*_precision": 0.04762,
      "rouge_s*_precision_cb": 0.04762,
      "rouge_s*_precision_ce": 0.04762,
      "rouge_s*_f_score": 0.04081,
      "rouge_s*_f_score_cb": 0.04081,
      "rouge_s*_f_score_ce": 0.04081,
      "rouge_su*_recall": 0.08571,
      "rouge_su*_recall_cb": 0.08571,
      "rouge_su*_recall_ce": 0.08571,
      "rouge_su*_precision": 0.11111,
      "rouge_su*_precision_cb": 0.11111,
      "rouge_su*_precision_ce": 0.11111,
      "rouge_su*_f_score": 0.09677,
      "rouge_su*_f_score_cb": 0.09677,
      "rouge_su*_f_score_ce": 0.09677
    }
  },
  {
    "id": 68,
    "filename": "PandasEval_68.txt",
    "dataset_comment": "Drop all rows containing NaN values and return the modified dataframe.",
    "generated_comment": "Remove all rows containing NaN values in a pandas DataFrame by utilizing the dropna() function.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.63636,
      "rouge_1_recall_cb": 0.63636,
      "rouge_1_recall_ce": 0.63636,
      "rouge_1_precision": 0.46667,
      "rouge_1_precision_cb": 0.46667,
      "rouge_1_precision_ce": 0.46667,
      "rouge_1_f_score": 0.53846,
      "rouge_1_f_score_cb": 0.53846,
      "rouge_1_f_score_ce": 0.53846,
      "rouge_2_recall": 0.4,
      "rouge_2_recall_cb": 0.4,
      "rouge_2_recall_ce": 0.4,
      "rouge_2_precision": 0.28571,
      "rouge_2_precision_cb": 0.28571,
      "rouge_2_precision_ce": 0.28571,
      "rouge_2_f_score": 0.33333,
      "rouge_2_f_score_cb": 0.33333,
      "rouge_2_f_score_ce": 0.33333,
      "rouge_3_recall": 0.33333,
      "rouge_3_recall_cb": 0.33333,
      "rouge_3_recall_ce": 0.33333,
      "rouge_3_precision": 0.23077,
      "rouge_3_precision_cb": 0.23077,
      "rouge_3_precision_ce": 0.23077,
      "rouge_3_f_score": 0.27273,
      "rouge_3_f_score_cb": 0.27273,
      "rouge_3_f_score_ce": 0.27273,
      "rouge_4_recall": 0.25,
      "rouge_4_recall_cb": 0.25,
      "rouge_4_recall_ce": 0.25,
      "rouge_4_precision": 0.16667,
      "rouge_4_precision_cb": 0.16667,
      "rouge_4_precision_ce": 0.16667,
      "rouge_4_f_score": 0.2,
      "rouge_4_f_score_cb": 0.2,
      "rouge_4_f_score_ce": 0.2,
      "rouge_l_recall": 0.54545,
      "rouge_l_recall_cb": 0.54545,
      "rouge_l_recall_ce": 0.54545,
      "rouge_l_precision": 0.4,
      "rouge_l_precision_cb": 0.4,
      "rouge_l_precision_ce": 0.4,
      "rouge_l_f_score": 0.46154,
      "rouge_l_f_score_cb": 0.46154,
      "rouge_l_f_score_ce": 0.46154,
      "rouge_w_1.2_recall": 0.31498,
      "rouge_w_1.2_recall_cb": 0.31498,
      "rouge_w_1.2_recall_ce": 0.31498,
      "rouge_w_1.2_precision": 0.37314,
      "rouge_w_1.2_precision_cb": 0.37314,
      "rouge_w_1.2_precision_ce": 0.37314,
      "rouge_w_1.2_f_score": 0.3416,
      "rouge_w_1.2_f_score_cb": 0.3416,
      "rouge_w_1.2_f_score_ce": 0.3416,
      "rouge_s*_recall": 0.36364,
      "rouge_s*_recall_cb": 0.36364,
      "rouge_s*_recall_ce": 0.36364,
      "rouge_s*_precision": 0.19048,
      "rouge_s*_precision_cb": 0.19048,
      "rouge_s*_precision_ce": 0.19048,
      "rouge_s*_f_score": 0.25,
      "rouge_s*_f_score_cb": 0.25,
      "rouge_s*_f_score_ce": 0.25,
      "rouge_su*_recall": 0.4,
      "rouge_su*_recall_cb": 0.4,
      "rouge_su*_recall_ce": 0.4,
      "rouge_su*_precision": 0.21849,
      "rouge_su*_precision_cb": 0.21849,
      "rouge_su*_precision_ce": 0.21849,
      "rouge_su*_f_score": 0.28261,
      "rouge_su*_f_score_cb": 0.28261,
      "rouge_su*_f_score_ce": 0.28261
    }
  },
  {
    "id": 69,
    "filename": "PandasEval_69.txt",
    "dataset_comment": "Fill specific columns of a Pandas DataFrame with 0 in place using the fillna() function and return the changed DataFrame.",
    "generated_comment": "Fill None values in the specified columns of a pandas DataFrame with zero.Test Cases:",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.45,
      "rouge_1_recall_cb": 0.45,
      "rouge_1_recall_ce": 0.45,
      "rouge_1_precision": 0.6,
      "rouge_1_precision_cb": 0.6,
      "rouge_1_precision_ce": 0.6,
      "rouge_1_f_score": 0.51429,
      "rouge_1_f_score_cb": 0.51429,
      "rouge_1_f_score_ce": 0.51429,
      "rouge_2_recall": 0.26316,
      "rouge_2_recall_cb": 0.26316,
      "rouge_2_recall_ce": 0.26316,
      "rouge_2_precision": 0.35714,
      "rouge_2_precision_cb": 0.35714,
      "rouge_2_precision_ce": 0.35714,
      "rouge_2_f_score": 0.30303,
      "rouge_2_f_score_cb": 0.30303,
      "rouge_2_f_score_ce": 0.30303,
      "rouge_3_recall": 0.22222,
      "rouge_3_recall_cb": 0.22222,
      "rouge_3_recall_ce": 0.22222,
      "rouge_3_precision": 0.30769,
      "rouge_3_precision_cb": 0.30769,
      "rouge_3_precision_ce": 0.30769,
      "rouge_3_f_score": 0.25806,
      "rouge_3_f_score_cb": 0.25806,
      "rouge_3_f_score_ce": 0.25806,
      "rouge_4_recall": 0.17647,
      "rouge_4_recall_cb": 0.17647,
      "rouge_4_recall_ce": 0.17647,
      "rouge_4_precision": 0.25,
      "rouge_4_precision_cb": 0.25,
      "rouge_4_precision_ce": 0.25,
      "rouge_4_f_score": 0.2069,
      "rouge_4_f_score_cb": 0.2069,
      "rouge_4_f_score_ce": 0.2069,
      "rouge_l_recall": 0.35,
      "rouge_l_recall_cb": 0.35,
      "rouge_l_recall_ce": 0.35,
      "rouge_l_precision": 0.46667,
      "rouge_l_precision_cb": 0.46667,
      "rouge_l_precision_ce": 0.46667,
      "rouge_l_f_score": 0.4,
      "rouge_l_f_score_cb": 0.4,
      "rouge_l_f_score_ce": 0.4,
      "rouge_w_1.2_recall": 0.18063,
      "rouge_w_1.2_recall_cb": 0.18063,
      "rouge_w_1.2_recall_ce": 0.18063,
      "rouge_w_1.2_precision": 0.43846,
      "rouge_w_1.2_precision_cb": 0.43846,
      "rouge_w_1.2_precision_ce": 0.43846,
      "rouge_w_1.2_f_score": 0.25586,
      "rouge_w_1.2_f_score_cb": 0.25586,
      "rouge_w_1.2_f_score_ce": 0.25586,
      "rouge_s*_recall": 0.13684,
      "rouge_s*_recall_cb": 0.13684,
      "rouge_s*_recall_ce": 0.13684,
      "rouge_s*_precision": 0.24762,
      "rouge_s*_precision_cb": 0.24762,
      "rouge_s*_precision_ce": 0.24762,
      "rouge_s*_f_score": 0.17627,
      "rouge_s*_f_score_cb": 0.17627,
      "rouge_s*_f_score_ce": 0.17627,
      "rouge_su*_recall": 0.16746,
      "rouge_su*_recall_cb": 0.16746,
      "rouge_su*_recall_ce": 0.16746,
      "rouge_su*_precision": 0.29412,
      "rouge_su*_precision_cb": 0.29412,
      "rouge_su*_precision_ce": 0.29412,
      "rouge_su*_f_score": 0.21341,
      "rouge_su*_f_score_cb": 0.21341,
      "rouge_su*_f_score_ce": 0.21341
    }
  },
  {
    "id": 70,
    "filename": "PandasEval_70.txt",
    "dataset_comment": "Drop all data in a Pandas DataFrame using df.index to remove all rows.",
    "generated_comment": "Initialize a dictionary containing web statistics data for different daysCreate a DataFrame using the web_stats dictionaryDrop all rows from the DataFrame to clear the data",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5,
      "rouge_1_recall_cb": 0.5,
      "rouge_1_recall_ce": 0.5,
      "rouge_1_precision": 0.26923,
      "rouge_1_precision_cb": 0.26923,
      "rouge_1_precision_ce": 0.26923,
      "rouge_1_f_score": 0.35,
      "rouge_1_f_score_cb": 0.35,
      "rouge_1_f_score_ce": 0.35,
      "rouge_2_recall": 0.15385,
      "rouge_2_recall_cb": 0.15385,
      "rouge_2_recall_ce": 0.15385,
      "rouge_2_precision": 0.08,
      "rouge_2_precision_cb": 0.08,
      "rouge_2_precision_ce": 0.08,
      "rouge_2_f_score": 0.10526,
      "rouge_2_f_score_cb": 0.10526,
      "rouge_2_f_score_ce": 0.10526,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.42857,
      "rouge_l_recall_cb": 0.42857,
      "rouge_l_recall_ce": 0.42857,
      "rouge_l_precision": 0.23077,
      "rouge_l_precision_cb": 0.23077,
      "rouge_l_precision_ce": 0.23077,
      "rouge_l_f_score": 0.3,
      "rouge_l_f_score_cb": 0.3,
      "rouge_l_f_score_ce": 0.3,
      "rouge_w_1.2_recall": 0.20291,
      "rouge_w_1.2_recall_cb": 0.20291,
      "rouge_w_1.2_recall_ce": 0.20291,
      "rouge_w_1.2_precision": 0.18522,
      "rouge_w_1.2_precision_cb": 0.18522,
      "rouge_w_1.2_precision_ce": 0.18522,
      "rouge_w_1.2_f_score": 0.19366,
      "rouge_w_1.2_f_score_cb": 0.19366,
      "rouge_w_1.2_f_score_ce": 0.19366,
      "rouge_s*_recall": 0.24176,
      "rouge_s*_recall_cb": 0.24176,
      "rouge_s*_recall_ce": 0.24176,
      "rouge_s*_precision": 0.06769,
      "rouge_s*_precision_cb": 0.06769,
      "rouge_s*_precision_ce": 0.06769,
      "rouge_s*_f_score": 0.10577,
      "rouge_s*_f_score_cb": 0.10577,
      "rouge_s*_f_score_ce": 0.10577,
      "rouge_su*_recall": 0.26923,
      "rouge_su*_recall_cb": 0.26923,
      "rouge_su*_recall_ce": 0.26923,
      "rouge_su*_precision": 0.08,
      "rouge_su*_precision_cb": 0.08,
      "rouge_su*_precision_ce": 0.08,
      "rouge_su*_f_score": 0.12335,
      "rouge_su*_f_score_cb": 0.12335,
      "rouge_su*_f_score_ce": 0.12335
    }
  },
  {
    "id": 71,
    "filename": "PandasEval_71.txt",
    "dataset_comment": "Split a dataframe with 100,000 entries into 100 sections of 1,000 entries each.  Take a random sample of size 50 from one of the sections.  Add a \"section\" column to the dataframe, then perform a groupby and sample(n=50).",
    "generated_comment": "Select a random sample of 50 rows from each group in the DataFrame based on the 'section' column using the groupby and sample functions.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.35714,
      "rouge_1_recall_cb": 0.35714,
      "rouge_1_recall_ce": 0.35714,
      "rouge_1_precision": 0.625,
      "rouge_1_precision_cb": 0.625,
      "rouge_1_precision_ce": 0.625,
      "rouge_1_f_score": 0.45454,
      "rouge_1_f_score_cb": 0.45454,
      "rouge_1_f_score_ce": 0.45454,
      "rouge_2_recall": 0.19512,
      "rouge_2_recall_cb": 0.19512,
      "rouge_2_recall_ce": 0.19512,
      "rouge_2_precision": 0.34783,
      "rouge_2_precision_cb": 0.34783,
      "rouge_2_precision_ce": 0.34783,
      "rouge_2_f_score": 0.25,
      "rouge_2_f_score_cb": 0.25,
      "rouge_2_f_score_ce": 0.25,
      "rouge_3_recall": 0.075,
      "rouge_3_recall_cb": 0.075,
      "rouge_3_recall_ce": 0.075,
      "rouge_3_precision": 0.13636,
      "rouge_3_precision_cb": 0.13636,
      "rouge_3_precision_ce": 0.13636,
      "rouge_3_f_score": 0.09677,
      "rouge_3_f_score_cb": 0.09677,
      "rouge_3_f_score_ce": 0.09677,
      "rouge_4_recall": 0.02564,
      "rouge_4_recall_cb": 0.02564,
      "rouge_4_recall_ce": 0.02564,
      "rouge_4_precision": 0.04762,
      "rouge_4_precision_cb": 0.04762,
      "rouge_4_precision_ce": 0.04762,
      "rouge_4_f_score": 0.03333,
      "rouge_4_f_score_cb": 0.03333,
      "rouge_4_f_score_ce": 0.03333,
      "rouge_l_recall": 0.30952,
      "rouge_l_recall_cb": 0.30952,
      "rouge_l_recall_ce": 0.30952,
      "rouge_l_precision": 0.54167,
      "rouge_l_precision_cb": 0.54167,
      "rouge_l_precision_ce": 0.54167,
      "rouge_l_f_score": 0.39394,
      "rouge_l_f_score_cb": 0.39394,
      "rouge_l_f_score_ce": 0.39394,
      "rouge_w_1.2_recall": 0.11133,
      "rouge_w_1.2_recall_cb": 0.11133,
      "rouge_w_1.2_recall_ce": 0.11133,
      "rouge_w_1.2_precision": 0.41143,
      "rouge_w_1.2_precision_cb": 0.41143,
      "rouge_w_1.2_precision_ce": 0.41143,
      "rouge_w_1.2_f_score": 0.17524,
      "rouge_w_1.2_f_score_cb": 0.17524,
      "rouge_w_1.2_f_score_ce": 0.17524,
      "rouge_s*_recall": 0.12195,
      "rouge_s*_recall_cb": 0.12195,
      "rouge_s*_recall_ce": 0.12195,
      "rouge_s*_precision": 0.38043,
      "rouge_s*_precision_cb": 0.38043,
      "rouge_s*_precision_ce": 0.38043,
      "rouge_s*_f_score": 0.18469,
      "rouge_s*_f_score_cb": 0.18469,
      "rouge_s*_f_score_ce": 0.18469,
      "rouge_su*_recall": 0.13304,
      "rouge_su*_recall_cb": 0.13304,
      "rouge_su*_recall_ce": 0.13304,
      "rouge_su*_precision": 0.40134,
      "rouge_su*_precision_cb": 0.40134,
      "rouge_su*_precision_ce": 0.40134,
      "rouge_su*_f_score": 0.19984,
      "rouge_su*_f_score_cb": 0.19984,
      "rouge_su*_f_score_ce": 0.19984
    }
  },
  {
    "id": 72,
    "filename": "PandasEval_72.txt",
    "dataset_comment": "Normalize the columns of the Pandas DataFrame so that each value is between 0 and 1, given that each column has a different value range.",
    "generated_comment": "Normalize the dataframe by applying a lambda function to each column, calculating the normalized value for each element based on the column's minimum and maximum values.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.48,
      "rouge_1_recall_cb": 0.48,
      "rouge_1_recall_ce": 0.48,
      "rouge_1_precision": 0.44444,
      "rouge_1_precision_cb": 0.44444,
      "rouge_1_precision_ce": 0.44444,
      "rouge_1_f_score": 0.46154,
      "rouge_1_f_score_cb": 0.46154,
      "rouge_1_f_score_ce": 0.46154,
      "rouge_2_recall": 0.125,
      "rouge_2_recall_cb": 0.125,
      "rouge_2_recall_ce": 0.125,
      "rouge_2_precision": 0.11538,
      "rouge_2_precision_cb": 0.11538,
      "rouge_2_precision_ce": 0.11538,
      "rouge_2_f_score": 0.12,
      "rouge_2_f_score_cb": 0.12,
      "rouge_2_f_score_ce": 0.12,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.32,
      "rouge_l_recall_cb": 0.32,
      "rouge_l_recall_ce": 0.32,
      "rouge_l_precision": 0.2963,
      "rouge_l_precision_cb": 0.2963,
      "rouge_l_precision_ce": 0.2963,
      "rouge_l_f_score": 0.30769,
      "rouge_l_f_score_cb": 0.30769,
      "rouge_l_f_score_ce": 0.30769,
      "rouge_w_1.2_recall": 0.13154,
      "rouge_w_1.2_recall_cb": 0.13154,
      "rouge_w_1.2_recall_ce": 0.13154,
      "rouge_w_1.2_precision": 0.23186,
      "rouge_w_1.2_precision_cb": 0.23186,
      "rouge_w_1.2_precision_ce": 0.23186,
      "rouge_w_1.2_f_score": 0.16785,
      "rouge_w_1.2_f_score_cb": 0.16785,
      "rouge_w_1.2_f_score_ce": 0.16785,
      "rouge_s*_recall": 0.17667,
      "rouge_s*_recall_cb": 0.17667,
      "rouge_s*_recall_ce": 0.17667,
      "rouge_s*_precision": 0.151,
      "rouge_s*_precision_cb": 0.151,
      "rouge_s*_precision_ce": 0.151,
      "rouge_s*_f_score": 0.16283,
      "rouge_s*_f_score_cb": 0.16283,
      "rouge_s*_f_score_ce": 0.16283,
      "rouge_su*_recall": 0.19753,
      "rouge_su*_recall_cb": 0.19753,
      "rouge_su*_recall_ce": 0.19753,
      "rouge_su*_precision": 0.16976,
      "rouge_su*_precision_cb": 0.16976,
      "rouge_su*_precision_ce": 0.16976,
      "rouge_su*_f_score": 0.1826,
      "rouge_su*_f_score_cb": 0.1826,
      "rouge_su*_f_score_ce": 0.1826
    }
  },
  {
    "id": 73,
    "filename": "PandasEval_73.txt",
    "dataset_comment": "Get the counts of unique values of the DataFrame using count_values,  convert the output to a Pandas DataFrame,  rename the axis to 'unique_values',  and reset the index to return the final DataFrame.",
    "generated_comment": "Calculate the value counts for each unique value in a pandas DataFrame and reset the index to have two columns: one for unique values and one for their corresponding counts.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.47059,
      "rouge_1_recall_cb": 0.47059,
      "rouge_1_recall_ce": 0.47059,
      "rouge_1_precision": 0.53333,
      "rouge_1_precision_cb": 0.53333,
      "rouge_1_precision_ce": 0.53333,
      "rouge_1_f_score": 0.5,
      "rouge_1_f_score_cb": 0.5,
      "rouge_1_f_score_ce": 0.5,
      "rouge_2_recall": 0.27273,
      "rouge_2_recall_cb": 0.27273,
      "rouge_2_recall_ce": 0.27273,
      "rouge_2_precision": 0.31034,
      "rouge_2_precision_cb": 0.31034,
      "rouge_2_precision_ce": 0.31034,
      "rouge_2_f_score": 0.29032,
      "rouge_2_f_score_cb": 0.29032,
      "rouge_2_f_score_ce": 0.29032,
      "rouge_3_recall": 0.15625,
      "rouge_3_recall_cb": 0.15625,
      "rouge_3_recall_ce": 0.15625,
      "rouge_3_precision": 0.17857,
      "rouge_3_precision_cb": 0.17857,
      "rouge_3_precision_ce": 0.17857,
      "rouge_3_f_score": 0.16667,
      "rouge_3_f_score_cb": 0.16667,
      "rouge_3_f_score_ce": 0.16667,
      "rouge_4_recall": 0.06452,
      "rouge_4_recall_cb": 0.06452,
      "rouge_4_recall_ce": 0.06452,
      "rouge_4_precision": 0.07407,
      "rouge_4_precision_cb": 0.07407,
      "rouge_4_precision_ce": 0.07407,
      "rouge_4_f_score": 0.06897,
      "rouge_4_f_score_cb": 0.06897,
      "rouge_4_f_score_ce": 0.06897,
      "rouge_l_recall": 0.35294,
      "rouge_l_recall_cb": 0.35294,
      "rouge_l_recall_ce": 0.35294,
      "rouge_l_precision": 0.4,
      "rouge_l_precision_cb": 0.4,
      "rouge_l_precision_ce": 0.4,
      "rouge_l_f_score": 0.375,
      "rouge_l_f_score_cb": 0.375,
      "rouge_l_f_score_ce": 0.375,
      "rouge_w_1.2_recall": 0.14055,
      "rouge_w_1.2_recall_cb": 0.14055,
      "rouge_w_1.2_recall_ce": 0.14055,
      "rouge_w_1.2_precision": 0.32246,
      "rouge_w_1.2_precision_cb": 0.32246,
      "rouge_w_1.2_precision_ce": 0.32246,
      "rouge_w_1.2_f_score": 0.19577,
      "rouge_w_1.2_f_score_cb": 0.19577,
      "rouge_w_1.2_f_score_ce": 0.19577,
      "rouge_s*_recall": 0.19608,
      "rouge_s*_recall_cb": 0.19608,
      "rouge_s*_recall_ce": 0.19608,
      "rouge_s*_precision": 0.25287,
      "rouge_s*_precision_cb": 0.25287,
      "rouge_s*_precision_ce": 0.25287,
      "rouge_s*_f_score": 0.22088,
      "rouge_s*_f_score_cb": 0.22088,
      "rouge_s*_f_score_ce": 0.22088,
      "rouge_su*_recall": 0.21044,
      "rouge_su*_recall_cb": 0.21044,
      "rouge_su*_recall_ce": 0.21044,
      "rouge_su*_precision": 0.2694,
      "rouge_su*_precision_cb": 0.2694,
      "rouge_su*_precision_ce": 0.2694,
      "rouge_su*_f_score": 0.2363,
      "rouge_su*_f_score_cb": 0.2363,
      "rouge_su*_f_score_ce": 0.2363
    }
  },
  {
    "id": 74,
    "filename": "PandasEval_74.txt",
    "dataset_comment": "Count the number of occurrences of a value in a series and return the count.",
    "generated_comment": "Count the occurrences of a specific value in a pandas Series by utilizing the value_counts() method and indexing the result with the desired value.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.8,
      "rouge_1_recall_cb": 0.8,
      "rouge_1_recall_ce": 0.8,
      "rouge_1_precision": 0.48,
      "rouge_1_precision_cb": 0.48,
      "rouge_1_precision_ce": 0.48,
      "rouge_1_f_score": 0.6,
      "rouge_1_f_score_cb": 0.6,
      "rouge_1_f_score_ce": 0.6,
      "rouge_2_recall": 0.35714,
      "rouge_2_recall_cb": 0.35714,
      "rouge_2_recall_ce": 0.35714,
      "rouge_2_precision": 0.20833,
      "rouge_2_precision_cb": 0.20833,
      "rouge_2_precision_ce": 0.20833,
      "rouge_2_f_score": 0.26315,
      "rouge_2_f_score_cb": 0.26315,
      "rouge_2_f_score_ce": 0.26315,
      "rouge_3_recall": 0.15385,
      "rouge_3_recall_cb": 0.15385,
      "rouge_3_recall_ce": 0.15385,
      "rouge_3_precision": 0.08696,
      "rouge_3_precision_cb": 0.08696,
      "rouge_3_precision_ce": 0.08696,
      "rouge_3_f_score": 0.11111,
      "rouge_3_f_score_cb": 0.11111,
      "rouge_3_f_score_ce": 0.11111,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.73333,
      "rouge_l_recall_cb": 0.73333,
      "rouge_l_recall_ce": 0.73333,
      "rouge_l_precision": 0.44,
      "rouge_l_precision_cb": 0.44,
      "rouge_l_precision_ce": 0.44,
      "rouge_l_f_score": 0.55,
      "rouge_l_f_score_cb": 0.55,
      "rouge_l_f_score_ce": 0.55,
      "rouge_w_1.2_recall": 0.37917,
      "rouge_w_1.2_recall_cb": 0.37917,
      "rouge_w_1.2_recall_ce": 0.37917,
      "rouge_w_1.2_precision": 0.39102,
      "rouge_w_1.2_precision_cb": 0.39102,
      "rouge_w_1.2_precision_ce": 0.39102,
      "rouge_w_1.2_f_score": 0.385,
      "rouge_w_1.2_f_score_cb": 0.385,
      "rouge_w_1.2_f_score_ce": 0.385,
      "rouge_s*_recall": 0.6381,
      "rouge_s*_recall_cb": 0.6381,
      "rouge_s*_recall_ce": 0.6381,
      "rouge_s*_precision": 0.22333,
      "rouge_s*_precision_cb": 0.22333,
      "rouge_s*_precision_ce": 0.22333,
      "rouge_s*_f_score": 0.33086,
      "rouge_s*_f_score_cb": 0.33086,
      "rouge_s*_f_score_ce": 0.33086,
      "rouge_su*_recall": 0.65546,
      "rouge_su*_recall_cb": 0.65546,
      "rouge_su*_recall_ce": 0.65546,
      "rouge_su*_precision": 0.24074,
      "rouge_su*_precision_cb": 0.24074,
      "rouge_su*_precision_ce": 0.24074,
      "rouge_su*_f_score": 0.35214,
      "rouge_su*_f_score_cb": 0.35214,
      "rouge_su*_f_score_ce": 0.35214
    }
  },
  {
    "id": 75,
    "filename": "PandasEval_75.txt",
    "dataset_comment": "Select rows where the value in column x2 is NaN.",
    "generated_comment": "Filter the DataFrame to select rows where the 'x2' column contains missing values (NaN) using the isnull() function.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.8,
      "rouge_1_recall_cb": 0.8,
      "rouge_1_recall_ce": 0.8,
      "rouge_1_precision": 0.44444,
      "rouge_1_precision_cb": 0.44444,
      "rouge_1_precision_ce": 0.44444,
      "rouge_1_f_score": 0.57142,
      "rouge_1_f_score_cb": 0.57142,
      "rouge_1_f_score_ce": 0.57142,
      "rouge_2_recall": 0.33333,
      "rouge_2_recall_cb": 0.33333,
      "rouge_2_recall_ce": 0.33333,
      "rouge_2_precision": 0.17647,
      "rouge_2_precision_cb": 0.17647,
      "rouge_2_precision_ce": 0.17647,
      "rouge_2_f_score": 0.23077,
      "rouge_2_f_score_cb": 0.23077,
      "rouge_2_f_score_ce": 0.23077,
      "rouge_3_recall": 0.25,
      "rouge_3_recall_cb": 0.25,
      "rouge_3_recall_ce": 0.25,
      "rouge_3_precision": 0.125,
      "rouge_3_precision_cb": 0.125,
      "rouge_3_precision_ce": 0.125,
      "rouge_3_f_score": 0.16667,
      "rouge_3_f_score_cb": 0.16667,
      "rouge_3_f_score_ce": 0.16667,
      "rouge_4_recall": 0.14286,
      "rouge_4_recall_cb": 0.14286,
      "rouge_4_recall_ce": 0.14286,
      "rouge_4_precision": 0.06667,
      "rouge_4_precision_cb": 0.06667,
      "rouge_4_precision_ce": 0.06667,
      "rouge_4_f_score": 0.09091,
      "rouge_4_f_score_cb": 0.09091,
      "rouge_4_f_score_ce": 0.09091,
      "rouge_l_recall": 0.6,
      "rouge_l_recall_cb": 0.6,
      "rouge_l_recall_ce": 0.6,
      "rouge_l_precision": 0.33333,
      "rouge_l_precision_cb": 0.33333,
      "rouge_l_precision_ce": 0.33333,
      "rouge_l_f_score": 0.42857,
      "rouge_l_f_score_cb": 0.42857,
      "rouge_l_f_score_ce": 0.42857,
      "rouge_w_1.2_recall": 0.35315,
      "rouge_w_1.2_recall_cb": 0.35315,
      "rouge_w_1.2_recall_ce": 0.35315,
      "rouge_w_1.2_precision": 0.31095,
      "rouge_w_1.2_precision_cb": 0.31095,
      "rouge_w_1.2_precision_ce": 0.31095,
      "rouge_w_1.2_f_score": 0.33071,
      "rouge_w_1.2_f_score_cb": 0.33071,
      "rouge_w_1.2_f_score_ce": 0.33071,
      "rouge_s*_recall": 0.55556,
      "rouge_s*_recall_cb": 0.55556,
      "rouge_s*_recall_ce": 0.55556,
      "rouge_s*_precision": 0.1634,
      "rouge_s*_precision_cb": 0.1634,
      "rouge_s*_precision_ce": 0.1634,
      "rouge_s*_f_score": 0.25253,
      "rouge_s*_f_score_cb": 0.25253,
      "rouge_s*_f_score_ce": 0.25253,
      "rouge_su*_recall": 0.59259,
      "rouge_su*_recall_cb": 0.59259,
      "rouge_su*_recall_ce": 0.59259,
      "rouge_su*_precision": 0.18824,
      "rouge_su*_precision_cb": 0.18824,
      "rouge_su*_precision_ce": 0.18824,
      "rouge_su*_f_score": 0.28572,
      "rouge_su*_f_score_cb": 0.28572,
      "rouge_su*_f_score_ce": 0.28572
    }
  },
  {
    "id": 76,
    "filename": "PandasEval_76.txt",
    "dataset_comment": "Append the source series to the target series while ignoring the index or resetting the index.",
    "generated_comment": "Merge two pandas Series, 'source_series' and 'target_series', into a single Series 'merged_series' while ignoring the index of the source_series.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5625,
      "rouge_1_recall_cb": 0.5625,
      "rouge_1_recall_ce": 0.5625,
      "rouge_1_precision": 0.3913,
      "rouge_1_precision_cb": 0.3913,
      "rouge_1_precision_ce": 0.3913,
      "rouge_1_f_score": 0.46154,
      "rouge_1_f_score_cb": 0.46154,
      "rouge_1_f_score_ce": 0.46154,
      "rouge_2_recall": 0.46667,
      "rouge_2_recall_cb": 0.46667,
      "rouge_2_recall_ce": 0.46667,
      "rouge_2_precision": 0.31818,
      "rouge_2_precision_cb": 0.31818,
      "rouge_2_precision_ce": 0.31818,
      "rouge_2_f_score": 0.37838,
      "rouge_2_f_score_cb": 0.37838,
      "rouge_2_f_score_ce": 0.37838,
      "rouge_3_recall": 0.28571,
      "rouge_3_recall_cb": 0.28571,
      "rouge_3_recall_ce": 0.28571,
      "rouge_3_precision": 0.19048,
      "rouge_3_precision_cb": 0.19048,
      "rouge_3_precision_ce": 0.19048,
      "rouge_3_f_score": 0.22857,
      "rouge_3_f_score_cb": 0.22857,
      "rouge_3_f_score_ce": 0.22857,
      "rouge_4_recall": 0.15385,
      "rouge_4_recall_cb": 0.15385,
      "rouge_4_recall_ce": 0.15385,
      "rouge_4_precision": 0.1,
      "rouge_4_precision_cb": 0.1,
      "rouge_4_precision_ce": 0.1,
      "rouge_4_f_score": 0.12121,
      "rouge_4_f_score_cb": 0.12121,
      "rouge_4_f_score_ce": 0.12121,
      "rouge_l_recall": 0.5625,
      "rouge_l_recall_cb": 0.5625,
      "rouge_l_recall_ce": 0.5625,
      "rouge_l_precision": 0.3913,
      "rouge_l_precision_cb": 0.3913,
      "rouge_l_precision_ce": 0.3913,
      "rouge_l_f_score": 0.46154,
      "rouge_l_f_score_cb": 0.46154,
      "rouge_l_f_score_ce": 0.46154,
      "rouge_w_1.2_recall": 0.28238,
      "rouge_w_1.2_recall_cb": 0.28238,
      "rouge_w_1.2_recall_ce": 0.28238,
      "rouge_w_1.2_precision": 0.34202,
      "rouge_w_1.2_precision_cb": 0.34202,
      "rouge_w_1.2_precision_ce": 0.34202,
      "rouge_w_1.2_f_score": 0.30935,
      "rouge_w_1.2_f_score_cb": 0.30935,
      "rouge_w_1.2_f_score_ce": 0.30935,
      "rouge_s*_recall": 0.35,
      "rouge_s*_recall_cb": 0.35,
      "rouge_s*_recall_ce": 0.35,
      "rouge_s*_precision": 0.16601,
      "rouge_s*_precision_cb": 0.16601,
      "rouge_s*_precision_ce": 0.16601,
      "rouge_s*_f_score": 0.2252,
      "rouge_s*_f_score_cb": 0.2252,
      "rouge_s*_f_score_ce": 0.2252,
      "rouge_su*_recall": 0.37778,
      "rouge_su*_recall_cb": 0.37778,
      "rouge_su*_recall_ce": 0.37778,
      "rouge_su*_precision": 0.18545,
      "rouge_su*_precision_cb": 0.18545,
      "rouge_su*_precision_ce": 0.18545,
      "rouge_su*_f_score": 0.24878,
      "rouge_su*_f_score_cb": 0.24878,
      "rouge_su*_f_score_ce": 0.24878
    }
  },
  {
    "id": 77,
    "filename": "PandasEval_77.txt",
    "dataset_comment": "Find and return the rows in the DataFrame where col_a is greater than col_b.",
    "generated_comment": "Filter rows in a pandas DataFrame where the value in column 'col_a' is greater than the value in column 'col_b'.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.8125,
      "rouge_1_recall_cb": 0.8125,
      "rouge_1_recall_ce": 0.8125,
      "rouge_1_precision": 0.59091,
      "rouge_1_precision_cb": 0.59091,
      "rouge_1_precision_ce": 0.59091,
      "rouge_1_f_score": 0.68421,
      "rouge_1_f_score_cb": 0.68421,
      "rouge_1_f_score_ce": 0.68421,
      "rouge_2_recall": 0.46667,
      "rouge_2_recall_cb": 0.46667,
      "rouge_2_recall_ce": 0.46667,
      "rouge_2_precision": 0.33333,
      "rouge_2_precision_cb": 0.33333,
      "rouge_2_precision_ce": 0.33333,
      "rouge_2_f_score": 0.38889,
      "rouge_2_f_score_cb": 0.38889,
      "rouge_2_f_score_ce": 0.38889,
      "rouge_3_recall": 0.21429,
      "rouge_3_recall_cb": 0.21429,
      "rouge_3_recall_ce": 0.21429,
      "rouge_3_precision": 0.15,
      "rouge_3_precision_cb": 0.15,
      "rouge_3_precision_ce": 0.15,
      "rouge_3_f_score": 0.17647,
      "rouge_3_f_score_cb": 0.17647,
      "rouge_3_f_score_ce": 0.17647,
      "rouge_4_recall": 0.15385,
      "rouge_4_recall_cb": 0.15385,
      "rouge_4_recall_ce": 0.15385,
      "rouge_4_precision": 0.10526,
      "rouge_4_precision_cb": 0.10526,
      "rouge_4_precision_ce": 0.10526,
      "rouge_4_f_score": 0.125,
      "rouge_4_f_score_cb": 0.125,
      "rouge_4_f_score_ce": 0.125,
      "rouge_l_recall": 0.6875,
      "rouge_l_recall_cb": 0.6875,
      "rouge_l_recall_ce": 0.6875,
      "rouge_l_precision": 0.5,
      "rouge_l_precision_cb": 0.5,
      "rouge_l_precision_ce": 0.5,
      "rouge_l_f_score": 0.57895,
      "rouge_l_f_score_cb": 0.57895,
      "rouge_l_f_score_ce": 0.57895,
      "rouge_w_1.2_recall": 0.36679,
      "rouge_w_1.2_recall_cb": 0.36679,
      "rouge_w_1.2_recall_ce": 0.36679,
      "rouge_w_1.2_precision": 0.46444,
      "rouge_w_1.2_precision_cb": 0.46444,
      "rouge_w_1.2_precision_ce": 0.46444,
      "rouge_w_1.2_f_score": 0.40988,
      "rouge_w_1.2_f_score_cb": 0.40988,
      "rouge_w_1.2_f_score_ce": 0.40988,
      "rouge_s*_recall": 0.56667,
      "rouge_s*_recall_cb": 0.56667,
      "rouge_s*_recall_ce": 0.56667,
      "rouge_s*_precision": 0.29437,
      "rouge_s*_precision_cb": 0.29437,
      "rouge_s*_precision_ce": 0.29437,
      "rouge_s*_f_score": 0.38746,
      "rouge_s*_f_score_cb": 0.38746,
      "rouge_s*_f_score_ce": 0.38746,
      "rouge_su*_recall": 0.59259,
      "rouge_su*_recall_cb": 0.59259,
      "rouge_su*_recall_ce": 0.59259,
      "rouge_su*_precision": 0.31746,
      "rouge_su*_precision_cb": 0.31746,
      "rouge_su*_precision_ce": 0.31746,
      "rouge_su*_f_score": 0.41344,
      "rouge_su*_f_score_cb": 0.41344,
      "rouge_su*_f_score_ce": 0.41344
    }
  },
  {
    "id": 78,
    "filename": "PandasEval_78.txt",
    "dataset_comment": "Check whether a column or row exists in a DataFrame before referencing it.  Output the second row of data in the `mycol` column if it exists; otherwise, output NaN.",
    "generated_comment": "Access the value in the 'mycol' column of the DataFrame at index 1, if it does not exist return np.nan.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.37931,
      "rouge_1_recall_cb": 0.37931,
      "rouge_1_recall_ce": 0.37931,
      "rouge_1_precision": 0.52381,
      "rouge_1_precision_cb": 0.52381,
      "rouge_1_precision_ce": 0.52381,
      "rouge_1_f_score": 0.44,
      "rouge_1_f_score_cb": 0.44,
      "rouge_1_f_score_ce": 0.44,
      "rouge_2_recall": 0.14286,
      "rouge_2_recall_cb": 0.14286,
      "rouge_2_recall_ce": 0.14286,
      "rouge_2_precision": 0.2,
      "rouge_2_precision_cb": 0.2,
      "rouge_2_precision_ce": 0.2,
      "rouge_2_f_score": 0.16667,
      "rouge_2_f_score_cb": 0.16667,
      "rouge_2_f_score_ce": 0.16667,
      "rouge_3_recall": 0.07407,
      "rouge_3_recall_cb": 0.07407,
      "rouge_3_recall_ce": 0.07407,
      "rouge_3_precision": 0.10526,
      "rouge_3_precision_cb": 0.10526,
      "rouge_3_precision_ce": 0.10526,
      "rouge_3_f_score": 0.08695,
      "rouge_3_f_score_cb": 0.08695,
      "rouge_3_f_score_ce": 0.08695,
      "rouge_4_recall": 0.03846,
      "rouge_4_recall_cb": 0.03846,
      "rouge_4_recall_ce": 0.03846,
      "rouge_4_precision": 0.05556,
      "rouge_4_precision_cb": 0.05556,
      "rouge_4_precision_ce": 0.05556,
      "rouge_4_f_score": 0.04545,
      "rouge_4_f_score_cb": 0.04545,
      "rouge_4_f_score_ce": 0.04545,
      "rouge_l_recall": 0.31034,
      "rouge_l_recall_cb": 0.31034,
      "rouge_l_recall_ce": 0.31034,
      "rouge_l_precision": 0.42857,
      "rouge_l_precision_cb": 0.42857,
      "rouge_l_precision_ce": 0.42857,
      "rouge_l_f_score": 0.36,
      "rouge_l_f_score_cb": 0.36,
      "rouge_l_f_score_ce": 0.36,
      "rouge_w_1.2_recall": 0.14265,
      "rouge_w_1.2_recall_cb": 0.14265,
      "rouge_w_1.2_recall_ce": 0.14265,
      "rouge_w_1.2_precision": 0.3863,
      "rouge_w_1.2_precision_cb": 0.3863,
      "rouge_w_1.2_precision_ce": 0.3863,
      "rouge_w_1.2_f_score": 0.20836,
      "rouge_w_1.2_f_score_cb": 0.20836,
      "rouge_w_1.2_f_score_ce": 0.20836,
      "rouge_s*_recall": 0.12808,
      "rouge_s*_recall_cb": 0.12808,
      "rouge_s*_recall_ce": 0.12808,
      "rouge_s*_precision": 0.24762,
      "rouge_s*_precision_cb": 0.24762,
      "rouge_s*_precision_ce": 0.24762,
      "rouge_s*_f_score": 0.16883,
      "rouge_s*_f_score_cb": 0.16883,
      "rouge_s*_f_score_ce": 0.16883,
      "rouge_su*_recall": 0.14286,
      "rouge_su*_recall_cb": 0.14286,
      "rouge_su*_recall_ce": 0.14286,
      "rouge_su*_precision": 0.26957,
      "rouge_su*_precision_cb": 0.26957,
      "rouge_su*_precision_ce": 0.26957,
      "rouge_su*_f_score": 0.18675,
      "rouge_su*_f_score_cb": 0.18675,
      "rouge_su*_f_score_ce": 0.18675
    }
  },
  {
    "id": 79,
    "filename": "PandasEval_79.txt",
    "dataset_comment": "Return the dataframe excluding rows that contain one or more NaN values.",
    "generated_comment": "Return rows in a DataFrame with more than one NaN value by checking if any row has at least one NaN value using the isna() method and filtering using the any() method along axis=1.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.66667,
      "rouge_1_recall_cb": 0.66667,
      "rouge_1_recall_ce": 0.66667,
      "rouge_1_precision": 0.22857,
      "rouge_1_precision_cb": 0.22857,
      "rouge_1_precision_ce": 0.22857,
      "rouge_1_f_score": 0.34042,
      "rouge_1_f_score_cb": 0.34042,
      "rouge_1_f_score_ce": 0.34042,
      "rouge_2_recall": 0.09091,
      "rouge_2_recall_cb": 0.09091,
      "rouge_2_recall_ce": 0.09091,
      "rouge_2_precision": 0.02941,
      "rouge_2_precision_cb": 0.02941,
      "rouge_2_precision_ce": 0.02941,
      "rouge_2_f_score": 0.04444,
      "rouge_2_f_score_cb": 0.04444,
      "rouge_2_f_score_ce": 0.04444,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.17143,
      "rouge_l_precision_cb": 0.17143,
      "rouge_l_precision_ce": 0.17143,
      "rouge_l_f_score": 0.25532,
      "rouge_l_f_score_cb": 0.25532,
      "rouge_l_f_score_ce": 0.25532,
      "rouge_w_1.2_recall": 0.23494,
      "rouge_w_1.2_recall_cb": 0.23494,
      "rouge_w_1.2_recall_ce": 0.23494,
      "rouge_w_1.2_precision": 0.1324,
      "rouge_w_1.2_precision_cb": 0.1324,
      "rouge_w_1.2_precision_ce": 0.1324,
      "rouge_w_1.2_f_score": 0.16936,
      "rouge_w_1.2_f_score_cb": 0.16936,
      "rouge_w_1.2_f_score_ce": 0.16936,
      "rouge_s*_recall": 0.31818,
      "rouge_s*_recall_cb": 0.31818,
      "rouge_s*_recall_ce": 0.31818,
      "rouge_s*_precision": 0.03529,
      "rouge_s*_precision_cb": 0.03529,
      "rouge_s*_precision_ce": 0.03529,
      "rouge_s*_f_score": 0.06353,
      "rouge_s*_f_score_cb": 0.06353,
      "rouge_s*_f_score_ce": 0.06353,
      "rouge_su*_recall": 0.36364,
      "rouge_su*_recall_cb": 0.36364,
      "rouge_su*_recall_ce": 0.36364,
      "rouge_su*_precision": 0.04452,
      "rouge_su*_precision_cb": 0.04452,
      "rouge_su*_precision_ce": 0.04452,
      "rouge_su*_f_score": 0.07933,
      "rouge_su*_f_score_cb": 0.07933,
      "rouge_su*_f_score_ce": 0.07933
    }
  },
  {
    "id": 80,
    "filename": "PandasEval_80.txt",
    "dataset_comment": "Calculate the ceiling of a Pandas Series and return the result.",
    "generated_comment": "Calculate the ceiling of each element in the input pandas Series 's' using numpy's np.ceil() function.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.63636,
      "rouge_1_recall_cb": 0.63636,
      "rouge_1_recall_ce": 0.63636,
      "rouge_1_precision": 0.38889,
      "rouge_1_precision_cb": 0.38889,
      "rouge_1_precision_ce": 0.38889,
      "rouge_1_f_score": 0.48276,
      "rouge_1_f_score_cb": 0.48276,
      "rouge_1_f_score_ce": 0.48276,
      "rouge_2_recall": 0.4,
      "rouge_2_recall_cb": 0.4,
      "rouge_2_recall_ce": 0.4,
      "rouge_2_precision": 0.23529,
      "rouge_2_precision_cb": 0.23529,
      "rouge_2_precision_ce": 0.23529,
      "rouge_2_f_score": 0.29629,
      "rouge_2_f_score_cb": 0.29629,
      "rouge_2_f_score_ce": 0.29629,
      "rouge_3_recall": 0.22222,
      "rouge_3_recall_cb": 0.22222,
      "rouge_3_recall_ce": 0.22222,
      "rouge_3_precision": 0.125,
      "rouge_3_precision_cb": 0.125,
      "rouge_3_precision_ce": 0.125,
      "rouge_3_f_score": 0.16,
      "rouge_3_f_score_cb": 0.16,
      "rouge_3_f_score_ce": 0.16,
      "rouge_4_recall": 0.125,
      "rouge_4_recall_cb": 0.125,
      "rouge_4_recall_ce": 0.125,
      "rouge_4_precision": 0.06667,
      "rouge_4_precision_cb": 0.06667,
      "rouge_4_precision_ce": 0.06667,
      "rouge_4_f_score": 0.08696,
      "rouge_4_f_score_cb": 0.08696,
      "rouge_4_f_score_ce": 0.08696,
      "rouge_l_recall": 0.54545,
      "rouge_l_recall_cb": 0.54545,
      "rouge_l_recall_ce": 0.54545,
      "rouge_l_precision": 0.33333,
      "rouge_l_precision_cb": 0.33333,
      "rouge_l_precision_ce": 0.33333,
      "rouge_l_f_score": 0.41379,
      "rouge_l_f_score_cb": 0.41379,
      "rouge_l_f_score_ce": 0.41379,
      "rouge_w_1.2_recall": 0.30421,
      "rouge_w_1.2_recall_cb": 0.30421,
      "rouge_w_1.2_recall_ce": 0.30421,
      "rouge_w_1.2_precision": 0.30031,
      "rouge_w_1.2_precision_cb": 0.30031,
      "rouge_w_1.2_precision_ce": 0.30031,
      "rouge_w_1.2_f_score": 0.30225,
      "rouge_w_1.2_f_score_cb": 0.30225,
      "rouge_w_1.2_f_score_ce": 0.30225,
      "rouge_s*_recall": 0.34545,
      "rouge_s*_recall_cb": 0.34545,
      "rouge_s*_recall_ce": 0.34545,
      "rouge_s*_precision": 0.12418,
      "rouge_s*_precision_cb": 0.12418,
      "rouge_s*_precision_ce": 0.12418,
      "rouge_s*_f_score": 0.18269,
      "rouge_s*_f_score_cb": 0.18269,
      "rouge_s*_f_score_ce": 0.18269,
      "rouge_su*_recall": 0.4,
      "rouge_su*_recall_cb": 0.4,
      "rouge_su*_recall_ce": 0.4,
      "rouge_su*_precision": 0.15294,
      "rouge_su*_precision_cb": 0.15294,
      "rouge_su*_precision_ce": 0.15294,
      "rouge_su*_f_score": 0.22128,
      "rouge_su*_f_score_cb": 0.22128,
      "rouge_su*_f_score_ce": 0.22128
    }
  },
  {
    "id": 81,
    "filename": "PandasEval_81.txt",
    "dataset_comment": "Perform a groupby on a Pandas DataFrame, excluding certain columns, by grouping on `Country` and `Item_Code`, and compute the sum of the rows in the columns ['Y1961', 'Y1962', 'Y1963'].",
    "generated_comment": "Group the DataFrame by 'Country' and 'Item_Code', then calculate the sum of 'Y1961', 'Y1962', 'Y1963' columns for each group.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5,
      "rouge_1_recall_cb": 0.5,
      "rouge_1_recall_ce": 0.5,
      "rouge_1_precision": 0.75,
      "rouge_1_precision_cb": 0.75,
      "rouge_1_precision_ce": 0.75,
      "rouge_1_f_score": 0.6,
      "rouge_1_f_score_cb": 0.6,
      "rouge_1_f_score_ce": 0.6,
      "rouge_2_recall": 0.24138,
      "rouge_2_recall_cb": 0.24138,
      "rouge_2_recall_ce": 0.24138,
      "rouge_2_precision": 0.36842,
      "rouge_2_precision_cb": 0.36842,
      "rouge_2_precision_ce": 0.36842,
      "rouge_2_f_score": 0.29167,
      "rouge_2_f_score_cb": 0.29167,
      "rouge_2_f_score_ce": 0.29167,
      "rouge_3_recall": 0.14286,
      "rouge_3_recall_cb": 0.14286,
      "rouge_3_recall_ce": 0.14286,
      "rouge_3_precision": 0.22222,
      "rouge_3_precision_cb": 0.22222,
      "rouge_3_precision_ce": 0.22222,
      "rouge_3_f_score": 0.17391,
      "rouge_3_f_score_cb": 0.17391,
      "rouge_3_f_score_ce": 0.17391,
      "rouge_4_recall": 0.03704,
      "rouge_4_recall_cb": 0.03704,
      "rouge_4_recall_ce": 0.03704,
      "rouge_4_precision": 0.05882,
      "rouge_4_precision_cb": 0.05882,
      "rouge_4_precision_ce": 0.05882,
      "rouge_4_f_score": 0.04546,
      "rouge_4_f_score_cb": 0.04546,
      "rouge_4_f_score_ce": 0.04546,
      "rouge_l_recall": 0.4,
      "rouge_l_recall_cb": 0.4,
      "rouge_l_recall_ce": 0.4,
      "rouge_l_precision": 0.6,
      "rouge_l_precision_cb": 0.6,
      "rouge_l_precision_ce": 0.6,
      "rouge_l_f_score": 0.48,
      "rouge_l_f_score_cb": 0.48,
      "rouge_l_f_score_ce": 0.48,
      "rouge_w_1.2_recall": 0.15904,
      "rouge_w_1.2_recall_cb": 0.15904,
      "rouge_w_1.2_recall_ce": 0.15904,
      "rouge_w_1.2_precision": 0.471,
      "rouge_w_1.2_precision_cb": 0.471,
      "rouge_w_1.2_precision_ce": 0.471,
      "rouge_w_1.2_f_score": 0.23779,
      "rouge_w_1.2_f_score_cb": 0.23779,
      "rouge_w_1.2_f_score_ce": 0.23779,
      "rouge_s*_recall": 0.21839,
      "rouge_s*_recall_cb": 0.21839,
      "rouge_s*_recall_ce": 0.21839,
      "rouge_s*_precision": 0.5,
      "rouge_s*_precision_cb": 0.5,
      "rouge_s*_precision_ce": 0.5,
      "rouge_s*_f_score": 0.304,
      "rouge_s*_f_score_cb": 0.304,
      "rouge_s*_f_score_ce": 0.304,
      "rouge_su*_recall": 0.23491,
      "rouge_su*_recall_cb": 0.23491,
      "rouge_su*_recall_ce": 0.23491,
      "rouge_su*_precision": 0.52153,
      "rouge_su*_precision_cb": 0.52153,
      "rouge_su*_precision_ce": 0.52153,
      "rouge_su*_f_score": 0.32392,
      "rouge_su*_f_score_cb": 0.32392,
      "rouge_su*_f_score_ce": 0.32392
    }
  },
  {
    "id": 82,
    "filename": "PandasEval_82.txt",
    "dataset_comment": "Parameters:  df: The dataframe to append to.  list_to_append: The list to append.  column_name_list: The column names of the list to append. Returns: The dataframe with the list appended.",
    "generated_comment": "Create a function that appends a list of values as a new row in a DataFrame with specified column names.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.21875,
      "rouge_1_recall_cb": 0.21875,
      "rouge_1_recall_ce": 0.21875,
      "rouge_1_precision": 0.35,
      "rouge_1_precision_cb": 0.35,
      "rouge_1_precision_ce": 0.35,
      "rouge_1_f_score": 0.26923,
      "rouge_1_f_score_cb": 0.26923,
      "rouge_1_f_score_ce": 0.26923,
      "rouge_2_recall": 0.06452,
      "rouge_2_recall_cb": 0.06452,
      "rouge_2_recall_ce": 0.06452,
      "rouge_2_precision": 0.10526,
      "rouge_2_precision_cb": 0.10526,
      "rouge_2_precision_ce": 0.10526,
      "rouge_2_f_score": 0.08,
      "rouge_2_f_score_cb": 0.08,
      "rouge_2_f_score_ce": 0.08,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.15625,
      "rouge_l_recall_cb": 0.15625,
      "rouge_l_recall_ce": 0.15625,
      "rouge_l_precision": 0.25,
      "rouge_l_precision_cb": 0.25,
      "rouge_l_precision_ce": 0.25,
      "rouge_l_f_score": 0.19231,
      "rouge_l_f_score_cb": 0.19231,
      "rouge_l_f_score_ce": 0.19231,
      "rouge_w_1.2_recall": 0.06269,
      "rouge_w_1.2_recall_cb": 0.06269,
      "rouge_w_1.2_recall_ce": 0.06269,
      "rouge_w_1.2_precision": 0.20061,
      "rouge_w_1.2_precision_cb": 0.20061,
      "rouge_w_1.2_precision_ce": 0.20061,
      "rouge_w_1.2_f_score": 0.09553,
      "rouge_w_1.2_f_score_cb": 0.09553,
      "rouge_w_1.2_f_score_ce": 0.09553,
      "rouge_s*_recall": 0.03427,
      "rouge_s*_recall_cb": 0.03427,
      "rouge_s*_recall_ce": 0.03427,
      "rouge_s*_precision": 0.08947,
      "rouge_s*_precision_cb": 0.08947,
      "rouge_s*_precision_ce": 0.08947,
      "rouge_s*_f_score": 0.04956,
      "rouge_s*_f_score_cb": 0.04956,
      "rouge_s*_f_score_ce": 0.04956,
      "rouge_su*_recall": 0.04364,
      "rouge_su*_recall_cb": 0.04364,
      "rouge_su*_recall_ce": 0.04364,
      "rouge_su*_precision": 0.11005,
      "rouge_su*_precision_cb": 0.11005,
      "rouge_su*_precision_ce": 0.11005,
      "rouge_su*_f_score": 0.0625,
      "rouge_su*_f_score_cb": 0.0625,
      "rouge_su*_f_score_ce": 0.0625
    }
  },
  {
    "id": 83,
    "filename": "PandasEval_83.txt",
    "dataset_comment": "Map True/False values to 1/0 in a Pandas DataFrame and return the DataFrame with the column converted to int.",
    "generated_comment": "Convert a boolean column in a pandas DataFrame to an integer type by using the astype(int) function.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.42857,
      "rouge_1_recall_cb": 0.42857,
      "rouge_1_recall_ce": 0.42857,
      "rouge_1_precision": 0.5,
      "rouge_1_precision_cb": 0.5,
      "rouge_1_precision_ce": 0.5,
      "rouge_1_f_score": 0.46154,
      "rouge_1_f_score_cb": 0.46154,
      "rouge_1_f_score_ce": 0.46154,
      "rouge_2_recall": 0.15,
      "rouge_2_recall_cb": 0.15,
      "rouge_2_recall_ce": 0.15,
      "rouge_2_precision": 0.17647,
      "rouge_2_precision_cb": 0.17647,
      "rouge_2_precision_ce": 0.17647,
      "rouge_2_f_score": 0.16216,
      "rouge_2_f_score_cb": 0.16216,
      "rouge_2_f_score_ce": 0.16216,
      "rouge_3_recall": 0.10526,
      "rouge_3_recall_cb": 0.10526,
      "rouge_3_recall_ce": 0.10526,
      "rouge_3_precision": 0.125,
      "rouge_3_precision_cb": 0.125,
      "rouge_3_precision_ce": 0.125,
      "rouge_3_f_score": 0.11428,
      "rouge_3_f_score_cb": 0.11428,
      "rouge_3_f_score_ce": 0.11428,
      "rouge_4_recall": 0.05556,
      "rouge_4_recall_cb": 0.05556,
      "rouge_4_recall_ce": 0.05556,
      "rouge_4_precision": 0.06667,
      "rouge_4_precision_cb": 0.06667,
      "rouge_4_precision_ce": 0.06667,
      "rouge_4_f_score": 0.06061,
      "rouge_4_f_score_cb": 0.06061,
      "rouge_4_f_score_ce": 0.06061,
      "rouge_l_recall": 0.28571,
      "rouge_l_recall_cb": 0.28571,
      "rouge_l_recall_ce": 0.28571,
      "rouge_l_precision": 0.33333,
      "rouge_l_precision_cb": 0.33333,
      "rouge_l_precision_ce": 0.33333,
      "rouge_l_f_score": 0.30769,
      "rouge_l_f_score_cb": 0.30769,
      "rouge_l_f_score_ce": 0.30769,
      "rouge_w_1.2_recall": 0.13542,
      "rouge_w_1.2_recall_cb": 0.13542,
      "rouge_w_1.2_recall_ce": 0.13542,
      "rouge_w_1.2_precision": 0.29045,
      "rouge_w_1.2_precision_cb": 0.29045,
      "rouge_w_1.2_precision_ce": 0.29045,
      "rouge_w_1.2_f_score": 0.18472,
      "rouge_w_1.2_f_score_cb": 0.18472,
      "rouge_w_1.2_f_score_ce": 0.18472,
      "rouge_s*_recall": 0.13333,
      "rouge_s*_recall_cb": 0.13333,
      "rouge_s*_recall_ce": 0.13333,
      "rouge_s*_precision": 0.18301,
      "rouge_s*_precision_cb": 0.18301,
      "rouge_s*_precision_ce": 0.18301,
      "rouge_s*_f_score": 0.15427,
      "rouge_s*_f_score_cb": 0.15427,
      "rouge_s*_f_score_ce": 0.15427,
      "rouge_su*_recall": 0.15652,
      "rouge_su*_recall_cb": 0.15652,
      "rouge_su*_recall_ce": 0.15652,
      "rouge_su*_precision": 0.21176,
      "rouge_su*_precision_cb": 0.21176,
      "rouge_su*_precision_ce": 0.21176,
      "rouge_su*_f_score": 0.18,
      "rouge_su*_f_score_cb": 0.18,
      "rouge_su*_f_score_ce": 0.18
    }
  },
  {
    "id": 84,
    "filename": "PandasEval_84.txt",
    "dataset_comment": "Convert Pandas DataFrame to a list of dictionaries using df.to_dict() and return the result.",
    "generated_comment": "Convert a pandas DataFrame to a list of dictionaries using the 'records' orientation.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.625,
      "rouge_1_recall_cb": 0.625,
      "rouge_1_recall_ce": 0.625,
      "rouge_1_precision": 0.76923,
      "rouge_1_precision_cb": 0.76923,
      "rouge_1_precision_ce": 0.76923,
      "rouge_1_f_score": 0.68965,
      "rouge_1_f_score_cb": 0.68965,
      "rouge_1_f_score_ce": 0.68965,
      "rouge_2_recall": 0.46667,
      "rouge_2_recall_cb": 0.46667,
      "rouge_2_recall_ce": 0.46667,
      "rouge_2_precision": 0.58333,
      "rouge_2_precision_cb": 0.58333,
      "rouge_2_precision_ce": 0.58333,
      "rouge_2_f_score": 0.51852,
      "rouge_2_f_score_cb": 0.51852,
      "rouge_2_f_score_ce": 0.51852,
      "rouge_3_recall": 0.42857,
      "rouge_3_recall_cb": 0.42857,
      "rouge_3_recall_ce": 0.42857,
      "rouge_3_precision": 0.54545,
      "rouge_3_precision_cb": 0.54545,
      "rouge_3_precision_ce": 0.54545,
      "rouge_3_f_score": 0.48,
      "rouge_3_f_score_cb": 0.48,
      "rouge_3_f_score_ce": 0.48,
      "rouge_4_recall": 0.38462,
      "rouge_4_recall_cb": 0.38462,
      "rouge_4_recall_ce": 0.38462,
      "rouge_4_precision": 0.5,
      "rouge_4_precision_cb": 0.5,
      "rouge_4_precision_ce": 0.5,
      "rouge_4_f_score": 0.43479,
      "rouge_4_f_score_cb": 0.43479,
      "rouge_4_f_score_ce": 0.43479,
      "rouge_l_recall": 0.625,
      "rouge_l_recall_cb": 0.625,
      "rouge_l_recall_ce": 0.625,
      "rouge_l_precision": 0.76923,
      "rouge_l_precision_cb": 0.76923,
      "rouge_l_precision_ce": 0.76923,
      "rouge_l_f_score": 0.68965,
      "rouge_l_f_score_cb": 0.68965,
      "rouge_l_f_score_ce": 0.68965,
      "rouge_w_1.2_recall": 0.34224,
      "rouge_w_1.2_recall_cb": 0.34224,
      "rouge_w_1.2_recall_ce": 0.34224,
      "rouge_w_1.2_precision": 0.73338,
      "rouge_w_1.2_precision_cb": 0.73338,
      "rouge_w_1.2_precision_ce": 0.73338,
      "rouge_w_1.2_f_score": 0.46669,
      "rouge_w_1.2_f_score_cb": 0.46669,
      "rouge_w_1.2_f_score_ce": 0.46669,
      "rouge_s*_recall": 0.38333,
      "rouge_s*_recall_cb": 0.38333,
      "rouge_s*_recall_ce": 0.38333,
      "rouge_s*_precision": 0.58974,
      "rouge_s*_precision_cb": 0.58974,
      "rouge_s*_precision_ce": 0.58974,
      "rouge_s*_f_score": 0.46464,
      "rouge_s*_f_score_cb": 0.46464,
      "rouge_s*_f_score_ce": 0.46464,
      "rouge_su*_recall": 0.41481,
      "rouge_su*_recall_cb": 0.41481,
      "rouge_su*_recall_ce": 0.41481,
      "rouge_su*_precision": 0.62222,
      "rouge_su*_precision_cb": 0.62222,
      "rouge_su*_precision_ce": 0.62222,
      "rouge_su*_f_score": 0.49777,
      "rouge_su*_f_score_cb": 0.49777,
      "rouge_su*_f_score_ce": 0.49777
    }
  },
  {
    "id": 85,
    "filename": "PandasEval_85.txt",
    "dataset_comment": "Set the value of the entire column `B` in a Pandas DataFrame and return the modified DataFrame.",
    "generated_comment": "Set a specified value to an entire column in a pandas DataFrame by utilizing the assign method to create a new column 'B' with the provided value.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.64706,
      "rouge_1_recall_cb": 0.64706,
      "rouge_1_recall_ce": 0.64706,
      "rouge_1_precision": 0.40741,
      "rouge_1_precision_cb": 0.40741,
      "rouge_1_precision_ce": 0.40741,
      "rouge_1_f_score": 0.5,
      "rouge_1_f_score_cb": 0.5,
      "rouge_1_f_score_ce": 0.5,
      "rouge_2_recall": 0.3125,
      "rouge_2_recall_cb": 0.3125,
      "rouge_2_recall_ce": 0.3125,
      "rouge_2_precision": 0.19231,
      "rouge_2_precision_cb": 0.19231,
      "rouge_2_precision_ce": 0.19231,
      "rouge_2_f_score": 0.2381,
      "rouge_2_f_score_cb": 0.2381,
      "rouge_2_f_score_ce": 0.2381,
      "rouge_3_recall": 0.13333,
      "rouge_3_recall_cb": 0.13333,
      "rouge_3_recall_ce": 0.13333,
      "rouge_3_precision": 0.08,
      "rouge_3_precision_cb": 0.08,
      "rouge_3_precision_ce": 0.08,
      "rouge_3_f_score": 0.1,
      "rouge_3_f_score_cb": 0.1,
      "rouge_3_f_score_ce": 0.1,
      "rouge_4_recall": 0.07143,
      "rouge_4_recall_cb": 0.07143,
      "rouge_4_recall_ce": 0.07143,
      "rouge_4_precision": 0.04167,
      "rouge_4_precision_cb": 0.04167,
      "rouge_4_precision_ce": 0.04167,
      "rouge_4_f_score": 0.05263,
      "rouge_4_f_score_cb": 0.05263,
      "rouge_4_f_score_ce": 0.05263,
      "rouge_l_recall": 0.52941,
      "rouge_l_recall_cb": 0.52941,
      "rouge_l_recall_ce": 0.52941,
      "rouge_l_precision": 0.33333,
      "rouge_l_precision_cb": 0.33333,
      "rouge_l_precision_ce": 0.33333,
      "rouge_l_f_score": 0.40909,
      "rouge_l_f_score_cb": 0.40909,
      "rouge_l_f_score_ce": 0.40909,
      "rouge_w_1.2_recall": 0.23826,
      "rouge_w_1.2_recall_cb": 0.23826,
      "rouge_w_1.2_recall_ce": 0.23826,
      "rouge_w_1.2_precision": 0.26437,
      "rouge_w_1.2_precision_cb": 0.26437,
      "rouge_w_1.2_precision_ce": 0.26437,
      "rouge_w_1.2_f_score": 0.25064,
      "rouge_w_1.2_f_score_cb": 0.25064,
      "rouge_w_1.2_f_score_ce": 0.25064,
      "rouge_s*_recall": 0.36029,
      "rouge_s*_recall_cb": 0.36029,
      "rouge_s*_recall_ce": 0.36029,
      "rouge_s*_precision": 0.1396,
      "rouge_s*_precision_cb": 0.1396,
      "rouge_s*_precision_ce": 0.1396,
      "rouge_s*_f_score": 0.20123,
      "rouge_s*_f_score_cb": 0.20123,
      "rouge_s*_f_score_ce": 0.20123,
      "rouge_su*_recall": 0.39474,
      "rouge_su*_recall_cb": 0.39474,
      "rouge_su*_recall_ce": 0.39474,
      "rouge_su*_precision": 0.15915,
      "rouge_su*_precision_cb": 0.15915,
      "rouge_su*_precision_ce": 0.15915,
      "rouge_su*_f_score": 0.22684,
      "rouge_su*_f_score_cb": 0.22684,
      "rouge_su*_f_score_ce": 0.22684
    }
  },
  {
    "id": 86,
    "filename": "PandasEval_86.txt",
    "dataset_comment": "Delete multiple columns (A and C) in a single operation.",
    "generated_comment": "Drop columns 'A' and 'C' from the DataFrame 'df' and return a new DataFrame 'new_df'.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5,
      "rouge_1_recall_cb": 0.5,
      "rouge_1_recall_ce": 0.5,
      "rouge_1_precision": 0.3125,
      "rouge_1_precision_cb": 0.3125,
      "rouge_1_precision_ce": 0.3125,
      "rouge_1_f_score": 0.38462,
      "rouge_1_f_score_cb": 0.38462,
      "rouge_1_f_score_ce": 0.38462,
      "rouge_2_recall": 0.33333,
      "rouge_2_recall_cb": 0.33333,
      "rouge_2_recall_ce": 0.33333,
      "rouge_2_precision": 0.2,
      "rouge_2_precision_cb": 0.2,
      "rouge_2_precision_ce": 0.2,
      "rouge_2_f_score": 0.25,
      "rouge_2_f_score_cb": 0.25,
      "rouge_2_f_score_ce": 0.25,
      "rouge_3_recall": 0.25,
      "rouge_3_recall_cb": 0.25,
      "rouge_3_recall_ce": 0.25,
      "rouge_3_precision": 0.14286,
      "rouge_3_precision_cb": 0.14286,
      "rouge_3_precision_ce": 0.14286,
      "rouge_3_f_score": 0.18182,
      "rouge_3_f_score_cb": 0.18182,
      "rouge_3_f_score_ce": 0.18182,
      "rouge_4_recall": 0.14286,
      "rouge_4_recall_cb": 0.14286,
      "rouge_4_recall_ce": 0.14286,
      "rouge_4_precision": 0.07692,
      "rouge_4_precision_cb": 0.07692,
      "rouge_4_precision_ce": 0.07692,
      "rouge_4_f_score": 0.1,
      "rouge_4_f_score_cb": 0.1,
      "rouge_4_f_score_ce": 0.1,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.3125,
      "rouge_l_precision_cb": 0.3125,
      "rouge_l_precision_ce": 0.3125,
      "rouge_l_f_score": 0.38462,
      "rouge_l_f_score_cb": 0.38462,
      "rouge_l_f_score_ce": 0.38462,
      "rouge_w_1.2_recall": 0.29164,
      "rouge_w_1.2_recall_cb": 0.29164,
      "rouge_w_1.2_recall_ce": 0.29164,
      "rouge_w_1.2_precision": 0.28889,
      "rouge_w_1.2_precision_cb": 0.28889,
      "rouge_w_1.2_precision_ce": 0.28889,
      "rouge_w_1.2_f_score": 0.29026,
      "rouge_w_1.2_f_score_cb": 0.29026,
      "rouge_w_1.2_f_score_ce": 0.29026,
      "rouge_s*_recall": 0.22222,
      "rouge_s*_recall_cb": 0.22222,
      "rouge_s*_recall_ce": 0.22222,
      "rouge_s*_precision": 0.08333,
      "rouge_s*_precision_cb": 0.08333,
      "rouge_s*_precision_ce": 0.08333,
      "rouge_s*_f_score": 0.12121,
      "rouge_s*_f_score_cb": 0.12121,
      "rouge_s*_f_score_ce": 0.12121,
      "rouge_su*_recall": 0.27778,
      "rouge_su*_recall_cb": 0.27778,
      "rouge_su*_recall_ce": 0.27778,
      "rouge_su*_precision": 0.11111,
      "rouge_su*_precision_cb": 0.11111,
      "rouge_su*_precision_ce": 0.11111,
      "rouge_su*_f_score": 0.15873,
      "rouge_su*_f_score_cb": 0.15873,
      "rouge_su*_f_score_ce": 0.15873
    }
  },
  {
    "id": 87,
    "filename": "PandasEval_87.txt",
    "dataset_comment": "Given that all the dataframes have the same columns, concatenate them and return the concatenated dataframe.",
    "generated_comment": "Concatenate two pandas DataFrames df1 and df2 along axis 0 to combine them row-wise.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.25,
      "rouge_1_recall_cb": 0.25,
      "rouge_1_recall_ce": 0.25,
      "rouge_1_precision": 0.26667,
      "rouge_1_precision_cb": 0.26667,
      "rouge_1_precision_ce": 0.26667,
      "rouge_1_f_score": 0.25807,
      "rouge_1_f_score_cb": 0.25807,
      "rouge_1_f_score_ce": 0.25807,
      "rouge_2_recall": 0.0,
      "rouge_2_recall_cb": 0.0,
      "rouge_2_recall_ce": 0.0,
      "rouge_2_precision": 0.0,
      "rouge_2_precision_cb": 0.0,
      "rouge_2_precision_ce": 0.0,
      "rouge_2_f_score": 0.0,
      "rouge_2_f_score_cb": 0.0,
      "rouge_2_f_score_ce": 0.0,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.125,
      "rouge_l_recall_cb": 0.125,
      "rouge_l_recall_ce": 0.125,
      "rouge_l_precision": 0.13333,
      "rouge_l_precision_cb": 0.13333,
      "rouge_l_precision_ce": 0.13333,
      "rouge_l_f_score": 0.12903,
      "rouge_l_f_score_cb": 0.12903,
      "rouge_l_f_score_ce": 0.12903,
      "rouge_w_1.2_recall": 0.06396,
      "rouge_w_1.2_recall_cb": 0.06396,
      "rouge_w_1.2_recall_ce": 0.06396,
      "rouge_w_1.2_precision": 0.11879,
      "rouge_w_1.2_precision_cb": 0.11879,
      "rouge_w_1.2_precision_ce": 0.11879,
      "rouge_w_1.2_f_score": 0.08315,
      "rouge_w_1.2_f_score_cb": 0.08315,
      "rouge_w_1.2_f_score_ce": 0.08315,
      "rouge_s*_recall": 0.04167,
      "rouge_s*_recall_cb": 0.04167,
      "rouge_s*_recall_ce": 0.04167,
      "rouge_s*_precision": 0.04762,
      "rouge_s*_precision_cb": 0.04762,
      "rouge_s*_precision_ce": 0.04762,
      "rouge_s*_f_score": 0.04445,
      "rouge_s*_f_score_cb": 0.04445,
      "rouge_s*_f_score_ce": 0.04445,
      "rouge_su*_recall": 0.06667,
      "rouge_su*_recall_cb": 0.06667,
      "rouge_su*_recall_ce": 0.06667,
      "rouge_su*_precision": 0.07563,
      "rouge_su*_precision_cb": 0.07563,
      "rouge_su*_precision_ce": 0.07563,
      "rouge_su*_f_score": 0.07087,
      "rouge_su*_f_score_cb": 0.07087,
      "rouge_su*_f_score_ce": 0.07087
    }
  },
  {
    "id": 88,
    "filename": "PandasEval_88.txt",
    "dataset_comment": "Get the last N rows of a Pandas DataFrame.",
    "generated_comment": "Extract the last N rows from a pandas DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.77778,
      "rouge_1_recall_cb": 0.77778,
      "rouge_1_recall_ce": 0.77778,
      "rouge_1_precision": 0.77778,
      "rouge_1_precision_cb": 0.77778,
      "rouge_1_precision_ce": 0.77778,
      "rouge_1_f_score": 0.77778,
      "rouge_1_f_score_cb": 0.77778,
      "rouge_1_f_score_ce": 0.77778,
      "rouge_2_recall": 0.625,
      "rouge_2_recall_cb": 0.625,
      "rouge_2_recall_ce": 0.625,
      "rouge_2_precision": 0.625,
      "rouge_2_precision_cb": 0.625,
      "rouge_2_precision_ce": 0.625,
      "rouge_2_f_score": 0.625,
      "rouge_2_f_score_cb": 0.625,
      "rouge_2_f_score_ce": 0.625,
      "rouge_3_recall": 0.42857,
      "rouge_3_recall_cb": 0.42857,
      "rouge_3_recall_ce": 0.42857,
      "rouge_3_precision": 0.42857,
      "rouge_3_precision_cb": 0.42857,
      "rouge_3_precision_ce": 0.42857,
      "rouge_3_f_score": 0.42857,
      "rouge_3_f_score_cb": 0.42857,
      "rouge_3_f_score_ce": 0.42857,
      "rouge_4_recall": 0.16667,
      "rouge_4_recall_cb": 0.16667,
      "rouge_4_recall_ce": 0.16667,
      "rouge_4_precision": 0.16667,
      "rouge_4_precision_cb": 0.16667,
      "rouge_4_precision_ce": 0.16667,
      "rouge_4_f_score": 0.16667,
      "rouge_4_f_score_cb": 0.16667,
      "rouge_4_f_score_ce": 0.16667,
      "rouge_l_recall": 0.77778,
      "rouge_l_recall_cb": 0.77778,
      "rouge_l_recall_ce": 0.77778,
      "rouge_l_precision": 0.77778,
      "rouge_l_precision_cb": 0.77778,
      "rouge_l_precision_ce": 0.77778,
      "rouge_l_f_score": 0.77778,
      "rouge_l_f_score_cb": 0.77778,
      "rouge_l_f_score_ce": 0.77778,
      "rouge_w_1.2_recall": 0.44743,
      "rouge_w_1.2_recall_cb": 0.44743,
      "rouge_w_1.2_recall_ce": 0.44743,
      "rouge_w_1.2_precision": 0.69434,
      "rouge_w_1.2_precision_cb": 0.69434,
      "rouge_w_1.2_precision_ce": 0.69434,
      "rouge_w_1.2_f_score": 0.54419,
      "rouge_w_1.2_f_score_cb": 0.54419,
      "rouge_w_1.2_f_score_ce": 0.54419,
      "rouge_s*_recall": 0.58333,
      "rouge_s*_recall_cb": 0.58333,
      "rouge_s*_recall_ce": 0.58333,
      "rouge_s*_precision": 0.58333,
      "rouge_s*_precision_cb": 0.58333,
      "rouge_s*_precision_ce": 0.58333,
      "rouge_s*_f_score": 0.58333,
      "rouge_s*_f_score_cb": 0.58333,
      "rouge_s*_f_score_ce": 0.58333,
      "rouge_su*_recall": 0.61364,
      "rouge_su*_recall_cb": 0.61364,
      "rouge_su*_recall_ce": 0.61364,
      "rouge_su*_precision": 0.61364,
      "rouge_su*_precision_cb": 0.61364,
      "rouge_su*_precision_ce": 0.61364,
      "rouge_su*_f_score": 0.61364,
      "rouge_su*_f_score_cb": 0.61364,
      "rouge_su*_f_score_ce": 0.61364
    }
  },
  {
    "id": 89,
    "filename": "PandasEval_89.txt",
    "dataset_comment": "Return the row index values of the dataframe as a list.",
    "generated_comment": "Return the row index values of a DataFrame as a list.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.90909,
      "rouge_1_recall_cb": 0.90909,
      "rouge_1_recall_ce": 0.90909,
      "rouge_1_precision": 0.90909,
      "rouge_1_precision_cb": 0.90909,
      "rouge_1_precision_ce": 0.90909,
      "rouge_1_f_score": 0.90909,
      "rouge_1_f_score_cb": 0.90909,
      "rouge_1_f_score_ce": 0.90909,
      "rouge_2_recall": 0.8,
      "rouge_2_recall_cb": 0.8,
      "rouge_2_recall_ce": 0.8,
      "rouge_2_precision": 0.8,
      "rouge_2_precision_cb": 0.8,
      "rouge_2_precision_ce": 0.8,
      "rouge_2_f_score": 0.8,
      "rouge_2_f_score_cb": 0.8,
      "rouge_2_f_score_ce": 0.8,
      "rouge_3_recall": 0.66667,
      "rouge_3_recall_cb": 0.66667,
      "rouge_3_recall_ce": 0.66667,
      "rouge_3_precision": 0.66667,
      "rouge_3_precision_cb": 0.66667,
      "rouge_3_precision_ce": 0.66667,
      "rouge_3_f_score": 0.66667,
      "rouge_3_f_score_cb": 0.66667,
      "rouge_3_f_score_ce": 0.66667,
      "rouge_4_recall": 0.5,
      "rouge_4_recall_cb": 0.5,
      "rouge_4_recall_ce": 0.5,
      "rouge_4_precision": 0.5,
      "rouge_4_precision_cb": 0.5,
      "rouge_4_precision_ce": 0.5,
      "rouge_4_f_score": 0.5,
      "rouge_4_f_score_cb": 0.5,
      "rouge_4_f_score_ce": 0.5,
      "rouge_l_recall": 0.90909,
      "rouge_l_recall_cb": 0.90909,
      "rouge_l_recall_ce": 0.90909,
      "rouge_l_precision": 0.90909,
      "rouge_l_precision_cb": 0.90909,
      "rouge_l_precision_ce": 0.90909,
      "rouge_l_f_score": 0.90909,
      "rouge_l_f_score_cb": 0.90909,
      "rouge_l_f_score_ce": 0.90909,
      "rouge_w_1.2_recall": 0.50338,
      "rouge_w_1.2_recall_cb": 0.50338,
      "rouge_w_1.2_recall_ce": 0.50338,
      "rouge_w_1.2_precision": 0.81316,
      "rouge_w_1.2_precision_cb": 0.81316,
      "rouge_w_1.2_precision_ce": 0.81316,
      "rouge_w_1.2_f_score": 0.62182,
      "rouge_w_1.2_f_score_cb": 0.62182,
      "rouge_w_1.2_f_score_ce": 0.62182,
      "rouge_s*_recall": 0.83636,
      "rouge_s*_recall_cb": 0.83636,
      "rouge_s*_recall_ce": 0.83636,
      "rouge_s*_precision": 0.83636,
      "rouge_s*_precision_cb": 0.83636,
      "rouge_s*_precision_ce": 0.83636,
      "rouge_s*_f_score": 0.83636,
      "rouge_s*_f_score_cb": 0.83636,
      "rouge_s*_f_score_ce": 0.83636,
      "rouge_su*_recall": 0.84615,
      "rouge_su*_recall_cb": 0.84615,
      "rouge_su*_recall_ce": 0.84615,
      "rouge_su*_precision": 0.84615,
      "rouge_su*_precision_cb": 0.84615,
      "rouge_su*_precision_ce": 0.84615,
      "rouge_su*_f_score": 0.84615,
      "rouge_su*_f_score_cb": 0.84615,
      "rouge_su*_f_score_ce": 0.84615
    }
  },
  {
    "id": 90,
    "filename": "PandasEval_90.txt",
    "dataset_comment": "Create a new DataFrame with the specified rows removed.",
    "generated_comment": "i want to drop 2 rows in the dataframe if zero comes in the columnif 0 comes on odd index drop previous row as well as current row using pandasAssuming your dataframe is indexed starting from 0Rows with column2 = 0 and on odd indexThe rows above themDrop rows based on the calculated index",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.44444,
      "rouge_1_recall_cb": 0.44444,
      "rouge_1_recall_ce": 0.44444,
      "rouge_1_precision": 0.07547,
      "rouge_1_precision_cb": 0.07547,
      "rouge_1_precision_ce": 0.07547,
      "rouge_1_f_score": 0.12903,
      "rouge_1_f_score_cb": 0.12903,
      "rouge_1_f_score_ce": 0.12903,
      "rouge_2_recall": 0.0,
      "rouge_2_recall_cb": 0.0,
      "rouge_2_recall_ce": 0.0,
      "rouge_2_precision": 0.0,
      "rouge_2_precision_cb": 0.0,
      "rouge_2_precision_ce": 0.0,
      "rouge_2_f_score": 0.0,
      "rouge_2_f_score_cb": 0.0,
      "rouge_2_f_score_ce": 0.0,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.33333,
      "rouge_l_recall_cb": 0.33333,
      "rouge_l_recall_ce": 0.33333,
      "rouge_l_precision": 0.0566,
      "rouge_l_precision_cb": 0.0566,
      "rouge_l_precision_ce": 0.0566,
      "rouge_l_f_score": 0.09677,
      "rouge_l_f_score_cb": 0.09677,
      "rouge_l_f_score_ce": 0.09677,
      "rouge_w_1.2_recall": 0.2148,
      "rouge_w_1.2_recall_cb": 0.2148,
      "rouge_w_1.2_recall_ce": 0.2148,
      "rouge_w_1.2_precision": 0.0566,
      "rouge_w_1.2_precision_cb": 0.0566,
      "rouge_w_1.2_precision_ce": 0.0566,
      "rouge_w_1.2_f_score": 0.08959,
      "rouge_w_1.2_f_score_cb": 0.08959,
      "rouge_w_1.2_f_score_ce": 0.08959,
      "rouge_s*_recall": 0.16667,
      "rouge_s*_recall_cb": 0.16667,
      "rouge_s*_recall_ce": 0.16667,
      "rouge_s*_precision": 0.00435,
      "rouge_s*_precision_cb": 0.00435,
      "rouge_s*_precision_ce": 0.00435,
      "rouge_s*_f_score": 0.00848,
      "rouge_s*_f_score_cb": 0.00848,
      "rouge_s*_f_score_ce": 0.00848,
      "rouge_su*_recall": 0.22727,
      "rouge_su*_recall_cb": 0.22727,
      "rouge_su*_recall_ce": 0.22727,
      "rouge_su*_precision": 0.00699,
      "rouge_su*_precision_cb": 0.00699,
      "rouge_su*_precision_ce": 0.00699,
      "rouge_su*_f_score": 0.01356,
      "rouge_su*_f_score_cb": 0.01356,
      "rouge_su*_f_score_ce": 0.01356
    }
  },
  {
    "id": 91,
    "filename": "PandasEval_91.txt",
    "dataset_comment": "Convert a table represented as a list of lists into a pandas DataFrame with columns ['one', 'two'] and convert the 'two' column to float type in the best way.",
    "generated_comment": "Create a DataFrame from a list of lists 'a' where the first element of each sublist represents column 'one' and the second element represents column 'two'.Convert the values in column 'two' to float data type.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.72414,
      "rouge_1_recall_cb": 0.72414,
      "rouge_1_recall_ce": 0.72414,
      "rouge_1_precision": 0.58333,
      "rouge_1_precision_cb": 0.58333,
      "rouge_1_precision_ce": 0.58333,
      "rouge_1_f_score": 0.64615,
      "rouge_1_f_score_cb": 0.64615,
      "rouge_1_f_score_ce": 0.64615,
      "rouge_2_recall": 0.21429,
      "rouge_2_recall_cb": 0.21429,
      "rouge_2_recall_ce": 0.21429,
      "rouge_2_precision": 0.17143,
      "rouge_2_precision_cb": 0.17143,
      "rouge_2_precision_ce": 0.17143,
      "rouge_2_f_score": 0.19048,
      "rouge_2_f_score_cb": 0.19048,
      "rouge_2_f_score_ce": 0.19048,
      "rouge_3_recall": 0.07407,
      "rouge_3_recall_cb": 0.07407,
      "rouge_3_recall_ce": 0.07407,
      "rouge_3_precision": 0.05882,
      "rouge_3_precision_cb": 0.05882,
      "rouge_3_precision_ce": 0.05882,
      "rouge_3_f_score": 0.06557,
      "rouge_3_f_score_cb": 0.06557,
      "rouge_3_f_score_ce": 0.06557,
      "rouge_4_recall": 0.03846,
      "rouge_4_recall_cb": 0.03846,
      "rouge_4_recall_ce": 0.03846,
      "rouge_4_precision": 0.0303,
      "rouge_4_precision_cb": 0.0303,
      "rouge_4_precision_ce": 0.0303,
      "rouge_4_f_score": 0.0339,
      "rouge_4_f_score_cb": 0.0339,
      "rouge_4_f_score_ce": 0.0339,
      "rouge_l_recall": 0.51724,
      "rouge_l_recall_cb": 0.51724,
      "rouge_l_recall_ce": 0.51724,
      "rouge_l_precision": 0.41667,
      "rouge_l_precision_cb": 0.41667,
      "rouge_l_precision_ce": 0.41667,
      "rouge_l_f_score": 0.46154,
      "rouge_l_f_score_cb": 0.46154,
      "rouge_l_f_score_ce": 0.46154,
      "rouge_w_1.2_recall": 0.19994,
      "rouge_w_1.2_recall_cb": 0.19994,
      "rouge_w_1.2_recall_ce": 0.19994,
      "rouge_w_1.2_precision": 0.31584,
      "rouge_w_1.2_precision_cb": 0.31584,
      "rouge_w_1.2_precision_ce": 0.31584,
      "rouge_w_1.2_f_score": 0.24487,
      "rouge_w_1.2_f_score_cb": 0.24487,
      "rouge_w_1.2_f_score_ce": 0.24487,
      "rouge_s*_recall": 0.45813,
      "rouge_s*_recall_cb": 0.45813,
      "rouge_s*_recall_ce": 0.45813,
      "rouge_s*_precision": 0.29524,
      "rouge_s*_precision_cb": 0.29524,
      "rouge_s*_precision_ce": 0.29524,
      "rouge_s*_f_score": 0.35908,
      "rouge_s*_f_score_cb": 0.35908,
      "rouge_s*_f_score_ce": 0.35908,
      "rouge_su*_recall": 0.47465,
      "rouge_su*_recall_cb": 0.47465,
      "rouge_su*_recall_ce": 0.47465,
      "rouge_su*_precision": 0.30977,
      "rouge_su*_precision_cb": 0.30977,
      "rouge_su*_precision_ce": 0.30977,
      "rouge_su*_f_score": 0.37488,
      "rouge_su*_f_score_cb": 0.37488,
      "rouge_su*_f_score_ce": 0.37488
    }
  },
  {
    "id": 92,
    "filename": "PandasEval_92.txt",
    "dataset_comment": "Slice the DataFrame to take the first n rows and return the result.",
    "generated_comment": "Return the first n rows of the input DataFrame using the head() function provided by pandas.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.61538,
      "rouge_1_recall_cb": 0.61538,
      "rouge_1_recall_ce": 0.61538,
      "rouge_1_precision": 0.5,
      "rouge_1_precision_cb": 0.5,
      "rouge_1_precision_ce": 0.5,
      "rouge_1_f_score": 0.55172,
      "rouge_1_f_score_cb": 0.55172,
      "rouge_1_f_score_ce": 0.55172,
      "rouge_2_recall": 0.33333,
      "rouge_2_recall_cb": 0.33333,
      "rouge_2_recall_ce": 0.33333,
      "rouge_2_precision": 0.26667,
      "rouge_2_precision_cb": 0.26667,
      "rouge_2_precision_ce": 0.26667,
      "rouge_2_f_score": 0.2963,
      "rouge_2_f_score_cb": 0.2963,
      "rouge_2_f_score_ce": 0.2963,
      "rouge_3_recall": 0.18182,
      "rouge_3_recall_cb": 0.18182,
      "rouge_3_recall_ce": 0.18182,
      "rouge_3_precision": 0.14286,
      "rouge_3_precision_cb": 0.14286,
      "rouge_3_precision_ce": 0.14286,
      "rouge_3_f_score": 0.16,
      "rouge_3_f_score_cb": 0.16,
      "rouge_3_f_score_ce": 0.16,
      "rouge_4_recall": 0.1,
      "rouge_4_recall_cb": 0.1,
      "rouge_4_recall_ce": 0.1,
      "rouge_4_precision": 0.07692,
      "rouge_4_precision_cb": 0.07692,
      "rouge_4_precision_ce": 0.07692,
      "rouge_4_f_score": 0.08695,
      "rouge_4_f_score_cb": 0.08695,
      "rouge_4_f_score_ce": 0.08695,
      "rouge_l_recall": 0.38462,
      "rouge_l_recall_cb": 0.38462,
      "rouge_l_recall_ce": 0.38462,
      "rouge_l_precision": 0.3125,
      "rouge_l_precision_cb": 0.3125,
      "rouge_l_precision_ce": 0.3125,
      "rouge_l_f_score": 0.34483,
      "rouge_l_f_score_cb": 0.34483,
      "rouge_l_f_score_ce": 0.34483,
      "rouge_w_1.2_recall": 0.21287,
      "rouge_w_1.2_recall_cb": 0.21287,
      "rouge_w_1.2_recall_ce": 0.21287,
      "rouge_w_1.2_precision": 0.28889,
      "rouge_w_1.2_precision_cb": 0.28889,
      "rouge_w_1.2_precision_ce": 0.28889,
      "rouge_w_1.2_f_score": 0.24512,
      "rouge_w_1.2_f_score_cb": 0.24512,
      "rouge_w_1.2_f_score_ce": 0.24512,
      "rouge_s*_recall": 0.19231,
      "rouge_s*_recall_cb": 0.19231,
      "rouge_s*_recall_ce": 0.19231,
      "rouge_s*_precision": 0.125,
      "rouge_s*_precision_cb": 0.125,
      "rouge_s*_precision_ce": 0.125,
      "rouge_s*_f_score": 0.15152,
      "rouge_s*_f_score_cb": 0.15152,
      "rouge_s*_f_score_ce": 0.15152,
      "rouge_su*_recall": 0.25556,
      "rouge_su*_recall_cb": 0.25556,
      "rouge_su*_recall_ce": 0.25556,
      "rouge_su*_precision": 0.17037,
      "rouge_su*_precision_cb": 0.17037,
      "rouge_su*_precision_ce": 0.17037,
      "rouge_su*_f_score": 0.20445,
      "rouge_su*_f_score_cb": 0.20445,
      "rouge_su*_f_score_ce": 0.20445
    }
  },
  {
    "id": 93,
    "filename": "PandasEval_93.txt",
    "dataset_comment": "Transform timestamp to a pydatetime object and return the pydatetime object.",
    "generated_comment": "Transform a pandas timestamp object to a Python datetime object using the to_pydatetime() method.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.72727,
      "rouge_1_recall_cb": 0.72727,
      "rouge_1_recall_ce": 0.72727,
      "rouge_1_precision": 0.53333,
      "rouge_1_precision_cb": 0.53333,
      "rouge_1_precision_ce": 0.53333,
      "rouge_1_f_score": 0.61538,
      "rouge_1_f_score_cb": 0.61538,
      "rouge_1_f_score_ce": 0.61538,
      "rouge_2_recall": 0.1,
      "rouge_2_recall_cb": 0.1,
      "rouge_2_recall_ce": 0.1,
      "rouge_2_precision": 0.07143,
      "rouge_2_precision_cb": 0.07143,
      "rouge_2_precision_ce": 0.07143,
      "rouge_2_f_score": 0.08333,
      "rouge_2_f_score_cb": 0.08333,
      "rouge_2_f_score_ce": 0.08333,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.63636,
      "rouge_l_recall_cb": 0.63636,
      "rouge_l_recall_ce": 0.63636,
      "rouge_l_precision": 0.46667,
      "rouge_l_precision_cb": 0.46667,
      "rouge_l_precision_ce": 0.46667,
      "rouge_l_f_score": 0.53846,
      "rouge_l_f_score_cb": 0.53846,
      "rouge_l_f_score_ce": 0.53846,
      "rouge_w_1.2_recall": 0.33732,
      "rouge_w_1.2_recall_cb": 0.33732,
      "rouge_w_1.2_recall_ce": 0.33732,
      "rouge_w_1.2_precision": 0.3996,
      "rouge_w_1.2_precision_cb": 0.3996,
      "rouge_w_1.2_precision_ce": 0.3996,
      "rouge_w_1.2_f_score": 0.36583,
      "rouge_w_1.2_f_score_cb": 0.36583,
      "rouge_w_1.2_f_score_ce": 0.36583,
      "rouge_s*_recall": 0.49091,
      "rouge_s*_recall_cb": 0.49091,
      "rouge_s*_recall_ce": 0.49091,
      "rouge_s*_precision": 0.25714,
      "rouge_s*_precision_cb": 0.25714,
      "rouge_s*_precision_ce": 0.25714,
      "rouge_s*_f_score": 0.3375,
      "rouge_s*_f_score_cb": 0.3375,
      "rouge_s*_f_score_ce": 0.3375,
      "rouge_su*_recall": 0.52308,
      "rouge_su*_recall_cb": 0.52308,
      "rouge_su*_recall_ce": 0.52308,
      "rouge_su*_precision": 0.28571,
      "rouge_su*_precision_cb": 0.28571,
      "rouge_su*_precision_ce": 0.28571,
      "rouge_su*_f_score": 0.36956,
      "rouge_su*_f_score_cb": 0.36956,
      "rouge_su*_f_score_ce": 0.36956
    }
  },
  {
    "id": 94,
    "filename": "PandasEval_94.txt",
    "dataset_comment": "Select the given columns and return the new DataFrame.",
    "generated_comment": "Select multiple columns from a pandas DataFrame based on the provided list of column names.Test cases for the function:Test Case 1:Input: df = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6], 'C': [7, 8, 9]})columns = ['A', 'C']Expected Output: pd.DataFrame({'A': [1, 2, 3], 'C': [7, 8, 9]})Test Case 2:Input: df = pd.DataFrame({'X': [10, 20, 30], 'Y': [40, 50, 60], 'Z': [70, 80, 90]})columns = ['Y']Expected Output: pd.DataFrame({'Y': [40, 50, 60]})",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.55556,
      "rouge_1_recall_cb": 0.55556,
      "rouge_1_recall_ce": 0.55556,
      "rouge_1_precision": 0.06024,
      "rouge_1_precision_cb": 0.06024,
      "rouge_1_precision_ce": 0.06024,
      "rouge_1_f_score": 0.10869,
      "rouge_1_f_score_cb": 0.10869,
      "rouge_1_f_score_ce": 0.10869,
      "rouge_2_recall": 0.0,
      "rouge_2_recall_cb": 0.0,
      "rouge_2_recall_ce": 0.0,
      "rouge_2_precision": 0.0,
      "rouge_2_precision_cb": 0.0,
      "rouge_2_precision_ce": 0.0,
      "rouge_2_f_score": 0.0,
      "rouge_2_f_score_cb": 0.0,
      "rouge_2_f_score_ce": 0.0,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.55556,
      "rouge_l_recall_cb": 0.55556,
      "rouge_l_recall_ce": 0.55556,
      "rouge_l_precision": 0.06024,
      "rouge_l_precision_cb": 0.06024,
      "rouge_l_precision_ce": 0.06024,
      "rouge_l_f_score": 0.10869,
      "rouge_l_f_score_cb": 0.10869,
      "rouge_l_f_score_ce": 0.10869,
      "rouge_w_1.2_recall": 0.28727,
      "rouge_w_1.2_recall_cb": 0.28727,
      "rouge_w_1.2_recall_ce": 0.28727,
      "rouge_w_1.2_precision": 0.04834,
      "rouge_w_1.2_precision_cb": 0.04834,
      "rouge_w_1.2_precision_ce": 0.04834,
      "rouge_w_1.2_f_score": 0.08275,
      "rouge_w_1.2_f_score_cb": 0.08275,
      "rouge_w_1.2_f_score_ce": 0.08275,
      "rouge_s*_recall": 0.27778,
      "rouge_s*_recall_cb": 0.27778,
      "rouge_s*_recall_ce": 0.27778,
      "rouge_s*_precision": 0.00294,
      "rouge_s*_precision_cb": 0.00294,
      "rouge_s*_precision_ce": 0.00294,
      "rouge_s*_f_score": 0.00582,
      "rouge_s*_f_score_cb": 0.00582,
      "rouge_s*_f_score_ce": 0.00582,
      "rouge_su*_recall": 0.31818,
      "rouge_su*_recall_cb": 0.31818,
      "rouge_su*_recall_ce": 0.31818,
      "rouge_su*_precision": 0.00402,
      "rouge_su*_precision_cb": 0.00402,
      "rouge_su*_precision_ce": 0.00402,
      "rouge_su*_f_score": 0.00794,
      "rouge_su*_f_score_cb": 0.00794,
      "rouge_su*_f_score_ce": 0.00794
    }
  },
  {
    "id": 95,
    "filename": "PandasEval_95.txt",
    "dataset_comment": "Divide all columns ['B', 'C'] in a DataFrame by the first column 'A' and return the result.",
    "generated_comment": "Divide each element in columns 'B' and 'C' by the corresponding element in column 'A' in the DataFrame 'df' to normalize the values.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.70588,
      "rouge_1_recall_cb": 0.70588,
      "rouge_1_recall_ce": 0.70588,
      "rouge_1_precision": 0.52174,
      "rouge_1_precision_cb": 0.52174,
      "rouge_1_precision_ce": 0.52174,
      "rouge_1_f_score": 0.6,
      "rouge_1_f_score_cb": 0.6,
      "rouge_1_f_score_ce": 0.6,
      "rouge_2_recall": 0.1875,
      "rouge_2_recall_cb": 0.1875,
      "rouge_2_recall_ce": 0.1875,
      "rouge_2_precision": 0.13636,
      "rouge_2_precision_cb": 0.13636,
      "rouge_2_precision_ce": 0.13636,
      "rouge_2_f_score": 0.15789,
      "rouge_2_f_score_cb": 0.15789,
      "rouge_2_f_score_ce": 0.15789,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.52941,
      "rouge_l_recall_cb": 0.52941,
      "rouge_l_recall_ce": 0.52941,
      "rouge_l_precision": 0.3913,
      "rouge_l_precision_cb": 0.3913,
      "rouge_l_precision_ce": 0.3913,
      "rouge_l_f_score": 0.45,
      "rouge_l_f_score_cb": 0.45,
      "rouge_l_f_score_ce": 0.45,
      "rouge_w_1.2_recall": 0.23368,
      "rouge_w_1.2_recall_cb": 0.23368,
      "rouge_w_1.2_recall_ce": 0.23368,
      "rouge_w_1.2_precision": 0.30439,
      "rouge_w_1.2_precision_cb": 0.30439,
      "rouge_w_1.2_precision_ce": 0.30439,
      "rouge_w_1.2_f_score": 0.26439,
      "rouge_w_1.2_f_score_cb": 0.26439,
      "rouge_w_1.2_f_score_ce": 0.26439,
      "rouge_s*_recall": 0.43382,
      "rouge_s*_recall_cb": 0.43382,
      "rouge_s*_recall_ce": 0.43382,
      "rouge_s*_precision": 0.2332,
      "rouge_s*_precision_cb": 0.2332,
      "rouge_s*_precision_ce": 0.2332,
      "rouge_s*_f_score": 0.30334,
      "rouge_s*_f_score_cb": 0.30334,
      "rouge_s*_f_score_ce": 0.30334,
      "rouge_su*_recall": 0.46711,
      "rouge_su*_recall_cb": 0.46711,
      "rouge_su*_recall_ce": 0.46711,
      "rouge_su*_precision": 0.25818,
      "rouge_su*_precision_cb": 0.25818,
      "rouge_su*_precision_ce": 0.25818,
      "rouge_su*_f_score": 0.33255,
      "rouge_su*_f_score_cb": 0.33255,
      "rouge_su*_f_score_ce": 0.33255
    }
  },
  {
    "id": 96,
    "filename": "PandasEval_96.txt",
    "dataset_comment": "Merge the two dataframes on the column 'company'.",
    "generated_comment": "Merge two DataFrames based on the 'company' column to create a new DataFrame containing columns from both input DataFrames.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.875,
      "rouge_1_recall_cb": 0.875,
      "rouge_1_recall_ce": 0.875,
      "rouge_1_precision": 0.36842,
      "rouge_1_precision_cb": 0.36842,
      "rouge_1_precision_ce": 0.36842,
      "rouge_1_f_score": 0.51852,
      "rouge_1_f_score_cb": 0.51852,
      "rouge_1_f_score_ce": 0.51852,
      "rouge_2_recall": 0.28571,
      "rouge_2_recall_cb": 0.28571,
      "rouge_2_recall_ce": 0.28571,
      "rouge_2_precision": 0.11111,
      "rouge_2_precision_cb": 0.11111,
      "rouge_2_precision_ce": 0.11111,
      "rouge_2_f_score": 0.16,
      "rouge_2_f_score_cb": 0.16,
      "rouge_2_f_score_ce": 0.16,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.75,
      "rouge_l_recall_cb": 0.75,
      "rouge_l_recall_ce": 0.75,
      "rouge_l_precision": 0.31579,
      "rouge_l_precision_cb": 0.31579,
      "rouge_l_precision_ce": 0.31579,
      "rouge_l_f_score": 0.44444,
      "rouge_l_f_score_cb": 0.44444,
      "rouge_l_f_score_ce": 0.44444,
      "rouge_w_1.2_recall": 0.46159,
      "rouge_w_1.2_recall_cb": 0.46159,
      "rouge_w_1.2_recall_ce": 0.46159,
      "rouge_w_1.2_precision": 0.29458,
      "rouge_w_1.2_precision_cb": 0.29458,
      "rouge_w_1.2_precision_ce": 0.29458,
      "rouge_w_1.2_f_score": 0.35964,
      "rouge_w_1.2_f_score_cb": 0.35964,
      "rouge_w_1.2_f_score_ce": 0.35964,
      "rouge_s*_recall": 0.78571,
      "rouge_s*_recall_cb": 0.78571,
      "rouge_s*_recall_ce": 0.78571,
      "rouge_s*_precision": 0.12865,
      "rouge_s*_precision_cb": 0.12865,
      "rouge_s*_precision_ce": 0.12865,
      "rouge_s*_f_score": 0.2211,
      "rouge_s*_f_score_cb": 0.2211,
      "rouge_s*_f_score_ce": 0.2211,
      "rouge_su*_recall": 0.8,
      "rouge_su*_recall_cb": 0.8,
      "rouge_su*_recall_ce": 0.8,
      "rouge_su*_precision": 0.14815,
      "rouge_su*_precision_cb": 0.14815,
      "rouge_su*_precision_ce": 0.14815,
      "rouge_su*_f_score": 0.25,
      "rouge_su*_f_score_cb": 0.25,
      "rouge_su*_f_score_ce": 0.25
    }
  },
  {
    "id": 97,
    "filename": "PandasEval_97.txt",
    "dataset_comment": "Rename the only column header and return the changed dataframe.",
    "generated_comment": "Rename a column in a pandas DataFrame from 'old_name' to 'new_name'.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.3,
      "rouge_1_recall_cb": 0.3,
      "rouge_1_recall_ce": 0.3,
      "rouge_1_precision": 0.23077,
      "rouge_1_precision_cb": 0.23077,
      "rouge_1_precision_ce": 0.23077,
      "rouge_1_f_score": 0.26087,
      "rouge_1_f_score_cb": 0.26087,
      "rouge_1_f_score_ce": 0.26087,
      "rouge_2_recall": 0.0,
      "rouge_2_recall_cb": 0.0,
      "rouge_2_recall_ce": 0.0,
      "rouge_2_precision": 0.0,
      "rouge_2_precision_cb": 0.0,
      "rouge_2_precision_ce": 0.0,
      "rouge_2_f_score": 0.0,
      "rouge_2_f_score_cb": 0.0,
      "rouge_2_f_score_ce": 0.0,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.3,
      "rouge_l_recall_cb": 0.3,
      "rouge_l_recall_ce": 0.3,
      "rouge_l_precision": 0.23077,
      "rouge_l_precision_cb": 0.23077,
      "rouge_l_precision_ce": 0.23077,
      "rouge_l_f_score": 0.26087,
      "rouge_l_f_score_cb": 0.26087,
      "rouge_l_f_score_ce": 0.26087,
      "rouge_w_1.2_recall": 0.15762,
      "rouge_w_1.2_recall_cb": 0.15762,
      "rouge_w_1.2_recall_ce": 0.15762,
      "rouge_w_1.2_precision": 0.19216,
      "rouge_w_1.2_precision_cb": 0.19216,
      "rouge_w_1.2_precision_ce": 0.19216,
      "rouge_w_1.2_f_score": 0.17318,
      "rouge_w_1.2_f_score_cb": 0.17318,
      "rouge_w_1.2_f_score_ce": 0.17318,
      "rouge_s*_recall": 0.06667,
      "rouge_s*_recall_cb": 0.06667,
      "rouge_s*_recall_ce": 0.06667,
      "rouge_s*_precision": 0.03846,
      "rouge_s*_precision_cb": 0.03846,
      "rouge_s*_precision_ce": 0.03846,
      "rouge_s*_f_score": 0.04878,
      "rouge_s*_f_score_cb": 0.04878,
      "rouge_s*_f_score_ce": 0.04878,
      "rouge_su*_recall": 0.09259,
      "rouge_su*_recall_cb": 0.09259,
      "rouge_su*_recall_ce": 0.09259,
      "rouge_su*_precision": 0.05556,
      "rouge_su*_precision_cb": 0.05556,
      "rouge_su*_precision_ce": 0.05556,
      "rouge_su*_f_score": 0.06945,
      "rouge_su*_f_score_cb": 0.06945,
      "rouge_su*_f_score_ce": 0.06945
    }
  },
  {
    "id": 98,
    "filename": "PandasEval_98.txt",
    "dataset_comment": "Get a list of the column headers from a Pandas DataFrame provided by user input, regardless of the number of columns or their names, and return the list of column headers.",
    "generated_comment": "Extract a list of column names from a pandas DataFrame and return it as a Python list.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.3871,
      "rouge_1_recall_cb": 0.3871,
      "rouge_1_recall_ce": 0.3871,
      "rouge_1_precision": 0.70588,
      "rouge_1_precision_cb": 0.70588,
      "rouge_1_precision_ce": 0.70588,
      "rouge_1_f_score": 0.5,
      "rouge_1_f_score_cb": 0.5,
      "rouge_1_f_score_ce": 0.5,
      "rouge_2_recall": 0.23333,
      "rouge_2_recall_cb": 0.23333,
      "rouge_2_recall_ce": 0.23333,
      "rouge_2_precision": 0.4375,
      "rouge_2_precision_cb": 0.4375,
      "rouge_2_precision_ce": 0.4375,
      "rouge_2_f_score": 0.30434,
      "rouge_2_f_score_cb": 0.30434,
      "rouge_2_f_score_ce": 0.30434,
      "rouge_3_recall": 0.13793,
      "rouge_3_recall_cb": 0.13793,
      "rouge_3_recall_ce": 0.13793,
      "rouge_3_precision": 0.26667,
      "rouge_3_precision_cb": 0.26667,
      "rouge_3_precision_ce": 0.26667,
      "rouge_3_f_score": 0.18182,
      "rouge_3_f_score_cb": 0.18182,
      "rouge_3_f_score_ce": 0.18182,
      "rouge_4_recall": 0.03571,
      "rouge_4_recall_cb": 0.03571,
      "rouge_4_recall_ce": 0.03571,
      "rouge_4_precision": 0.07143,
      "rouge_4_precision_cb": 0.07143,
      "rouge_4_precision_ce": 0.07143,
      "rouge_4_f_score": 0.04762,
      "rouge_4_f_score_cb": 0.04762,
      "rouge_4_f_score_ce": 0.04762,
      "rouge_l_recall": 0.35484,
      "rouge_l_recall_cb": 0.35484,
      "rouge_l_recall_ce": 0.35484,
      "rouge_l_precision": 0.64706,
      "rouge_l_precision_cb": 0.64706,
      "rouge_l_precision_ce": 0.64706,
      "rouge_l_f_score": 0.45833,
      "rouge_l_f_score_cb": 0.45833,
      "rouge_l_f_score_ce": 0.45833,
      "rouge_w_1.2_recall": 0.14036,
      "rouge_w_1.2_recall_cb": 0.14036,
      "rouge_w_1.2_recall_ce": 0.14036,
      "rouge_w_1.2_precision": 0.50867,
      "rouge_w_1.2_precision_cb": 0.50867,
      "rouge_w_1.2_precision_ce": 0.50867,
      "rouge_w_1.2_f_score": 0.22001,
      "rouge_w_1.2_f_score_cb": 0.22001,
      "rouge_w_1.2_f_score_ce": 0.22001,
      "rouge_s*_recall": 0.13333,
      "rouge_s*_recall_cb": 0.13333,
      "rouge_s*_recall_ce": 0.13333,
      "rouge_s*_precision": 0.45588,
      "rouge_s*_precision_cb": 0.45588,
      "rouge_s*_precision_ce": 0.45588,
      "rouge_s*_f_score": 0.20632,
      "rouge_s*_f_score_cb": 0.20632,
      "rouge_s*_f_score_ce": 0.20632,
      "rouge_su*_recall": 0.14747,
      "rouge_su*_recall_cb": 0.14747,
      "rouge_su*_recall_ce": 0.14747,
      "rouge_su*_precision": 0.48026,
      "rouge_su*_precision_cb": 0.48026,
      "rouge_su*_precision_ce": 0.48026,
      "rouge_su*_f_score": 0.22565,
      "rouge_su*_f_score_cb": 0.22565,
      "rouge_su*_f_score_ce": 0.22565
    }
  },
  {
    "id": 99,
    "filename": "PandasEval_99.txt",
    "dataset_comment": "Find non-numeric rows in a Pandas DataFrame and return the rows that contain non-numeric values. To obtain the subDataFrame of rows with non-numeric values, use the negation (~) of the condition to identify rows with at least one non-numeric entry.",
    "generated_comment": "Filter out rows in a pandas DataFrame that contain non-numeric values by applying np.isreal to each element of the DataFrame and returning rows where all elements are not real numbers.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.37209,
      "rouge_1_recall_cb": 0.37209,
      "rouge_1_recall_ce": 0.37209,
      "rouge_1_precision": 0.5,
      "rouge_1_precision_cb": 0.5,
      "rouge_1_precision_ce": 0.5,
      "rouge_1_f_score": 0.42666,
      "rouge_1_f_score_cb": 0.42666,
      "rouge_1_f_score_ce": 0.42666,
      "rouge_2_recall": 0.2619,
      "rouge_2_recall_cb": 0.2619,
      "rouge_2_recall_ce": 0.2619,
      "rouge_2_precision": 0.35484,
      "rouge_2_precision_cb": 0.35484,
      "rouge_2_precision_ce": 0.35484,
      "rouge_2_f_score": 0.30137,
      "rouge_2_f_score_cb": 0.30137,
      "rouge_2_f_score_ce": 0.30137,
      "rouge_3_recall": 0.17073,
      "rouge_3_recall_cb": 0.17073,
      "rouge_3_recall_ce": 0.17073,
      "rouge_3_precision": 0.23333,
      "rouge_3_precision_cb": 0.23333,
      "rouge_3_precision_ce": 0.23333,
      "rouge_3_f_score": 0.19718,
      "rouge_3_f_score_cb": 0.19718,
      "rouge_3_f_score_ce": 0.19718,
      "rouge_4_recall": 0.1,
      "rouge_4_recall_cb": 0.1,
      "rouge_4_recall_ce": 0.1,
      "rouge_4_precision": 0.13793,
      "rouge_4_precision_cb": 0.13793,
      "rouge_4_precision_ce": 0.13793,
      "rouge_4_f_score": 0.11594,
      "rouge_4_f_score_cb": 0.11594,
      "rouge_4_f_score_ce": 0.11594,
      "rouge_l_recall": 0.32558,
      "rouge_l_recall_cb": 0.32558,
      "rouge_l_recall_ce": 0.32558,
      "rouge_l_precision": 0.4375,
      "rouge_l_precision_cb": 0.4375,
      "rouge_l_precision_ce": 0.4375,
      "rouge_l_f_score": 0.37333,
      "rouge_l_f_score_cb": 0.37333,
      "rouge_l_f_score_ce": 0.37333,
      "rouge_w_1.2_recall": 0.12627,
      "rouge_w_1.2_recall_cb": 0.12627,
      "rouge_w_1.2_recall_ce": 0.12627,
      "rouge_w_1.2_precision": 0.36,
      "rouge_w_1.2_precision_cb": 0.36,
      "rouge_w_1.2_precision_ce": 0.36,
      "rouge_w_1.2_f_score": 0.18696,
      "rouge_w_1.2_f_score_cb": 0.18696,
      "rouge_w_1.2_f_score_ce": 0.18696,
      "rouge_s*_recall": 0.12292,
      "rouge_s*_recall_cb": 0.12292,
      "rouge_s*_recall_ce": 0.12292,
      "rouge_s*_precision": 0.22379,
      "rouge_s*_precision_cb": 0.22379,
      "rouge_s*_precision_ce": 0.22379,
      "rouge_s*_f_score": 0.15868,
      "rouge_s*_f_score_cb": 0.15868,
      "rouge_s*_f_score_ce": 0.15868,
      "rouge_su*_recall": 0.13439,
      "rouge_su*_recall_cb": 0.13439,
      "rouge_su*_recall_ce": 0.13439,
      "rouge_su*_precision": 0.24099,
      "rouge_su*_precision_cb": 0.24099,
      "rouge_su*_precision_ce": 0.24099,
      "rouge_su*_f_score": 0.17255,
      "rouge_su*_f_score_cb": 0.17255,
      "rouge_su*_f_score_ce": 0.17255
    }
  },
  {
    "id": 100,
    "filename": "PandasEval_100.txt",
    "dataset_comment": "Use the concat function, as np.repeat does not work practically on a DataFrame.",
    "generated_comment": "This is my DataFrame that should be repeated for 5 times:Repeat the DataFrame x for 5 times using pd.concat() to create 'repeated_x'.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.28571,
      "rouge_1_recall_cb": 0.28571,
      "rouge_1_recall_ce": 0.28571,
      "rouge_1_precision": 0.16,
      "rouge_1_precision_cb": 0.16,
      "rouge_1_precision_ce": 0.16,
      "rouge_1_f_score": 0.20513,
      "rouge_1_f_score_cb": 0.20513,
      "rouge_1_f_score_ce": 0.20513,
      "rouge_2_recall": 0.0,
      "rouge_2_recall_cb": 0.0,
      "rouge_2_recall_ce": 0.0,
      "rouge_2_precision": 0.0,
      "rouge_2_precision_cb": 0.0,
      "rouge_2_precision_ce": 0.0,
      "rouge_2_f_score": 0.0,
      "rouge_2_f_score_cb": 0.0,
      "rouge_2_f_score_ce": 0.0,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.21429,
      "rouge_l_recall_cb": 0.21429,
      "rouge_l_recall_ce": 0.21429,
      "rouge_l_precision": 0.12,
      "rouge_l_precision_cb": 0.12,
      "rouge_l_precision_ce": 0.12,
      "rouge_l_f_score": 0.15385,
      "rouge_l_f_score_cb": 0.15385,
      "rouge_l_f_score_ce": 0.15385,
      "rouge_w_1.2_recall": 0.11388,
      "rouge_w_1.2_recall_cb": 0.11388,
      "rouge_w_1.2_recall_ce": 0.11388,
      "rouge_w_1.2_precision": 0.10811,
      "rouge_w_1.2_precision_cb": 0.10811,
      "rouge_w_1.2_precision_ce": 0.10811,
      "rouge_w_1.2_f_score": 0.11092,
      "rouge_w_1.2_f_score_cb": 0.11092,
      "rouge_w_1.2_f_score_ce": 0.11092,
      "rouge_s*_recall": 0.05495,
      "rouge_s*_recall_cb": 0.05495,
      "rouge_s*_recall_ce": 0.05495,
      "rouge_s*_precision": 0.01667,
      "rouge_s*_precision_cb": 0.01667,
      "rouge_s*_precision_ce": 0.01667,
      "rouge_s*_f_score": 0.02558,
      "rouge_s*_f_score_cb": 0.02558,
      "rouge_s*_f_score_ce": 0.02558,
      "rouge_su*_recall": 0.07692,
      "rouge_su*_recall_cb": 0.07692,
      "rouge_su*_recall_ce": 0.07692,
      "rouge_su*_precision": 0.02469,
      "rouge_su*_precision_cb": 0.02469,
      "rouge_su*_precision_ce": 0.02469,
      "rouge_su*_f_score": 0.03738,
      "rouge_su*_f_score_cb": 0.03738,
      "rouge_su*_f_score_ce": 0.03738
    }
  }
]