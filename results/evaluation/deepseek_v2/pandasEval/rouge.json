[
  {
    "id": 0,
    "filename": "PandasEval_0.txt",
    "dataset_comment": "Drop rows of Pandas DataFrame where the value in a specified column is NaN",
    "generated_comment": "Drop rows where the specified column contains NaN values.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.57143,
      "rouge_1_recall_cb": 0.57143,
      "rouge_1_recall_ce": 0.57143,
      "rouge_1_precision": 0.88889,
      "rouge_1_precision_cb": 0.88889,
      "rouge_1_precision_ce": 0.88889,
      "rouge_1_f_score": 0.69565,
      "rouge_1_f_score_cb": 0.69565,
      "rouge_1_f_score_ce": 0.69565,
      "rouge_2_recall": 0.23077,
      "rouge_2_recall_cb": 0.23077,
      "rouge_2_recall_ce": 0.23077,
      "rouge_2_precision": 0.375,
      "rouge_2_precision_cb": 0.375,
      "rouge_2_precision_ce": 0.375,
      "rouge_2_f_score": 0.28571,
      "rouge_2_f_score_cb": 0.28571,
      "rouge_2_f_score_ce": 0.28571,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.77778,
      "rouge_l_precision_cb": 0.77778,
      "rouge_l_precision_ce": 0.77778,
      "rouge_l_f_score": 0.6087,
      "rouge_l_f_score_cb": 0.6087,
      "rouge_l_f_score_ce": 0.6087,
      "rouge_w_1.2_recall": 0.23567,
      "rouge_w_1.2_recall_cb": 0.23567,
      "rouge_w_1.2_recall_ce": 0.23567,
      "rouge_w_1.2_precision": 0.62147,
      "rouge_w_1.2_precision_cb": 0.62147,
      "rouge_w_1.2_precision_ce": 0.62147,
      "rouge_w_1.2_f_score": 0.34175,
      "rouge_w_1.2_f_score_cb": 0.34175,
      "rouge_w_1.2_f_score_ce": 0.34175,
      "rouge_s*_recall": 0.27473,
      "rouge_s*_recall_cb": 0.27473,
      "rouge_s*_recall_ce": 0.27473,
      "rouge_s*_precision": 0.69444,
      "rouge_s*_precision_cb": 0.69444,
      "rouge_s*_precision_ce": 0.69444,
      "rouge_s*_f_score": 0.3937,
      "rouge_s*_f_score_cb": 0.3937,
      "rouge_s*_f_score_ce": 0.3937,
      "rouge_su*_recall": 0.29808,
      "rouge_su*_recall_cb": 0.29808,
      "rouge_su*_recall_ce": 0.29808,
      "rouge_su*_precision": 0.70455,
      "rouge_su*_precision_cb": 0.70455,
      "rouge_su*_precision_ce": 0.70455,
      "rouge_su*_f_score": 0.41892,
      "rouge_su*_f_score_cb": 0.41892,
      "rouge_su*_f_score_ce": 0.41892
    }
  },
  {
    "id": 1,
    "filename": "PandasEval_1.txt",
    "dataset_comment": "Replace fields that are entirely space or empty with NaN using regex and return the result.",
    "generated_comment": "Replace blank strings with NaN values in the DataFrame using regex to identify blank spaces.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.4375,
      "rouge_1_recall_cb": 0.4375,
      "rouge_1_recall_ce": 0.4375,
      "rouge_1_precision": 0.46667,
      "rouge_1_precision_cb": 0.46667,
      "rouge_1_precision_ce": 0.46667,
      "rouge_1_f_score": 0.45161,
      "rouge_1_f_score_cb": 0.45161,
      "rouge_1_f_score_ce": 0.45161,
      "rouge_2_recall": 0.13333,
      "rouge_2_recall_cb": 0.13333,
      "rouge_2_recall_ce": 0.13333,
      "rouge_2_precision": 0.14286,
      "rouge_2_precision_cb": 0.14286,
      "rouge_2_precision_ce": 0.14286,
      "rouge_2_f_score": 0.13793,
      "rouge_2_f_score_cb": 0.13793,
      "rouge_2_f_score_ce": 0.13793,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.3125,
      "rouge_l_recall_cb": 0.3125,
      "rouge_l_recall_ce": 0.3125,
      "rouge_l_precision": 0.33333,
      "rouge_l_precision_cb": 0.33333,
      "rouge_l_precision_ce": 0.33333,
      "rouge_l_f_score": 0.32258,
      "rouge_l_f_score_cb": 0.32258,
      "rouge_l_f_score_ce": 0.32258,
      "rouge_w_1.2_recall": 0.16592,
      "rouge_w_1.2_recall_cb": 0.16592,
      "rouge_w_1.2_recall_ce": 0.16592,
      "rouge_w_1.2_precision": 0.30815,
      "rouge_w_1.2_precision_cb": 0.30815,
      "rouge_w_1.2_precision_ce": 0.30815,
      "rouge_w_1.2_f_score": 0.2157,
      "rouge_w_1.2_f_score_cb": 0.2157,
      "rouge_w_1.2_f_score_ce": 0.2157,
      "rouge_s*_recall": 0.11667,
      "rouge_s*_recall_cb": 0.11667,
      "rouge_s*_recall_ce": 0.11667,
      "rouge_s*_precision": 0.13333,
      "rouge_s*_precision_cb": 0.13333,
      "rouge_s*_precision_ce": 0.13333,
      "rouge_s*_f_score": 0.12444,
      "rouge_s*_f_score_cb": 0.12444,
      "rouge_s*_f_score_ce": 0.12444,
      "rouge_su*_recall": 0.14815,
      "rouge_su*_recall_cb": 0.14815,
      "rouge_su*_recall_ce": 0.14815,
      "rouge_su*_precision": 0.16807,
      "rouge_su*_precision_cb": 0.16807,
      "rouge_su*_precision_ce": 0.16807,
      "rouge_su*_f_score": 0.15748,
      "rouge_su*_f_score_cb": 0.15748,
      "rouge_su*_f_score_ce": 0.15748
    }
  },
  {
    "id": 2,
    "filename": "PandasEval_2.txt",
    "dataset_comment": "Change the column labels of a pandas DataFrame from ['A', 'B', 'C'] to ['a', 'b', 'c'].",
    "generated_comment": "Rename the columns of the DataFrame to ['a', 'b', 'c']",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5,
      "rouge_1_recall_cb": 0.5,
      "rouge_1_recall_ce": 0.5,
      "rouge_1_precision": 0.8,
      "rouge_1_precision_cb": 0.8,
      "rouge_1_precision_ce": 0.8,
      "rouge_1_f_score": 0.61538,
      "rouge_1_f_score_cb": 0.61538,
      "rouge_1_f_score_ce": 0.61538,
      "rouge_2_recall": 0.26667,
      "rouge_2_recall_cb": 0.26667,
      "rouge_2_recall_ce": 0.26667,
      "rouge_2_precision": 0.44444,
      "rouge_2_precision_cb": 0.44444,
      "rouge_2_precision_ce": 0.44444,
      "rouge_2_f_score": 0.33333,
      "rouge_2_f_score_cb": 0.33333,
      "rouge_2_f_score_ce": 0.33333,
      "rouge_3_recall": 0.14286,
      "rouge_3_recall_cb": 0.14286,
      "rouge_3_recall_ce": 0.14286,
      "rouge_3_precision": 0.25,
      "rouge_3_precision_cb": 0.25,
      "rouge_3_precision_ce": 0.25,
      "rouge_3_f_score": 0.18182,
      "rouge_3_f_score_cb": 0.18182,
      "rouge_3_f_score_ce": 0.18182,
      "rouge_4_recall": 0.07692,
      "rouge_4_recall_cb": 0.07692,
      "rouge_4_recall_ce": 0.07692,
      "rouge_4_precision": 0.14286,
      "rouge_4_precision_cb": 0.14286,
      "rouge_4_precision_ce": 0.14286,
      "rouge_4_f_score": 0.1,
      "rouge_4_f_score_cb": 0.1,
      "rouge_4_f_score_ce": 0.1,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.8,
      "rouge_l_precision_cb": 0.8,
      "rouge_l_precision_ce": 0.8,
      "rouge_l_f_score": 0.61538,
      "rouge_l_f_score_cb": 0.61538,
      "rouge_l_f_score_ce": 0.61538,
      "rouge_w_1.2_recall": 0.23588,
      "rouge_w_1.2_recall_cb": 0.23588,
      "rouge_w_1.2_recall_ce": 0.23588,
      "rouge_w_1.2_precision": 0.6571,
      "rouge_w_1.2_precision_cb": 0.6571,
      "rouge_w_1.2_precision_ce": 0.6571,
      "rouge_w_1.2_f_score": 0.34714,
      "rouge_w_1.2_f_score_cb": 0.34714,
      "rouge_w_1.2_f_score_ce": 0.34714,
      "rouge_s*_recall": 0.25833,
      "rouge_s*_recall_cb": 0.25833,
      "rouge_s*_recall_ce": 0.25833,
      "rouge_s*_precision": 0.68889,
      "rouge_s*_precision_cb": 0.68889,
      "rouge_s*_precision_ce": 0.68889,
      "rouge_s*_f_score": 0.37575,
      "rouge_s*_f_score_cb": 0.37575,
      "rouge_s*_f_score_ce": 0.37575,
      "rouge_su*_recall": 0.28148,
      "rouge_su*_recall_cb": 0.28148,
      "rouge_su*_recall_ce": 0.28148,
      "rouge_su*_precision": 0.7037,
      "rouge_su*_precision_cb": 0.7037,
      "rouge_su*_precision_ce": 0.7037,
      "rouge_su*_f_score": 0.40211,
      "rouge_su*_f_score_cb": 0.40211,
      "rouge_su*_f_score_ce": 0.40211
    }
  },
  {
    "id": 3,
    "filename": "PandasEval_3.txt",
    "dataset_comment": "Add leading zeros to strings in the col_name column of a Pandas DataFrame, ensuring a maximum string length of 15 characters, and return the DataFrame.",
    "generated_comment": "Pad the string in the specified column with leading zeros to ensure the total length is 15 characters.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.46154,
      "rouge_1_recall_cb": 0.46154,
      "rouge_1_recall_ce": 0.46154,
      "rouge_1_precision": 0.66667,
      "rouge_1_precision_cb": 0.66667,
      "rouge_1_precision_ce": 0.66667,
      "rouge_1_f_score": 0.54546,
      "rouge_1_f_score_cb": 0.54546,
      "rouge_1_f_score_ce": 0.54546,
      "rouge_2_recall": 0.2,
      "rouge_2_recall_cb": 0.2,
      "rouge_2_recall_ce": 0.2,
      "rouge_2_precision": 0.29412,
      "rouge_2_precision_cb": 0.29412,
      "rouge_2_precision_ce": 0.29412,
      "rouge_2_f_score": 0.2381,
      "rouge_2_f_score_cb": 0.2381,
      "rouge_2_f_score_ce": 0.2381,
      "rouge_3_recall": 0.08333,
      "rouge_3_recall_cb": 0.08333,
      "rouge_3_recall_ce": 0.08333,
      "rouge_3_precision": 0.125,
      "rouge_3_precision_cb": 0.125,
      "rouge_3_precision_ce": 0.125,
      "rouge_3_f_score": 0.1,
      "rouge_3_f_score_cb": 0.1,
      "rouge_3_f_score_ce": 0.1,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.30769,
      "rouge_l_recall_cb": 0.30769,
      "rouge_l_recall_ce": 0.30769,
      "rouge_l_precision": 0.44444,
      "rouge_l_precision_cb": 0.44444,
      "rouge_l_precision_ce": 0.44444,
      "rouge_l_f_score": 0.36363,
      "rouge_l_f_score_cb": 0.36363,
      "rouge_l_f_score_ce": 0.36363,
      "rouge_w_1.2_recall": 0.12549,
      "rouge_w_1.2_recall_cb": 0.12549,
      "rouge_w_1.2_recall_ce": 0.12549,
      "rouge_w_1.2_precision": 0.34779,
      "rouge_w_1.2_precision_cb": 0.34779,
      "rouge_w_1.2_precision_ce": 0.34779,
      "rouge_w_1.2_f_score": 0.18443,
      "rouge_w_1.2_f_score_cb": 0.18443,
      "rouge_w_1.2_f_score_ce": 0.18443,
      "rouge_s*_recall": 0.16,
      "rouge_s*_recall_cb": 0.16,
      "rouge_s*_recall_ce": 0.16,
      "rouge_s*_precision": 0.33987,
      "rouge_s*_precision_cb": 0.33987,
      "rouge_s*_precision_ce": 0.33987,
      "rouge_s*_f_score": 0.21757,
      "rouge_s*_f_score_cb": 0.21757,
      "rouge_s*_f_score_ce": 0.21757,
      "rouge_su*_recall": 0.18,
      "rouge_su*_recall_cb": 0.18,
      "rouge_su*_recall_ce": 0.18,
      "rouge_su*_precision": 0.37059,
      "rouge_su*_precision_cb": 0.37059,
      "rouge_su*_precision_ce": 0.37059,
      "rouge_su*_f_score": 0.24231,
      "rouge_su*_f_score_cb": 0.24231,
      "rouge_su*_f_score_ce": 0.24231
    }
  },
  {
    "id": 4,
    "filename": "PandasEval_4.txt",
    "dataset_comment": "Convert a list_of_lists, with the format [header, [row1], [row2], ...], to a DataFrame. The header should be in the format [column1, column2, ...], and each row in the format [value1, value2, ...]. Return the resulting DataFrame.",
    "generated_comment": "Convert a list of lists into a pandas DataFrame, where the first list in the input is used as the column names.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.31429,
      "rouge_1_recall_cb": 0.31429,
      "rouge_1_recall_ce": 0.31429,
      "rouge_1_precision": 0.5,
      "rouge_1_precision_cb": 0.5,
      "rouge_1_precision_ce": 0.5,
      "rouge_1_f_score": 0.38597,
      "rouge_1_f_score_cb": 0.38597,
      "rouge_1_f_score_ce": 0.38597,
      "rouge_2_recall": 0.14706,
      "rouge_2_recall_cb": 0.14706,
      "rouge_2_recall_ce": 0.14706,
      "rouge_2_precision": 0.2381,
      "rouge_2_precision_cb": 0.2381,
      "rouge_2_precision_ce": 0.2381,
      "rouge_2_f_score": 0.18182,
      "rouge_2_f_score_cb": 0.18182,
      "rouge_2_f_score_ce": 0.18182,
      "rouge_3_recall": 0.09091,
      "rouge_3_recall_cb": 0.09091,
      "rouge_3_recall_ce": 0.09091,
      "rouge_3_precision": 0.15,
      "rouge_3_precision_cb": 0.15,
      "rouge_3_precision_ce": 0.15,
      "rouge_3_f_score": 0.11321,
      "rouge_3_f_score_cb": 0.11321,
      "rouge_3_f_score_ce": 0.11321,
      "rouge_4_recall": 0.0625,
      "rouge_4_recall_cb": 0.0625,
      "rouge_4_recall_ce": 0.0625,
      "rouge_4_precision": 0.10526,
      "rouge_4_precision_cb": 0.10526,
      "rouge_4_precision_ce": 0.10526,
      "rouge_4_f_score": 0.07843,
      "rouge_4_f_score_cb": 0.07843,
      "rouge_4_f_score_ce": 0.07843,
      "rouge_l_recall": 0.31429,
      "rouge_l_recall_cb": 0.31429,
      "rouge_l_recall_ce": 0.31429,
      "rouge_l_precision": 0.5,
      "rouge_l_precision_cb": 0.5,
      "rouge_l_precision_ce": 0.5,
      "rouge_l_f_score": 0.38597,
      "rouge_l_f_score_cb": 0.38597,
      "rouge_l_f_score_ce": 0.38597,
      "rouge_w_1.2_recall": 0.12604,
      "rouge_w_1.2_recall_cb": 0.12604,
      "rouge_w_1.2_recall_ce": 0.12604,
      "rouge_w_1.2_precision": 0.40828,
      "rouge_w_1.2_precision_cb": 0.40828,
      "rouge_w_1.2_precision_ce": 0.40828,
      "rouge_w_1.2_f_score": 0.19262,
      "rouge_w_1.2_f_score_cb": 0.19262,
      "rouge_w_1.2_f_score_ce": 0.19262,
      "rouge_s*_recall": 0.09748,
      "rouge_s*_recall_cb": 0.09748,
      "rouge_s*_recall_ce": 0.09748,
      "rouge_s*_precision": 0.25108,
      "rouge_s*_precision_cb": 0.25108,
      "rouge_s*_precision_ce": 0.25108,
      "rouge_s*_f_score": 0.14044,
      "rouge_s*_f_score_cb": 0.14044,
      "rouge_s*_f_score_ce": 0.14044,
      "rouge_su*_recall": 0.1097,
      "rouge_su*_recall_cb": 0.1097,
      "rouge_su*_recall_ce": 0.1097,
      "rouge_su*_precision": 0.27381,
      "rouge_su*_precision_cb": 0.27381,
      "rouge_su*_precision_ce": 0.27381,
      "rouge_su*_f_score": 0.15664,
      "rouge_su*_f_score_cb": 0.15664,
      "rouge_su*_f_score_ce": 0.15664
    }
  },
  {
    "id": 5,
    "filename": "PandasEval_5.txt",
    "dataset_comment": "Convert all column headers in the pandas DataFrame to lowercase. Return the modified DataFrame.",
    "generated_comment": "Convert all column names of the DataFrame to lowercase.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5,
      "rouge_1_recall_cb": 0.5,
      "rouge_1_recall_ce": 0.5,
      "rouge_1_precision": 0.77778,
      "rouge_1_precision_cb": 0.77778,
      "rouge_1_precision_ce": 0.77778,
      "rouge_1_f_score": 0.6087,
      "rouge_1_f_score_cb": 0.6087,
      "rouge_1_f_score_ce": 0.6087,
      "rouge_2_recall": 0.30769,
      "rouge_2_recall_cb": 0.30769,
      "rouge_2_recall_ce": 0.30769,
      "rouge_2_precision": 0.5,
      "rouge_2_precision_cb": 0.5,
      "rouge_2_precision_ce": 0.5,
      "rouge_2_f_score": 0.38095,
      "rouge_2_f_score_cb": 0.38095,
      "rouge_2_f_score_ce": 0.38095,
      "rouge_3_recall": 0.16667,
      "rouge_3_recall_cb": 0.16667,
      "rouge_3_recall_ce": 0.16667,
      "rouge_3_precision": 0.28571,
      "rouge_3_precision_cb": 0.28571,
      "rouge_3_precision_ce": 0.28571,
      "rouge_3_f_score": 0.21053,
      "rouge_3_f_score_cb": 0.21053,
      "rouge_3_f_score_ce": 0.21053,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.77778,
      "rouge_l_precision_cb": 0.77778,
      "rouge_l_precision_ce": 0.77778,
      "rouge_l_f_score": 0.6087,
      "rouge_l_f_score_cb": 0.6087,
      "rouge_l_f_score_ce": 0.6087,
      "rouge_w_1.2_recall": 0.25007,
      "rouge_w_1.2_recall_cb": 0.25007,
      "rouge_w_1.2_recall_ce": 0.25007,
      "rouge_w_1.2_precision": 0.65945,
      "rouge_w_1.2_precision_cb": 0.65945,
      "rouge_w_1.2_precision_ce": 0.65945,
      "rouge_w_1.2_f_score": 0.36263,
      "rouge_w_1.2_f_score_cb": 0.36263,
      "rouge_w_1.2_f_score_ce": 0.36263,
      "rouge_s*_recall": 0.23077,
      "rouge_s*_recall_cb": 0.23077,
      "rouge_s*_recall_ce": 0.23077,
      "rouge_s*_precision": 0.58333,
      "rouge_s*_precision_cb": 0.58333,
      "rouge_s*_precision_ce": 0.58333,
      "rouge_s*_f_score": 0.33071,
      "rouge_s*_f_score_cb": 0.33071,
      "rouge_s*_f_score_ce": 0.33071,
      "rouge_su*_recall": 0.25962,
      "rouge_su*_recall_cb": 0.25962,
      "rouge_su*_recall_ce": 0.25962,
      "rouge_su*_precision": 0.61364,
      "rouge_su*_precision_cb": 0.61364,
      "rouge_su*_precision_ce": 0.61364,
      "rouge_su*_f_score": 0.36487,
      "rouge_su*_f_score_cb": 0.36487,
      "rouge_su*_f_score_ce": 0.36487
    }
  },
  {
    "id": 6,
    "filename": "PandasEval_6.txt",
    "dataset_comment": "Change the dtype of multiple columns in the dataframe. The dataframe contains columns with different dtypes: some columns are float64, while others are int64. Convert all columns with dtype float64 to float32.",
    "generated_comment": "Select columns with float64 dtype and convert them to float32 dtype.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.25,
      "rouge_1_recall_cb": 0.25,
      "rouge_1_recall_ce": 0.25,
      "rouge_1_precision": 0.72727,
      "rouge_1_precision_cb": 0.72727,
      "rouge_1_precision_ce": 0.72727,
      "rouge_1_f_score": 0.37209,
      "rouge_1_f_score_cb": 0.37209,
      "rouge_1_f_score_ce": 0.37209,
      "rouge_2_recall": 0.06452,
      "rouge_2_recall_cb": 0.06452,
      "rouge_2_recall_ce": 0.06452,
      "rouge_2_precision": 0.2,
      "rouge_2_precision_cb": 0.2,
      "rouge_2_precision_ce": 0.2,
      "rouge_2_f_score": 0.09757,
      "rouge_2_f_score_cb": 0.09757,
      "rouge_2_f_score_ce": 0.09757,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.1875,
      "rouge_l_recall_cb": 0.1875,
      "rouge_l_recall_ce": 0.1875,
      "rouge_l_precision": 0.54545,
      "rouge_l_precision_cb": 0.54545,
      "rouge_l_precision_ce": 0.54545,
      "rouge_l_f_score": 0.27907,
      "rouge_l_f_score_cb": 0.27907,
      "rouge_l_f_score_ce": 0.27907,
      "rouge_w_1.2_recall": 0.07525,
      "rouge_w_1.2_recall_cb": 0.07525,
      "rouge_w_1.2_recall_ce": 0.07525,
      "rouge_w_1.2_precision": 0.4378,
      "rouge_w_1.2_precision_cb": 0.4378,
      "rouge_w_1.2_precision_ce": 0.4378,
      "rouge_w_1.2_f_score": 0.12843,
      "rouge_w_1.2_f_score_cb": 0.12843,
      "rouge_w_1.2_f_score_ce": 0.12843,
      "rouge_s*_recall": 0.0504,
      "rouge_s*_recall_cb": 0.0504,
      "rouge_s*_recall_ce": 0.0504,
      "rouge_s*_precision": 0.45455,
      "rouge_s*_precision_cb": 0.45455,
      "rouge_s*_precision_ce": 0.45455,
      "rouge_s*_f_score": 0.09074,
      "rouge_s*_f_score_cb": 0.09074,
      "rouge_s*_f_score_ce": 0.09074,
      "rouge_su*_recall": 0.05882,
      "rouge_su*_recall_cb": 0.05882,
      "rouge_su*_recall_ce": 0.05882,
      "rouge_su*_precision": 0.47692,
      "rouge_su*_precision_cb": 0.47692,
      "rouge_su*_precision_ce": 0.47692,
      "rouge_su*_f_score": 0.10472,
      "rouge_su*_f_score_cb": 0.10472,
      "rouge_su*_f_score_ce": 0.10472
    }
  },
  {
    "id": 7,
    "filename": "PandasEval_7.txt",
    "dataset_comment": "Convert the 'date' column to datetime type.Skip rows with strings that cannot be converted to datetime by using errors='coerce'.",
    "generated_comment": "Convert the 'date' column to datetime format, coercing any invalid parsing to NaT (Not a Time).",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.38095,
      "rouge_1_recall_cb": 0.38095,
      "rouge_1_recall_ce": 0.38095,
      "rouge_1_precision": 0.5,
      "rouge_1_precision_cb": 0.5,
      "rouge_1_precision_ce": 0.5,
      "rouge_1_f_score": 0.43243,
      "rouge_1_f_score_cb": 0.43243,
      "rouge_1_f_score_ce": 0.43243,
      "rouge_2_recall": 0.25,
      "rouge_2_recall_cb": 0.25,
      "rouge_2_recall_ce": 0.25,
      "rouge_2_precision": 0.33333,
      "rouge_2_precision_cb": 0.33333,
      "rouge_2_precision_ce": 0.33333,
      "rouge_2_f_score": 0.28571,
      "rouge_2_f_score_cb": 0.28571,
      "rouge_2_f_score_ce": 0.28571,
      "rouge_3_recall": 0.21053,
      "rouge_3_recall_cb": 0.21053,
      "rouge_3_recall_ce": 0.21053,
      "rouge_3_precision": 0.28571,
      "rouge_3_precision_cb": 0.28571,
      "rouge_3_precision_ce": 0.28571,
      "rouge_3_f_score": 0.24243,
      "rouge_3_f_score_cb": 0.24243,
      "rouge_3_f_score_ce": 0.24243,
      "rouge_4_recall": 0.16667,
      "rouge_4_recall_cb": 0.16667,
      "rouge_4_recall_ce": 0.16667,
      "rouge_4_precision": 0.23077,
      "rouge_4_precision_cb": 0.23077,
      "rouge_4_precision_ce": 0.23077,
      "rouge_4_f_score": 0.19355,
      "rouge_4_f_score_cb": 0.19355,
      "rouge_4_f_score_ce": 0.19355,
      "rouge_l_recall": 0.33333,
      "rouge_l_recall_cb": 0.33333,
      "rouge_l_recall_ce": 0.33333,
      "rouge_l_precision": 0.4375,
      "rouge_l_precision_cb": 0.4375,
      "rouge_l_precision_ce": 0.4375,
      "rouge_l_f_score": 0.37838,
      "rouge_l_f_score_cb": 0.37838,
      "rouge_l_f_score_ce": 0.37838,
      "rouge_w_1.2_recall": 0.17036,
      "rouge_w_1.2_recall_cb": 0.17036,
      "rouge_w_1.2_recall_ce": 0.17036,
      "rouge_w_1.2_precision": 0.41106,
      "rouge_w_1.2_precision_cb": 0.41106,
      "rouge_w_1.2_precision_ce": 0.41106,
      "rouge_w_1.2_f_score": 0.24089,
      "rouge_w_1.2_f_score_cb": 0.24089,
      "rouge_w_1.2_f_score_ce": 0.24089,
      "rouge_s*_recall": 0.12857,
      "rouge_s*_recall_cb": 0.12857,
      "rouge_s*_recall_ce": 0.12857,
      "rouge_s*_precision": 0.225,
      "rouge_s*_precision_cb": 0.225,
      "rouge_s*_precision_ce": 0.225,
      "rouge_s*_f_score": 0.16364,
      "rouge_s*_f_score_cb": 0.16364,
      "rouge_s*_f_score_ce": 0.16364,
      "rouge_su*_recall": 0.14783,
      "rouge_su*_recall_cb": 0.14783,
      "rouge_su*_recall_ce": 0.14783,
      "rouge_su*_precision": 0.25185,
      "rouge_su*_precision_cb": 0.25185,
      "rouge_su*_precision_ce": 0.25185,
      "rouge_su*_f_score": 0.1863,
      "rouge_su*_f_score_cb": 0.1863,
      "rouge_su*_f_score_ce": 0.1863
    }
  },
  {
    "id": 8,
    "filename": "PandasEval_8.txt",
    "dataset_comment": "Filter the DataFrame to include only rows where the second column has the specific value 'Jimmy'.",
    "generated_comment": "Filter the DataFrame to include only rows where the value in the second column ('col2') is 'Jimmy'.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.875,
      "rouge_1_recall_cb": 0.875,
      "rouge_1_recall_ce": 0.875,
      "rouge_1_precision": 0.82353,
      "rouge_1_precision_cb": 0.82353,
      "rouge_1_precision_ce": 0.82353,
      "rouge_1_f_score": 0.84849,
      "rouge_1_f_score_cb": 0.84849,
      "rouge_1_f_score_ce": 0.84849,
      "rouge_2_recall": 0.66667,
      "rouge_2_recall_cb": 0.66667,
      "rouge_2_recall_ce": 0.66667,
      "rouge_2_precision": 0.625,
      "rouge_2_precision_cb": 0.625,
      "rouge_2_precision_ce": 0.625,
      "rouge_2_f_score": 0.64516,
      "rouge_2_f_score_cb": 0.64516,
      "rouge_2_f_score_ce": 0.64516,
      "rouge_3_recall": 0.57143,
      "rouge_3_recall_cb": 0.57143,
      "rouge_3_recall_ce": 0.57143,
      "rouge_3_precision": 0.53333,
      "rouge_3_precision_cb": 0.53333,
      "rouge_3_precision_ce": 0.53333,
      "rouge_3_f_score": 0.55172,
      "rouge_3_f_score_cb": 0.55172,
      "rouge_3_f_score_ce": 0.55172,
      "rouge_4_recall": 0.46154,
      "rouge_4_recall_cb": 0.46154,
      "rouge_4_recall_ce": 0.46154,
      "rouge_4_precision": 0.42857,
      "rouge_4_precision_cb": 0.42857,
      "rouge_4_precision_ce": 0.42857,
      "rouge_4_f_score": 0.44444,
      "rouge_4_f_score_cb": 0.44444,
      "rouge_4_f_score_ce": 0.44444,
      "rouge_l_recall": 0.75,
      "rouge_l_recall_cb": 0.75,
      "rouge_l_recall_ce": 0.75,
      "rouge_l_precision": 0.70588,
      "rouge_l_precision_cb": 0.70588,
      "rouge_l_precision_ce": 0.70588,
      "rouge_l_f_score": 0.72727,
      "rouge_l_f_score_cb": 0.72727,
      "rouge_l_f_score_ce": 0.72727,
      "rouge_w_1.2_recall": 0.4133,
      "rouge_w_1.2_recall_cb": 0.4133,
      "rouge_w_1.2_recall_ce": 0.4133,
      "rouge_w_1.2_precision": 0.67726,
      "rouge_w_1.2_precision_cb": 0.67726,
      "rouge_w_1.2_precision_ce": 0.67726,
      "rouge_w_1.2_f_score": 0.51334,
      "rouge_w_1.2_f_score_cb": 0.51334,
      "rouge_w_1.2_f_score_ce": 0.51334,
      "rouge_s*_recall": 0.71667,
      "rouge_s*_recall_cb": 0.71667,
      "rouge_s*_recall_ce": 0.71667,
      "rouge_s*_precision": 0.63235,
      "rouge_s*_precision_cb": 0.63235,
      "rouge_s*_precision_ce": 0.63235,
      "rouge_s*_f_score": 0.67187,
      "rouge_s*_f_score_cb": 0.67187,
      "rouge_s*_f_score_ce": 0.67187,
      "rouge_su*_recall": 0.73333,
      "rouge_su*_recall_cb": 0.73333,
      "rouge_su*_recall_ce": 0.73333,
      "rouge_su*_precision": 0.65132,
      "rouge_su*_precision_cb": 0.65132,
      "rouge_su*_precision_ce": 0.65132,
      "rouge_su*_f_score": 0.6899,
      "rouge_su*_f_score_cb": 0.6899,
      "rouge_su*_f_score_ce": 0.6899
    }
  },
  {
    "id": 9,
    "filename": "PandasEval_9.txt",
    "dataset_comment": "Extract the first and last rows of a DataFrame in Pandas and return the resulting DataFrame",
    "generated_comment": "Extract the first and last rows of the DataFrame using iloc.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5625,
      "rouge_1_recall_cb": 0.5625,
      "rouge_1_recall_ce": 0.5625,
      "rouge_1_precision": 0.81818,
      "rouge_1_precision_cb": 0.81818,
      "rouge_1_precision_ce": 0.81818,
      "rouge_1_f_score": 0.66667,
      "rouge_1_f_score_cb": 0.66667,
      "rouge_1_f_score_ce": 0.66667,
      "rouge_2_recall": 0.4,
      "rouge_2_recall_cb": 0.4,
      "rouge_2_recall_ce": 0.4,
      "rouge_2_precision": 0.6,
      "rouge_2_precision_cb": 0.6,
      "rouge_2_precision_ce": 0.6,
      "rouge_2_f_score": 0.48,
      "rouge_2_f_score_cb": 0.48,
      "rouge_2_f_score_ce": 0.48,
      "rouge_3_recall": 0.35714,
      "rouge_3_recall_cb": 0.35714,
      "rouge_3_recall_ce": 0.35714,
      "rouge_3_precision": 0.55556,
      "rouge_3_precision_cb": 0.55556,
      "rouge_3_precision_ce": 0.55556,
      "rouge_3_f_score": 0.43478,
      "rouge_3_f_score_cb": 0.43478,
      "rouge_3_f_score_ce": 0.43478,
      "rouge_4_recall": 0.30769,
      "rouge_4_recall_cb": 0.30769,
      "rouge_4_recall_ce": 0.30769,
      "rouge_4_precision": 0.5,
      "rouge_4_precision_cb": 0.5,
      "rouge_4_precision_ce": 0.5,
      "rouge_4_f_score": 0.38095,
      "rouge_4_f_score_cb": 0.38095,
      "rouge_4_f_score_ce": 0.38095,
      "rouge_l_recall": 0.5625,
      "rouge_l_recall_cb": 0.5625,
      "rouge_l_recall_ce": 0.5625,
      "rouge_l_precision": 0.81818,
      "rouge_l_precision_cb": 0.81818,
      "rouge_l_precision_ce": 0.81818,
      "rouge_l_f_score": 0.66667,
      "rouge_l_f_score_cb": 0.66667,
      "rouge_l_f_score_ce": 0.66667,
      "rouge_w_1.2_recall": 0.29121,
      "rouge_w_1.2_recall_cb": 0.29121,
      "rouge_w_1.2_recall_ce": 0.29121,
      "rouge_w_1.2_precision": 0.73749,
      "rouge_w_1.2_precision_cb": 0.73749,
      "rouge_w_1.2_precision_ce": 0.73749,
      "rouge_w_1.2_f_score": 0.41755,
      "rouge_w_1.2_f_score_cb": 0.41755,
      "rouge_w_1.2_f_score_ce": 0.41755,
      "rouge_s*_recall": 0.3,
      "rouge_s*_recall_cb": 0.3,
      "rouge_s*_recall_ce": 0.3,
      "rouge_s*_precision": 0.65455,
      "rouge_s*_precision_cb": 0.65455,
      "rouge_s*_precision_ce": 0.65455,
      "rouge_s*_f_score": 0.41143,
      "rouge_s*_f_score_cb": 0.41143,
      "rouge_s*_f_score_ce": 0.41143,
      "rouge_su*_recall": 0.33333,
      "rouge_su*_recall_cb": 0.33333,
      "rouge_su*_recall_ce": 0.33333,
      "rouge_su*_precision": 0.69231,
      "rouge_su*_precision_cb": 0.69231,
      "rouge_su*_precision_ce": 0.69231,
      "rouge_su*_f_score": 0.45,
      "rouge_su*_f_score_cb": 0.45,
      "rouge_su*_f_score_ce": 0.45
    }
  },
  {
    "id": 10,
    "filename": "PandasEval_10.txt",
    "dataset_comment": "Extract the first and last rows of a DataFrame in Pandas and return the resulting DataFrame",
    "generated_comment": "Group the DataFrame by the 'Mt' column and apply a lambda function to select rows where 'num' is equal to the maximum 'num' within each group.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.375,
      "rouge_1_recall_cb": 0.375,
      "rouge_1_recall_ce": 0.375,
      "rouge_1_precision": 0.23077,
      "rouge_1_precision_cb": 0.23077,
      "rouge_1_precision_ce": 0.23077,
      "rouge_1_f_score": 0.28571,
      "rouge_1_f_score_cb": 0.28571,
      "rouge_1_f_score_ce": 0.28571,
      "rouge_2_recall": 0.0,
      "rouge_2_recall_cb": 0.0,
      "rouge_2_recall_ce": 0.0,
      "rouge_2_precision": 0.0,
      "rouge_2_precision_cb": 0.0,
      "rouge_2_precision_ce": 0.0,
      "rouge_2_f_score": 0.0,
      "rouge_2_f_score_cb": 0.0,
      "rouge_2_f_score_ce": 0.0,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.25,
      "rouge_l_recall_cb": 0.25,
      "rouge_l_recall_ce": 0.25,
      "rouge_l_precision": 0.15385,
      "rouge_l_precision_cb": 0.15385,
      "rouge_l_precision_ce": 0.15385,
      "rouge_l_f_score": 0.19048,
      "rouge_l_f_score_cb": 0.19048,
      "rouge_l_f_score_ce": 0.19048,
      "rouge_w_1.2_recall": 0.11397,
      "rouge_w_1.2_recall_cb": 0.11397,
      "rouge_w_1.2_recall_ce": 0.11397,
      "rouge_w_1.2_precision": 0.12211,
      "rouge_w_1.2_precision_cb": 0.12211,
      "rouge_w_1.2_precision_ce": 0.12211,
      "rouge_w_1.2_f_score": 0.1179,
      "rouge_w_1.2_f_score_cb": 0.1179,
      "rouge_w_1.2_f_score_ce": 0.1179,
      "rouge_s*_recall": 0.10833,
      "rouge_s*_recall_cb": 0.10833,
      "rouge_s*_recall_ce": 0.10833,
      "rouge_s*_precision": 0.04,
      "rouge_s*_precision_cb": 0.04,
      "rouge_s*_precision_ce": 0.04,
      "rouge_s*_f_score": 0.05843,
      "rouge_s*_f_score_cb": 0.05843,
      "rouge_s*_f_score_ce": 0.05843,
      "rouge_su*_recall": 0.14074,
      "rouge_su*_recall_cb": 0.14074,
      "rouge_su*_recall_ce": 0.14074,
      "rouge_su*_precision": 0.05429,
      "rouge_su*_precision_cb": 0.05429,
      "rouge_su*_precision_ce": 0.05429,
      "rouge_su*_f_score": 0.07835,
      "rouge_su*_f_score_cb": 0.07835,
      "rouge_su*_f_score_ce": 0.07835
    }
  },
  {
    "id": 11,
    "filename": "PandasEval_11.txt",
    "dataset_comment": "Select rows from a DataFrame df where the column value named col_name is in the iterable values and return these rows.",
    "generated_comment": "Select rows from the DataFrame where the specified column contains any of the given values.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.40909,
      "rouge_1_recall_cb": 0.40909,
      "rouge_1_recall_ce": 0.40909,
      "rouge_1_precision": 0.6,
      "rouge_1_precision_cb": 0.6,
      "rouge_1_precision_ce": 0.6,
      "rouge_1_f_score": 0.48649,
      "rouge_1_f_score_cb": 0.48649,
      "rouge_1_f_score_ce": 0.48649,
      "rouge_2_recall": 0.14286,
      "rouge_2_recall_cb": 0.14286,
      "rouge_2_recall_ce": 0.14286,
      "rouge_2_precision": 0.21429,
      "rouge_2_precision_cb": 0.21429,
      "rouge_2_precision_ce": 0.21429,
      "rouge_2_f_score": 0.17143,
      "rouge_2_f_score_cb": 0.17143,
      "rouge_2_f_score_ce": 0.17143,
      "rouge_3_recall": 0.05,
      "rouge_3_recall_cb": 0.05,
      "rouge_3_recall_ce": 0.05,
      "rouge_3_precision": 0.07692,
      "rouge_3_precision_cb": 0.07692,
      "rouge_3_precision_ce": 0.07692,
      "rouge_3_f_score": 0.06061,
      "rouge_3_f_score_cb": 0.06061,
      "rouge_3_f_score_ce": 0.06061,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.40909,
      "rouge_l_recall_cb": 0.40909,
      "rouge_l_recall_ce": 0.40909,
      "rouge_l_precision": 0.6,
      "rouge_l_precision_cb": 0.6,
      "rouge_l_precision_ce": 0.6,
      "rouge_l_f_score": 0.48649,
      "rouge_l_f_score_cb": 0.48649,
      "rouge_l_f_score_ce": 0.48649,
      "rouge_w_1.2_recall": 0.17346,
      "rouge_w_1.2_recall_cb": 0.17346,
      "rouge_w_1.2_recall_ce": 0.17346,
      "rouge_w_1.2_precision": 0.47208,
      "rouge_w_1.2_precision_cb": 0.47208,
      "rouge_w_1.2_precision_ce": 0.47208,
      "rouge_w_1.2_f_score": 0.2537,
      "rouge_w_1.2_f_score_cb": 0.2537,
      "rouge_w_1.2_f_score_ce": 0.2537,
      "rouge_s*_recall": 0.16017,
      "rouge_s*_recall_cb": 0.16017,
      "rouge_s*_recall_ce": 0.16017,
      "rouge_s*_precision": 0.35238,
      "rouge_s*_precision_cb": 0.35238,
      "rouge_s*_precision_ce": 0.35238,
      "rouge_s*_f_score": 0.22023,
      "rouge_s*_f_score_cb": 0.22023,
      "rouge_s*_f_score_ce": 0.22023,
      "rouge_su*_recall": 0.17857,
      "rouge_su*_recall_cb": 0.17857,
      "rouge_su*_recall_ce": 0.17857,
      "rouge_su*_precision": 0.37815,
      "rouge_su*_precision_cb": 0.37815,
      "rouge_su*_precision_ce": 0.37815,
      "rouge_su*_f_score": 0.24259,
      "rouge_su*_f_score_cb": 0.24259,
      "rouge_su*_f_score_ce": 0.24259
    }
  },
  {
    "id": 12,
    "filename": "PandasEval_12.txt",
    "dataset_comment": "Return the number of rows in the DataFrame df",
    "generated_comment": "Calculate the number of rows in the DataFrame efficiently using the index length.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.77778,
      "rouge_1_recall_cb": 0.77778,
      "rouge_1_recall_ce": 0.77778,
      "rouge_1_precision": 0.53846,
      "rouge_1_precision_cb": 0.53846,
      "rouge_1_precision_ce": 0.53846,
      "rouge_1_f_score": 0.63636,
      "rouge_1_f_score_cb": 0.63636,
      "rouge_1_f_score_ce": 0.63636,
      "rouge_2_recall": 0.75,
      "rouge_2_recall_cb": 0.75,
      "rouge_2_recall_ce": 0.75,
      "rouge_2_precision": 0.5,
      "rouge_2_precision_cb": 0.5,
      "rouge_2_precision_ce": 0.5,
      "rouge_2_f_score": 0.6,
      "rouge_2_f_score_cb": 0.6,
      "rouge_2_f_score_ce": 0.6,
      "rouge_3_recall": 0.71429,
      "rouge_3_recall_cb": 0.71429,
      "rouge_3_recall_ce": 0.71429,
      "rouge_3_precision": 0.45455,
      "rouge_3_precision_cb": 0.45455,
      "rouge_3_precision_ce": 0.45455,
      "rouge_3_f_score": 0.55556,
      "rouge_3_f_score_cb": 0.55556,
      "rouge_3_f_score_ce": 0.55556,
      "rouge_4_recall": 0.66667,
      "rouge_4_recall_cb": 0.66667,
      "rouge_4_recall_ce": 0.66667,
      "rouge_4_precision": 0.4,
      "rouge_4_precision_cb": 0.4,
      "rouge_4_precision_ce": 0.4,
      "rouge_4_f_score": 0.5,
      "rouge_4_f_score_cb": 0.5,
      "rouge_4_f_score_ce": 0.5,
      "rouge_l_recall": 0.77778,
      "rouge_l_recall_cb": 0.77778,
      "rouge_l_recall_ce": 0.77778,
      "rouge_l_precision": 0.53846,
      "rouge_l_precision_cb": 0.53846,
      "rouge_l_precision_ce": 0.53846,
      "rouge_l_f_score": 0.63636,
      "rouge_l_f_score_cb": 0.63636,
      "rouge_l_f_score_ce": 0.63636,
      "rouge_w_1.2_recall": 0.5012,
      "rouge_w_1.2_recall_cb": 0.5012,
      "rouge_w_1.2_recall_ce": 0.5012,
      "rouge_w_1.2_precision": 0.53846,
      "rouge_w_1.2_precision_cb": 0.53846,
      "rouge_w_1.2_precision_ce": 0.53846,
      "rouge_w_1.2_f_score": 0.51916,
      "rouge_w_1.2_f_score_cb": 0.51916,
      "rouge_w_1.2_f_score_ce": 0.51916,
      "rouge_s*_recall": 0.58333,
      "rouge_s*_recall_cb": 0.58333,
      "rouge_s*_recall_ce": 0.58333,
      "rouge_s*_precision": 0.26923,
      "rouge_s*_precision_cb": 0.26923,
      "rouge_s*_precision_ce": 0.26923,
      "rouge_s*_f_score": 0.36842,
      "rouge_s*_f_score_cb": 0.36842,
      "rouge_s*_f_score_ce": 0.36842,
      "rouge_su*_recall": 0.63636,
      "rouge_su*_recall_cb": 0.63636,
      "rouge_su*_recall_ce": 0.63636,
      "rouge_su*_precision": 0.31111,
      "rouge_su*_precision_cb": 0.31111,
      "rouge_su*_precision_ce": 0.31111,
      "rouge_su*_f_score": 0.41791,
      "rouge_su*_f_score_cb": 0.41791,
      "rouge_su*_f_score_ce": 0.41791
    }
  },
  {
    "id": 13,
    "filename": "PandasEval_13.txt",
    "dataset_comment": "Create an empty DataFrame in Pandas with only column names and return it.",
    "generated_comment": "Create an empty DataFrame with specified column names.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.53846,
      "rouge_1_recall_cb": 0.53846,
      "rouge_1_recall_ce": 0.53846,
      "rouge_1_precision": 0.875,
      "rouge_1_precision_cb": 0.875,
      "rouge_1_precision_ce": 0.875,
      "rouge_1_f_score": 0.66667,
      "rouge_1_f_score_cb": 0.66667,
      "rouge_1_f_score_ce": 0.66667,
      "rouge_2_recall": 0.33333,
      "rouge_2_recall_cb": 0.33333,
      "rouge_2_recall_ce": 0.33333,
      "rouge_2_precision": 0.57143,
      "rouge_2_precision_cb": 0.57143,
      "rouge_2_precision_ce": 0.57143,
      "rouge_2_f_score": 0.42105,
      "rouge_2_f_score_cb": 0.42105,
      "rouge_2_f_score_ce": 0.42105,
      "rouge_3_recall": 0.18182,
      "rouge_3_recall_cb": 0.18182,
      "rouge_3_recall_ce": 0.18182,
      "rouge_3_precision": 0.33333,
      "rouge_3_precision_cb": 0.33333,
      "rouge_3_precision_ce": 0.33333,
      "rouge_3_f_score": 0.23529,
      "rouge_3_f_score_cb": 0.23529,
      "rouge_3_f_score_ce": 0.23529,
      "rouge_4_recall": 0.1,
      "rouge_4_recall_cb": 0.1,
      "rouge_4_recall_ce": 0.1,
      "rouge_4_precision": 0.2,
      "rouge_4_precision_cb": 0.2,
      "rouge_4_precision_ce": 0.2,
      "rouge_4_f_score": 0.13333,
      "rouge_4_f_score_cb": 0.13333,
      "rouge_4_f_score_ce": 0.13333,
      "rouge_l_recall": 0.53846,
      "rouge_l_recall_cb": 0.53846,
      "rouge_l_recall_ce": 0.53846,
      "rouge_l_precision": 0.875,
      "rouge_l_precision_cb": 0.875,
      "rouge_l_precision_ce": 0.875,
      "rouge_l_f_score": 0.66667,
      "rouge_l_f_score_cb": 0.66667,
      "rouge_l_f_score_ce": 0.66667,
      "rouge_w_1.2_recall": 0.27605,
      "rouge_w_1.2_recall_cb": 0.27605,
      "rouge_w_1.2_recall_ce": 0.27605,
      "rouge_w_1.2_precision": 0.74924,
      "rouge_w_1.2_precision_cb": 0.74924,
      "rouge_w_1.2_precision_ce": 0.74924,
      "rouge_w_1.2_f_score": 0.40345,
      "rouge_w_1.2_f_score_cb": 0.40345,
      "rouge_w_1.2_f_score_ce": 0.40345,
      "rouge_s*_recall": 0.26923,
      "rouge_s*_recall_cb": 0.26923,
      "rouge_s*_recall_ce": 0.26923,
      "rouge_s*_precision": 0.75,
      "rouge_s*_precision_cb": 0.75,
      "rouge_s*_precision_ce": 0.75,
      "rouge_s*_f_score": 0.39623,
      "rouge_s*_f_score_cb": 0.39623,
      "rouge_s*_f_score_ce": 0.39623,
      "rouge_su*_recall": 0.3,
      "rouge_su*_recall_cb": 0.3,
      "rouge_su*_recall_ce": 0.3,
      "rouge_su*_precision": 0.77143,
      "rouge_su*_precision_cb": 0.77143,
      "rouge_su*_precision_ce": 0.77143,
      "rouge_su*_f_score": 0.432,
      "rouge_su*_f_score_cb": 0.432,
      "rouge_su*_f_score_ce": 0.432
    }
  },
  {
    "id": 14,
    "filename": "PandasEval_14.txt",
    "dataset_comment": "Calculate the difference between rows within each group using pandas, where row ordering is important. Use pandas.groupby() to group the data and apply a custom function to compute the difference between rows. Use the .iat method for selecting values by position. Return the resulting DataFrame.",
    "generated_comment": "Calculate the difference between specific rows within each group and concatenate corresponding IDs.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.19565,
      "rouge_1_recall_cb": 0.19565,
      "rouge_1_recall_ce": 0.19565,
      "rouge_1_precision": 0.69231,
      "rouge_1_precision_cb": 0.69231,
      "rouge_1_precision_ce": 0.69231,
      "rouge_1_f_score": 0.30508,
      "rouge_1_f_score_cb": 0.30508,
      "rouge_1_f_score_ce": 0.30508,
      "rouge_2_recall": 0.13333,
      "rouge_2_recall_cb": 0.13333,
      "rouge_2_recall_ce": 0.13333,
      "rouge_2_precision": 0.5,
      "rouge_2_precision_cb": 0.5,
      "rouge_2_precision_ce": 0.5,
      "rouge_2_f_score": 0.21052,
      "rouge_2_f_score_cb": 0.21052,
      "rouge_2_f_score_ce": 0.21052,
      "rouge_3_recall": 0.09091,
      "rouge_3_recall_cb": 0.09091,
      "rouge_3_recall_ce": 0.09091,
      "rouge_3_precision": 0.36364,
      "rouge_3_precision_cb": 0.36364,
      "rouge_3_precision_ce": 0.36364,
      "rouge_3_f_score": 0.14546,
      "rouge_3_f_score_cb": 0.14546,
      "rouge_3_f_score_ce": 0.14546,
      "rouge_4_recall": 0.04651,
      "rouge_4_recall_cb": 0.04651,
      "rouge_4_recall_ce": 0.04651,
      "rouge_4_precision": 0.2,
      "rouge_4_precision_cb": 0.2,
      "rouge_4_precision_ce": 0.2,
      "rouge_4_f_score": 0.07547,
      "rouge_4_f_score_cb": 0.07547,
      "rouge_4_f_score_ce": 0.07547,
      "rouge_l_recall": 0.19565,
      "rouge_l_recall_cb": 0.19565,
      "rouge_l_recall_ce": 0.19565,
      "rouge_l_precision": 0.69231,
      "rouge_l_precision_cb": 0.69231,
      "rouge_l_precision_ce": 0.69231,
      "rouge_l_f_score": 0.30508,
      "rouge_l_f_score_cb": 0.30508,
      "rouge_l_f_score_ce": 0.30508,
      "rouge_w_1.2_recall": 0.082,
      "rouge_w_1.2_recall_cb": 0.082,
      "rouge_w_1.2_recall_ce": 0.082,
      "rouge_w_1.2_precision": 0.62403,
      "rouge_w_1.2_precision_cb": 0.62403,
      "rouge_w_1.2_precision_ce": 0.62403,
      "rouge_w_1.2_f_score": 0.14495,
      "rouge_w_1.2_f_score_cb": 0.14495,
      "rouge_w_1.2_f_score_ce": 0.14495,
      "rouge_s*_recall": 0.03478,
      "rouge_s*_recall_cb": 0.03478,
      "rouge_s*_recall_ce": 0.03478,
      "rouge_s*_precision": 0.46154,
      "rouge_s*_precision_cb": 0.46154,
      "rouge_s*_precision_ce": 0.46154,
      "rouge_s*_f_score": 0.06469,
      "rouge_s*_f_score_cb": 0.06469,
      "rouge_s*_f_score_ce": 0.06469,
      "rouge_su*_recall": 0.04167,
      "rouge_su*_recall_cb": 0.04167,
      "rouge_su*_recall_ce": 0.04167,
      "rouge_su*_precision": 0.5,
      "rouge_su*_precision_cb": 0.5,
      "rouge_su*_precision_ce": 0.5,
      "rouge_su*_f_score": 0.07693,
      "rouge_su*_f_score_cb": 0.07693,
      "rouge_su*_f_score_ce": 0.07693
    }
  },
  {
    "id": 15,
    "filename": "PandasEval_15.txt",
    "dataset_comment": "Check if any value is NaN in a Pandas DataFrame and return the result.",
    "generated_comment": "Check if any value in the DataFrame is NaN using the isnull() method and the any() function.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.71429,
      "rouge_1_recall_cb": 0.71429,
      "rouge_1_recall_ce": 0.71429,
      "rouge_1_precision": 0.58824,
      "rouge_1_precision_cb": 0.58824,
      "rouge_1_precision_ce": 0.58824,
      "rouge_1_f_score": 0.64517,
      "rouge_1_f_score_cb": 0.64517,
      "rouge_1_f_score_ce": 0.64517,
      "rouge_2_recall": 0.30769,
      "rouge_2_recall_cb": 0.30769,
      "rouge_2_recall_ce": 0.30769,
      "rouge_2_precision": 0.25,
      "rouge_2_precision_cb": 0.25,
      "rouge_2_precision_ce": 0.25,
      "rouge_2_f_score": 0.27586,
      "rouge_2_f_score_cb": 0.27586,
      "rouge_2_f_score_ce": 0.27586,
      "rouge_3_recall": 0.16667,
      "rouge_3_recall_cb": 0.16667,
      "rouge_3_recall_ce": 0.16667,
      "rouge_3_precision": 0.13333,
      "rouge_3_precision_cb": 0.13333,
      "rouge_3_precision_ce": 0.13333,
      "rouge_3_f_score": 0.14815,
      "rouge_3_f_score_cb": 0.14815,
      "rouge_3_f_score_ce": 0.14815,
      "rouge_4_recall": 0.09091,
      "rouge_4_recall_cb": 0.09091,
      "rouge_4_recall_ce": 0.09091,
      "rouge_4_precision": 0.07143,
      "rouge_4_precision_cb": 0.07143,
      "rouge_4_precision_ce": 0.07143,
      "rouge_4_f_score": 0.08,
      "rouge_4_f_score_cb": 0.08,
      "rouge_4_f_score_ce": 0.08,
      "rouge_l_recall": 0.57143,
      "rouge_l_recall_cb": 0.57143,
      "rouge_l_recall_ce": 0.57143,
      "rouge_l_precision": 0.47059,
      "rouge_l_precision_cb": 0.47059,
      "rouge_l_precision_ce": 0.47059,
      "rouge_l_f_score": 0.51613,
      "rouge_l_f_score_cb": 0.51613,
      "rouge_l_f_score_ce": 0.51613,
      "rouge_w_1.2_recall": 0.30101,
      "rouge_w_1.2_recall_cb": 0.30101,
      "rouge_w_1.2_recall_ce": 0.30101,
      "rouge_w_1.2_precision": 0.42023,
      "rouge_w_1.2_precision_cb": 0.42023,
      "rouge_w_1.2_precision_ce": 0.42023,
      "rouge_w_1.2_f_score": 0.35077,
      "rouge_w_1.2_f_score_cb": 0.35077,
      "rouge_w_1.2_f_score_ce": 0.35077,
      "rouge_s*_recall": 0.45055,
      "rouge_s*_recall_cb": 0.45055,
      "rouge_s*_recall_ce": 0.45055,
      "rouge_s*_precision": 0.30147,
      "rouge_s*_precision_cb": 0.30147,
      "rouge_s*_precision_ce": 0.30147,
      "rouge_s*_f_score": 0.36123,
      "rouge_s*_f_score_cb": 0.36123,
      "rouge_s*_f_score_ce": 0.36123,
      "rouge_su*_recall": 0.49038,
      "rouge_su*_recall_cb": 0.49038,
      "rouge_su*_recall_ce": 0.49038,
      "rouge_su*_precision": 0.33553,
      "rouge_su*_precision_cb": 0.33553,
      "rouge_su*_precision_ce": 0.33553,
      "rouge_su*_f_score": 0.39844,
      "rouge_su*_f_score_cb": 0.39844,
      "rouge_su*_f_score_ce": 0.39844
    }
  },
  {
    "id": 16,
    "filename": "PandasEval_16.txt",
    "dataset_comment": "Add a new column named 'column_name' with specified data to the existing DataFrame.",
    "generated_comment": "Ensure that the new column is added to the DataFrame with the specified name and data.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.64286,
      "rouge_1_recall_cb": 0.64286,
      "rouge_1_recall_ce": 0.64286,
      "rouge_1_precision": 0.5625,
      "rouge_1_precision_cb": 0.5625,
      "rouge_1_precision_ce": 0.5625,
      "rouge_1_f_score": 0.6,
      "rouge_1_f_score_cb": 0.6,
      "rouge_1_f_score_ce": 0.6,
      "rouge_2_recall": 0.15385,
      "rouge_2_recall_cb": 0.15385,
      "rouge_2_recall_ce": 0.15385,
      "rouge_2_precision": 0.13333,
      "rouge_2_precision_cb": 0.13333,
      "rouge_2_precision_ce": 0.13333,
      "rouge_2_f_score": 0.14286,
      "rouge_2_f_score_cb": 0.14286,
      "rouge_2_f_score_ce": 0.14286,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.35714,
      "rouge_l_recall_cb": 0.35714,
      "rouge_l_recall_ce": 0.35714,
      "rouge_l_precision": 0.3125,
      "rouge_l_precision_cb": 0.3125,
      "rouge_l_precision_ce": 0.3125,
      "rouge_l_f_score": 0.33333,
      "rouge_l_f_score_cb": 0.33333,
      "rouge_l_f_score_ce": 0.33333,
      "rouge_w_1.2_recall": 0.17693,
      "rouge_w_1.2_recall_cb": 0.17693,
      "rouge_w_1.2_recall_ce": 0.17693,
      "rouge_w_1.2_precision": 0.26244,
      "rouge_w_1.2_precision_cb": 0.26244,
      "rouge_w_1.2_precision_ce": 0.26244,
      "rouge_w_1.2_f_score": 0.21136,
      "rouge_w_1.2_f_score_cb": 0.21136,
      "rouge_w_1.2_f_score_ce": 0.21136,
      "rouge_s*_recall": 0.26374,
      "rouge_s*_recall_cb": 0.26374,
      "rouge_s*_recall_ce": 0.26374,
      "rouge_s*_precision": 0.2,
      "rouge_s*_precision_cb": 0.2,
      "rouge_s*_precision_ce": 0.2,
      "rouge_s*_f_score": 0.22749,
      "rouge_s*_f_score_cb": 0.22749,
      "rouge_s*_f_score_ce": 0.22749,
      "rouge_su*_recall": 0.29808,
      "rouge_su*_recall_cb": 0.29808,
      "rouge_su*_recall_ce": 0.29808,
      "rouge_su*_precision": 0.22963,
      "rouge_su*_precision_cb": 0.22963,
      "rouge_su*_precision_ce": 0.22963,
      "rouge_su*_f_score": 0.25942,
      "rouge_su*_f_score_cb": 0.25942,
      "rouge_su*_f_score_ce": 0.25942
    }
  },
  {
    "id": 17,
    "filename": "PandasEval_17.txt",
    "dataset_comment": "Drop duplicate rows in the DataFrame based on column `col1`, keeping the row with the last value in column `col2`, and return the final DataFrame.",
    "generated_comment": "Remove duplicates based on the specified column while keeping the last occurrence of each duplicate.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.32,
      "rouge_1_recall_cb": 0.32,
      "rouge_1_recall_ce": 0.32,
      "rouge_1_precision": 0.53333,
      "rouge_1_precision_cb": 0.53333,
      "rouge_1_precision_ce": 0.53333,
      "rouge_1_f_score": 0.4,
      "rouge_1_f_score_cb": 0.4,
      "rouge_1_f_score_ce": 0.4,
      "rouge_2_recall": 0.125,
      "rouge_2_recall_cb": 0.125,
      "rouge_2_recall_ce": 0.125,
      "rouge_2_precision": 0.21429,
      "rouge_2_precision_cb": 0.21429,
      "rouge_2_precision_ce": 0.21429,
      "rouge_2_f_score": 0.1579,
      "rouge_2_f_score_cb": 0.1579,
      "rouge_2_f_score_ce": 0.1579,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.28,
      "rouge_l_recall_cb": 0.28,
      "rouge_l_recall_ce": 0.28,
      "rouge_l_precision": 0.46667,
      "rouge_l_precision_cb": 0.46667,
      "rouge_l_precision_ce": 0.46667,
      "rouge_l_f_score": 0.35,
      "rouge_l_f_score_cb": 0.35,
      "rouge_l_f_score_ce": 0.35,
      "rouge_w_1.2_recall": 0.11929,
      "rouge_w_1.2_recall_cb": 0.11929,
      "rouge_w_1.2_recall_ce": 0.11929,
      "rouge_w_1.2_precision": 0.37848,
      "rouge_w_1.2_precision_cb": 0.37848,
      "rouge_w_1.2_precision_ce": 0.37848,
      "rouge_w_1.2_f_score": 0.1814,
      "rouge_w_1.2_f_score_cb": 0.1814,
      "rouge_w_1.2_f_score_ce": 0.1814,
      "rouge_s*_recall": 0.09333,
      "rouge_s*_recall_cb": 0.09333,
      "rouge_s*_recall_ce": 0.09333,
      "rouge_s*_precision": 0.26667,
      "rouge_s*_precision_cb": 0.26667,
      "rouge_s*_precision_ce": 0.26667,
      "rouge_s*_f_score": 0.13827,
      "rouge_s*_f_score_cb": 0.13827,
      "rouge_s*_f_score_ce": 0.13827,
      "rouge_su*_recall": 0.11111,
      "rouge_su*_recall_cb": 0.11111,
      "rouge_su*_recall_ce": 0.11111,
      "rouge_su*_precision": 0.30252,
      "rouge_su*_precision_cb": 0.30252,
      "rouge_su*_precision_ce": 0.30252,
      "rouge_su*_f_score": 0.16253,
      "rouge_su*_f_score_cb": 0.16253,
      "rouge_su*_f_score_ce": 0.16253
    }
  },
  {
    "id": 18,
    "filename": "PandasEval_18.txt",
    "dataset_comment": "Retrieve the value at the nth row of a given column name in a Pandas DataFrame and return it.",
    "generated_comment": "Retrieve the value at the nth row of the specified column in the DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.57895,
      "rouge_1_recall_cb": 0.57895,
      "rouge_1_recall_ce": 0.57895,
      "rouge_1_precision": 0.78571,
      "rouge_1_precision_cb": 0.78571,
      "rouge_1_precision_ce": 0.78571,
      "rouge_1_f_score": 0.66667,
      "rouge_1_f_score_cb": 0.66667,
      "rouge_1_f_score_ce": 0.66667,
      "rouge_2_recall": 0.38889,
      "rouge_2_recall_cb": 0.38889,
      "rouge_2_recall_ce": 0.38889,
      "rouge_2_precision": 0.53846,
      "rouge_2_precision_cb": 0.53846,
      "rouge_2_precision_ce": 0.53846,
      "rouge_2_f_score": 0.45161,
      "rouge_2_f_score_cb": 0.45161,
      "rouge_2_f_score_ce": 0.45161,
      "rouge_3_recall": 0.35294,
      "rouge_3_recall_cb": 0.35294,
      "rouge_3_recall_ce": 0.35294,
      "rouge_3_precision": 0.5,
      "rouge_3_precision_cb": 0.5,
      "rouge_3_precision_ce": 0.5,
      "rouge_3_f_score": 0.41379,
      "rouge_3_f_score_cb": 0.41379,
      "rouge_3_f_score_ce": 0.41379,
      "rouge_4_recall": 0.3125,
      "rouge_4_recall_cb": 0.3125,
      "rouge_4_recall_ce": 0.3125,
      "rouge_4_precision": 0.45455,
      "rouge_4_precision_cb": 0.45455,
      "rouge_4_precision_ce": 0.45455,
      "rouge_4_f_score": 0.37037,
      "rouge_4_f_score_cb": 0.37037,
      "rouge_4_f_score_ce": 0.37037,
      "rouge_l_recall": 0.57895,
      "rouge_l_recall_cb": 0.57895,
      "rouge_l_recall_ce": 0.57895,
      "rouge_l_precision": 0.78571,
      "rouge_l_precision_cb": 0.78571,
      "rouge_l_precision_ce": 0.78571,
      "rouge_l_f_score": 0.66667,
      "rouge_l_f_score_cb": 0.66667,
      "rouge_l_f_score_ce": 0.66667,
      "rouge_w_1.2_recall": 0.28093,
      "rouge_w_1.2_recall_cb": 0.28093,
      "rouge_w_1.2_recall_ce": 0.28093,
      "rouge_w_1.2_precision": 0.68702,
      "rouge_w_1.2_precision_cb": 0.68702,
      "rouge_w_1.2_precision_ce": 0.68702,
      "rouge_w_1.2_f_score": 0.39879,
      "rouge_w_1.2_f_score_cb": 0.39879,
      "rouge_w_1.2_f_score_ce": 0.39879,
      "rouge_s*_recall": 0.32164,
      "rouge_s*_recall_cb": 0.32164,
      "rouge_s*_recall_ce": 0.32164,
      "rouge_s*_precision": 0.6044,
      "rouge_s*_precision_cb": 0.6044,
      "rouge_s*_precision_ce": 0.6044,
      "rouge_s*_f_score": 0.41985,
      "rouge_s*_f_score_cb": 0.41985,
      "rouge_s*_f_score_ce": 0.41985,
      "rouge_su*_recall": 0.34392,
      "rouge_su*_recall_cb": 0.34392,
      "rouge_su*_recall_ce": 0.34392,
      "rouge_su*_precision": 0.625,
      "rouge_su*_precision_cb": 0.625,
      "rouge_su*_precision_ce": 0.625,
      "rouge_su*_f_score": 0.44369,
      "rouge_su*_f_score_cb": 0.44369,
      "rouge_su*_f_score_ce": 0.44369
    }
  },
  {
    "id": 19,
    "filename": "PandasEval_19.txt",
    "dataset_comment": "Create a new DataFrame that is identical to df_original, but with no rows, and return the new DataFrame.",
    "generated_comment": "Create a new DataFrame with the same structure (columns and data types) as the original DataFrame, but without any data rows.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.57895,
      "rouge_1_recall_cb": 0.57895,
      "rouge_1_recall_ce": 0.57895,
      "rouge_1_precision": 0.52381,
      "rouge_1_precision_cb": 0.52381,
      "rouge_1_precision_ce": 0.52381,
      "rouge_1_f_score": 0.55,
      "rouge_1_f_score_cb": 0.55,
      "rouge_1_f_score_ce": 0.55,
      "rouge_2_recall": 0.16667,
      "rouge_2_recall_cb": 0.16667,
      "rouge_2_recall_ce": 0.16667,
      "rouge_2_precision": 0.15,
      "rouge_2_precision_cb": 0.15,
      "rouge_2_precision_ce": 0.15,
      "rouge_2_f_score": 0.1579,
      "rouge_2_f_score_cb": 0.1579,
      "rouge_2_f_score_ce": 0.1579,
      "rouge_3_recall": 0.11765,
      "rouge_3_recall_cb": 0.11765,
      "rouge_3_recall_ce": 0.11765,
      "rouge_3_precision": 0.10526,
      "rouge_3_precision_cb": 0.10526,
      "rouge_3_precision_ce": 0.10526,
      "rouge_3_f_score": 0.11111,
      "rouge_3_f_score_cb": 0.11111,
      "rouge_3_f_score_ce": 0.11111,
      "rouge_4_recall": 0.0625,
      "rouge_4_recall_cb": 0.0625,
      "rouge_4_recall_ce": 0.0625,
      "rouge_4_precision": 0.05556,
      "rouge_4_precision_cb": 0.05556,
      "rouge_4_precision_ce": 0.05556,
      "rouge_4_f_score": 0.05883,
      "rouge_4_f_score_cb": 0.05883,
      "rouge_4_f_score_ce": 0.05883,
      "rouge_l_recall": 0.42105,
      "rouge_l_recall_cb": 0.42105,
      "rouge_l_recall_ce": 0.42105,
      "rouge_l_precision": 0.38095,
      "rouge_l_precision_cb": 0.38095,
      "rouge_l_precision_ce": 0.38095,
      "rouge_l_f_score": 0.4,
      "rouge_l_f_score_cb": 0.4,
      "rouge_l_f_score_ce": 0.4,
      "rouge_w_1.2_recall": 0.18694,
      "rouge_w_1.2_recall_cb": 0.18694,
      "rouge_w_1.2_recall_ce": 0.18694,
      "rouge_w_1.2_precision": 0.30479,
      "rouge_w_1.2_precision_cb": 0.30479,
      "rouge_w_1.2_precision_ce": 0.30479,
      "rouge_w_1.2_f_score": 0.23174,
      "rouge_w_1.2_f_score_cb": 0.23174,
      "rouge_w_1.2_f_score_ce": 0.23174,
      "rouge_s*_recall": 0.26316,
      "rouge_s*_recall_cb": 0.26316,
      "rouge_s*_recall_ce": 0.26316,
      "rouge_s*_precision": 0.21429,
      "rouge_s*_precision_cb": 0.21429,
      "rouge_s*_precision_ce": 0.21429,
      "rouge_s*_f_score": 0.23622,
      "rouge_s*_f_score_cb": 0.23622,
      "rouge_s*_f_score_ce": 0.23622,
      "rouge_su*_recall": 0.28571,
      "rouge_su*_recall_cb": 0.28571,
      "rouge_su*_recall_ce": 0.28571,
      "rouge_su*_precision": 0.23478,
      "rouge_su*_precision_cb": 0.23478,
      "rouge_su*_precision_ce": 0.23478,
      "rouge_su*_f_score": 0.25775,
      "rouge_su*_f_score_cb": 0.25775,
      "rouge_su*_f_score_ce": 0.25775
    }
  },
  {
    "id": 20,
    "filename": "PandasEval_20.txt",
    "dataset_comment": "Count the number of missing/NaN values in each column of the DataFrame and return a series.",
    "generated_comment": "Count the number of NaN values in each column of the DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.70588,
      "rouge_1_recall_cb": 0.70588,
      "rouge_1_recall_ce": 0.70588,
      "rouge_1_precision": 1.0,
      "rouge_1_precision_cb": 1.0,
      "rouge_1_precision_ce": 1.0,
      "rouge_1_f_score": 0.82758,
      "rouge_1_f_score_cb": 0.82758,
      "rouge_1_f_score_ce": 0.82758,
      "rouge_2_recall": 0.625,
      "rouge_2_recall_cb": 0.625,
      "rouge_2_recall_ce": 0.625,
      "rouge_2_precision": 0.90909,
      "rouge_2_precision_cb": 0.90909,
      "rouge_2_precision_ce": 0.90909,
      "rouge_2_f_score": 0.74074,
      "rouge_2_f_score_cb": 0.74074,
      "rouge_2_f_score_ce": 0.74074,
      "rouge_3_recall": 0.53333,
      "rouge_3_recall_cb": 0.53333,
      "rouge_3_recall_ce": 0.53333,
      "rouge_3_precision": 0.8,
      "rouge_3_precision_cb": 0.8,
      "rouge_3_precision_ce": 0.8,
      "rouge_3_f_score": 0.64,
      "rouge_3_f_score_cb": 0.64,
      "rouge_3_f_score_ce": 0.64,
      "rouge_4_recall": 0.42857,
      "rouge_4_recall_cb": 0.42857,
      "rouge_4_recall_ce": 0.42857,
      "rouge_4_precision": 0.66667,
      "rouge_4_precision_cb": 0.66667,
      "rouge_4_precision_ce": 0.66667,
      "rouge_4_f_score": 0.52174,
      "rouge_4_f_score_cb": 0.52174,
      "rouge_4_f_score_ce": 0.52174,
      "rouge_l_recall": 0.70588,
      "rouge_l_recall_cb": 0.70588,
      "rouge_l_recall_ce": 0.70588,
      "rouge_l_precision": 1.0,
      "rouge_l_precision_cb": 1.0,
      "rouge_l_precision_ce": 1.0,
      "rouge_l_f_score": 0.82758,
      "rouge_l_f_score_cb": 0.82758,
      "rouge_l_f_score_ce": 0.82758,
      "rouge_w_1.2_recall": 0.36085,
      "rouge_w_1.2_recall_cb": 0.36085,
      "rouge_w_1.2_recall_ce": 0.36085,
      "rouge_w_1.2_precision": 0.90092,
      "rouge_w_1.2_precision_cb": 0.90092,
      "rouge_w_1.2_precision_ce": 0.90092,
      "rouge_w_1.2_f_score": 0.5153,
      "rouge_w_1.2_f_score_cb": 0.5153,
      "rouge_w_1.2_f_score_ce": 0.5153,
      "rouge_s*_recall": 0.48529,
      "rouge_s*_recall_cb": 0.48529,
      "rouge_s*_recall_ce": 0.48529,
      "rouge_s*_precision": 1.0,
      "rouge_s*_precision_cb": 1.0,
      "rouge_s*_precision_ce": 1.0,
      "rouge_s*_f_score": 0.65346,
      "rouge_s*_f_score_cb": 0.65346,
      "rouge_s*_f_score_ce": 0.65346,
      "rouge_su*_recall": 0.50658,
      "rouge_su*_recall_cb": 0.50658,
      "rouge_su*_recall_ce": 0.50658,
      "rouge_su*_precision": 1.0,
      "rouge_su*_precision_cb": 1.0,
      "rouge_su*_precision_ce": 1.0,
      "rouge_su*_f_score": 0.67249,
      "rouge_su*_f_score_cb": 0.67249,
      "rouge_su*_f_score_ce": 0.67249
    }
  },
  {
    "id": 21,
    "filename": "PandasEval_21.txt",
    "dataset_comment": "Create a new dataframe by filtering values that exceed the mean value of the column from the original dataframe. Use indexing or the `where` function to compare values and add NaNs where necessary. Implement a custom function to remove NaNs, also ensure that NaNs are removed from the first rows by utilizing the `dropna` method.",
    "generated_comment": "Filter the DataFrame to keep only the values greater than the mean of each column, then apply a lambda function to drop NaN values and convert the result to a Series.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.32727,
      "rouge_1_recall_cb": 0.32727,
      "rouge_1_recall_ce": 0.32727,
      "rouge_1_precision": 0.58065,
      "rouge_1_precision_cb": 0.58065,
      "rouge_1_precision_ce": 0.58065,
      "rouge_1_f_score": 0.4186,
      "rouge_1_f_score_cb": 0.4186,
      "rouge_1_f_score_ce": 0.4186,
      "rouge_2_recall": 0.05556,
      "rouge_2_recall_cb": 0.05556,
      "rouge_2_recall_ce": 0.05556,
      "rouge_2_precision": 0.1,
      "rouge_2_precision_cb": 0.1,
      "rouge_2_precision_ce": 0.1,
      "rouge_2_f_score": 0.07143,
      "rouge_2_f_score_cb": 0.07143,
      "rouge_2_f_score_ce": 0.07143,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.2,
      "rouge_l_recall_cb": 0.2,
      "rouge_l_recall_ce": 0.2,
      "rouge_l_precision": 0.35484,
      "rouge_l_precision_cb": 0.35484,
      "rouge_l_precision_ce": 0.35484,
      "rouge_l_f_score": 0.25581,
      "rouge_l_f_score_cb": 0.25581,
      "rouge_l_f_score_ce": 0.25581,
      "rouge_w_1.2_recall": 0.06421,
      "rouge_w_1.2_recall_cb": 0.06421,
      "rouge_w_1.2_recall_ce": 0.06421,
      "rouge_w_1.2_precision": 0.25392,
      "rouge_w_1.2_precision_cb": 0.25392,
      "rouge_w_1.2_precision_ce": 0.25392,
      "rouge_w_1.2_f_score": 0.1025,
      "rouge_w_1.2_f_score_cb": 0.1025,
      "rouge_w_1.2_f_score_ce": 0.1025,
      "rouge_s*_recall": 0.09764,
      "rouge_s*_recall_cb": 0.09764,
      "rouge_s*_recall_ce": 0.09764,
      "rouge_s*_precision": 0.31183,
      "rouge_s*_precision_cb": 0.31183,
      "rouge_s*_precision_ce": 0.31183,
      "rouge_s*_f_score": 0.14871,
      "rouge_s*_f_score_cb": 0.14871,
      "rouge_s*_f_score_ce": 0.14871,
      "rouge_su*_recall": 0.10591,
      "rouge_su*_recall_cb": 0.10591,
      "rouge_su*_recall_ce": 0.10591,
      "rouge_su*_precision": 0.32929,
      "rouge_su*_precision_cb": 0.32929,
      "rouge_su*_precision_ce": 0.32929,
      "rouge_su*_f_score": 0.16027,
      "rouge_su*_f_score_cb": 0.16027,
      "rouge_su*_f_score_ce": 0.16027
    }
  },
  {
    "id": 22,
    "filename": "PandasEval_22.txt",
    "dataset_comment": "Normalize the dataframe using pandas by subtracting the mean and dividing by the standard deviation on df.iloc[:, 0, -1] along axis zero, and return the normalized dataframe.",
    "generated_comment": "Normalize all columns except the last one by subtracting the mean and dividing by the standard deviation for each column.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.42857,
      "rouge_1_recall_cb": 0.42857,
      "rouge_1_recall_ce": 0.42857,
      "rouge_1_precision": 0.6,
      "rouge_1_precision_cb": 0.6,
      "rouge_1_precision_ce": 0.6,
      "rouge_1_f_score": 0.5,
      "rouge_1_f_score_cb": 0.5,
      "rouge_1_f_score_ce": 0.5,
      "rouge_2_recall": 0.33333,
      "rouge_2_recall_cb": 0.33333,
      "rouge_2_recall_ce": 0.33333,
      "rouge_2_precision": 0.47368,
      "rouge_2_precision_cb": 0.47368,
      "rouge_2_precision_ce": 0.47368,
      "rouge_2_f_score": 0.3913,
      "rouge_2_f_score_cb": 0.3913,
      "rouge_2_f_score_ce": 0.3913,
      "rouge_3_recall": 0.30769,
      "rouge_3_recall_cb": 0.30769,
      "rouge_3_recall_ce": 0.30769,
      "rouge_3_precision": 0.44444,
      "rouge_3_precision_cb": 0.44444,
      "rouge_3_precision_ce": 0.44444,
      "rouge_3_f_score": 0.36363,
      "rouge_3_f_score_cb": 0.36363,
      "rouge_3_f_score_ce": 0.36363,
      "rouge_4_recall": 0.28,
      "rouge_4_recall_cb": 0.28,
      "rouge_4_recall_ce": 0.28,
      "rouge_4_precision": 0.41176,
      "rouge_4_precision_cb": 0.41176,
      "rouge_4_precision_ce": 0.41176,
      "rouge_4_f_score": 0.33333,
      "rouge_4_f_score_cb": 0.33333,
      "rouge_4_f_score_ce": 0.33333,
      "rouge_l_recall": 0.42857,
      "rouge_l_recall_cb": 0.42857,
      "rouge_l_recall_ce": 0.42857,
      "rouge_l_precision": 0.6,
      "rouge_l_precision_cb": 0.6,
      "rouge_l_precision_ce": 0.6,
      "rouge_l_f_score": 0.5,
      "rouge_l_f_score_cb": 0.5,
      "rouge_l_f_score_ce": 0.5,
      "rouge_w_1.2_recall": 0.20531,
      "rouge_w_1.2_recall_cb": 0.20531,
      "rouge_w_1.2_recall_ce": 0.20531,
      "rouge_w_1.2_precision": 0.55971,
      "rouge_w_1.2_precision_cb": 0.55971,
      "rouge_w_1.2_precision_ce": 0.55971,
      "rouge_w_1.2_f_score": 0.30042,
      "rouge_w_1.2_f_score_cb": 0.30042,
      "rouge_w_1.2_f_score_ce": 0.30042,
      "rouge_s*_recall": 0.1746,
      "rouge_s*_recall_cb": 0.1746,
      "rouge_s*_recall_ce": 0.1746,
      "rouge_s*_precision": 0.34737,
      "rouge_s*_precision_cb": 0.34737,
      "rouge_s*_precision_ce": 0.34737,
      "rouge_s*_f_score": 0.23239,
      "rouge_s*_f_score_cb": 0.23239,
      "rouge_s*_f_score_ce": 0.23239,
      "rouge_su*_recall": 0.19259,
      "rouge_su*_recall_cb": 0.19259,
      "rouge_su*_recall_ce": 0.19259,
      "rouge_su*_precision": 0.37321,
      "rouge_su*_precision_cb": 0.37321,
      "rouge_su*_precision_ce": 0.37321,
      "rouge_su*_f_score": 0.25407,
      "rouge_su*_f_score_cb": 0.25407,
      "rouge_su*_f_score_ce": 0.25407
    }
  },
  {
    "id": 23,
    "filename": "PandasEval_23.txt",
    "dataset_comment": "Determine which columns contain NaN values and return a list of the column names that contain NaNs.",
    "generated_comment": "Find the names of columns in the DataFrame that contain any NaN values.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.47059,
      "rouge_1_recall_cb": 0.47059,
      "rouge_1_recall_ce": 0.47059,
      "rouge_1_precision": 0.61538,
      "rouge_1_precision_cb": 0.61538,
      "rouge_1_precision_ce": 0.61538,
      "rouge_1_f_score": 0.53333,
      "rouge_1_f_score_cb": 0.53333,
      "rouge_1_f_score_ce": 0.53333,
      "rouge_2_recall": 0.125,
      "rouge_2_recall_cb": 0.125,
      "rouge_2_recall_ce": 0.125,
      "rouge_2_precision": 0.16667,
      "rouge_2_precision_cb": 0.16667,
      "rouge_2_precision_ce": 0.16667,
      "rouge_2_f_score": 0.14286,
      "rouge_2_f_score_cb": 0.14286,
      "rouge_2_f_score_ce": 0.14286,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.29412,
      "rouge_l_recall_cb": 0.29412,
      "rouge_l_recall_ce": 0.29412,
      "rouge_l_precision": 0.38462,
      "rouge_l_precision_cb": 0.38462,
      "rouge_l_precision_ce": 0.38462,
      "rouge_l_f_score": 0.33334,
      "rouge_l_f_score_cb": 0.33334,
      "rouge_l_f_score_ce": 0.33334,
      "rouge_w_1.2_recall": 0.14312,
      "rouge_w_1.2_recall_cb": 0.14312,
      "rouge_w_1.2_recall_ce": 0.14312,
      "rouge_w_1.2_precision": 0.32984,
      "rouge_w_1.2_precision_cb": 0.32984,
      "rouge_w_1.2_precision_ce": 0.32984,
      "rouge_w_1.2_f_score": 0.19962,
      "rouge_w_1.2_f_score_cb": 0.19962,
      "rouge_w_1.2_f_score_ce": 0.19962,
      "rouge_s*_recall": 0.16912,
      "rouge_s*_recall_cb": 0.16912,
      "rouge_s*_recall_ce": 0.16912,
      "rouge_s*_precision": 0.29487,
      "rouge_s*_precision_cb": 0.29487,
      "rouge_s*_precision_ce": 0.29487,
      "rouge_s*_f_score": 0.21495,
      "rouge_s*_f_score_cb": 0.21495,
      "rouge_s*_f_score_ce": 0.21495,
      "rouge_su*_recall": 0.19737,
      "rouge_su*_recall_cb": 0.19737,
      "rouge_su*_recall_ce": 0.19737,
      "rouge_su*_precision": 0.33333,
      "rouge_su*_precision_cb": 0.33333,
      "rouge_su*_precision_ce": 0.33333,
      "rouge_su*_f_score": 0.24793,
      "rouge_su*_f_score_cb": 0.24793,
      "rouge_su*_f_score_ce": 0.24793
    }
  },
  {
    "id": 24,
    "filename": "PandasEval_24.txt",
    "dataset_comment": "Round a single column `A` and return the dataframe.",
    "generated_comment": "Round the values in column 'A' of the DataFrame to the nearest integer.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.55556,
      "rouge_1_recall_cb": 0.55556,
      "rouge_1_recall_ce": 0.55556,
      "rouge_1_precision": 0.38462,
      "rouge_1_precision_cb": 0.38462,
      "rouge_1_precision_ce": 0.38462,
      "rouge_1_f_score": 0.45455,
      "rouge_1_f_score_cb": 0.45455,
      "rouge_1_f_score_ce": 0.45455,
      "rouge_2_recall": 0.25,
      "rouge_2_recall_cb": 0.25,
      "rouge_2_recall_ce": 0.25,
      "rouge_2_precision": 0.16667,
      "rouge_2_precision_cb": 0.16667,
      "rouge_2_precision_ce": 0.16667,
      "rouge_2_f_score": 0.2,
      "rouge_2_f_score_cb": 0.2,
      "rouge_2_f_score_ce": 0.2,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.55556,
      "rouge_l_recall_cb": 0.55556,
      "rouge_l_recall_ce": 0.55556,
      "rouge_l_precision": 0.38462,
      "rouge_l_precision_cb": 0.38462,
      "rouge_l_precision_ce": 0.38462,
      "rouge_l_f_score": 0.45455,
      "rouge_l_f_score_cb": 0.45455,
      "rouge_l_f_score_ce": 0.45455,
      "rouge_w_1.2_recall": 0.30065,
      "rouge_w_1.2_recall_cb": 0.30065,
      "rouge_w_1.2_recall_ce": 0.30065,
      "rouge_w_1.2_precision": 0.32301,
      "rouge_w_1.2_precision_cb": 0.32301,
      "rouge_w_1.2_precision_ce": 0.32301,
      "rouge_w_1.2_f_score": 0.31143,
      "rouge_w_1.2_f_score_cb": 0.31143,
      "rouge_w_1.2_f_score_ce": 0.31143,
      "rouge_s*_recall": 0.30556,
      "rouge_s*_recall_cb": 0.30556,
      "rouge_s*_recall_ce": 0.30556,
      "rouge_s*_precision": 0.14103,
      "rouge_s*_precision_cb": 0.14103,
      "rouge_s*_precision_ce": 0.14103,
      "rouge_s*_f_score": 0.19299,
      "rouge_s*_f_score_cb": 0.19299,
      "rouge_s*_f_score_ce": 0.19299,
      "rouge_su*_recall": 0.34091,
      "rouge_su*_recall_cb": 0.34091,
      "rouge_su*_recall_ce": 0.34091,
      "rouge_su*_precision": 0.16667,
      "rouge_su*_precision_cb": 0.16667,
      "rouge_su*_precision_ce": 0.16667,
      "rouge_su*_f_score": 0.22388,
      "rouge_su*_f_score_cb": 0.22388,
      "rouge_su*_f_score_ce": 0.22388
    }
  },
  {
    "id": 25,
    "filename": "PandasEval_25.txt",
    "dataset_comment": "Group values of Pandas DataFrame by `id` and select the latest entry by `date` after sorting values in ascending order by `date`.",
    "generated_comment": "Sort the DataFrame by the 'date' column in ascending order and then group by 'id' to get the last entry for each group.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.59091,
      "rouge_1_recall_cb": 0.59091,
      "rouge_1_recall_ce": 0.59091,
      "rouge_1_precision": 0.56522,
      "rouge_1_precision_cb": 0.56522,
      "rouge_1_precision_ce": 0.56522,
      "rouge_1_f_score": 0.57778,
      "rouge_1_f_score_cb": 0.57778,
      "rouge_1_f_score_ce": 0.57778,
      "rouge_2_recall": 0.19048,
      "rouge_2_recall_cb": 0.19048,
      "rouge_2_recall_ce": 0.19048,
      "rouge_2_precision": 0.18182,
      "rouge_2_precision_cb": 0.18182,
      "rouge_2_precision_ce": 0.18182,
      "rouge_2_f_score": 0.18605,
      "rouge_2_f_score_cb": 0.18605,
      "rouge_2_f_score_ce": 0.18605,
      "rouge_3_recall": 0.05,
      "rouge_3_recall_cb": 0.05,
      "rouge_3_recall_ce": 0.05,
      "rouge_3_precision": 0.04762,
      "rouge_3_precision_cb": 0.04762,
      "rouge_3_precision_ce": 0.04762,
      "rouge_3_f_score": 0.04878,
      "rouge_3_f_score_cb": 0.04878,
      "rouge_3_f_score_ce": 0.04878,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.36364,
      "rouge_l_recall_cb": 0.36364,
      "rouge_l_recall_ce": 0.36364,
      "rouge_l_precision": 0.34783,
      "rouge_l_precision_cb": 0.34783,
      "rouge_l_precision_ce": 0.34783,
      "rouge_l_f_score": 0.35556,
      "rouge_l_f_score_cb": 0.35556,
      "rouge_l_f_score_ce": 0.35556,
      "rouge_w_1.2_recall": 0.16096,
      "rouge_w_1.2_recall_cb": 0.16096,
      "rouge_w_1.2_recall_ce": 0.16096,
      "rouge_w_1.2_precision": 0.2857,
      "rouge_w_1.2_precision_cb": 0.2857,
      "rouge_w_1.2_precision_ce": 0.2857,
      "rouge_w_1.2_f_score": 0.20591,
      "rouge_w_1.2_f_score_cb": 0.20591,
      "rouge_w_1.2_f_score_ce": 0.20591,
      "rouge_s*_recall": 0.22078,
      "rouge_s*_recall_cb": 0.22078,
      "rouge_s*_recall_ce": 0.22078,
      "rouge_s*_precision": 0.20158,
      "rouge_s*_precision_cb": 0.20158,
      "rouge_s*_precision_ce": 0.20158,
      "rouge_s*_f_score": 0.21074,
      "rouge_s*_f_score_cb": 0.21074,
      "rouge_s*_f_score_ce": 0.21074,
      "rouge_su*_recall": 0.25397,
      "rouge_su*_recall_cb": 0.25397,
      "rouge_su*_recall_ce": 0.25397,
      "rouge_su*_precision": 0.23273,
      "rouge_su*_precision_cb": 0.23273,
      "rouge_su*_precision_ce": 0.23273,
      "rouge_su*_f_score": 0.24289,
      "rouge_su*_f_score_cb": 0.24289,
      "rouge_su*_f_score_ce": 0.24289
    }
  },
  {
    "id": 26,
    "filename": "PandasEval_26.txt",
    "dataset_comment": "Shift the 'gdp' column in the Pandas DataFrame up by one and return the DataFrame with the changed 'gdp' column.",
    "generated_comment": "Shift the 'gdp' column up by one position in the DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5,
      "rouge_1_recall_cb": 0.5,
      "rouge_1_recall_ce": 0.5,
      "rouge_1_precision": 0.90909,
      "rouge_1_precision_cb": 0.90909,
      "rouge_1_precision_ce": 0.90909,
      "rouge_1_f_score": 0.64516,
      "rouge_1_f_score_cb": 0.64516,
      "rouge_1_f_score_ce": 0.64516,
      "rouge_2_recall": 0.36842,
      "rouge_2_recall_cb": 0.36842,
      "rouge_2_recall_ce": 0.36842,
      "rouge_2_precision": 0.7,
      "rouge_2_precision_cb": 0.7,
      "rouge_2_precision_ce": 0.7,
      "rouge_2_f_score": 0.48276,
      "rouge_2_f_score_cb": 0.48276,
      "rouge_2_f_score_ce": 0.48276,
      "rouge_3_recall": 0.16667,
      "rouge_3_recall_cb": 0.16667,
      "rouge_3_recall_ce": 0.16667,
      "rouge_3_precision": 0.33333,
      "rouge_3_precision_cb": 0.33333,
      "rouge_3_precision_ce": 0.33333,
      "rouge_3_f_score": 0.22222,
      "rouge_3_f_score_cb": 0.22222,
      "rouge_3_f_score_ce": 0.22222,
      "rouge_4_recall": 0.05882,
      "rouge_4_recall_cb": 0.05882,
      "rouge_4_recall_ce": 0.05882,
      "rouge_4_precision": 0.125,
      "rouge_4_precision_cb": 0.125,
      "rouge_4_precision_ce": 0.125,
      "rouge_4_f_score": 0.08,
      "rouge_4_f_score_cb": 0.08,
      "rouge_4_f_score_ce": 0.08,
      "rouge_l_recall": 0.45,
      "rouge_l_recall_cb": 0.45,
      "rouge_l_recall_ce": 0.45,
      "rouge_l_precision": 0.81818,
      "rouge_l_precision_cb": 0.81818,
      "rouge_l_precision_ce": 0.81818,
      "rouge_l_f_score": 0.58064,
      "rouge_l_f_score_cb": 0.58064,
      "rouge_l_f_score_ce": 0.58064,
      "rouge_w_1.2_recall": 0.20736,
      "rouge_w_1.2_recall_cb": 0.20736,
      "rouge_w_1.2_recall_ce": 0.20736,
      "rouge_w_1.2_precision": 0.6864,
      "rouge_w_1.2_precision_cb": 0.6864,
      "rouge_w_1.2_precision_ce": 0.6864,
      "rouge_w_1.2_f_score": 0.3185,
      "rouge_w_1.2_f_score_cb": 0.3185,
      "rouge_w_1.2_f_score_ce": 0.3185,
      "rouge_s*_recall": 0.22105,
      "rouge_s*_recall_cb": 0.22105,
      "rouge_s*_recall_ce": 0.22105,
      "rouge_s*_precision": 0.76364,
      "rouge_s*_precision_cb": 0.76364,
      "rouge_s*_precision_ce": 0.76364,
      "rouge_s*_f_score": 0.34285,
      "rouge_s*_f_score_cb": 0.34285,
      "rouge_s*_f_score_ce": 0.34285,
      "rouge_su*_recall": 0.24402,
      "rouge_su*_recall_cb": 0.24402,
      "rouge_su*_recall_ce": 0.24402,
      "rouge_su*_precision": 0.78462,
      "rouge_su*_precision_cb": 0.78462,
      "rouge_su*_precision_ce": 0.78462,
      "rouge_su*_f_score": 0.37226,
      "rouge_su*_f_score_cb": 0.37226,
      "rouge_su*_f_score_ce": 0.37226
    }
  },
  {
    "id": 27,
    "filename": "PandasEval_27.txt",
    "dataset_comment": "Remain the rows where line_num is not equal to 0 using the most efficient method.",
    "generated_comment": "Filter the DataFrame to include only rows where 'line_num' is not equal to 0.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.625,
      "rouge_1_recall_cb": 0.625,
      "rouge_1_recall_ce": 0.625,
      "rouge_1_precision": 0.66667,
      "rouge_1_precision_cb": 0.66667,
      "rouge_1_precision_ce": 0.66667,
      "rouge_1_f_score": 0.64516,
      "rouge_1_f_score_cb": 0.64516,
      "rouge_1_f_score_ce": 0.64516,
      "rouge_2_recall": 0.53333,
      "rouge_2_recall_cb": 0.53333,
      "rouge_2_recall_ce": 0.53333,
      "rouge_2_precision": 0.57143,
      "rouge_2_precision_cb": 0.57143,
      "rouge_2_precision_ce": 0.57143,
      "rouge_2_f_score": 0.55172,
      "rouge_2_f_score_cb": 0.55172,
      "rouge_2_f_score_ce": 0.55172,
      "rouge_3_recall": 0.5,
      "rouge_3_recall_cb": 0.5,
      "rouge_3_recall_ce": 0.5,
      "rouge_3_precision": 0.53846,
      "rouge_3_precision_cb": 0.53846,
      "rouge_3_precision_ce": 0.53846,
      "rouge_3_f_score": 0.51852,
      "rouge_3_f_score_cb": 0.51852,
      "rouge_3_f_score_ce": 0.51852,
      "rouge_4_recall": 0.46154,
      "rouge_4_recall_cb": 0.46154,
      "rouge_4_recall_ce": 0.46154,
      "rouge_4_precision": 0.5,
      "rouge_4_precision_cb": 0.5,
      "rouge_4_precision_ce": 0.5,
      "rouge_4_f_score": 0.48,
      "rouge_4_f_score_cb": 0.48,
      "rouge_4_f_score_ce": 0.48,
      "rouge_l_recall": 0.625,
      "rouge_l_recall_cb": 0.625,
      "rouge_l_recall_ce": 0.625,
      "rouge_l_precision": 0.66667,
      "rouge_l_precision_cb": 0.66667,
      "rouge_l_precision_ce": 0.66667,
      "rouge_l_f_score": 0.64516,
      "rouge_l_f_score_cb": 0.64516,
      "rouge_l_f_score_ce": 0.64516,
      "rouge_w_1.2_recall": 0.35897,
      "rouge_w_1.2_recall_cb": 0.35897,
      "rouge_w_1.2_recall_ce": 0.35897,
      "rouge_w_1.2_precision": 0.66667,
      "rouge_w_1.2_precision_cb": 0.66667,
      "rouge_w_1.2_precision_ce": 0.66667,
      "rouge_w_1.2_f_score": 0.46666,
      "rouge_w_1.2_f_score_cb": 0.46666,
      "rouge_w_1.2_f_score_ce": 0.46666,
      "rouge_s*_recall": 0.375,
      "rouge_s*_recall_cb": 0.375,
      "rouge_s*_recall_ce": 0.375,
      "rouge_s*_precision": 0.42857,
      "rouge_s*_precision_cb": 0.42857,
      "rouge_s*_precision_ce": 0.42857,
      "rouge_s*_f_score": 0.4,
      "rouge_s*_f_score_cb": 0.4,
      "rouge_s*_f_score_ce": 0.4,
      "rouge_su*_recall": 0.4,
      "rouge_su*_recall_cb": 0.4,
      "rouge_su*_recall_ce": 0.4,
      "rouge_su*_precision": 0.45378,
      "rouge_su*_precision_cb": 0.45378,
      "rouge_su*_precision_ce": 0.45378,
      "rouge_su*_f_score": 0.4252,
      "rouge_su*_f_score_cb": 0.4252,
      "rouge_su*_f_score_ce": 0.4252
    }
  },
  {
    "id": 28,
    "filename": "PandasEval_28.txt",
    "dataset_comment": "In the code, several variables may either contain a pandas DataFrame or be empty.  Check if a certain DataFrame has been created.",
    "generated_comment": "Check if the DataFrame exists by verifying if it is None. If it is None, return False; otherwise, return True.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.18182,
      "rouge_1_recall_cb": 0.18182,
      "rouge_1_recall_ce": 0.18182,
      "rouge_1_precision": 0.2,
      "rouge_1_precision_cb": 0.2,
      "rouge_1_precision_ce": 0.2,
      "rouge_1_f_score": 0.19048,
      "rouge_1_f_score_cb": 0.19048,
      "rouge_1_f_score_ce": 0.19048,
      "rouge_2_recall": 0.04762,
      "rouge_2_recall_cb": 0.04762,
      "rouge_2_recall_ce": 0.04762,
      "rouge_2_precision": 0.05263,
      "rouge_2_precision_cb": 0.05263,
      "rouge_2_precision_ce": 0.05263,
      "rouge_2_f_score": 0.05,
      "rouge_2_f_score_cb": 0.05,
      "rouge_2_f_score_ce": 0.05,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.13636,
      "rouge_l_recall_cb": 0.13636,
      "rouge_l_recall_ce": 0.13636,
      "rouge_l_precision": 0.15,
      "rouge_l_precision_cb": 0.15,
      "rouge_l_precision_ce": 0.15,
      "rouge_l_f_score": 0.14286,
      "rouge_l_f_score_cb": 0.14286,
      "rouge_l_f_score_ce": 0.14286,
      "rouge_w_1.2_recall": 0.06621,
      "rouge_w_1.2_recall_cb": 0.06621,
      "rouge_w_1.2_recall_ce": 0.06621,
      "rouge_w_1.2_precision": 0.13514,
      "rouge_w_1.2_precision_cb": 0.13514,
      "rouge_w_1.2_precision_ce": 0.13514,
      "rouge_w_1.2_f_score": 0.08888,
      "rouge_w_1.2_f_score_cb": 0.08888,
      "rouge_w_1.2_f_score_ce": 0.08888,
      "rouge_s*_recall": 0.02597,
      "rouge_s*_recall_cb": 0.02597,
      "rouge_s*_recall_ce": 0.02597,
      "rouge_s*_precision": 0.03158,
      "rouge_s*_precision_cb": 0.03158,
      "rouge_s*_precision_ce": 0.03158,
      "rouge_s*_f_score": 0.0285,
      "rouge_s*_f_score_cb": 0.0285,
      "rouge_s*_f_score_ce": 0.0285,
      "rouge_su*_recall": 0.03968,
      "rouge_su*_recall_cb": 0.03968,
      "rouge_su*_recall_ce": 0.03968,
      "rouge_su*_precision": 0.04785,
      "rouge_su*_precision_cb": 0.04785,
      "rouge_su*_precision_ce": 0.04785,
      "rouge_su*_f_score": 0.04338,
      "rouge_su*_f_score_cb": 0.04338,
      "rouge_su*_f_score_ce": 0.04338
    }
  },
  {
    "id": 29,
    "filename": "PandasEval_29.txt",
    "dataset_comment": "Move each value from a column to the first empty row in a Pandas DataFrame. Use sorted to align non-NULL data at the top, and use dropna to remove all rows that contain only NaN.",
    "generated_comment": "Sort each column by the presence of NaN values, then drop rows where all values are NaN.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.22222,
      "rouge_1_recall_cb": 0.22222,
      "rouge_1_recall_ce": 0.22222,
      "rouge_1_precision": 0.47059,
      "rouge_1_precision_cb": 0.47059,
      "rouge_1_precision_ce": 0.47059,
      "rouge_1_f_score": 0.30189,
      "rouge_1_f_score_cb": 0.30189,
      "rouge_1_f_score_ce": 0.30189,
      "rouge_2_recall": 0.0,
      "rouge_2_recall_cb": 0.0,
      "rouge_2_recall_ce": 0.0,
      "rouge_2_precision": 0.0,
      "rouge_2_precision_cb": 0.0,
      "rouge_2_precision_ce": 0.0,
      "rouge_2_f_score": 0.0,
      "rouge_2_f_score_cb": 0.0,
      "rouge_2_f_score_ce": 0.0,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.16667,
      "rouge_l_recall_cb": 0.16667,
      "rouge_l_recall_ce": 0.16667,
      "rouge_l_precision": 0.35294,
      "rouge_l_precision_cb": 0.35294,
      "rouge_l_precision_ce": 0.35294,
      "rouge_l_f_score": 0.22642,
      "rouge_l_f_score_cb": 0.22642,
      "rouge_l_f_score_ce": 0.22642,
      "rouge_w_1.2_recall": 0.06038,
      "rouge_w_1.2_recall_cb": 0.06038,
      "rouge_w_1.2_recall_ce": 0.06038,
      "rouge_w_1.2_precision": 0.26182,
      "rouge_w_1.2_precision_cb": 0.26182,
      "rouge_w_1.2_precision_ce": 0.26182,
      "rouge_w_1.2_f_score": 0.09813,
      "rouge_w_1.2_f_score_cb": 0.09813,
      "rouge_w_1.2_f_score_ce": 0.09813,
      "rouge_s*_recall": 0.0381,
      "rouge_s*_recall_cb": 0.0381,
      "rouge_s*_recall_ce": 0.0381,
      "rouge_s*_precision": 0.17647,
      "rouge_s*_precision_cb": 0.17647,
      "rouge_s*_precision_ce": 0.17647,
      "rouge_s*_f_score": 0.06267,
      "rouge_s*_f_score_cb": 0.06267,
      "rouge_s*_f_score_ce": 0.06267,
      "rouge_su*_recall": 0.04662,
      "rouge_su*_recall_cb": 0.04662,
      "rouge_su*_recall_ce": 0.04662,
      "rouge_su*_precision": 0.20395,
      "rouge_su*_precision_cb": 0.20395,
      "rouge_su*_precision_ce": 0.20395,
      "rouge_su*_f_score": 0.07589,
      "rouge_su*_f_score_cb": 0.07589,
      "rouge_su*_f_score_ce": 0.07589
    }
  },
  {
    "id": 30,
    "filename": "PandasEval_30.txt",
    "dataset_comment": "After assigning a list or array-like value to the columns, the column is considered as type object. Assign the emails to the first row and the 'Email' column.",
    "generated_comment": "I want to create a dataframe with one of the column as a list or array.Ensure the 'Email' column can hold lists or arrays by converting it to object type.Assign the set of emails to the 'Email' column of the first row.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.75862,
      "rouge_1_recall_cb": 0.75862,
      "rouge_1_recall_ce": 0.75862,
      "rouge_1_precision": 0.5,
      "rouge_1_precision_cb": 0.5,
      "rouge_1_precision_ce": 0.5,
      "rouge_1_f_score": 0.60274,
      "rouge_1_f_score_cb": 0.60274,
      "rouge_1_f_score_ce": 0.60274,
      "rouge_2_recall": 0.42857,
      "rouge_2_recall_cb": 0.42857,
      "rouge_2_recall_ce": 0.42857,
      "rouge_2_precision": 0.27907,
      "rouge_2_precision_cb": 0.27907,
      "rouge_2_precision_ce": 0.27907,
      "rouge_2_f_score": 0.33803,
      "rouge_2_f_score_cb": 0.33803,
      "rouge_2_f_score_ce": 0.33803,
      "rouge_3_recall": 0.18519,
      "rouge_3_recall_cb": 0.18519,
      "rouge_3_recall_ce": 0.18519,
      "rouge_3_precision": 0.11905,
      "rouge_3_precision_cb": 0.11905,
      "rouge_3_precision_ce": 0.11905,
      "rouge_3_f_score": 0.14493,
      "rouge_3_f_score_cb": 0.14493,
      "rouge_3_f_score_ce": 0.14493,
      "rouge_4_recall": 0.03846,
      "rouge_4_recall_cb": 0.03846,
      "rouge_4_recall_ce": 0.03846,
      "rouge_4_precision": 0.02439,
      "rouge_4_precision_cb": 0.02439,
      "rouge_4_precision_ce": 0.02439,
      "rouge_4_f_score": 0.02985,
      "rouge_4_f_score_cb": 0.02985,
      "rouge_4_f_score_ce": 0.02985,
      "rouge_l_recall": 0.48276,
      "rouge_l_recall_cb": 0.48276,
      "rouge_l_recall_ce": 0.48276,
      "rouge_l_precision": 0.31818,
      "rouge_l_precision_cb": 0.31818,
      "rouge_l_precision_ce": 0.31818,
      "rouge_l_f_score": 0.38356,
      "rouge_l_f_score_cb": 0.38356,
      "rouge_l_f_score_ce": 0.38356,
      "rouge_w_1.2_recall": 0.20368,
      "rouge_w_1.2_recall_cb": 0.20368,
      "rouge_w_1.2_recall_ce": 0.20368,
      "rouge_w_1.2_precision": 0.26326,
      "rouge_w_1.2_precision_cb": 0.26326,
      "rouge_w_1.2_precision_ce": 0.26326,
      "rouge_w_1.2_f_score": 0.22967,
      "rouge_w_1.2_f_score_cb": 0.22967,
      "rouge_w_1.2_f_score_ce": 0.22967,
      "rouge_s*_recall": 0.53695,
      "rouge_s*_recall_cb": 0.53695,
      "rouge_s*_recall_ce": 0.53695,
      "rouge_s*_precision": 0.23044,
      "rouge_s*_precision_cb": 0.23044,
      "rouge_s*_precision_ce": 0.23044,
      "rouge_s*_f_score": 0.32248,
      "rouge_s*_f_score_cb": 0.32248,
      "rouge_s*_f_score_ce": 0.32248,
      "rouge_su*_recall": 0.54839,
      "rouge_su*_recall_cb": 0.54839,
      "rouge_su*_recall_ce": 0.54839,
      "rouge_su*_precision": 0.24065,
      "rouge_su*_precision_cb": 0.24065,
      "rouge_su*_precision_ce": 0.24065,
      "rouge_su*_f_score": 0.33451,
      "rouge_su*_f_score_cb": 0.33451,
      "rouge_su*_f_score_ce": 0.33451
    }
  },
  {
    "id": 31,
    "filename": "PandasEval_31.txt",
    "dataset_comment": "Drop consecutive duplicates and return the result.",
    "generated_comment": "Drop consecutive duplicate values in a pandas Series by comparing each element with its next neighbor and utilizing the shift method.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.71429,
      "rouge_1_recall_cb": 0.71429,
      "rouge_1_recall_ce": 0.71429,
      "rouge_1_precision": 0.2381,
      "rouge_1_precision_cb": 0.2381,
      "rouge_1_precision_ce": 0.2381,
      "rouge_1_f_score": 0.35715,
      "rouge_1_f_score_cb": 0.35715,
      "rouge_1_f_score_ce": 0.35715,
      "rouge_2_recall": 0.33333,
      "rouge_2_recall_cb": 0.33333,
      "rouge_2_recall_ce": 0.33333,
      "rouge_2_precision": 0.1,
      "rouge_2_precision_cb": 0.1,
      "rouge_2_precision_ce": 0.1,
      "rouge_2_f_score": 0.15385,
      "rouge_2_f_score_cb": 0.15385,
      "rouge_2_f_score_ce": 0.15385,
      "rouge_3_recall": 0.2,
      "rouge_3_recall_cb": 0.2,
      "rouge_3_recall_ce": 0.2,
      "rouge_3_precision": 0.05263,
      "rouge_3_precision_cb": 0.05263,
      "rouge_3_precision_ce": 0.05263,
      "rouge_3_f_score": 0.08333,
      "rouge_3_f_score_cb": 0.08333,
      "rouge_3_f_score_ce": 0.08333,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.71429,
      "rouge_l_recall_cb": 0.71429,
      "rouge_l_recall_ce": 0.71429,
      "rouge_l_precision": 0.2381,
      "rouge_l_precision_cb": 0.2381,
      "rouge_l_precision_ce": 0.2381,
      "rouge_l_f_score": 0.35715,
      "rouge_l_f_score_cb": 0.35715,
      "rouge_l_f_score_ce": 0.35715,
      "rouge_w_1.2_recall": 0.44744,
      "rouge_w_1.2_recall_cb": 0.44744,
      "rouge_w_1.2_recall_ce": 0.44744,
      "rouge_w_1.2_precision": 0.22011,
      "rouge_w_1.2_precision_cb": 0.22011,
      "rouge_w_1.2_precision_ce": 0.22011,
      "rouge_w_1.2_f_score": 0.29507,
      "rouge_w_1.2_f_score_cb": 0.29507,
      "rouge_w_1.2_f_score_ce": 0.29507,
      "rouge_s*_recall": 0.47619,
      "rouge_s*_recall_cb": 0.47619,
      "rouge_s*_recall_ce": 0.47619,
      "rouge_s*_precision": 0.04762,
      "rouge_s*_precision_cb": 0.04762,
      "rouge_s*_precision_ce": 0.04762,
      "rouge_s*_f_score": 0.08658,
      "rouge_s*_f_score_cb": 0.08658,
      "rouge_s*_f_score_ce": 0.08658,
      "rouge_su*_recall": 0.55556,
      "rouge_su*_recall_cb": 0.55556,
      "rouge_su*_recall_ce": 0.55556,
      "rouge_su*_precision": 0.06522,
      "rouge_su*_precision_cb": 0.06522,
      "rouge_su*_precision_ce": 0.06522,
      "rouge_su*_f_score": 0.11674,
      "rouge_su*_f_score_cb": 0.11674,
      "rouge_su*_f_score_ce": 0.11674
    }
  },
  {
    "id": 32,
    "filename": "PandasEval_32.txt",
    "dataset_comment": "Create a Series from the list [56, 24, 421, 90].",
    "generated_comment": "Create a pandas Series with the given list of integers.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5,
      "rouge_1_recall_cb": 0.5,
      "rouge_1_recall_ce": 0.5,
      "rouge_1_precision": 0.5,
      "rouge_1_precision_cb": 0.5,
      "rouge_1_precision_ce": 0.5,
      "rouge_1_f_score": 0.5,
      "rouge_1_f_score_cb": 0.5,
      "rouge_1_f_score_ce": 0.5,
      "rouge_2_recall": 0.11111,
      "rouge_2_recall_cb": 0.11111,
      "rouge_2_recall_ce": 0.11111,
      "rouge_2_precision": 0.11111,
      "rouge_2_precision_cb": 0.11111,
      "rouge_2_precision_ce": 0.11111,
      "rouge_2_f_score": 0.11111,
      "rouge_2_f_score_cb": 0.11111,
      "rouge_2_f_score_ce": 0.11111,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.5,
      "rouge_l_precision_cb": 0.5,
      "rouge_l_precision_ce": 0.5,
      "rouge_l_f_score": 0.5,
      "rouge_l_f_score_cb": 0.5,
      "rouge_l_f_score_ce": 0.5,
      "rouge_w_1.2_recall": 0.28219,
      "rouge_w_1.2_recall_cb": 0.28219,
      "rouge_w_1.2_recall_ce": 0.28219,
      "rouge_w_1.2_precision": 0.44724,
      "rouge_w_1.2_precision_cb": 0.44724,
      "rouge_w_1.2_precision_ce": 0.44724,
      "rouge_w_1.2_f_score": 0.34604,
      "rouge_w_1.2_f_score_cb": 0.34604,
      "rouge_w_1.2_f_score_ce": 0.34604,
      "rouge_s*_recall": 0.22222,
      "rouge_s*_recall_cb": 0.22222,
      "rouge_s*_recall_ce": 0.22222,
      "rouge_s*_precision": 0.22222,
      "rouge_s*_precision_cb": 0.22222,
      "rouge_s*_precision_ce": 0.22222,
      "rouge_s*_f_score": 0.22222,
      "rouge_s*_f_score_cb": 0.22222,
      "rouge_s*_f_score_ce": 0.22222,
      "rouge_su*_recall": 0.27778,
      "rouge_su*_recall_cb": 0.27778,
      "rouge_su*_recall_ce": 0.27778,
      "rouge_su*_precision": 0.27778,
      "rouge_su*_precision_cb": 0.27778,
      "rouge_su*_precision_ce": 0.27778,
      "rouge_su*_f_score": 0.27778,
      "rouge_su*_f_score_cb": 0.27778,
      "rouge_su*_f_score_ce": 0.27778
    }
  },
  {
    "id": 33,
    "filename": "PandasEval_33.txt",
    "dataset_comment": "Retrieve the last N rows of a pandas DataFrame.",
    "generated_comment": "Return the last n rows of the DataFrame df.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.66667,
      "rouge_1_recall_cb": 0.66667,
      "rouge_1_recall_ce": 0.66667,
      "rouge_1_precision": 0.66667,
      "rouge_1_precision_cb": 0.66667,
      "rouge_1_precision_ce": 0.66667,
      "rouge_1_f_score": 0.66667,
      "rouge_1_f_score_cb": 0.66667,
      "rouge_1_f_score_ce": 0.66667,
      "rouge_2_recall": 0.5,
      "rouge_2_recall_cb": 0.5,
      "rouge_2_recall_ce": 0.5,
      "rouge_2_precision": 0.5,
      "rouge_2_precision_cb": 0.5,
      "rouge_2_precision_ce": 0.5,
      "rouge_2_f_score": 0.5,
      "rouge_2_f_score_cb": 0.5,
      "rouge_2_f_score_ce": 0.5,
      "rouge_3_recall": 0.42857,
      "rouge_3_recall_cb": 0.42857,
      "rouge_3_recall_ce": 0.42857,
      "rouge_3_precision": 0.42857,
      "rouge_3_precision_cb": 0.42857,
      "rouge_3_precision_ce": 0.42857,
      "rouge_3_f_score": 0.42857,
      "rouge_3_f_score_cb": 0.42857,
      "rouge_3_f_score_ce": 0.42857,
      "rouge_4_recall": 0.33333,
      "rouge_4_recall_cb": 0.33333,
      "rouge_4_recall_ce": 0.33333,
      "rouge_4_precision": 0.33333,
      "rouge_4_precision_cb": 0.33333,
      "rouge_4_precision_ce": 0.33333,
      "rouge_4_f_score": 0.33333,
      "rouge_4_f_score_cb": 0.33333,
      "rouge_4_f_score_ce": 0.33333,
      "rouge_l_recall": 0.66667,
      "rouge_l_recall_cb": 0.66667,
      "rouge_l_recall_ce": 0.66667,
      "rouge_l_precision": 0.66667,
      "rouge_l_precision_cb": 0.66667,
      "rouge_l_precision_ce": 0.66667,
      "rouge_l_f_score": 0.66667,
      "rouge_l_f_score_cb": 0.66667,
      "rouge_l_f_score_ce": 0.66667,
      "rouge_w_1.2_recall": 0.40075,
      "rouge_w_1.2_recall_cb": 0.40075,
      "rouge_w_1.2_recall_ce": 0.40075,
      "rouge_w_1.2_precision": 0.6219,
      "rouge_w_1.2_precision_cb": 0.6219,
      "rouge_w_1.2_precision_ce": 0.6219,
      "rouge_w_1.2_f_score": 0.48741,
      "rouge_w_1.2_f_score_cb": 0.48741,
      "rouge_w_1.2_f_score_ce": 0.48741,
      "rouge_s*_recall": 0.41667,
      "rouge_s*_recall_cb": 0.41667,
      "rouge_s*_recall_ce": 0.41667,
      "rouge_s*_precision": 0.41667,
      "rouge_s*_precision_cb": 0.41667,
      "rouge_s*_precision_ce": 0.41667,
      "rouge_s*_f_score": 0.41667,
      "rouge_s*_f_score_cb": 0.41667,
      "rouge_s*_f_score_ce": 0.41667,
      "rouge_su*_recall": 0.45455,
      "rouge_su*_recall_cb": 0.45455,
      "rouge_su*_recall_ce": 0.45455,
      "rouge_su*_precision": 0.45455,
      "rouge_su*_precision_cb": 0.45455,
      "rouge_su*_precision_ce": 0.45455,
      "rouge_su*_f_score": 0.45455,
      "rouge_su*_f_score_cb": 0.45455,
      "rouge_su*_f_score_ce": 0.45455
    }
  },
  {
    "id": 34,
    "filename": "PandasEval_34.txt",
    "dataset_comment": "Append the dictionary to the DataFrame and return the DataFrame.",
    "generated_comment": "Append a dictionary to a DataFrame in an efficient way, ensuring that the index is reset to maintain consistency.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5,
      "rouge_1_recall_cb": 0.5,
      "rouge_1_recall_ce": 0.5,
      "rouge_1_precision": 0.26316,
      "rouge_1_precision_cb": 0.26316,
      "rouge_1_precision_ce": 0.26316,
      "rouge_1_f_score": 0.34483,
      "rouge_1_f_score_cb": 0.34483,
      "rouge_1_f_score_ce": 0.34483,
      "rouge_2_recall": 0.11111,
      "rouge_2_recall_cb": 0.11111,
      "rouge_2_recall_ce": 0.11111,
      "rouge_2_precision": 0.05556,
      "rouge_2_precision_cb": 0.05556,
      "rouge_2_precision_ce": 0.05556,
      "rouge_2_f_score": 0.07408,
      "rouge_2_f_score_cb": 0.07408,
      "rouge_2_f_score_ce": 0.07408,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.26316,
      "rouge_l_precision_cb": 0.26316,
      "rouge_l_precision_ce": 0.26316,
      "rouge_l_f_score": 0.34483,
      "rouge_l_f_score_cb": 0.34483,
      "rouge_l_f_score_ce": 0.34483,
      "rouge_w_1.2_recall": 0.25315,
      "rouge_w_1.2_recall_cb": 0.25315,
      "rouge_w_1.2_recall_ce": 0.25315,
      "rouge_w_1.2_precision": 0.21117,
      "rouge_w_1.2_precision_cb": 0.21117,
      "rouge_w_1.2_precision_ce": 0.21117,
      "rouge_w_1.2_f_score": 0.23026,
      "rouge_w_1.2_f_score_cb": 0.23026,
      "rouge_w_1.2_f_score_ce": 0.23026,
      "rouge_s*_recall": 0.24444,
      "rouge_s*_recall_cb": 0.24444,
      "rouge_s*_recall_ce": 0.24444,
      "rouge_s*_precision": 0.06433,
      "rouge_s*_precision_cb": 0.06433,
      "rouge_s*_precision_ce": 0.06433,
      "rouge_s*_f_score": 0.10185,
      "rouge_s*_f_score_cb": 0.10185,
      "rouge_s*_f_score_ce": 0.10185,
      "rouge_su*_recall": 0.2963,
      "rouge_su*_recall_cb": 0.2963,
      "rouge_su*_recall_ce": 0.2963,
      "rouge_su*_precision": 0.08466,
      "rouge_su*_precision_cb": 0.08466,
      "rouge_su*_precision_ce": 0.08466,
      "rouge_su*_f_score": 0.13169,
      "rouge_su*_f_score_cb": 0.13169,
      "rouge_su*_f_score_ce": 0.13169
    }
  },
  {
    "id": 35,
    "filename": "PandasEval_35.txt",
    "dataset_comment": "Remove columns based on duplicate column names and return the duplicated dataframe.",
    "generated_comment": "Remove duplicate column names by keeping the first occurrence of each column name.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5,
      "rouge_1_recall_cb": 0.5,
      "rouge_1_recall_ce": 0.5,
      "rouge_1_precision": 0.46154,
      "rouge_1_precision_cb": 0.46154,
      "rouge_1_precision_ce": 0.46154,
      "rouge_1_f_score": 0.48,
      "rouge_1_f_score_cb": 0.48,
      "rouge_1_f_score_ce": 0.48,
      "rouge_2_recall": 0.18182,
      "rouge_2_recall_cb": 0.18182,
      "rouge_2_recall_ce": 0.18182,
      "rouge_2_precision": 0.16667,
      "rouge_2_precision_cb": 0.16667,
      "rouge_2_precision_ce": 0.16667,
      "rouge_2_f_score": 0.17392,
      "rouge_2_f_score_cb": 0.17392,
      "rouge_2_f_score_ce": 0.17392,
      "rouge_3_recall": 0.1,
      "rouge_3_recall_cb": 0.1,
      "rouge_3_recall_ce": 0.1,
      "rouge_3_precision": 0.09091,
      "rouge_3_precision_cb": 0.09091,
      "rouge_3_precision_ce": 0.09091,
      "rouge_3_f_score": 0.09524,
      "rouge_3_f_score_cb": 0.09524,
      "rouge_3_f_score_ce": 0.09524,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.41667,
      "rouge_l_recall_cb": 0.41667,
      "rouge_l_recall_ce": 0.41667,
      "rouge_l_precision": 0.38462,
      "rouge_l_precision_cb": 0.38462,
      "rouge_l_precision_ce": 0.38462,
      "rouge_l_f_score": 0.4,
      "rouge_l_f_score_cb": 0.4,
      "rouge_l_f_score_ce": 0.4,
      "rouge_w_1.2_recall": 0.21739,
      "rouge_w_1.2_recall_cb": 0.21739,
      "rouge_w_1.2_recall_ce": 0.21739,
      "rouge_w_1.2_precision": 0.32984,
      "rouge_w_1.2_precision_cb": 0.32984,
      "rouge_w_1.2_precision_ce": 0.32984,
      "rouge_w_1.2_f_score": 0.26206,
      "rouge_w_1.2_f_score_cb": 0.26206,
      "rouge_w_1.2_f_score_ce": 0.26206,
      "rouge_s*_recall": 0.19697,
      "rouge_s*_recall_cb": 0.19697,
      "rouge_s*_recall_ce": 0.19697,
      "rouge_s*_precision": 0.16667,
      "rouge_s*_precision_cb": 0.16667,
      "rouge_s*_precision_ce": 0.16667,
      "rouge_s*_f_score": 0.18056,
      "rouge_s*_f_score_cb": 0.18056,
      "rouge_s*_f_score_ce": 0.18056,
      "rouge_su*_recall": 0.24675,
      "rouge_su*_recall_cb": 0.24675,
      "rouge_su*_recall_ce": 0.24675,
      "rouge_su*_precision": 0.21111,
      "rouge_su*_precision_cb": 0.21111,
      "rouge_su*_precision_ce": 0.21111,
      "rouge_su*_f_score": 0.22754,
      "rouge_su*_f_score_cb": 0.22754,
      "rouge_su*_f_score_ce": 0.22754
    }
  },
  {
    "id": 36,
    "filename": "PandasEval_36.txt",
    "dataset_comment": "Obtain a pandas DataFrame without the index and print the entire DataFrame without displaying the index.",
    "generated_comment": "Convert the DataFrame to a string representation without the index.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.375,
      "rouge_1_recall_cb": 0.375,
      "rouge_1_recall_ce": 0.375,
      "rouge_1_precision": 0.6,
      "rouge_1_precision_cb": 0.6,
      "rouge_1_precision_ce": 0.6,
      "rouge_1_f_score": 0.46154,
      "rouge_1_f_score_cb": 0.46154,
      "rouge_1_f_score_ce": 0.46154,
      "rouge_2_recall": 0.13333,
      "rouge_2_recall_cb": 0.13333,
      "rouge_2_recall_ce": 0.13333,
      "rouge_2_precision": 0.22222,
      "rouge_2_precision_cb": 0.22222,
      "rouge_2_precision_ce": 0.22222,
      "rouge_2_f_score": 0.16666,
      "rouge_2_f_score_cb": 0.16666,
      "rouge_2_f_score_ce": 0.16666,
      "rouge_3_recall": 0.07143,
      "rouge_3_recall_cb": 0.07143,
      "rouge_3_recall_ce": 0.07143,
      "rouge_3_precision": 0.125,
      "rouge_3_precision_cb": 0.125,
      "rouge_3_precision_ce": 0.125,
      "rouge_3_f_score": 0.09091,
      "rouge_3_f_score_cb": 0.09091,
      "rouge_3_f_score_ce": 0.09091,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.3125,
      "rouge_l_recall_cb": 0.3125,
      "rouge_l_recall_ce": 0.3125,
      "rouge_l_precision": 0.5,
      "rouge_l_precision_cb": 0.5,
      "rouge_l_precision_ce": 0.5,
      "rouge_l_f_score": 0.38462,
      "rouge_l_f_score_cb": 0.38462,
      "rouge_l_f_score_ce": 0.38462,
      "rouge_w_1.2_recall": 0.15073,
      "rouge_w_1.2_recall_cb": 0.15073,
      "rouge_w_1.2_recall_ce": 0.15073,
      "rouge_w_1.2_precision": 0.41991,
      "rouge_w_1.2_precision_cb": 0.41991,
      "rouge_w_1.2_precision_ce": 0.41991,
      "rouge_w_1.2_f_score": 0.22183,
      "rouge_w_1.2_f_score_cb": 0.22183,
      "rouge_w_1.2_f_score_ce": 0.22183,
      "rouge_s*_recall": 0.10833,
      "rouge_s*_recall_cb": 0.10833,
      "rouge_s*_recall_ce": 0.10833,
      "rouge_s*_precision": 0.28889,
      "rouge_s*_precision_cb": 0.28889,
      "rouge_s*_precision_ce": 0.28889,
      "rouge_s*_f_score": 0.15757,
      "rouge_s*_f_score_cb": 0.15757,
      "rouge_s*_f_score_ce": 0.15757,
      "rouge_su*_recall": 0.13333,
      "rouge_su*_recall_cb": 0.13333,
      "rouge_su*_recall_ce": 0.13333,
      "rouge_su*_precision": 0.33333,
      "rouge_su*_precision_cb": 0.33333,
      "rouge_su*_precision_ce": 0.33333,
      "rouge_su*_f_score": 0.19047,
      "rouge_su*_f_score_cb": 0.19047,
      "rouge_su*_f_score_ce": 0.19047
    }
  },
  {
    "id": 37,
    "filename": "PandasEval_37.txt",
    "dataset_comment": "Clip the values of `col_1` between -2 and 2 where `col_0` is equal to 'a' using the `clip` function in Pandas.",
    "generated_comment": "Modify the 'col_1' values for rows where 'col_0' is 'a' to be within the range [-2, 2] using the clip method.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.65217,
      "rouge_1_recall_cb": 0.65217,
      "rouge_1_recall_ce": 0.65217,
      "rouge_1_precision": 0.65217,
      "rouge_1_precision_cb": 0.65217,
      "rouge_1_precision_ce": 0.65217,
      "rouge_1_f_score": 0.65217,
      "rouge_1_f_score_cb": 0.65217,
      "rouge_1_f_score_ce": 0.65217,
      "rouge_2_recall": 0.27273,
      "rouge_2_recall_cb": 0.27273,
      "rouge_2_recall_ce": 0.27273,
      "rouge_2_precision": 0.27273,
      "rouge_2_precision_cb": 0.27273,
      "rouge_2_precision_ce": 0.27273,
      "rouge_2_f_score": 0.27273,
      "rouge_2_f_score_cb": 0.27273,
      "rouge_2_f_score_ce": 0.27273,
      "rouge_3_recall": 0.14286,
      "rouge_3_recall_cb": 0.14286,
      "rouge_3_recall_ce": 0.14286,
      "rouge_3_precision": 0.14286,
      "rouge_3_precision_cb": 0.14286,
      "rouge_3_precision_ce": 0.14286,
      "rouge_3_f_score": 0.14286,
      "rouge_3_f_score_cb": 0.14286,
      "rouge_3_f_score_ce": 0.14286,
      "rouge_4_recall": 0.05,
      "rouge_4_recall_cb": 0.05,
      "rouge_4_recall_ce": 0.05,
      "rouge_4_precision": 0.05,
      "rouge_4_precision_cb": 0.05,
      "rouge_4_precision_ce": 0.05,
      "rouge_4_f_score": 0.05,
      "rouge_4_f_score_cb": 0.05,
      "rouge_4_f_score_ce": 0.05,
      "rouge_l_recall": 0.47826,
      "rouge_l_recall_cb": 0.47826,
      "rouge_l_recall_ce": 0.47826,
      "rouge_l_precision": 0.47826,
      "rouge_l_precision_cb": 0.47826,
      "rouge_l_precision_ce": 0.47826,
      "rouge_l_f_score": 0.47826,
      "rouge_l_f_score_cb": 0.47826,
      "rouge_l_f_score_ce": 0.47826,
      "rouge_w_1.2_recall": 0.20082,
      "rouge_w_1.2_recall_cb": 0.20082,
      "rouge_w_1.2_recall_ce": 0.20082,
      "rouge_w_1.2_precision": 0.37597,
      "rouge_w_1.2_precision_cb": 0.37597,
      "rouge_w_1.2_precision_ce": 0.37597,
      "rouge_w_1.2_f_score": 0.2618,
      "rouge_w_1.2_f_score_cb": 0.2618,
      "rouge_w_1.2_f_score_ce": 0.2618,
      "rouge_s*_recall": 0.35573,
      "rouge_s*_recall_cb": 0.35573,
      "rouge_s*_recall_ce": 0.35573,
      "rouge_s*_precision": 0.35573,
      "rouge_s*_precision_cb": 0.35573,
      "rouge_s*_precision_ce": 0.35573,
      "rouge_s*_f_score": 0.35573,
      "rouge_s*_f_score_cb": 0.35573,
      "rouge_s*_f_score_ce": 0.35573,
      "rouge_su*_recall": 0.38182,
      "rouge_su*_recall_cb": 0.38182,
      "rouge_su*_recall_ce": 0.38182,
      "rouge_su*_precision": 0.38182,
      "rouge_su*_precision_cb": 0.38182,
      "rouge_su*_precision_ce": 0.38182,
      "rouge_su*_f_score": 0.38182,
      "rouge_su*_f_score_cb": 0.38182,
      "rouge_su*_f_score_ce": 0.38182
    }
  },
  {
    "id": 38,
    "filename": "PandasEval_38.txt",
    "dataset_comment": "Change the column labels of df and return the renamed dataframe.",
    "generated_comment": "Rename the columns of the DataFrame by mapping the original names to the new names using the `rename` method.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.54545,
      "rouge_1_recall_cb": 0.54545,
      "rouge_1_recall_ce": 0.54545,
      "rouge_1_precision": 0.31579,
      "rouge_1_precision_cb": 0.31579,
      "rouge_1_precision_ce": 0.31579,
      "rouge_1_f_score": 0.4,
      "rouge_1_f_score_cb": 0.4,
      "rouge_1_f_score_ce": 0.4,
      "rouge_2_recall": 0.2,
      "rouge_2_recall_cb": 0.2,
      "rouge_2_recall_ce": 0.2,
      "rouge_2_precision": 0.11111,
      "rouge_2_precision_cb": 0.11111,
      "rouge_2_precision_ce": 0.11111,
      "rouge_2_f_score": 0.14286,
      "rouge_2_f_score_cb": 0.14286,
      "rouge_2_f_score_ce": 0.14286,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.45455,
      "rouge_l_recall_cb": 0.45455,
      "rouge_l_recall_ce": 0.45455,
      "rouge_l_precision": 0.26316,
      "rouge_l_precision_cb": 0.26316,
      "rouge_l_precision_ce": 0.26316,
      "rouge_l_f_score": 0.33334,
      "rouge_l_f_score_cb": 0.33334,
      "rouge_l_f_score_ce": 0.33334,
      "rouge_w_1.2_recall": 0.23631,
      "rouge_w_1.2_recall_cb": 0.23631,
      "rouge_w_1.2_recall_ce": 0.23631,
      "rouge_w_1.2_precision": 0.221,
      "rouge_w_1.2_precision_cb": 0.221,
      "rouge_w_1.2_precision_ce": 0.221,
      "rouge_w_1.2_f_score": 0.2284,
      "rouge_w_1.2_f_score_cb": 0.2284,
      "rouge_w_1.2_f_score_ce": 0.2284,
      "rouge_s*_recall": 0.27273,
      "rouge_s*_recall_cb": 0.27273,
      "rouge_s*_recall_ce": 0.27273,
      "rouge_s*_precision": 0.08772,
      "rouge_s*_precision_cb": 0.08772,
      "rouge_s*_precision_ce": 0.08772,
      "rouge_s*_f_score": 0.13274,
      "rouge_s*_f_score_cb": 0.13274,
      "rouge_s*_f_score_ce": 0.13274,
      "rouge_su*_recall": 0.30769,
      "rouge_su*_recall_cb": 0.30769,
      "rouge_su*_recall_ce": 0.30769,
      "rouge_su*_precision": 0.10582,
      "rouge_su*_precision_cb": 0.10582,
      "rouge_su*_precision_ce": 0.10582,
      "rouge_su*_f_score": 0.15748,
      "rouge_su*_f_score_cb": 0.15748,
      "rouge_su*_f_score_ce": 0.15748
    }
  },
  {
    "id": 39,
    "filename": "PandasEval_39.txt",
    "dataset_comment": "Change all columns' types of the DataFrame to numeric and return the new DataFrame.",
    "generated_comment": "Convert all columns in the DataFrame to numeric type using pd.to_numeric.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5,
      "rouge_1_recall_cb": 0.5,
      "rouge_1_recall_ce": 0.5,
      "rouge_1_precision": 0.53846,
      "rouge_1_precision_cb": 0.53846,
      "rouge_1_precision_ce": 0.53846,
      "rouge_1_f_score": 0.51852,
      "rouge_1_f_score_cb": 0.51852,
      "rouge_1_f_score_ce": 0.51852,
      "rouge_2_recall": 0.30769,
      "rouge_2_recall_cb": 0.30769,
      "rouge_2_recall_ce": 0.30769,
      "rouge_2_precision": 0.33333,
      "rouge_2_precision_cb": 0.33333,
      "rouge_2_precision_ce": 0.33333,
      "rouge_2_f_score": 0.32,
      "rouge_2_f_score_cb": 0.32,
      "rouge_2_f_score_ce": 0.32,
      "rouge_3_recall": 0.16667,
      "rouge_3_recall_cb": 0.16667,
      "rouge_3_recall_ce": 0.16667,
      "rouge_3_precision": 0.18182,
      "rouge_3_precision_cb": 0.18182,
      "rouge_3_precision_ce": 0.18182,
      "rouge_3_f_score": 0.17392,
      "rouge_3_f_score_cb": 0.17392,
      "rouge_3_f_score_ce": 0.17392,
      "rouge_4_recall": 0.09091,
      "rouge_4_recall_cb": 0.09091,
      "rouge_4_recall_ce": 0.09091,
      "rouge_4_precision": 0.1,
      "rouge_4_precision_cb": 0.1,
      "rouge_4_precision_ce": 0.1,
      "rouge_4_f_score": 0.09524,
      "rouge_4_f_score_cb": 0.09524,
      "rouge_4_f_score_ce": 0.09524,
      "rouge_l_recall": 0.42857,
      "rouge_l_recall_cb": 0.42857,
      "rouge_l_recall_ce": 0.42857,
      "rouge_l_precision": 0.46154,
      "rouge_l_precision_cb": 0.46154,
      "rouge_l_precision_ce": 0.46154,
      "rouge_l_f_score": 0.44444,
      "rouge_l_f_score_cb": 0.44444,
      "rouge_l_f_score_ce": 0.44444,
      "rouge_w_1.2_recall": 0.22776,
      "rouge_w_1.2_recall_cb": 0.22776,
      "rouge_w_1.2_recall_ce": 0.22776,
      "rouge_w_1.2_precision": 0.41581,
      "rouge_w_1.2_precision_cb": 0.41581,
      "rouge_w_1.2_precision_ce": 0.41581,
      "rouge_w_1.2_f_score": 0.29431,
      "rouge_w_1.2_f_score_cb": 0.29431,
      "rouge_w_1.2_f_score_ce": 0.29431,
      "rouge_s*_recall": 0.20879,
      "rouge_s*_recall_cb": 0.20879,
      "rouge_s*_recall_ce": 0.20879,
      "rouge_s*_precision": 0.24359,
      "rouge_s*_precision_cb": 0.24359,
      "rouge_s*_precision_ce": 0.24359,
      "rouge_s*_f_score": 0.22485,
      "rouge_s*_f_score_cb": 0.22485,
      "rouge_s*_f_score_ce": 0.22485,
      "rouge_su*_recall": 0.25,
      "rouge_su*_recall_cb": 0.25,
      "rouge_su*_recall_ce": 0.25,
      "rouge_su*_precision": 0.28889,
      "rouge_su*_precision_cb": 0.28889,
      "rouge_su*_precision_ce": 0.28889,
      "rouge_su*_f_score": 0.26804,
      "rouge_su*_f_score_cb": 0.26804,
      "rouge_su*_f_score_ce": 0.26804
    }
  },
  {
    "id": 40,
    "filename": "PandasEval_40.txt",
    "dataset_comment": "Return the average/mean of the column.",
    "generated_comment": "Calculate the mean of a specific column in a DataFrame efficiently using pandas.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.57143,
      "rouge_1_recall_cb": 0.57143,
      "rouge_1_recall_ce": 0.57143,
      "rouge_1_precision": 0.30769,
      "rouge_1_precision_cb": 0.30769,
      "rouge_1_precision_ce": 0.30769,
      "rouge_1_f_score": 0.4,
      "rouge_1_f_score_cb": 0.4,
      "rouge_1_f_score_ce": 0.4,
      "rouge_2_recall": 0.16667,
      "rouge_2_recall_cb": 0.16667,
      "rouge_2_recall_ce": 0.16667,
      "rouge_2_precision": 0.08333,
      "rouge_2_precision_cb": 0.08333,
      "rouge_2_precision_ce": 0.08333,
      "rouge_2_f_score": 0.11111,
      "rouge_2_f_score_cb": 0.11111,
      "rouge_2_f_score_ce": 0.11111,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.57143,
      "rouge_l_recall_cb": 0.57143,
      "rouge_l_recall_ce": 0.57143,
      "rouge_l_precision": 0.30769,
      "rouge_l_precision_cb": 0.30769,
      "rouge_l_precision_ce": 0.30769,
      "rouge_l_f_score": 0.4,
      "rouge_l_f_score_cb": 0.4,
      "rouge_l_f_score_ce": 0.4,
      "rouge_w_1.2_recall": 0.32625,
      "rouge_w_1.2_recall_cb": 0.32625,
      "rouge_w_1.2_recall_ce": 0.32625,
      "rouge_w_1.2_precision": 0.25926,
      "rouge_w_1.2_precision_cb": 0.25926,
      "rouge_w_1.2_precision_ce": 0.25926,
      "rouge_w_1.2_f_score": 0.28892,
      "rouge_w_1.2_f_score_cb": 0.28892,
      "rouge_w_1.2_f_score_ce": 0.28892,
      "rouge_s*_recall": 0.28571,
      "rouge_s*_recall_cb": 0.28571,
      "rouge_s*_recall_ce": 0.28571,
      "rouge_s*_precision": 0.07692,
      "rouge_s*_precision_cb": 0.07692,
      "rouge_s*_precision_ce": 0.07692,
      "rouge_s*_f_score": 0.12121,
      "rouge_s*_f_score_cb": 0.12121,
      "rouge_s*_f_score_ce": 0.12121,
      "rouge_su*_recall": 0.33333,
      "rouge_su*_recall_cb": 0.33333,
      "rouge_su*_recall_ce": 0.33333,
      "rouge_su*_precision": 0.1,
      "rouge_su*_precision_cb": 0.1,
      "rouge_su*_precision_ce": 0.1,
      "rouge_su*_f_score": 0.15385,
      "rouge_su*_f_score_cb": 0.15385,
      "rouge_su*_f_score_ce": 0.15385
    }
  },
  {
    "id": 41,
    "filename": "PandasEval_41.txt",
    "dataset_comment": "Determine whether a Pandas Column contains a particular value and return the result.",
    "generated_comment": "Check if a particular value exists in a pandas Series by converting the Series to a set of unique values and checking for membership.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.53846,
      "rouge_1_recall_cb": 0.53846,
      "rouge_1_recall_ce": 0.53846,
      "rouge_1_precision": 0.29167,
      "rouge_1_precision_cb": 0.29167,
      "rouge_1_precision_ce": 0.29167,
      "rouge_1_f_score": 0.37838,
      "rouge_1_f_score_cb": 0.37838,
      "rouge_1_f_score_ce": 0.37838,
      "rouge_2_recall": 0.33333,
      "rouge_2_recall_cb": 0.33333,
      "rouge_2_recall_ce": 0.33333,
      "rouge_2_precision": 0.17391,
      "rouge_2_precision_cb": 0.17391,
      "rouge_2_precision_ce": 0.17391,
      "rouge_2_f_score": 0.22857,
      "rouge_2_f_score_cb": 0.22857,
      "rouge_2_f_score_ce": 0.22857,
      "rouge_3_recall": 0.09091,
      "rouge_3_recall_cb": 0.09091,
      "rouge_3_recall_ce": 0.09091,
      "rouge_3_precision": 0.04545,
      "rouge_3_precision_cb": 0.04545,
      "rouge_3_precision_ce": 0.04545,
      "rouge_3_f_score": 0.0606,
      "rouge_3_f_score_cb": 0.0606,
      "rouge_3_f_score_ce": 0.0606,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.38462,
      "rouge_l_recall_cb": 0.38462,
      "rouge_l_recall_ce": 0.38462,
      "rouge_l_precision": 0.20833,
      "rouge_l_precision_cb": 0.20833,
      "rouge_l_precision_ce": 0.20833,
      "rouge_l_f_score": 0.27027,
      "rouge_l_f_score_cb": 0.27027,
      "rouge_l_f_score_ce": 0.27027,
      "rouge_w_1.2_recall": 0.19338,
      "rouge_w_1.2_recall_cb": 0.19338,
      "rouge_w_1.2_recall_ce": 0.19338,
      "rouge_w_1.2_precision": 0.17496,
      "rouge_w_1.2_precision_cb": 0.17496,
      "rouge_w_1.2_precision_ce": 0.17496,
      "rouge_w_1.2_f_score": 0.18371,
      "rouge_w_1.2_f_score_cb": 0.18371,
      "rouge_w_1.2_f_score_ce": 0.18371,
      "rouge_s*_recall": 0.23077,
      "rouge_s*_recall_cb": 0.23077,
      "rouge_s*_recall_ce": 0.23077,
      "rouge_s*_precision": 0.06522,
      "rouge_s*_precision_cb": 0.06522,
      "rouge_s*_precision_ce": 0.06522,
      "rouge_s*_f_score": 0.1017,
      "rouge_s*_f_score_cb": 0.1017,
      "rouge_s*_f_score_ce": 0.1017,
      "rouge_su*_recall": 0.27778,
      "rouge_su*_recall_cb": 0.27778,
      "rouge_su*_recall_ce": 0.27778,
      "rouge_su*_precision": 0.08361,
      "rouge_su*_precision_cb": 0.08361,
      "rouge_su*_precision_ce": 0.08361,
      "rouge_su*_f_score": 0.12853,
      "rouge_su*_f_score_cb": 0.12853,
      "rouge_su*_f_score_ce": 0.12853
    }
  },
  {
    "id": 42,
    "filename": "PandasEval_42.txt",
    "dataset_comment": "Delete the first n rows of a DataFrame. Input:   df: DataFrame   n: int Return:   DataFrame after deleting the first n rows.",
    "generated_comment": "Delete the first n rows of the DataFrame df and return the resulting DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.52381,
      "rouge_1_recall_cb": 0.52381,
      "rouge_1_recall_ce": 0.52381,
      "rouge_1_precision": 0.78571,
      "rouge_1_precision_cb": 0.78571,
      "rouge_1_precision_ce": 0.78571,
      "rouge_1_f_score": 0.62857,
      "rouge_1_f_score_cb": 0.62857,
      "rouge_1_f_score_ce": 0.62857,
      "rouge_2_recall": 0.25,
      "rouge_2_recall_cb": 0.25,
      "rouge_2_recall_ce": 0.25,
      "rouge_2_precision": 0.38462,
      "rouge_2_precision_cb": 0.38462,
      "rouge_2_precision_ce": 0.38462,
      "rouge_2_f_score": 0.30303,
      "rouge_2_f_score_cb": 0.30303,
      "rouge_2_f_score_ce": 0.30303,
      "rouge_3_recall": 0.21053,
      "rouge_3_recall_cb": 0.21053,
      "rouge_3_recall_ce": 0.21053,
      "rouge_3_precision": 0.33333,
      "rouge_3_precision_cb": 0.33333,
      "rouge_3_precision_ce": 0.33333,
      "rouge_3_f_score": 0.25807,
      "rouge_3_f_score_cb": 0.25807,
      "rouge_3_f_score_ce": 0.25807,
      "rouge_4_recall": 0.16667,
      "rouge_4_recall_cb": 0.16667,
      "rouge_4_recall_ce": 0.16667,
      "rouge_4_precision": 0.27273,
      "rouge_4_precision_cb": 0.27273,
      "rouge_4_precision_ce": 0.27273,
      "rouge_4_f_score": 0.2069,
      "rouge_4_f_score_cb": 0.2069,
      "rouge_4_f_score_ce": 0.2069,
      "rouge_l_recall": 0.47619,
      "rouge_l_recall_cb": 0.47619,
      "rouge_l_recall_ce": 0.47619,
      "rouge_l_precision": 0.71429,
      "rouge_l_precision_cb": 0.71429,
      "rouge_l_precision_ce": 0.71429,
      "rouge_l_f_score": 0.57143,
      "rouge_l_f_score_cb": 0.57143,
      "rouge_l_f_score_ce": 0.57143,
      "rouge_w_1.2_recall": 0.21795,
      "rouge_w_1.2_recall_cb": 0.21795,
      "rouge_w_1.2_recall_ce": 0.21795,
      "rouge_w_1.2_precision": 0.60102,
      "rouge_w_1.2_precision_cb": 0.60102,
      "rouge_w_1.2_precision_ce": 0.60102,
      "rouge_w_1.2_f_score": 0.3199,
      "rouge_w_1.2_f_score_cb": 0.3199,
      "rouge_w_1.2_f_score_ce": 0.3199,
      "rouge_s*_recall": 0.27143,
      "rouge_s*_recall_cb": 0.27143,
      "rouge_s*_recall_ce": 0.27143,
      "rouge_s*_precision": 0.62637,
      "rouge_s*_precision_cb": 0.62637,
      "rouge_s*_precision_ce": 0.62637,
      "rouge_s*_f_score": 0.37874,
      "rouge_s*_f_score_cb": 0.37874,
      "rouge_s*_f_score_ce": 0.37874,
      "rouge_su*_recall": 0.2913,
      "rouge_su*_recall_cb": 0.2913,
      "rouge_su*_recall_ce": 0.2913,
      "rouge_su*_precision": 0.64423,
      "rouge_su*_precision_cb": 0.64423,
      "rouge_su*_precision_ce": 0.64423,
      "rouge_su*_f_score": 0.40119,
      "rouge_su*_f_score_cb": 0.40119,
      "rouge_su*_f_score_ce": 0.40119
    }
  },
  {
    "id": 43,
    "filename": "PandasEval_43.txt",
    "dataset_comment": "Specify a new column named `mean_along_rows` that contains the mean of each row by computing the mean along the rows using axis=1. Finally, return the dataframe with the new column.",
    "generated_comment": "Compute the mean of each row in the DataFrame and add it as a new column 'mean'.Ensure that the function handles DataFrames with numeric data only.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.45455,
      "rouge_1_recall_cb": 0.45455,
      "rouge_1_recall_ce": 0.45455,
      "rouge_1_precision": 0.55556,
      "rouge_1_precision_cb": 0.55556,
      "rouge_1_precision_ce": 0.55556,
      "rouge_1_f_score": 0.5,
      "rouge_1_f_score_cb": 0.5,
      "rouge_1_f_score_ce": 0.5,
      "rouge_2_recall": 0.28125,
      "rouge_2_recall_cb": 0.28125,
      "rouge_2_recall_ce": 0.28125,
      "rouge_2_precision": 0.34615,
      "rouge_2_precision_cb": 0.34615,
      "rouge_2_precision_ce": 0.34615,
      "rouge_2_f_score": 0.31034,
      "rouge_2_f_score_cb": 0.31034,
      "rouge_2_f_score_ce": 0.31034,
      "rouge_3_recall": 0.16129,
      "rouge_3_recall_cb": 0.16129,
      "rouge_3_recall_ce": 0.16129,
      "rouge_3_precision": 0.2,
      "rouge_3_precision_cb": 0.2,
      "rouge_3_precision_ce": 0.2,
      "rouge_3_f_score": 0.17857,
      "rouge_3_f_score_cb": 0.17857,
      "rouge_3_f_score_ce": 0.17857,
      "rouge_4_recall": 0.06667,
      "rouge_4_recall_cb": 0.06667,
      "rouge_4_recall_ce": 0.06667,
      "rouge_4_precision": 0.08333,
      "rouge_4_precision_cb": 0.08333,
      "rouge_4_precision_ce": 0.08333,
      "rouge_4_f_score": 0.07407,
      "rouge_4_f_score_cb": 0.07407,
      "rouge_4_f_score_ce": 0.07407,
      "rouge_l_recall": 0.30303,
      "rouge_l_recall_cb": 0.30303,
      "rouge_l_recall_ce": 0.30303,
      "rouge_l_precision": 0.37037,
      "rouge_l_precision_cb": 0.37037,
      "rouge_l_precision_ce": 0.37037,
      "rouge_l_f_score": 0.33333,
      "rouge_l_f_score_cb": 0.33333,
      "rouge_l_f_score_ce": 0.33333,
      "rouge_w_1.2_recall": 0.12351,
      "rouge_w_1.2_recall_cb": 0.12351,
      "rouge_w_1.2_recall_ce": 0.12351,
      "rouge_w_1.2_precision": 0.30377,
      "rouge_w_1.2_precision_cb": 0.30377,
      "rouge_w_1.2_precision_ce": 0.30377,
      "rouge_w_1.2_f_score": 0.17562,
      "rouge_w_1.2_f_score_cb": 0.17562,
      "rouge_w_1.2_f_score_ce": 0.17562,
      "rouge_s*_recall": 0.17992,
      "rouge_s*_recall_cb": 0.17992,
      "rouge_s*_recall_ce": 0.17992,
      "rouge_s*_precision": 0.27066,
      "rouge_s*_precision_cb": 0.27066,
      "rouge_s*_precision_ce": 0.27066,
      "rouge_s*_f_score": 0.21615,
      "rouge_s*_f_score_cb": 0.21615,
      "rouge_s*_f_score_ce": 0.21615,
      "rouge_su*_recall": 0.19643,
      "rouge_su*_recall_cb": 0.19643,
      "rouge_su*_recall_ce": 0.19643,
      "rouge_su*_precision": 0.29178,
      "rouge_su*_precision_cb": 0.29178,
      "rouge_su*_precision_ce": 0.29178,
      "rouge_su*_f_score": 0.23479,
      "rouge_su*_f_score_cb": 0.23479,
      "rouge_su*_f_score_ce": 0.23479
    }
  },
  {
    "id": 44,
    "filename": "PandasEval_44.txt",
    "dataset_comment": "Delete a column from a Pandas DataFrame and return the changed DataFrame.",
    "generated_comment": "Delete a specified column from the DataFrame by using the drop method with axis=1.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5,
      "rouge_1_recall_cb": 0.5,
      "rouge_1_recall_ce": 0.5,
      "rouge_1_precision": 0.4,
      "rouge_1_precision_cb": 0.4,
      "rouge_1_precision_ce": 0.4,
      "rouge_1_f_score": 0.44444,
      "rouge_1_f_score_cb": 0.44444,
      "rouge_1_f_score_ce": 0.44444,
      "rouge_2_recall": 0.18182,
      "rouge_2_recall_cb": 0.18182,
      "rouge_2_recall_ce": 0.18182,
      "rouge_2_precision": 0.14286,
      "rouge_2_precision_cb": 0.14286,
      "rouge_2_precision_ce": 0.14286,
      "rouge_2_f_score": 0.16,
      "rouge_2_f_score_cb": 0.16,
      "rouge_2_f_score_ce": 0.16,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.4,
      "rouge_l_precision_cb": 0.4,
      "rouge_l_precision_ce": 0.4,
      "rouge_l_f_score": 0.44444,
      "rouge_l_f_score_cb": 0.44444,
      "rouge_l_f_score_ce": 0.44444,
      "rouge_w_1.2_recall": 0.26505,
      "rouge_w_1.2_recall_cb": 0.26505,
      "rouge_w_1.2_recall_ce": 0.26505,
      "rouge_w_1.2_precision": 0.34854,
      "rouge_w_1.2_precision_cb": 0.34854,
      "rouge_w_1.2_precision_ce": 0.34854,
      "rouge_w_1.2_f_score": 0.30111,
      "rouge_w_1.2_f_score_cb": 0.30111,
      "rouge_w_1.2_f_score_ce": 0.30111,
      "rouge_s*_recall": 0.25758,
      "rouge_s*_recall_cb": 0.25758,
      "rouge_s*_recall_ce": 0.25758,
      "rouge_s*_precision": 0.1619,
      "rouge_s*_precision_cb": 0.1619,
      "rouge_s*_precision_ce": 0.1619,
      "rouge_s*_f_score": 0.19883,
      "rouge_s*_f_score_cb": 0.19883,
      "rouge_s*_f_score_ce": 0.19883,
      "rouge_su*_recall": 0.2987,
      "rouge_su*_recall_cb": 0.2987,
      "rouge_su*_recall_ce": 0.2987,
      "rouge_su*_precision": 0.19328,
      "rouge_su*_precision_cb": 0.19328,
      "rouge_su*_precision_ce": 0.19328,
      "rouge_su*_f_score": 0.2347,
      "rouge_su*_f_score_cb": 0.2347,
      "rouge_su*_f_score_ce": 0.2347
    }
  },
  {
    "id": 45,
    "filename": "PandasEval_45.txt",
    "dataset_comment": "Find the intersection between two series by first creating two sets, one for each series, and then obtaining the intersection of the two sets.",
    "generated_comment": "Convert the pandas Series objects to sets for efficient set operations.Compute the intersection of the two sets to find common elements.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.45833,
      "rouge_1_recall_cb": 0.45833,
      "rouge_1_recall_ce": 0.45833,
      "rouge_1_precision": 0.5,
      "rouge_1_precision_cb": 0.5,
      "rouge_1_precision_ce": 0.5,
      "rouge_1_f_score": 0.47826,
      "rouge_1_f_score_cb": 0.47826,
      "rouge_1_f_score_ce": 0.47826,
      "rouge_2_recall": 0.21739,
      "rouge_2_recall_cb": 0.21739,
      "rouge_2_recall_ce": 0.21739,
      "rouge_2_precision": 0.2381,
      "rouge_2_precision_cb": 0.2381,
      "rouge_2_precision_ce": 0.2381,
      "rouge_2_f_score": 0.22727,
      "rouge_2_f_score_cb": 0.22727,
      "rouge_2_f_score_ce": 0.22727,
      "rouge_3_recall": 0.18182,
      "rouge_3_recall_cb": 0.18182,
      "rouge_3_recall_ce": 0.18182,
      "rouge_3_precision": 0.2,
      "rouge_3_precision_cb": 0.2,
      "rouge_3_precision_ce": 0.2,
      "rouge_3_f_score": 0.19048,
      "rouge_3_f_score_cb": 0.19048,
      "rouge_3_f_score_ce": 0.19048,
      "rouge_4_recall": 0.14286,
      "rouge_4_recall_cb": 0.14286,
      "rouge_4_recall_ce": 0.14286,
      "rouge_4_precision": 0.15789,
      "rouge_4_precision_cb": 0.15789,
      "rouge_4_precision_ce": 0.15789,
      "rouge_4_f_score": 0.15,
      "rouge_4_f_score_cb": 0.15,
      "rouge_4_f_score_ce": 0.15,
      "rouge_l_recall": 0.41667,
      "rouge_l_recall_cb": 0.41667,
      "rouge_l_recall_ce": 0.41667,
      "rouge_l_precision": 0.45455,
      "rouge_l_precision_cb": 0.45455,
      "rouge_l_precision_ce": 0.45455,
      "rouge_l_f_score": 0.43479,
      "rouge_l_f_score_cb": 0.43479,
      "rouge_l_f_score_ce": 0.43479,
      "rouge_w_1.2_recall": 0.1821,
      "rouge_w_1.2_recall_cb": 0.1821,
      "rouge_w_1.2_recall_ce": 0.1821,
      "rouge_w_1.2_precision": 0.3751,
      "rouge_w_1.2_precision_cb": 0.3751,
      "rouge_w_1.2_precision_ce": 0.3751,
      "rouge_w_1.2_f_score": 0.24517,
      "rouge_w_1.2_f_score_cb": 0.24517,
      "rouge_w_1.2_f_score_ce": 0.24517,
      "rouge_s*_recall": 0.16667,
      "rouge_s*_recall_cb": 0.16667,
      "rouge_s*_recall_ce": 0.16667,
      "rouge_s*_precision": 0.19913,
      "rouge_s*_precision_cb": 0.19913,
      "rouge_s*_precision_ce": 0.19913,
      "rouge_s*_f_score": 0.18146,
      "rouge_s*_f_score_cb": 0.18146,
      "rouge_s*_f_score_ce": 0.18146,
      "rouge_su*_recall": 0.18729,
      "rouge_su*_recall_cb": 0.18729,
      "rouge_su*_recall_ce": 0.18729,
      "rouge_su*_precision": 0.22222,
      "rouge_su*_precision_cb": 0.22222,
      "rouge_su*_precision_ce": 0.22222,
      "rouge_su*_f_score": 0.20327,
      "rouge_su*_f_score_cb": 0.20327,
      "rouge_su*_f_score_ce": 0.20327
    }
  },
  {
    "id": 46,
    "filename": "PandasEval_46.txt",
    "dataset_comment": "Get the values of column `A` when column `B` equals 3.",
    "generated_comment": "Extract values from column 'A' where the corresponding value in column 'B' is 3.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.63636,
      "rouge_1_recall_cb": 0.63636,
      "rouge_1_recall_ce": 0.63636,
      "rouge_1_precision": 0.5,
      "rouge_1_precision_cb": 0.5,
      "rouge_1_precision_ce": 0.5,
      "rouge_1_f_score": 0.56,
      "rouge_1_f_score_cb": 0.56,
      "rouge_1_f_score_ce": 0.56,
      "rouge_2_recall": 0.2,
      "rouge_2_recall_cb": 0.2,
      "rouge_2_recall_ce": 0.2,
      "rouge_2_precision": 0.15385,
      "rouge_2_precision_cb": 0.15385,
      "rouge_2_precision_ce": 0.15385,
      "rouge_2_f_score": 0.17392,
      "rouge_2_f_score_cb": 0.17392,
      "rouge_2_f_score_ce": 0.17392,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.54545,
      "rouge_l_recall_cb": 0.54545,
      "rouge_l_recall_ce": 0.54545,
      "rouge_l_precision": 0.42857,
      "rouge_l_precision_cb": 0.42857,
      "rouge_l_precision_ce": 0.42857,
      "rouge_l_f_score": 0.48,
      "rouge_l_f_score_cb": 0.48,
      "rouge_l_f_score_ce": 0.48,
      "rouge_w_1.2_recall": 0.27102,
      "rouge_w_1.2_recall_cb": 0.27102,
      "rouge_w_1.2_recall_ce": 0.27102,
      "rouge_w_1.2_precision": 0.34399,
      "rouge_w_1.2_precision_cb": 0.34399,
      "rouge_w_1.2_precision_ce": 0.34399,
      "rouge_w_1.2_f_score": 0.30318,
      "rouge_w_1.2_f_score_cb": 0.30318,
      "rouge_w_1.2_f_score_ce": 0.30318,
      "rouge_s*_recall": 0.34545,
      "rouge_s*_recall_cb": 0.34545,
      "rouge_s*_recall_ce": 0.34545,
      "rouge_s*_precision": 0.20879,
      "rouge_s*_precision_cb": 0.20879,
      "rouge_s*_precision_ce": 0.20879,
      "rouge_s*_f_score": 0.26027,
      "rouge_s*_f_score_cb": 0.26027,
      "rouge_s*_f_score_ce": 0.26027,
      "rouge_su*_recall": 0.38462,
      "rouge_su*_recall_cb": 0.38462,
      "rouge_su*_recall_ce": 0.38462,
      "rouge_su*_precision": 0.24038,
      "rouge_su*_precision_cb": 0.24038,
      "rouge_su*_precision_ce": 0.24038,
      "rouge_su*_f_score": 0.29586,
      "rouge_su*_f_score_cb": 0.29586,
      "rouge_su*_f_score_ce": 0.29586
    }
  },
  {
    "id": 47,
    "filename": "PandasEval_47.txt",
    "dataset_comment": "Make all column headers in the Pandas DataFrame lowercase.",
    "generated_comment": "Convert all column headers in the DataFrame to lowercase.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.77778,
      "rouge_1_recall_cb": 0.77778,
      "rouge_1_recall_ce": 0.77778,
      "rouge_1_precision": 0.77778,
      "rouge_1_precision_cb": 0.77778,
      "rouge_1_precision_ce": 0.77778,
      "rouge_1_f_score": 0.77778,
      "rouge_1_f_score_cb": 0.77778,
      "rouge_1_f_score_ce": 0.77778,
      "rouge_2_recall": 0.5,
      "rouge_2_recall_cb": 0.5,
      "rouge_2_recall_ce": 0.5,
      "rouge_2_precision": 0.5,
      "rouge_2_precision_cb": 0.5,
      "rouge_2_precision_ce": 0.5,
      "rouge_2_f_score": 0.5,
      "rouge_2_f_score_cb": 0.5,
      "rouge_2_f_score_ce": 0.5,
      "rouge_3_recall": 0.42857,
      "rouge_3_recall_cb": 0.42857,
      "rouge_3_recall_ce": 0.42857,
      "rouge_3_precision": 0.42857,
      "rouge_3_precision_cb": 0.42857,
      "rouge_3_precision_ce": 0.42857,
      "rouge_3_f_score": 0.42857,
      "rouge_3_f_score_cb": 0.42857,
      "rouge_3_f_score_ce": 0.42857,
      "rouge_4_recall": 0.33333,
      "rouge_4_recall_cb": 0.33333,
      "rouge_4_recall_ce": 0.33333,
      "rouge_4_precision": 0.33333,
      "rouge_4_precision_cb": 0.33333,
      "rouge_4_precision_ce": 0.33333,
      "rouge_4_f_score": 0.33333,
      "rouge_4_f_score_cb": 0.33333,
      "rouge_4_f_score_ce": 0.33333,
      "rouge_l_recall": 0.77778,
      "rouge_l_recall_cb": 0.77778,
      "rouge_l_recall_ce": 0.77778,
      "rouge_l_precision": 0.77778,
      "rouge_l_precision_cb": 0.77778,
      "rouge_l_precision_ce": 0.77778,
      "rouge_l_f_score": 0.77778,
      "rouge_l_f_score_cb": 0.77778,
      "rouge_l_f_score_ce": 0.77778,
      "rouge_w_1.2_recall": 0.45489,
      "rouge_w_1.2_recall_cb": 0.45489,
      "rouge_w_1.2_recall_ce": 0.45489,
      "rouge_w_1.2_precision": 0.70592,
      "rouge_w_1.2_precision_cb": 0.70592,
      "rouge_w_1.2_precision_ce": 0.70592,
      "rouge_w_1.2_f_score": 0.55326,
      "rouge_w_1.2_f_score_cb": 0.55326,
      "rouge_w_1.2_f_score_ce": 0.55326,
      "rouge_s*_recall": 0.58333,
      "rouge_s*_recall_cb": 0.58333,
      "rouge_s*_recall_ce": 0.58333,
      "rouge_s*_precision": 0.58333,
      "rouge_s*_precision_cb": 0.58333,
      "rouge_s*_precision_ce": 0.58333,
      "rouge_s*_f_score": 0.58333,
      "rouge_s*_f_score_cb": 0.58333,
      "rouge_s*_f_score_ce": 0.58333,
      "rouge_su*_recall": 0.61364,
      "rouge_su*_recall_cb": 0.61364,
      "rouge_su*_recall_ce": 0.61364,
      "rouge_su*_precision": 0.61364,
      "rouge_su*_precision_cb": 0.61364,
      "rouge_su*_precision_ce": 0.61364,
      "rouge_su*_f_score": 0.61364,
      "rouge_su*_f_score_cb": 0.61364,
      "rouge_su*_f_score_ce": 0.61364
    }
  },
  {
    "id": 48,
    "filename": "PandasEval_48.txt",
    "dataset_comment": "Check if any word from `targets` is present in the sentence.",
    "generated_comment": "Filter the DataFrame to include only rows where the 'col' column contains any of the values in the 'targets' list using the isin method.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.36364,
      "rouge_1_recall_cb": 0.36364,
      "rouge_1_recall_ce": 0.36364,
      "rouge_1_precision": 0.16667,
      "rouge_1_precision_cb": 0.16667,
      "rouge_1_precision_ce": 0.16667,
      "rouge_1_f_score": 0.22858,
      "rouge_1_f_score_cb": 0.22858,
      "rouge_1_f_score_ce": 0.22858,
      "rouge_2_recall": 0.1,
      "rouge_2_recall_cb": 0.1,
      "rouge_2_recall_ce": 0.1,
      "rouge_2_precision": 0.04348,
      "rouge_2_precision_cb": 0.04348,
      "rouge_2_precision_ce": 0.04348,
      "rouge_2_f_score": 0.06061,
      "rouge_2_f_score_cb": 0.06061,
      "rouge_2_f_score_ce": 0.06061,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.27273,
      "rouge_l_recall_cb": 0.27273,
      "rouge_l_recall_ce": 0.27273,
      "rouge_l_precision": 0.125,
      "rouge_l_precision_cb": 0.125,
      "rouge_l_precision_ce": 0.125,
      "rouge_l_f_score": 0.17143,
      "rouge_l_f_score_cb": 0.17143,
      "rouge_l_f_score_ce": 0.17143,
      "rouge_w_1.2_recall": 0.1521,
      "rouge_w_1.2_recall_cb": 0.1521,
      "rouge_w_1.2_recall_ce": 0.1521,
      "rouge_w_1.2_precision": 0.11262,
      "rouge_w_1.2_precision_cb": 0.11262,
      "rouge_w_1.2_precision_ce": 0.11262,
      "rouge_w_1.2_f_score": 0.12942,
      "rouge_w_1.2_f_score_cb": 0.12942,
      "rouge_w_1.2_f_score_ce": 0.12942,
      "rouge_s*_recall": 0.09091,
      "rouge_s*_recall_cb": 0.09091,
      "rouge_s*_recall_ce": 0.09091,
      "rouge_s*_precision": 0.01812,
      "rouge_s*_precision_cb": 0.01812,
      "rouge_s*_precision_ce": 0.01812,
      "rouge_s*_f_score": 0.03022,
      "rouge_s*_f_score_cb": 0.03022,
      "rouge_s*_f_score_ce": 0.03022,
      "rouge_su*_recall": 0.13846,
      "rouge_su*_recall_cb": 0.13846,
      "rouge_su*_recall_ce": 0.13846,
      "rouge_su*_precision": 0.0301,
      "rouge_su*_precision_cb": 0.0301,
      "rouge_su*_precision_ce": 0.0301,
      "rouge_su*_f_score": 0.04945,
      "rouge_su*_f_score_cb": 0.04945,
      "rouge_su*_f_score_ce": 0.04945
    }
  },
  {
    "id": 49,
    "filename": "PandasEval_49.txt",
    "dataset_comment": "Find all unique values in a Pandas DataFrame, irrespective of rows or columns.  Use xx.values.ravel to get the flattened array of the DataFrame. Retrieve unique values using numpy.unique.",
    "generated_comment": "Find all unique values in the DataFrame and return them as a flattened numpy array.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.35484,
      "rouge_1_recall_cb": 0.35484,
      "rouge_1_recall_ce": 0.35484,
      "rouge_1_precision": 0.73333,
      "rouge_1_precision_cb": 0.73333,
      "rouge_1_precision_ce": 0.73333,
      "rouge_1_f_score": 0.47826,
      "rouge_1_f_score_cb": 0.47826,
      "rouge_1_f_score_ce": 0.47826,
      "rouge_2_recall": 0.16667,
      "rouge_2_recall_cb": 0.16667,
      "rouge_2_recall_ce": 0.16667,
      "rouge_2_precision": 0.35714,
      "rouge_2_precision_cb": 0.35714,
      "rouge_2_precision_ce": 0.35714,
      "rouge_2_f_score": 0.22728,
      "rouge_2_f_score_cb": 0.22728,
      "rouge_2_f_score_ce": 0.22728,
      "rouge_3_recall": 0.10345,
      "rouge_3_recall_cb": 0.10345,
      "rouge_3_recall_ce": 0.10345,
      "rouge_3_precision": 0.23077,
      "rouge_3_precision_cb": 0.23077,
      "rouge_3_precision_ce": 0.23077,
      "rouge_3_f_score": 0.14286,
      "rouge_3_f_score_cb": 0.14286,
      "rouge_3_f_score_ce": 0.14286,
      "rouge_4_recall": 0.07143,
      "rouge_4_recall_cb": 0.07143,
      "rouge_4_recall_ce": 0.07143,
      "rouge_4_precision": 0.16667,
      "rouge_4_precision_cb": 0.16667,
      "rouge_4_precision_ce": 0.16667,
      "rouge_4_f_score": 0.1,
      "rouge_4_f_score_cb": 0.1,
      "rouge_4_f_score_ce": 0.1,
      "rouge_l_recall": 0.25806,
      "rouge_l_recall_cb": 0.25806,
      "rouge_l_recall_ce": 0.25806,
      "rouge_l_precision": 0.53333,
      "rouge_l_precision_cb": 0.53333,
      "rouge_l_precision_ce": 0.53333,
      "rouge_l_f_score": 0.34782,
      "rouge_l_f_score_cb": 0.34782,
      "rouge_l_f_score_ce": 0.34782,
      "rouge_w_1.2_recall": 0.11239,
      "rouge_w_1.2_recall_cb": 0.11239,
      "rouge_w_1.2_recall_ce": 0.11239,
      "rouge_w_1.2_precision": 0.4616,
      "rouge_w_1.2_precision_cb": 0.4616,
      "rouge_w_1.2_precision_ce": 0.4616,
      "rouge_w_1.2_f_score": 0.18077,
      "rouge_w_1.2_f_score_cb": 0.18077,
      "rouge_w_1.2_f_score_ce": 0.18077,
      "rouge_s*_recall": 0.11183,
      "rouge_s*_recall_cb": 0.11183,
      "rouge_s*_recall_ce": 0.11183,
      "rouge_s*_precision": 0.49524,
      "rouge_s*_precision_cb": 0.49524,
      "rouge_s*_precision_ce": 0.49524,
      "rouge_s*_f_score": 0.18246,
      "rouge_s*_f_score_cb": 0.18246,
      "rouge_s*_f_score_ce": 0.18246,
      "rouge_su*_recall": 0.12525,
      "rouge_su*_recall_cb": 0.12525,
      "rouge_su*_recall_ce": 0.12525,
      "rouge_su*_precision": 0.52101,
      "rouge_su*_precision_cb": 0.52101,
      "rouge_su*_precision_ce": 0.52101,
      "rouge_su*_f_score": 0.20195,
      "rouge_su*_f_score_cb": 0.20195,
      "rouge_su*_f_score_ce": 0.20195
    }
  },
  {
    "id": 50,
    "filename": "PandasEval_50.txt",
    "dataset_comment": "Add a new column C that is the sum of the values in columns A and B.",
    "generated_comment": "Create a new column 'C' in the DataFrame by adding the values of columns 'A' and 'B'.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.76471,
      "rouge_1_recall_cb": 0.76471,
      "rouge_1_recall_ce": 0.76471,
      "rouge_1_precision": 0.76471,
      "rouge_1_precision_cb": 0.76471,
      "rouge_1_precision_ce": 0.76471,
      "rouge_1_f_score": 0.76471,
      "rouge_1_f_score_cb": 0.76471,
      "rouge_1_f_score_ce": 0.76471,
      "rouge_2_recall": 0.4375,
      "rouge_2_recall_cb": 0.4375,
      "rouge_2_recall_ce": 0.4375,
      "rouge_2_precision": 0.4375,
      "rouge_2_precision_cb": 0.4375,
      "rouge_2_precision_ce": 0.4375,
      "rouge_2_f_score": 0.4375,
      "rouge_2_f_score_cb": 0.4375,
      "rouge_2_f_score_ce": 0.4375,
      "rouge_3_recall": 0.26667,
      "rouge_3_recall_cb": 0.26667,
      "rouge_3_recall_ce": 0.26667,
      "rouge_3_precision": 0.26667,
      "rouge_3_precision_cb": 0.26667,
      "rouge_3_precision_ce": 0.26667,
      "rouge_3_f_score": 0.26667,
      "rouge_3_f_score_cb": 0.26667,
      "rouge_3_f_score_ce": 0.26667,
      "rouge_4_recall": 0.14286,
      "rouge_4_recall_cb": 0.14286,
      "rouge_4_recall_ce": 0.14286,
      "rouge_4_precision": 0.14286,
      "rouge_4_precision_cb": 0.14286,
      "rouge_4_precision_ce": 0.14286,
      "rouge_4_f_score": 0.14286,
      "rouge_4_f_score_cb": 0.14286,
      "rouge_4_f_score_ce": 0.14286,
      "rouge_l_recall": 0.64706,
      "rouge_l_recall_cb": 0.64706,
      "rouge_l_recall_ce": 0.64706,
      "rouge_l_precision": 0.64706,
      "rouge_l_precision_cb": 0.64706,
      "rouge_l_precision_ce": 0.64706,
      "rouge_l_f_score": 0.64706,
      "rouge_l_f_score_cb": 0.64706,
      "rouge_l_f_score_ce": 0.64706,
      "rouge_w_1.2_recall": 0.29837,
      "rouge_w_1.2_recall_cb": 0.29837,
      "rouge_w_1.2_recall_ce": 0.29837,
      "rouge_w_1.2_precision": 0.52584,
      "rouge_w_1.2_precision_cb": 0.52584,
      "rouge_w_1.2_precision_ce": 0.52584,
      "rouge_w_1.2_f_score": 0.38072,
      "rouge_w_1.2_f_score_cb": 0.38072,
      "rouge_w_1.2_f_score_ce": 0.38072,
      "rouge_s*_recall": 0.52941,
      "rouge_s*_recall_cb": 0.52941,
      "rouge_s*_recall_ce": 0.52941,
      "rouge_s*_precision": 0.52941,
      "rouge_s*_precision_cb": 0.52941,
      "rouge_s*_precision_ce": 0.52941,
      "rouge_s*_f_score": 0.52941,
      "rouge_s*_f_score_cb": 0.52941,
      "rouge_s*_f_score_ce": 0.52941,
      "rouge_su*_recall": 0.55263,
      "rouge_su*_recall_cb": 0.55263,
      "rouge_su*_recall_ce": 0.55263,
      "rouge_su*_precision": 0.55263,
      "rouge_su*_precision_cb": 0.55263,
      "rouge_su*_precision_ce": 0.55263,
      "rouge_su*_f_score": 0.55263,
      "rouge_su*_f_score_cb": 0.55263,
      "rouge_su*_f_score_ce": 0.55263
    }
  },
  {
    "id": 51,
    "filename": "PandasEval_51.txt",
    "dataset_comment": "Add a new column named 'Fruit Total' that sums the values of the other columns, ignoring the NaN values.",
    "generated_comment": "Calculate the total sum of each row, ignoring NaN values, and add the result as a new column 'Fruit Total'",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.68421,
      "rouge_1_recall_cb": 0.68421,
      "rouge_1_recall_ce": 0.68421,
      "rouge_1_precision": 0.65,
      "rouge_1_precision_cb": 0.65,
      "rouge_1_precision_ce": 0.65,
      "rouge_1_f_score": 0.66667,
      "rouge_1_f_score_cb": 0.66667,
      "rouge_1_f_score_ce": 0.66667,
      "rouge_2_recall": 0.22222,
      "rouge_2_recall_cb": 0.22222,
      "rouge_2_recall_ce": 0.22222,
      "rouge_2_precision": 0.21053,
      "rouge_2_precision_cb": 0.21053,
      "rouge_2_precision_ce": 0.21053,
      "rouge_2_f_score": 0.21622,
      "rouge_2_f_score_cb": 0.21622,
      "rouge_2_f_score_ce": 0.21622,
      "rouge_3_recall": 0.05882,
      "rouge_3_recall_cb": 0.05882,
      "rouge_3_recall_ce": 0.05882,
      "rouge_3_precision": 0.05556,
      "rouge_3_precision_cb": 0.05556,
      "rouge_3_precision_ce": 0.05556,
      "rouge_3_f_score": 0.05714,
      "rouge_3_f_score_cb": 0.05714,
      "rouge_3_f_score_ce": 0.05714,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.31579,
      "rouge_l_recall_cb": 0.31579,
      "rouge_l_recall_ce": 0.31579,
      "rouge_l_precision": 0.3,
      "rouge_l_precision_cb": 0.3,
      "rouge_l_precision_ce": 0.3,
      "rouge_l_f_score": 0.30769,
      "rouge_l_f_score_cb": 0.30769,
      "rouge_l_f_score_ce": 0.30769,
      "rouge_w_1.2_recall": 0.15788,
      "rouge_w_1.2_recall_cb": 0.15788,
      "rouge_w_1.2_recall_ce": 0.15788,
      "rouge_w_1.2_precision": 0.27028,
      "rouge_w_1.2_precision_cb": 0.27028,
      "rouge_w_1.2_precision_ce": 0.27028,
      "rouge_w_1.2_f_score": 0.19933,
      "rouge_w_1.2_f_score_cb": 0.19933,
      "rouge_w_1.2_f_score_ce": 0.19933,
      "rouge_s*_recall": 0.27485,
      "rouge_s*_recall_cb": 0.27485,
      "rouge_s*_recall_ce": 0.27485,
      "rouge_s*_precision": 0.24737,
      "rouge_s*_precision_cb": 0.24737,
      "rouge_s*_precision_ce": 0.24737,
      "rouge_s*_f_score": 0.26039,
      "rouge_s*_f_score_cb": 0.26039,
      "rouge_s*_f_score_ce": 0.26039,
      "rouge_su*_recall": 0.31746,
      "rouge_su*_recall_cb": 0.31746,
      "rouge_su*_recall_ce": 0.31746,
      "rouge_su*_precision": 0.28708,
      "rouge_su*_precision_cb": 0.28708,
      "rouge_su*_precision_ce": 0.28708,
      "rouge_su*_f_score": 0.30151,
      "rouge_su*_f_score_cb": 0.30151,
      "rouge_su*_f_score_ce": 0.30151
    }
  },
  {
    "id": 52,
    "filename": "PandasEval_52.txt",
    "dataset_comment": "Combine two dataframes while ignoring the index and return the concatenated dataframe.",
    "generated_comment": "Combine two DataFrames by appending df2 to df1 and resetting the index.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5,
      "rouge_1_recall_cb": 0.5,
      "rouge_1_recall_ce": 0.5,
      "rouge_1_precision": 0.5,
      "rouge_1_precision_cb": 0.5,
      "rouge_1_precision_ce": 0.5,
      "rouge_1_f_score": 0.5,
      "rouge_1_f_score_cb": 0.5,
      "rouge_1_f_score_ce": 0.5,
      "rouge_2_recall": 0.27273,
      "rouge_2_recall_cb": 0.27273,
      "rouge_2_recall_ce": 0.27273,
      "rouge_2_precision": 0.27273,
      "rouge_2_precision_cb": 0.27273,
      "rouge_2_precision_ce": 0.27273,
      "rouge_2_f_score": 0.27273,
      "rouge_2_f_score_cb": 0.27273,
      "rouge_2_f_score_ce": 0.27273,
      "rouge_3_recall": 0.1,
      "rouge_3_recall_cb": 0.1,
      "rouge_3_recall_ce": 0.1,
      "rouge_3_precision": 0.1,
      "rouge_3_precision_cb": 0.1,
      "rouge_3_precision_ce": 0.1,
      "rouge_3_f_score": 0.1,
      "rouge_3_f_score_cb": 0.1,
      "rouge_3_f_score_ce": 0.1,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.41667,
      "rouge_l_recall_cb": 0.41667,
      "rouge_l_recall_ce": 0.41667,
      "rouge_l_precision": 0.41667,
      "rouge_l_precision_cb": 0.41667,
      "rouge_l_precision_ce": 0.41667,
      "rouge_l_f_score": 0.41667,
      "rouge_l_f_score_cb": 0.41667,
      "rouge_l_f_score_ce": 0.41667,
      "rouge_w_1.2_recall": 0.22674,
      "rouge_w_1.2_recall_cb": 0.22674,
      "rouge_w_1.2_recall_ce": 0.22674,
      "rouge_w_1.2_precision": 0.3727,
      "rouge_w_1.2_precision_cb": 0.3727,
      "rouge_w_1.2_precision_ce": 0.3727,
      "rouge_w_1.2_f_score": 0.28195,
      "rouge_w_1.2_f_score_cb": 0.28195,
      "rouge_w_1.2_f_score_ce": 0.28195,
      "rouge_s*_recall": 0.21212,
      "rouge_s*_recall_cb": 0.21212,
      "rouge_s*_recall_ce": 0.21212,
      "rouge_s*_precision": 0.21212,
      "rouge_s*_precision_cb": 0.21212,
      "rouge_s*_precision_ce": 0.21212,
      "rouge_s*_f_score": 0.21212,
      "rouge_s*_f_score_cb": 0.21212,
      "rouge_s*_f_score_ce": 0.21212,
      "rouge_su*_recall": 0.24675,
      "rouge_su*_recall_cb": 0.24675,
      "rouge_su*_recall_ce": 0.24675,
      "rouge_su*_precision": 0.24675,
      "rouge_su*_precision_cb": 0.24675,
      "rouge_su*_precision_ce": 0.24675,
      "rouge_su*_f_score": 0.24675,
      "rouge_su*_f_score_cb": 0.24675,
      "rouge_su*_f_score_ce": 0.24675
    }
  },
  {
    "id": 53,
    "filename": "PandasEval_53.txt",
    "dataset_comment": "Retrieve the number of columns in a Pandas DataFrame and return it.",
    "generated_comment": "Return the number of columns in the DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.58333,
      "rouge_1_recall_cb": 0.58333,
      "rouge_1_recall_ce": 0.58333,
      "rouge_1_precision": 0.875,
      "rouge_1_precision_cb": 0.875,
      "rouge_1_precision_ce": 0.875,
      "rouge_1_f_score": 0.7,
      "rouge_1_f_score_cb": 0.7,
      "rouge_1_f_score_ce": 0.7,
      "rouge_2_recall": 0.36364,
      "rouge_2_recall_cb": 0.36364,
      "rouge_2_recall_ce": 0.36364,
      "rouge_2_precision": 0.57143,
      "rouge_2_precision_cb": 0.57143,
      "rouge_2_precision_ce": 0.57143,
      "rouge_2_f_score": 0.44445,
      "rouge_2_f_score_cb": 0.44445,
      "rouge_2_f_score_ce": 0.44445,
      "rouge_3_recall": 0.3,
      "rouge_3_recall_cb": 0.3,
      "rouge_3_recall_ce": 0.3,
      "rouge_3_precision": 0.5,
      "rouge_3_precision_cb": 0.5,
      "rouge_3_precision_ce": 0.5,
      "rouge_3_f_score": 0.375,
      "rouge_3_f_score_cb": 0.375,
      "rouge_3_f_score_ce": 0.375,
      "rouge_4_recall": 0.22222,
      "rouge_4_recall_cb": 0.22222,
      "rouge_4_recall_ce": 0.22222,
      "rouge_4_precision": 0.4,
      "rouge_4_precision_cb": 0.4,
      "rouge_4_precision_ce": 0.4,
      "rouge_4_f_score": 0.28571,
      "rouge_4_f_score_cb": 0.28571,
      "rouge_4_f_score_ce": 0.28571,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.75,
      "rouge_l_precision_cb": 0.75,
      "rouge_l_precision_ce": 0.75,
      "rouge_l_f_score": 0.6,
      "rouge_l_f_score_cb": 0.6,
      "rouge_l_f_score_ce": 0.6,
      "rouge_w_1.2_recall": 0.28375,
      "rouge_w_1.2_recall_cb": 0.28375,
      "rouge_w_1.2_recall_ce": 0.28375,
      "rouge_w_1.2_precision": 0.69963,
      "rouge_w_1.2_precision_cb": 0.69963,
      "rouge_w_1.2_precision_ce": 0.69963,
      "rouge_w_1.2_f_score": 0.40375,
      "rouge_w_1.2_f_score_cb": 0.40375,
      "rouge_w_1.2_f_score_ce": 0.40375,
      "rouge_s*_recall": 0.22727,
      "rouge_s*_recall_cb": 0.22727,
      "rouge_s*_recall_ce": 0.22727,
      "rouge_s*_precision": 0.53571,
      "rouge_s*_precision_cb": 0.53571,
      "rouge_s*_precision_ce": 0.53571,
      "rouge_s*_f_score": 0.31915,
      "rouge_s*_f_score_cb": 0.31915,
      "rouge_s*_f_score_ce": 0.31915,
      "rouge_su*_recall": 0.27273,
      "rouge_su*_recall_cb": 0.27273,
      "rouge_su*_recall_ce": 0.27273,
      "rouge_su*_precision": 0.6,
      "rouge_su*_precision_cb": 0.6,
      "rouge_su*_precision_ce": 0.6,
      "rouge_su*_f_score": 0.375,
      "rouge_su*_f_score_cb": 0.375,
      "rouge_su*_f_score_ce": 0.375
    }
  },
  {
    "id": 54,
    "filename": "PandasEval_54.txt",
    "dataset_comment": "Extract the last year (YY) from a fiscal date string in the format of YYYY-YY.  For example, the last year of '1999-00' would be 2000.  Implement logic to handle cases where it is the end of the century by adding to the first two digits.  The column_name refers to the column in the DataFrame that contains the date strings.  Return the numerical Series object of the last year.",
    "generated_comment": "Extract the last year from a date column in the format 'YYYY-MM-DD' by splitting the string, converting the first part to numeric, and adding 1.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.28169,
      "rouge_1_recall_cb": 0.28169,
      "rouge_1_recall_ce": 0.28169,
      "rouge_1_precision": 0.74074,
      "rouge_1_precision_cb": 0.74074,
      "rouge_1_precision_ce": 0.74074,
      "rouge_1_f_score": 0.40816,
      "rouge_1_f_score_cb": 0.40816,
      "rouge_1_f_score_ce": 0.40816,
      "rouge_2_recall": 0.11429,
      "rouge_2_recall_cb": 0.11429,
      "rouge_2_recall_ce": 0.11429,
      "rouge_2_precision": 0.30769,
      "rouge_2_precision_cb": 0.30769,
      "rouge_2_precision_ce": 0.30769,
      "rouge_2_f_score": 0.16667,
      "rouge_2_f_score_cb": 0.16667,
      "rouge_2_f_score_ce": 0.16667,
      "rouge_3_recall": 0.05797,
      "rouge_3_recall_cb": 0.05797,
      "rouge_3_recall_ce": 0.05797,
      "rouge_3_precision": 0.16,
      "rouge_3_precision_cb": 0.16,
      "rouge_3_precision_ce": 0.16,
      "rouge_3_f_score": 0.08511,
      "rouge_3_f_score_cb": 0.08511,
      "rouge_3_f_score_ce": 0.08511,
      "rouge_4_recall": 0.01471,
      "rouge_4_recall_cb": 0.01471,
      "rouge_4_recall_ce": 0.01471,
      "rouge_4_precision": 0.04167,
      "rouge_4_precision_cb": 0.04167,
      "rouge_4_precision_ce": 0.04167,
      "rouge_4_f_score": 0.02174,
      "rouge_4_f_score_cb": 0.02174,
      "rouge_4_f_score_ce": 0.02174,
      "rouge_l_recall": 0.22535,
      "rouge_l_recall_cb": 0.22535,
      "rouge_l_recall_ce": 0.22535,
      "rouge_l_precision": 0.59259,
      "rouge_l_precision_cb": 0.59259,
      "rouge_l_precision_ce": 0.59259,
      "rouge_l_f_score": 0.32653,
      "rouge_l_f_score_cb": 0.32653,
      "rouge_l_f_score_ce": 0.32653,
      "rouge_w_1.2_recall": 0.06865,
      "rouge_w_1.2_recall_cb": 0.06865,
      "rouge_w_1.2_recall_ce": 0.06865,
      "rouge_w_1.2_precision": 0.42341,
      "rouge_w_1.2_precision_cb": 0.42341,
      "rouge_w_1.2_precision_ce": 0.42341,
      "rouge_w_1.2_f_score": 0.11814,
      "rouge_w_1.2_f_score_cb": 0.11814,
      "rouge_w_1.2_f_score_ce": 0.11814,
      "rouge_s*_recall": 0.07364,
      "rouge_s*_recall_cb": 0.07364,
      "rouge_s*_recall_ce": 0.07364,
      "rouge_s*_precision": 0.52137,
      "rouge_s*_precision_cb": 0.52137,
      "rouge_s*_precision_ce": 0.52137,
      "rouge_s*_f_score": 0.12905,
      "rouge_s*_f_score_cb": 0.12905,
      "rouge_s*_f_score_ce": 0.12905,
      "rouge_su*_recall": 0.07945,
      "rouge_su*_recall_cb": 0.07945,
      "rouge_su*_recall_ce": 0.07945,
      "rouge_su*_precision": 0.53846,
      "rouge_su*_precision_cb": 0.53846,
      "rouge_su*_precision_ce": 0.53846,
      "rouge_su*_f_score": 0.13847,
      "rouge_su*_f_score_cb": 0.13847,
      "rouge_su*_f_score_ce": 0.13847
    }
  },
  {
    "id": 55,
    "filename": "PandasEval_55.txt",
    "dataset_comment": "Count consecutive positive values in a Python/Pandas array representing equity return data;  for example, if a positive day is represented as 1 and a negative day as 0,  a list y=[0,0,1,1,1,0,0,1,0,1,1] should return z=[0,0,1,2,3,0,0,1,0,1,2].  Return the result.",
    "generated_comment": "Count the number of consecutive positive values in a pandas Series by grouping based on changes in the values and using cumulative counting.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.15,
      "rouge_1_recall_cb": 0.15,
      "rouge_1_recall_ce": 0.15,
      "rouge_1_precision": 0.3913,
      "rouge_1_precision_cb": 0.3913,
      "rouge_1_precision_ce": 0.3913,
      "rouge_1_f_score": 0.21687,
      "rouge_1_f_score_cb": 0.21687,
      "rouge_1_f_score_ce": 0.21687,
      "rouge_2_recall": 0.0678,
      "rouge_2_recall_cb": 0.0678,
      "rouge_2_recall_ce": 0.0678,
      "rouge_2_precision": 0.18182,
      "rouge_2_precision_cb": 0.18182,
      "rouge_2_precision_ce": 0.18182,
      "rouge_2_f_score": 0.09877,
      "rouge_2_f_score_cb": 0.09877,
      "rouge_2_f_score_ce": 0.09877,
      "rouge_3_recall": 0.05172,
      "rouge_3_recall_cb": 0.05172,
      "rouge_3_recall_ce": 0.05172,
      "rouge_3_precision": 0.14286,
      "rouge_3_precision_cb": 0.14286,
      "rouge_3_precision_ce": 0.14286,
      "rouge_3_f_score": 0.07595,
      "rouge_3_f_score_cb": 0.07595,
      "rouge_3_f_score_ce": 0.07595,
      "rouge_4_recall": 0.03509,
      "rouge_4_recall_cb": 0.03509,
      "rouge_4_recall_ce": 0.03509,
      "rouge_4_precision": 0.1,
      "rouge_4_precision_cb": 0.1,
      "rouge_4_precision_ce": 0.1,
      "rouge_4_f_score": 0.05195,
      "rouge_4_f_score_cb": 0.05195,
      "rouge_4_f_score_ce": 0.05195,
      "rouge_l_recall": 0.13333,
      "rouge_l_recall_cb": 0.13333,
      "rouge_l_recall_ce": 0.13333,
      "rouge_l_precision": 0.34783,
      "rouge_l_precision_cb": 0.34783,
      "rouge_l_precision_ce": 0.34783,
      "rouge_l_f_score": 0.19277,
      "rouge_l_f_score_cb": 0.19277,
      "rouge_l_f_score_ce": 0.19277,
      "rouge_w_1.2_recall": 0.0525,
      "rouge_w_1.2_recall_cb": 0.0525,
      "rouge_w_1.2_recall_ce": 0.0525,
      "rouge_w_1.2_precision": 0.31061,
      "rouge_w_1.2_precision_cb": 0.31061,
      "rouge_w_1.2_precision_ce": 0.31061,
      "rouge_w_1.2_f_score": 0.08982,
      "rouge_w_1.2_f_score_cb": 0.08982,
      "rouge_w_1.2_f_score_ce": 0.08982,
      "rouge_s*_recall": 0.01977,
      "rouge_s*_recall_cb": 0.01977,
      "rouge_s*_recall_ce": 0.01977,
      "rouge_s*_precision": 0.13834,
      "rouge_s*_precision_cb": 0.13834,
      "rouge_s*_precision_ce": 0.13834,
      "rouge_s*_f_score": 0.0346,
      "rouge_s*_f_score_cb": 0.0346,
      "rouge_s*_f_score_ce": 0.0346,
      "rouge_su*_recall": 0.02406,
      "rouge_su*_recall_cb": 0.02406,
      "rouge_su*_recall_ce": 0.02406,
      "rouge_su*_precision": 0.16,
      "rouge_su*_precision_cb": 0.16,
      "rouge_su*_precision_ce": 0.16,
      "rouge_su*_f_score": 0.04183,
      "rouge_su*_f_score_cb": 0.04183,
      "rouge_su*_f_score_ce": 0.04183
    }
  },
  {
    "id": 56,
    "filename": "PandasEval_56.txt",
    "dataset_comment": "Get the first largest value in column a using nlargest and iloc to implement this.",
    "generated_comment": "Retrieve the largest value from column 'a' in the DataFrame 'df' using the nlargest method and select the last element from the resulting Series.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.6,
      "rouge_1_recall_cb": 0.6,
      "rouge_1_recall_ce": 0.6,
      "rouge_1_precision": 0.375,
      "rouge_1_precision_cb": 0.375,
      "rouge_1_precision_ce": 0.375,
      "rouge_1_f_score": 0.46154,
      "rouge_1_f_score_cb": 0.46154,
      "rouge_1_f_score_ce": 0.46154,
      "rouge_2_recall": 0.14286,
      "rouge_2_recall_cb": 0.14286,
      "rouge_2_recall_ce": 0.14286,
      "rouge_2_precision": 0.08696,
      "rouge_2_precision_cb": 0.08696,
      "rouge_2_precision_ce": 0.08696,
      "rouge_2_f_score": 0.10811,
      "rouge_2_f_score_cb": 0.10811,
      "rouge_2_f_score_ce": 0.10811,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.53333,
      "rouge_l_recall_cb": 0.53333,
      "rouge_l_recall_ce": 0.53333,
      "rouge_l_precision": 0.33333,
      "rouge_l_precision_cb": 0.33333,
      "rouge_l_precision_ce": 0.33333,
      "rouge_l_f_score": 0.41025,
      "rouge_l_f_score_cb": 0.41025,
      "rouge_l_f_score_ce": 0.41025,
      "rouge_w_1.2_recall": 0.26857,
      "rouge_w_1.2_recall_cb": 0.26857,
      "rouge_w_1.2_recall_ce": 0.26857,
      "rouge_w_1.2_precision": 0.2885,
      "rouge_w_1.2_precision_cb": 0.2885,
      "rouge_w_1.2_precision_ce": 0.2885,
      "rouge_w_1.2_f_score": 0.27818,
      "rouge_w_1.2_f_score_cb": 0.27818,
      "rouge_w_1.2_f_score_ce": 0.27818,
      "rouge_s*_recall": 0.32381,
      "rouge_s*_recall_cb": 0.32381,
      "rouge_s*_recall_ce": 0.32381,
      "rouge_s*_precision": 0.12319,
      "rouge_s*_precision_cb": 0.12319,
      "rouge_s*_precision_ce": 0.12319,
      "rouge_s*_f_score": 0.17848,
      "rouge_s*_f_score_cb": 0.17848,
      "rouge_s*_f_score_ce": 0.17848,
      "rouge_su*_recall": 0.36134,
      "rouge_su*_recall_cb": 0.36134,
      "rouge_su*_recall_ce": 0.36134,
      "rouge_su*_precision": 0.14381,
      "rouge_su*_precision_cb": 0.14381,
      "rouge_su*_precision_ce": 0.14381,
      "rouge_su*_f_score": 0.20574,
      "rouge_su*_f_score_cb": 0.20574,
      "rouge_su*_f_score_ce": 0.20574
    }
  },
  {
    "id": 57,
    "filename": "PandasEval_57.txt",
    "dataset_comment": "Sort columns in a Pandas DataFrame based on column name, with axis set to one.",
    "generated_comment": "Sort the columns of the DataFrame based on the column names in ascending order.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.53333,
      "rouge_1_recall_cb": 0.53333,
      "rouge_1_recall_ce": 0.53333,
      "rouge_1_precision": 0.57143,
      "rouge_1_precision_cb": 0.57143,
      "rouge_1_precision_ce": 0.57143,
      "rouge_1_f_score": 0.55172,
      "rouge_1_f_score_cb": 0.55172,
      "rouge_1_f_score_ce": 0.55172,
      "rouge_2_recall": 0.21429,
      "rouge_2_recall_cb": 0.21429,
      "rouge_2_recall_ce": 0.21429,
      "rouge_2_precision": 0.23077,
      "rouge_2_precision_cb": 0.23077,
      "rouge_2_precision_ce": 0.23077,
      "rouge_2_f_score": 0.22222,
      "rouge_2_f_score_cb": 0.22222,
      "rouge_2_f_score_ce": 0.22222,
      "rouge_3_recall": 0.07692,
      "rouge_3_recall_cb": 0.07692,
      "rouge_3_recall_ce": 0.07692,
      "rouge_3_precision": 0.08333,
      "rouge_3_precision_cb": 0.08333,
      "rouge_3_precision_ce": 0.08333,
      "rouge_3_f_score": 0.08,
      "rouge_3_f_score_cb": 0.08,
      "rouge_3_f_score_ce": 0.08,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.46667,
      "rouge_l_recall_cb": 0.46667,
      "rouge_l_recall_ce": 0.46667,
      "rouge_l_precision": 0.5,
      "rouge_l_precision_cb": 0.5,
      "rouge_l_precision_ce": 0.5,
      "rouge_l_f_score": 0.48276,
      "rouge_l_f_score_cb": 0.48276,
      "rouge_l_f_score_ce": 0.48276,
      "rouge_w_1.2_recall": 0.24643,
      "rouge_w_1.2_recall_cb": 0.24643,
      "rouge_w_1.2_recall_ce": 0.24643,
      "rouge_w_1.2_precision": 0.45381,
      "rouge_w_1.2_precision_cb": 0.45381,
      "rouge_w_1.2_precision_ce": 0.45381,
      "rouge_w_1.2_f_score": 0.31941,
      "rouge_w_1.2_f_score_cb": 0.31941,
      "rouge_w_1.2_f_score_ce": 0.31941,
      "rouge_s*_recall": 0.21905,
      "rouge_s*_recall_cb": 0.21905,
      "rouge_s*_recall_ce": 0.21905,
      "rouge_s*_precision": 0.25275,
      "rouge_s*_precision_cb": 0.25275,
      "rouge_s*_precision_ce": 0.25275,
      "rouge_s*_f_score": 0.2347,
      "rouge_s*_f_score_cb": 0.2347,
      "rouge_s*_f_score_ce": 0.2347,
      "rouge_su*_recall": 0.2605,
      "rouge_su*_recall_cb": 0.2605,
      "rouge_su*_recall_ce": 0.2605,
      "rouge_su*_precision": 0.29808,
      "rouge_su*_precision_cb": 0.29808,
      "rouge_su*_precision_ce": 0.29808,
      "rouge_su*_f_score": 0.27803,
      "rouge_su*_f_score_cb": 0.27803,
      "rouge_su*_f_score_ce": 0.27803
    }
  },
  {
    "id": 58,
    "filename": "PandasEval_58.txt",
    "dataset_comment": "Remove all the numbers from the Name column at the series/dataframe level.",
    "generated_comment": "Example DataFrameRemove all digits from the 'Name' column",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.38462,
      "rouge_1_recall_cb": 0.38462,
      "rouge_1_recall_ce": 0.38462,
      "rouge_1_precision": 0.625,
      "rouge_1_precision_cb": 0.625,
      "rouge_1_precision_ce": 0.625,
      "rouge_1_f_score": 0.47619,
      "rouge_1_f_score_cb": 0.47619,
      "rouge_1_f_score_ce": 0.47619,
      "rouge_2_recall": 0.25,
      "rouge_2_recall_cb": 0.25,
      "rouge_2_recall_ce": 0.25,
      "rouge_2_precision": 0.42857,
      "rouge_2_precision_cb": 0.42857,
      "rouge_2_precision_ce": 0.42857,
      "rouge_2_f_score": 0.31579,
      "rouge_2_f_score_cb": 0.31579,
      "rouge_2_f_score_ce": 0.31579,
      "rouge_3_recall": 0.18182,
      "rouge_3_recall_cb": 0.18182,
      "rouge_3_recall_ce": 0.18182,
      "rouge_3_precision": 0.33333,
      "rouge_3_precision_cb": 0.33333,
      "rouge_3_precision_ce": 0.33333,
      "rouge_3_f_score": 0.23529,
      "rouge_3_f_score_cb": 0.23529,
      "rouge_3_f_score_ce": 0.23529,
      "rouge_4_recall": 0.1,
      "rouge_4_recall_cb": 0.1,
      "rouge_4_recall_ce": 0.1,
      "rouge_4_precision": 0.2,
      "rouge_4_precision_cb": 0.2,
      "rouge_4_precision_ce": 0.2,
      "rouge_4_f_score": 0.13333,
      "rouge_4_f_score_cb": 0.13333,
      "rouge_4_f_score_ce": 0.13333,
      "rouge_l_recall": 0.38462,
      "rouge_l_recall_cb": 0.38462,
      "rouge_l_recall_ce": 0.38462,
      "rouge_l_precision": 0.625,
      "rouge_l_precision_cb": 0.625,
      "rouge_l_precision_ce": 0.625,
      "rouge_l_f_score": 0.47619,
      "rouge_l_f_score_cb": 0.47619,
      "rouge_l_f_score_ce": 0.47619,
      "rouge_w_1.2_recall": 0.21287,
      "rouge_w_1.2_recall_cb": 0.21287,
      "rouge_w_1.2_recall_ce": 0.21287,
      "rouge_w_1.2_precision": 0.57778,
      "rouge_w_1.2_precision_cb": 0.57778,
      "rouge_w_1.2_precision_ce": 0.57778,
      "rouge_w_1.2_f_score": 0.31112,
      "rouge_w_1.2_f_score_cb": 0.31112,
      "rouge_w_1.2_f_score_ce": 0.31112,
      "rouge_s*_recall": 0.12821,
      "rouge_s*_recall_cb": 0.12821,
      "rouge_s*_recall_ce": 0.12821,
      "rouge_s*_precision": 0.35714,
      "rouge_s*_precision_cb": 0.35714,
      "rouge_s*_precision_ce": 0.35714,
      "rouge_s*_f_score": 0.18868,
      "rouge_s*_f_score_cb": 0.18868,
      "rouge_s*_f_score_ce": 0.18868,
      "rouge_su*_recall": 0.15556,
      "rouge_su*_recall_cb": 0.15556,
      "rouge_su*_recall_ce": 0.15556,
      "rouge_su*_precision": 0.4,
      "rouge_su*_precision_cb": 0.4,
      "rouge_su*_precision_ce": 0.4,
      "rouge_su*_f_score": 0.224,
      "rouge_su*_f_score_cb": 0.224,
      "rouge_su*_f_score_ce": 0.224
    }
  },
  {
    "id": 59,
    "filename": "PandasEval_59.txt",
    "dataset_comment": "Delete all columns from the DataFrame that contain only NaN values and return the result.",
    "generated_comment": "Delete columns where all elements are NaN in an efficient way using pandas' dropna method with 'all' condition and axis=1.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.33333,
      "rouge_1_recall_cb": 0.33333,
      "rouge_1_recall_ce": 0.33333,
      "rouge_1_precision": 0.2381,
      "rouge_1_precision_cb": 0.2381,
      "rouge_1_precision_ce": 0.2381,
      "rouge_1_f_score": 0.27778,
      "rouge_1_f_score_cb": 0.27778,
      "rouge_1_f_score_ce": 0.27778,
      "rouge_2_recall": 0.0,
      "rouge_2_recall_cb": 0.0,
      "rouge_2_recall_ce": 0.0,
      "rouge_2_precision": 0.0,
      "rouge_2_precision_cb": 0.0,
      "rouge_2_precision_ce": 0.0,
      "rouge_2_f_score": 0.0,
      "rouge_2_f_score_cb": 0.0,
      "rouge_2_f_score_ce": 0.0,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.26667,
      "rouge_l_recall_cb": 0.26667,
      "rouge_l_recall_ce": 0.26667,
      "rouge_l_precision": 0.19048,
      "rouge_l_precision_cb": 0.19048,
      "rouge_l_precision_ce": 0.19048,
      "rouge_l_f_score": 0.22223,
      "rouge_l_f_score_cb": 0.22223,
      "rouge_l_f_score_ce": 0.22223,
      "rouge_w_1.2_recall": 0.13073,
      "rouge_w_1.2_recall_cb": 0.13073,
      "rouge_w_1.2_recall_ce": 0.13073,
      "rouge_w_1.2_precision": 0.16049,
      "rouge_w_1.2_precision_cb": 0.16049,
      "rouge_w_1.2_precision_ce": 0.16049,
      "rouge_w_1.2_f_score": 0.14409,
      "rouge_w_1.2_f_score_cb": 0.14409,
      "rouge_w_1.2_f_score_ce": 0.14409,
      "rouge_s*_recall": 0.08571,
      "rouge_s*_recall_cb": 0.08571,
      "rouge_s*_recall_ce": 0.08571,
      "rouge_s*_precision": 0.04286,
      "rouge_s*_precision_cb": 0.04286,
      "rouge_s*_precision_ce": 0.04286,
      "rouge_s*_f_score": 0.05714,
      "rouge_s*_f_score_cb": 0.05714,
      "rouge_s*_f_score_ce": 0.05714,
      "rouge_su*_recall": 0.11765,
      "rouge_su*_recall_cb": 0.11765,
      "rouge_su*_recall_ce": 0.11765,
      "rouge_su*_precision": 0.06087,
      "rouge_su*_precision_cb": 0.06087,
      "rouge_su*_precision_ce": 0.06087,
      "rouge_su*_f_score": 0.08023,
      "rouge_su*_f_score_cb": 0.08023,
      "rouge_su*_f_score_ce": 0.08023
    }
  },
  {
    "id": 60,
    "filename": "PandasEval_60.txt",
    "dataset_comment": "Convert Column `Date` to Date Format using pandas function and return the converted dataframe.",
    "generated_comment": "Convert the 'Date' column to datetime format using pandas.to_datetime().",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.57143,
      "rouge_1_recall_cb": 0.57143,
      "rouge_1_recall_ce": 0.57143,
      "rouge_1_precision": 0.72727,
      "rouge_1_precision_cb": 0.72727,
      "rouge_1_precision_ce": 0.72727,
      "rouge_1_f_score": 0.64,
      "rouge_1_f_score_cb": 0.64,
      "rouge_1_f_score_ce": 0.64,
      "rouge_2_recall": 0.15385,
      "rouge_2_recall_cb": 0.15385,
      "rouge_2_recall_ce": 0.15385,
      "rouge_2_precision": 0.2,
      "rouge_2_precision_cb": 0.2,
      "rouge_2_precision_ce": 0.2,
      "rouge_2_f_score": 0.17392,
      "rouge_2_f_score_cb": 0.17392,
      "rouge_2_f_score_ce": 0.17392,
      "rouge_3_recall": 0.08333,
      "rouge_3_recall_cb": 0.08333,
      "rouge_3_recall_ce": 0.08333,
      "rouge_3_precision": 0.11111,
      "rouge_3_precision_cb": 0.11111,
      "rouge_3_precision_ce": 0.11111,
      "rouge_3_f_score": 0.09524,
      "rouge_3_f_score_cb": 0.09524,
      "rouge_3_f_score_ce": 0.09524,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.42857,
      "rouge_l_recall_cb": 0.42857,
      "rouge_l_recall_ce": 0.42857,
      "rouge_l_precision": 0.54545,
      "rouge_l_precision_cb": 0.54545,
      "rouge_l_precision_ce": 0.54545,
      "rouge_l_f_score": 0.48,
      "rouge_l_f_score_cb": 0.48,
      "rouge_l_f_score_ce": 0.48,
      "rouge_w_1.2_recall": 0.21413,
      "rouge_w_1.2_recall_cb": 0.21413,
      "rouge_w_1.2_recall_ce": 0.21413,
      "rouge_w_1.2_precision": 0.462,
      "rouge_w_1.2_precision_cb": 0.462,
      "rouge_w_1.2_precision_ce": 0.462,
      "rouge_w_1.2_f_score": 0.29263,
      "rouge_w_1.2_f_score_cb": 0.29263,
      "rouge_w_1.2_f_score_ce": 0.29263,
      "rouge_s*_recall": 0.23077,
      "rouge_s*_recall_cb": 0.23077,
      "rouge_s*_recall_ce": 0.23077,
      "rouge_s*_precision": 0.38182,
      "rouge_s*_precision_cb": 0.38182,
      "rouge_s*_precision_ce": 0.38182,
      "rouge_s*_f_score": 0.28767,
      "rouge_s*_f_score_cb": 0.28767,
      "rouge_s*_f_score_ce": 0.28767,
      "rouge_su*_recall": 0.27885,
      "rouge_su*_recall_cb": 0.27885,
      "rouge_su*_recall_ce": 0.27885,
      "rouge_su*_precision": 0.44615,
      "rouge_su*_precision_cb": 0.44615,
      "rouge_su*_precision_ce": 0.44615,
      "rouge_su*_f_score": 0.3432,
      "rouge_su*_f_score_cb": 0.3432,
      "rouge_su*_f_score_ce": 0.3432
    }
  },
  {
    "id": 61,
    "filename": "PandasEval_61.txt",
    "dataset_comment": "Insert a row into a dataframe at a specified position without ignoring the index, and sort and reset the index with drop=True. Return the new dataframe.",
    "generated_comment": "Insert a row into a DataFrame at an arbitrary position by appending the row and then sorting the DataFrame by index.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.51852,
      "rouge_1_recall_cb": 0.51852,
      "rouge_1_recall_ce": 0.51852,
      "rouge_1_precision": 0.66667,
      "rouge_1_precision_cb": 0.66667,
      "rouge_1_precision_ce": 0.66667,
      "rouge_1_f_score": 0.58334,
      "rouge_1_f_score_cb": 0.58334,
      "rouge_1_f_score_ce": 0.58334,
      "rouge_2_recall": 0.23077,
      "rouge_2_recall_cb": 0.23077,
      "rouge_2_recall_ce": 0.23077,
      "rouge_2_precision": 0.3,
      "rouge_2_precision_cb": 0.3,
      "rouge_2_precision_ce": 0.3,
      "rouge_2_f_score": 0.26087,
      "rouge_2_f_score_cb": 0.26087,
      "rouge_2_f_score_ce": 0.26087,
      "rouge_3_recall": 0.2,
      "rouge_3_recall_cb": 0.2,
      "rouge_3_recall_ce": 0.2,
      "rouge_3_precision": 0.26316,
      "rouge_3_precision_cb": 0.26316,
      "rouge_3_precision_ce": 0.26316,
      "rouge_3_f_score": 0.22727,
      "rouge_3_f_score_cb": 0.22727,
      "rouge_3_f_score_ce": 0.22727,
      "rouge_4_recall": 0.16667,
      "rouge_4_recall_cb": 0.16667,
      "rouge_4_recall_ce": 0.16667,
      "rouge_4_precision": 0.22222,
      "rouge_4_precision_cb": 0.22222,
      "rouge_4_precision_ce": 0.22222,
      "rouge_4_f_score": 0.19048,
      "rouge_4_f_score_cb": 0.19048,
      "rouge_4_f_score_ce": 0.19048,
      "rouge_l_recall": 0.48148,
      "rouge_l_recall_cb": 0.48148,
      "rouge_l_recall_ce": 0.48148,
      "rouge_l_precision": 0.61905,
      "rouge_l_precision_cb": 0.61905,
      "rouge_l_precision_ce": 0.61905,
      "rouge_l_f_score": 0.54167,
      "rouge_l_f_score_cb": 0.54167,
      "rouge_l_f_score_ce": 0.54167,
      "rouge_w_1.2_recall": 0.20237,
      "rouge_w_1.2_recall_cb": 0.20237,
      "rouge_w_1.2_recall_ce": 0.20237,
      "rouge_w_1.2_precision": 0.50299,
      "rouge_w_1.2_precision_cb": 0.50299,
      "rouge_w_1.2_precision_ce": 0.50299,
      "rouge_w_1.2_f_score": 0.28862,
      "rouge_w_1.2_f_score_cb": 0.28862,
      "rouge_w_1.2_f_score_ce": 0.28862,
      "rouge_s*_recall": 0.26781,
      "rouge_s*_recall_cb": 0.26781,
      "rouge_s*_recall_ce": 0.26781,
      "rouge_s*_precision": 0.44762,
      "rouge_s*_precision_cb": 0.44762,
      "rouge_s*_precision_ce": 0.44762,
      "rouge_s*_f_score": 0.33512,
      "rouge_s*_f_score_cb": 0.33512,
      "rouge_s*_f_score_ce": 0.33512,
      "rouge_su*_recall": 0.28117,
      "rouge_su*_recall_cb": 0.28117,
      "rouge_su*_recall_ce": 0.28117,
      "rouge_su*_precision": 0.46087,
      "rouge_su*_precision_cb": 0.46087,
      "rouge_su*_precision_ce": 0.46087,
      "rouge_su*_f_score": 0.34926,
      "rouge_su*_f_score_cb": 0.34926,
      "rouge_su*_f_score_ce": 0.34926
    }
  },
  {
    "id": 62,
    "filename": "PandasEval_62.txt",
    "dataset_comment": "For each row in the DataFrame, insert row['MSRA'] as the key and row['THU'] as the value into a rows_dict. The method iterrows() yields both the index and row (as a Series).",
    "generated_comment": "Create a dictionary mapping each value in the 'MSRA' column to the corresponding value in the 'THU' column.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.26471,
      "rouge_1_recall_cb": 0.26471,
      "rouge_1_recall_ce": 0.26471,
      "rouge_1_precision": 0.5,
      "rouge_1_precision_cb": 0.5,
      "rouge_1_precision_ce": 0.5,
      "rouge_1_f_score": 0.34616,
      "rouge_1_f_score_cb": 0.34616,
      "rouge_1_f_score_ce": 0.34616,
      "rouge_2_recall": 0.0303,
      "rouge_2_recall_cb": 0.0303,
      "rouge_2_recall_ce": 0.0303,
      "rouge_2_precision": 0.05882,
      "rouge_2_precision_cb": 0.05882,
      "rouge_2_precision_ce": 0.05882,
      "rouge_2_f_score": 0.04,
      "rouge_2_f_score_cb": 0.04,
      "rouge_2_f_score_ce": 0.04,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.20588,
      "rouge_l_recall_cb": 0.20588,
      "rouge_l_recall_ce": 0.20588,
      "rouge_l_precision": 0.38889,
      "rouge_l_precision_cb": 0.38889,
      "rouge_l_precision_ce": 0.38889,
      "rouge_l_f_score": 0.26923,
      "rouge_l_f_score_cb": 0.26923,
      "rouge_l_f_score_ce": 0.26923,
      "rouge_w_1.2_recall": 0.07613,
      "rouge_w_1.2_recall_cb": 0.07613,
      "rouge_w_1.2_recall_ce": 0.07613,
      "rouge_w_1.2_precision": 0.29109,
      "rouge_w_1.2_precision_cb": 0.29109,
      "rouge_w_1.2_precision_ce": 0.29109,
      "rouge_w_1.2_f_score": 0.12069,
      "rouge_w_1.2_f_score_cb": 0.12069,
      "rouge_w_1.2_f_score_ce": 0.12069,
      "rouge_s*_recall": 0.05348,
      "rouge_s*_recall_cb": 0.05348,
      "rouge_s*_recall_ce": 0.05348,
      "rouge_s*_precision": 0.19608,
      "rouge_s*_precision_cb": 0.19608,
      "rouge_s*_precision_ce": 0.19608,
      "rouge_s*_f_score": 0.08404,
      "rouge_s*_f_score_cb": 0.08404,
      "rouge_s*_f_score_ce": 0.08404,
      "rouge_su*_recall": 0.06566,
      "rouge_su*_recall_cb": 0.06566,
      "rouge_su*_recall_ce": 0.06566,
      "rouge_su*_precision": 0.22941,
      "rouge_su*_precision_cb": 0.22941,
      "rouge_su*_precision_ce": 0.22941,
      "rouge_su*_f_score": 0.1021,
      "rouge_su*_f_score_cb": 0.1021,
      "rouge_su*_f_score_ce": 0.1021
    }
  },
  {
    "id": 63,
    "filename": "PandasEval_63.txt",
    "dataset_comment": "Merge two DataFrames by index and set left and right indices to True.",
    "generated_comment": "Merge two DataFrames on their indices, aligning rows based on the index values.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.38462,
      "rouge_1_recall_cb": 0.38462,
      "rouge_1_recall_ce": 0.38462,
      "rouge_1_precision": 0.38462,
      "rouge_1_precision_cb": 0.38462,
      "rouge_1_precision_ce": 0.38462,
      "rouge_1_f_score": 0.38462,
      "rouge_1_f_score_cb": 0.38462,
      "rouge_1_f_score_ce": 0.38462,
      "rouge_2_recall": 0.16667,
      "rouge_2_recall_cb": 0.16667,
      "rouge_2_recall_ce": 0.16667,
      "rouge_2_precision": 0.16667,
      "rouge_2_precision_cb": 0.16667,
      "rouge_2_precision_ce": 0.16667,
      "rouge_2_f_score": 0.16667,
      "rouge_2_f_score_cb": 0.16667,
      "rouge_2_f_score_ce": 0.16667,
      "rouge_3_recall": 0.09091,
      "rouge_3_recall_cb": 0.09091,
      "rouge_3_recall_ce": 0.09091,
      "rouge_3_precision": 0.09091,
      "rouge_3_precision_cb": 0.09091,
      "rouge_3_precision_ce": 0.09091,
      "rouge_3_f_score": 0.09091,
      "rouge_3_f_score_cb": 0.09091,
      "rouge_3_f_score_ce": 0.09091,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.38462,
      "rouge_l_recall_cb": 0.38462,
      "rouge_l_recall_ce": 0.38462,
      "rouge_l_precision": 0.38462,
      "rouge_l_precision_cb": 0.38462,
      "rouge_l_precision_ce": 0.38462,
      "rouge_l_f_score": 0.38462,
      "rouge_l_f_score_cb": 0.38462,
      "rouge_l_f_score_ce": 0.38462,
      "rouge_w_1.2_recall": 0.19748,
      "rouge_w_1.2_recall_cb": 0.19748,
      "rouge_w_1.2_recall_ce": 0.19748,
      "rouge_w_1.2_precision": 0.32984,
      "rouge_w_1.2_precision_cb": 0.32984,
      "rouge_w_1.2_precision_ce": 0.32984,
      "rouge_w_1.2_f_score": 0.24705,
      "rouge_w_1.2_f_score_cb": 0.24705,
      "rouge_w_1.2_f_score_ce": 0.24705,
      "rouge_s*_recall": 0.12821,
      "rouge_s*_recall_cb": 0.12821,
      "rouge_s*_recall_ce": 0.12821,
      "rouge_s*_precision": 0.12821,
      "rouge_s*_precision_cb": 0.12821,
      "rouge_s*_precision_ce": 0.12821,
      "rouge_s*_f_score": 0.12821,
      "rouge_s*_f_score_cb": 0.12821,
      "rouge_s*_f_score_ce": 0.12821,
      "rouge_su*_recall": 0.16667,
      "rouge_su*_recall_cb": 0.16667,
      "rouge_su*_recall_ce": 0.16667,
      "rouge_su*_precision": 0.16667,
      "rouge_su*_precision_cb": 0.16667,
      "rouge_su*_precision_ce": 0.16667,
      "rouge_su*_f_score": 0.16667,
      "rouge_su*_f_score_cb": 0.16667,
      "rouge_su*_f_score_ce": 0.16667
    }
  },
  {
    "id": 64,
    "filename": "PandasEval_64.txt",
    "dataset_comment": "Select only float64 columns from a Pandas DataFrame using an elegant and shorthand method.",
    "generated_comment": "Select only the columns with float64 data types from the DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.42857,
      "rouge_1_recall_cb": 0.42857,
      "rouge_1_recall_ce": 0.42857,
      "rouge_1_precision": 0.54545,
      "rouge_1_precision_cb": 0.54545,
      "rouge_1_precision_ce": 0.54545,
      "rouge_1_f_score": 0.48,
      "rouge_1_f_score_cb": 0.48,
      "rouge_1_f_score_ce": 0.48,
      "rouge_2_recall": 0.07692,
      "rouge_2_recall_cb": 0.07692,
      "rouge_2_recall_ce": 0.07692,
      "rouge_2_precision": 0.1,
      "rouge_2_precision_cb": 0.1,
      "rouge_2_precision_ce": 0.1,
      "rouge_2_f_score": 0.08695,
      "rouge_2_f_score_cb": 0.08695,
      "rouge_2_f_score_ce": 0.08695,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.35714,
      "rouge_l_recall_cb": 0.35714,
      "rouge_l_recall_ce": 0.35714,
      "rouge_l_precision": 0.45455,
      "rouge_l_precision_cb": 0.45455,
      "rouge_l_precision_ce": 0.45455,
      "rouge_l_f_score": 0.4,
      "rouge_l_f_score_cb": 0.4,
      "rouge_l_f_score_ce": 0.4,
      "rouge_w_1.2_recall": 0.18067,
      "rouge_w_1.2_recall_cb": 0.18067,
      "rouge_w_1.2_recall_ce": 0.18067,
      "rouge_w_1.2_precision": 0.38981,
      "rouge_w_1.2_precision_cb": 0.38981,
      "rouge_w_1.2_precision_ce": 0.38981,
      "rouge_w_1.2_f_score": 0.2469,
      "rouge_w_1.2_f_score_cb": 0.2469,
      "rouge_w_1.2_f_score_ce": 0.2469,
      "rouge_s*_recall": 0.15385,
      "rouge_s*_recall_cb": 0.15385,
      "rouge_s*_recall_ce": 0.15385,
      "rouge_s*_precision": 0.25455,
      "rouge_s*_precision_cb": 0.25455,
      "rouge_s*_precision_ce": 0.25455,
      "rouge_s*_f_score": 0.19179,
      "rouge_s*_f_score_cb": 0.19179,
      "rouge_s*_f_score_ce": 0.19179,
      "rouge_su*_recall": 0.18269,
      "rouge_su*_recall_cb": 0.18269,
      "rouge_su*_recall_ce": 0.18269,
      "rouge_su*_precision": 0.29231,
      "rouge_su*_precision_cb": 0.29231,
      "rouge_su*_precision_ce": 0.29231,
      "rouge_su*_f_score": 0.22485,
      "rouge_su*_f_score_cb": 0.22485,
      "rouge_su*_f_score_ce": 0.22485
    }
  },
  {
    "id": 65,
    "filename": "PandasEval_65.txt",
    "dataset_comment": "Merge two DataFrames with different column names but the same number of rows.  Given two DataFrames in Pandas, df1 and df2, where df1 has columns 'a' and 'b', and df2 has a column 'c', merge them to create a new DataFrame with columns 'a', 'b', and 'c'.  Two methods can be used to achieve this, both resulting in the same output. Use the merge function with additional arguments to utilize the indexes,  specifically setting left_index and right_index to True.",
    "generated_comment": "Merge two DataFrames on their indices efficiently using pandas' merge function.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.09877,
      "rouge_1_recall_cb": 0.09877,
      "rouge_1_recall_ce": 0.09877,
      "rouge_1_precision": 0.72727,
      "rouge_1_precision_cb": 0.72727,
      "rouge_1_precision_ce": 0.72727,
      "rouge_1_f_score": 0.17392,
      "rouge_1_f_score_cb": 0.17392,
      "rouge_1_f_score_ce": 0.17392,
      "rouge_2_recall": 0.0375,
      "rouge_2_recall_cb": 0.0375,
      "rouge_2_recall_ce": 0.0375,
      "rouge_2_precision": 0.3,
      "rouge_2_precision_cb": 0.3,
      "rouge_2_precision_ce": 0.3,
      "rouge_2_f_score": 0.06667,
      "rouge_2_f_score_cb": 0.06667,
      "rouge_2_f_score_ce": 0.06667,
      "rouge_3_recall": 0.01266,
      "rouge_3_recall_cb": 0.01266,
      "rouge_3_recall_ce": 0.01266,
      "rouge_3_precision": 0.11111,
      "rouge_3_precision_cb": 0.11111,
      "rouge_3_precision_ce": 0.11111,
      "rouge_3_f_score": 0.02273,
      "rouge_3_f_score_cb": 0.02273,
      "rouge_3_f_score_ce": 0.02273,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.07407,
      "rouge_l_recall_cb": 0.07407,
      "rouge_l_recall_ce": 0.07407,
      "rouge_l_precision": 0.54545,
      "rouge_l_precision_cb": 0.54545,
      "rouge_l_precision_ce": 0.54545,
      "rouge_l_f_score": 0.13043,
      "rouge_l_f_score_cb": 0.13043,
      "rouge_l_f_score_ce": 0.13043,
      "rouge_w_1.2_recall": 0.02605,
      "rouge_w_1.2_recall_cb": 0.02605,
      "rouge_w_1.2_recall_ce": 0.02605,
      "rouge_w_1.2_precision": 0.462,
      "rouge_w_1.2_precision_cb": 0.462,
      "rouge_w_1.2_precision_ce": 0.462,
      "rouge_w_1.2_f_score": 0.04932,
      "rouge_w_1.2_f_score_cb": 0.04932,
      "rouge_w_1.2_f_score_ce": 0.04932,
      "rouge_s*_recall": 0.0071,
      "rouge_s*_recall_cb": 0.0071,
      "rouge_s*_recall_ce": 0.0071,
      "rouge_s*_precision": 0.41818,
      "rouge_s*_precision_cb": 0.41818,
      "rouge_s*_precision_ce": 0.41818,
      "rouge_s*_f_score": 0.01396,
      "rouge_s*_f_score_cb": 0.01396,
      "rouge_s*_f_score_ce": 0.01396,
      "rouge_su*_recall": 0.00904,
      "rouge_su*_recall_cb": 0.00904,
      "rouge_su*_recall_ce": 0.00904,
      "rouge_su*_precision": 0.46154,
      "rouge_su*_precision_cb": 0.46154,
      "rouge_su*_precision_ce": 0.46154,
      "rouge_su*_f_score": 0.01773,
      "rouge_su*_f_score_cb": 0.01773,
      "rouge_su*_f_score_ce": 0.01773
    }
  },
  {
    "id": 66,
    "filename": "PandasEval_66.txt",
    "dataset_comment": "Given a pandas series representing frequencies of a value, convert those frequencies into percentages and return the percentage of each gender.",
    "generated_comment": "Calculate the percentage of each gender in the series by normalizing the value counts.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.33333,
      "rouge_1_recall_cb": 0.33333,
      "rouge_1_recall_ce": 0.33333,
      "rouge_1_precision": 0.5,
      "rouge_1_precision_cb": 0.5,
      "rouge_1_precision_ce": 0.5,
      "rouge_1_f_score": 0.4,
      "rouge_1_f_score_cb": 0.4,
      "rouge_1_f_score_ce": 0.4,
      "rouge_2_recall": 0.2,
      "rouge_2_recall_cb": 0.2,
      "rouge_2_recall_ce": 0.2,
      "rouge_2_precision": 0.30769,
      "rouge_2_precision_cb": 0.30769,
      "rouge_2_precision_ce": 0.30769,
      "rouge_2_f_score": 0.24242,
      "rouge_2_f_score_cb": 0.24242,
      "rouge_2_f_score_ce": 0.24242,
      "rouge_3_recall": 0.15789,
      "rouge_3_recall_cb": 0.15789,
      "rouge_3_recall_ce": 0.15789,
      "rouge_3_precision": 0.25,
      "rouge_3_precision_cb": 0.25,
      "rouge_3_precision_ce": 0.25,
      "rouge_3_f_score": 0.19354,
      "rouge_3_f_score_cb": 0.19354,
      "rouge_3_f_score_ce": 0.19354,
      "rouge_4_recall": 0.11111,
      "rouge_4_recall_cb": 0.11111,
      "rouge_4_recall_ce": 0.11111,
      "rouge_4_precision": 0.18182,
      "rouge_4_precision_cb": 0.18182,
      "rouge_4_precision_ce": 0.18182,
      "rouge_4_f_score": 0.13793,
      "rouge_4_f_score_cb": 0.13793,
      "rouge_4_f_score_ce": 0.13793,
      "rouge_l_recall": 0.2381,
      "rouge_l_recall_cb": 0.2381,
      "rouge_l_recall_ce": 0.2381,
      "rouge_l_precision": 0.35714,
      "rouge_l_precision_cb": 0.35714,
      "rouge_l_precision_ce": 0.35714,
      "rouge_l_f_score": 0.28572,
      "rouge_l_f_score_cb": 0.28572,
      "rouge_l_f_score_ce": 0.28572,
      "rouge_w_1.2_recall": 0.12951,
      "rouge_w_1.2_recall_cb": 0.12951,
      "rouge_w_1.2_recall_ce": 0.12951,
      "rouge_w_1.2_precision": 0.35714,
      "rouge_w_1.2_precision_cb": 0.35714,
      "rouge_w_1.2_precision_ce": 0.35714,
      "rouge_w_1.2_f_score": 0.19009,
      "rouge_w_1.2_f_score_cb": 0.19009,
      "rouge_w_1.2_f_score_ce": 0.19009,
      "rouge_s*_recall": 0.07143,
      "rouge_s*_recall_cb": 0.07143,
      "rouge_s*_recall_ce": 0.07143,
      "rouge_s*_precision": 0.16484,
      "rouge_s*_precision_cb": 0.16484,
      "rouge_s*_precision_ce": 0.16484,
      "rouge_s*_f_score": 0.09967,
      "rouge_s*_f_score_cb": 0.09967,
      "rouge_s*_f_score_ce": 0.09967,
      "rouge_su*_recall": 0.0913,
      "rouge_su*_recall_cb": 0.0913,
      "rouge_su*_recall_ce": 0.0913,
      "rouge_su*_precision": 0.20192,
      "rouge_su*_precision_cb": 0.20192,
      "rouge_su*_precision_ce": 0.20192,
      "rouge_su*_f_score": 0.12574,
      "rouge_su*_f_score_cb": 0.12574,
      "rouge_su*_f_score_ce": 0.12574
    }
  },
  {
    "id": 67,
    "filename": "PandasEval_67.txt",
    "dataset_comment": "Resort the index of the DataFrame in place.",
    "generated_comment": "add the row at top in dfEnsure the newly added row is placed at the top of the DataFrame by sorting the index.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.875,
      "rouge_1_recall_cb": 0.875,
      "rouge_1_recall_ce": 0.875,
      "rouge_1_precision": 0.30435,
      "rouge_1_precision_cb": 0.30435,
      "rouge_1_precision_ce": 0.30435,
      "rouge_1_f_score": 0.45162,
      "rouge_1_f_score_cb": 0.45162,
      "rouge_1_f_score_ce": 0.45162,
      "rouge_2_recall": 0.42857,
      "rouge_2_recall_cb": 0.42857,
      "rouge_2_recall_ce": 0.42857,
      "rouge_2_precision": 0.13636,
      "rouge_2_precision_cb": 0.13636,
      "rouge_2_precision_ce": 0.13636,
      "rouge_2_f_score": 0.20689,
      "rouge_2_f_score_cb": 0.20689,
      "rouge_2_f_score_ce": 0.20689,
      "rouge_3_recall": 0.16667,
      "rouge_3_recall_cb": 0.16667,
      "rouge_3_recall_ce": 0.16667,
      "rouge_3_precision": 0.04762,
      "rouge_3_precision_cb": 0.04762,
      "rouge_3_precision_ce": 0.04762,
      "rouge_3_f_score": 0.07408,
      "rouge_3_f_score_cb": 0.07408,
      "rouge_3_f_score_ce": 0.07408,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.17391,
      "rouge_l_precision_cb": 0.17391,
      "rouge_l_precision_ce": 0.17391,
      "rouge_l_f_score": 0.25806,
      "rouge_l_f_score_cb": 0.25806,
      "rouge_l_f_score_ce": 0.25806,
      "rouge_w_1.2_recall": 0.30146,
      "rouge_w_1.2_recall_cb": 0.30146,
      "rouge_w_1.2_recall_ce": 0.30146,
      "rouge_w_1.2_precision": 0.15893,
      "rouge_w_1.2_precision_cb": 0.15893,
      "rouge_w_1.2_precision_ce": 0.15893,
      "rouge_w_1.2_f_score": 0.20813,
      "rouge_w_1.2_f_score_cb": 0.20813,
      "rouge_w_1.2_f_score_ce": 0.20813,
      "rouge_s*_recall": 0.39286,
      "rouge_s*_recall_cb": 0.39286,
      "rouge_s*_recall_ce": 0.39286,
      "rouge_s*_precision": 0.04348,
      "rouge_s*_precision_cb": 0.04348,
      "rouge_s*_precision_ce": 0.04348,
      "rouge_s*_f_score": 0.07829,
      "rouge_s*_f_score_cb": 0.07829,
      "rouge_s*_f_score_ce": 0.07829,
      "rouge_su*_recall": 0.45714,
      "rouge_su*_recall_cb": 0.45714,
      "rouge_su*_recall_ce": 0.45714,
      "rouge_su*_precision": 0.05818,
      "rouge_su*_precision_cb": 0.05818,
      "rouge_su*_precision_ce": 0.05818,
      "rouge_su*_f_score": 0.10322,
      "rouge_su*_f_score_cb": 0.10322,
      "rouge_su*_f_score_ce": 0.10322
    }
  },
  {
    "id": 68,
    "filename": "PandasEval_68.txt",
    "dataset_comment": "Drop all rows containing NaN values and return the modified dataframe.",
    "generated_comment": "Drop rows where all elements are NaN in an efficient way using pandas.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.36364,
      "rouge_1_recall_cb": 0.36364,
      "rouge_1_recall_ce": 0.36364,
      "rouge_1_precision": 0.30769,
      "rouge_1_precision_cb": 0.30769,
      "rouge_1_precision_ce": 0.30769,
      "rouge_1_f_score": 0.33333,
      "rouge_1_f_score_cb": 0.33333,
      "rouge_1_f_score_ce": 0.33333,
      "rouge_2_recall": 0.0,
      "rouge_2_recall_cb": 0.0,
      "rouge_2_recall_ce": 0.0,
      "rouge_2_precision": 0.0,
      "rouge_2_precision_cb": 0.0,
      "rouge_2_precision_ce": 0.0,
      "rouge_2_f_score": 0.0,
      "rouge_2_f_score_cb": 0.0,
      "rouge_2_f_score_ce": 0.0,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.27273,
      "rouge_l_recall_cb": 0.27273,
      "rouge_l_recall_ce": 0.27273,
      "rouge_l_precision": 0.23077,
      "rouge_l_precision_cb": 0.23077,
      "rouge_l_precision_ce": 0.23077,
      "rouge_l_f_score": 0.25,
      "rouge_l_f_score_cb": 0.25,
      "rouge_l_f_score_ce": 0.25,
      "rouge_w_1.2_recall": 0.1521,
      "rouge_w_1.2_recall_cb": 0.1521,
      "rouge_w_1.2_recall_ce": 0.1521,
      "rouge_w_1.2_precision": 0.20791,
      "rouge_w_1.2_precision_cb": 0.20791,
      "rouge_w_1.2_precision_ce": 0.20791,
      "rouge_w_1.2_f_score": 0.17568,
      "rouge_w_1.2_f_score_cb": 0.17568,
      "rouge_w_1.2_f_score_ce": 0.17568,
      "rouge_s*_recall": 0.09091,
      "rouge_s*_recall_cb": 0.09091,
      "rouge_s*_recall_ce": 0.09091,
      "rouge_s*_precision": 0.0641,
      "rouge_s*_precision_cb": 0.0641,
      "rouge_s*_precision_ce": 0.0641,
      "rouge_s*_f_score": 0.07519,
      "rouge_s*_f_score_cb": 0.07519,
      "rouge_s*_f_score_ce": 0.07519,
      "rouge_su*_recall": 0.13846,
      "rouge_su*_recall_cb": 0.13846,
      "rouge_su*_recall_ce": 0.13846,
      "rouge_su*_precision": 0.1,
      "rouge_su*_precision_cb": 0.1,
      "rouge_su*_precision_ce": 0.1,
      "rouge_su*_f_score": 0.11613,
      "rouge_su*_f_score_cb": 0.11613,
      "rouge_su*_f_score_ce": 0.11613
    }
  },
  {
    "id": 69,
    "filename": "PandasEval_69.txt",
    "dataset_comment": "Fill specific columns of a Pandas DataFrame with 0 in place using the fillna() function and return the changed DataFrame.",
    "generated_comment": "Fill NaN values in the specified columns with 0 and return the modified DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5,
      "rouge_1_recall_cb": 0.5,
      "rouge_1_recall_ce": 0.5,
      "rouge_1_precision": 0.71429,
      "rouge_1_precision_cb": 0.71429,
      "rouge_1_precision_ce": 0.71429,
      "rouge_1_f_score": 0.58824,
      "rouge_1_f_score_cb": 0.58824,
      "rouge_1_f_score_ce": 0.58824,
      "rouge_2_recall": 0.15789,
      "rouge_2_recall_cb": 0.15789,
      "rouge_2_recall_ce": 0.15789,
      "rouge_2_precision": 0.23077,
      "rouge_2_precision_cb": 0.23077,
      "rouge_2_precision_ce": 0.23077,
      "rouge_2_f_score": 0.1875,
      "rouge_2_f_score_cb": 0.1875,
      "rouge_2_f_score_ce": 0.1875,
      "rouge_3_recall": 0.05556,
      "rouge_3_recall_cb": 0.05556,
      "rouge_3_recall_ce": 0.05556,
      "rouge_3_precision": 0.08333,
      "rouge_3_precision_cb": 0.08333,
      "rouge_3_precision_ce": 0.08333,
      "rouge_3_f_score": 0.06667,
      "rouge_3_f_score_cb": 0.06667,
      "rouge_3_f_score_ce": 0.06667,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.4,
      "rouge_l_recall_cb": 0.4,
      "rouge_l_recall_ce": 0.4,
      "rouge_l_precision": 0.57143,
      "rouge_l_precision_cb": 0.57143,
      "rouge_l_precision_ce": 0.57143,
      "rouge_l_f_score": 0.47059,
      "rouge_l_f_score_cb": 0.47059,
      "rouge_l_f_score_ce": 0.47059,
      "rouge_w_1.2_recall": 0.17193,
      "rouge_w_1.2_recall_cb": 0.17193,
      "rouge_w_1.2_recall_ce": 0.17193,
      "rouge_w_1.2_precision": 0.44716,
      "rouge_w_1.2_precision_cb": 0.44716,
      "rouge_w_1.2_precision_ce": 0.44716,
      "rouge_w_1.2_f_score": 0.24837,
      "rouge_w_1.2_f_score_cb": 0.24837,
      "rouge_w_1.2_f_score_ce": 0.24837,
      "rouge_s*_recall": 0.20526,
      "rouge_s*_recall_cb": 0.20526,
      "rouge_s*_recall_ce": 0.20526,
      "rouge_s*_precision": 0.42857,
      "rouge_s*_precision_cb": 0.42857,
      "rouge_s*_precision_ce": 0.42857,
      "rouge_s*_f_score": 0.27758,
      "rouge_s*_f_score_cb": 0.27758,
      "rouge_s*_f_score_ce": 0.27758,
      "rouge_su*_recall": 0.22967,
      "rouge_su*_recall_cb": 0.22967,
      "rouge_su*_recall_ce": 0.22967,
      "rouge_su*_precision": 0.46154,
      "rouge_su*_precision_cb": 0.46154,
      "rouge_su*_precision_ce": 0.46154,
      "rouge_su*_f_score": 0.30671,
      "rouge_su*_f_score_cb": 0.30671,
      "rouge_su*_f_score_ce": 0.30671
    }
  },
  {
    "id": 70,
    "filename": "PandasEval_70.txt",
    "dataset_comment": "Drop all data in a Pandas DataFrame using df.index to remove all rows.",
    "generated_comment": "Drop all rows from the DataFrame in place.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.35714,
      "rouge_1_recall_cb": 0.35714,
      "rouge_1_recall_ce": 0.35714,
      "rouge_1_precision": 0.625,
      "rouge_1_precision_cb": 0.625,
      "rouge_1_precision_ce": 0.625,
      "rouge_1_f_score": 0.45454,
      "rouge_1_f_score_cb": 0.45454,
      "rouge_1_f_score_ce": 0.45454,
      "rouge_2_recall": 0.15385,
      "rouge_2_recall_cb": 0.15385,
      "rouge_2_recall_ce": 0.15385,
      "rouge_2_precision": 0.28571,
      "rouge_2_precision_cb": 0.28571,
      "rouge_2_precision_ce": 0.28571,
      "rouge_2_f_score": 0.2,
      "rouge_2_f_score_cb": 0.2,
      "rouge_2_f_score_ce": 0.2,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.21429,
      "rouge_l_recall_cb": 0.21429,
      "rouge_l_recall_ce": 0.21429,
      "rouge_l_precision": 0.375,
      "rouge_l_precision_cb": 0.375,
      "rouge_l_precision_ce": 0.375,
      "rouge_l_f_score": 0.27273,
      "rouge_l_f_score_cb": 0.27273,
      "rouge_l_f_score_ce": 0.27273,
      "rouge_w_1.2_recall": 0.11388,
      "rouge_w_1.2_recall_cb": 0.11388,
      "rouge_w_1.2_recall_ce": 0.11388,
      "rouge_w_1.2_precision": 0.33785,
      "rouge_w_1.2_precision_cb": 0.33785,
      "rouge_w_1.2_precision_ce": 0.33785,
      "rouge_w_1.2_f_score": 0.17034,
      "rouge_w_1.2_f_score_cb": 0.17034,
      "rouge_w_1.2_f_score_ce": 0.17034,
      "rouge_s*_recall": 0.07692,
      "rouge_s*_recall_cb": 0.07692,
      "rouge_s*_recall_ce": 0.07692,
      "rouge_s*_precision": 0.25,
      "rouge_s*_precision_cb": 0.25,
      "rouge_s*_precision_ce": 0.25,
      "rouge_s*_f_score": 0.11764,
      "rouge_s*_f_score_cb": 0.11764,
      "rouge_s*_f_score_ce": 0.11764,
      "rouge_su*_recall": 0.10577,
      "rouge_su*_recall_cb": 0.10577,
      "rouge_su*_recall_ce": 0.10577,
      "rouge_su*_precision": 0.31429,
      "rouge_su*_precision_cb": 0.31429,
      "rouge_su*_precision_ce": 0.31429,
      "rouge_su*_f_score": 0.15827,
      "rouge_su*_f_score_cb": 0.15827,
      "rouge_su*_f_score_ce": 0.15827
    }
  },
  {
    "id": 71,
    "filename": "PandasEval_71.txt",
    "dataset_comment": "Split a dataframe with 100,000 entries into 100 sections of 1,000 entries each.  Take a random sample of size 50 from one of the sections.  Add a \"section\" column to the dataframe, then perform a groupby and sample(n=50).",
    "generated_comment": "Sample 50 rows from each section in the DataFrame using groupby and sample methods.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.2381,
      "rouge_1_recall_cb": 0.2381,
      "rouge_1_recall_ce": 0.2381,
      "rouge_1_precision": 0.71429,
      "rouge_1_precision_cb": 0.71429,
      "rouge_1_precision_ce": 0.71429,
      "rouge_1_f_score": 0.35715,
      "rouge_1_f_score_cb": 0.35715,
      "rouge_1_f_score_ce": 0.35715,
      "rouge_2_recall": 0.07317,
      "rouge_2_recall_cb": 0.07317,
      "rouge_2_recall_ce": 0.07317,
      "rouge_2_precision": 0.23077,
      "rouge_2_precision_cb": 0.23077,
      "rouge_2_precision_ce": 0.23077,
      "rouge_2_f_score": 0.11111,
      "rouge_2_f_score_cb": 0.11111,
      "rouge_2_f_score_ce": 0.11111,
      "rouge_3_recall": 0.025,
      "rouge_3_recall_cb": 0.025,
      "rouge_3_recall_ce": 0.025,
      "rouge_3_precision": 0.08333,
      "rouge_3_precision_cb": 0.08333,
      "rouge_3_precision_ce": 0.08333,
      "rouge_3_f_score": 0.03846,
      "rouge_3_f_score_cb": 0.03846,
      "rouge_3_f_score_ce": 0.03846,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.21429,
      "rouge_l_recall_cb": 0.21429,
      "rouge_l_recall_ce": 0.21429,
      "rouge_l_precision": 0.64286,
      "rouge_l_precision_cb": 0.64286,
      "rouge_l_precision_ce": 0.64286,
      "rouge_l_f_score": 0.32143,
      "rouge_l_f_score_cb": 0.32143,
      "rouge_l_f_score_ce": 0.32143,
      "rouge_w_1.2_recall": 0.07893,
      "rouge_w_1.2_recall_cb": 0.07893,
      "rouge_w_1.2_recall_ce": 0.07893,
      "rouge_w_1.2_precision": 0.50006,
      "rouge_w_1.2_precision_cb": 0.50006,
      "rouge_w_1.2_precision_ce": 0.50006,
      "rouge_w_1.2_f_score": 0.13634,
      "rouge_w_1.2_f_score_cb": 0.13634,
      "rouge_w_1.2_f_score_ce": 0.13634,
      "rouge_s*_recall": 0.04878,
      "rouge_s*_recall_cb": 0.04878,
      "rouge_s*_recall_ce": 0.04878,
      "rouge_s*_precision": 0.46154,
      "rouge_s*_precision_cb": 0.46154,
      "rouge_s*_precision_ce": 0.46154,
      "rouge_s*_f_score": 0.08823,
      "rouge_s*_f_score_cb": 0.08823,
      "rouge_s*_f_score_ce": 0.08823,
      "rouge_su*_recall": 0.05765,
      "rouge_su*_recall_cb": 0.05765,
      "rouge_su*_recall_ce": 0.05765,
      "rouge_su*_precision": 0.5,
      "rouge_su*_precision_cb": 0.5,
      "rouge_su*_precision_ce": 0.5,
      "rouge_su*_f_score": 0.10338,
      "rouge_su*_f_score_cb": 0.10338,
      "rouge_su*_f_score_ce": 0.10338
    }
  },
  {
    "id": 72,
    "filename": "PandasEval_72.txt",
    "dataset_comment": "Normalize the columns of the Pandas DataFrame so that each value is between 0 and 1, given that each column has a different value range.",
    "generated_comment": "Normalize each column in the DataFrame by subtracting the minimum value and dividing by the range (max - min).",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.36,
      "rouge_1_recall_cb": 0.36,
      "rouge_1_recall_ce": 0.36,
      "rouge_1_precision": 0.5,
      "rouge_1_precision_cb": 0.5,
      "rouge_1_precision_ce": 0.5,
      "rouge_1_f_score": 0.4186,
      "rouge_1_f_score_cb": 0.4186,
      "rouge_1_f_score_ce": 0.4186,
      "rouge_2_recall": 0.04167,
      "rouge_2_recall_cb": 0.04167,
      "rouge_2_recall_ce": 0.04167,
      "rouge_2_precision": 0.05882,
      "rouge_2_precision_cb": 0.05882,
      "rouge_2_precision_ce": 0.05882,
      "rouge_2_f_score": 0.04878,
      "rouge_2_f_score_cb": 0.04878,
      "rouge_2_f_score_ce": 0.04878,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.28,
      "rouge_l_recall_cb": 0.28,
      "rouge_l_recall_ce": 0.28,
      "rouge_l_precision": 0.38889,
      "rouge_l_precision_cb": 0.38889,
      "rouge_l_precision_ce": 0.38889,
      "rouge_l_f_score": 0.32558,
      "rouge_l_f_score_cb": 0.32558,
      "rouge_l_f_score_ce": 0.32558,
      "rouge_w_1.2_recall": 0.10635,
      "rouge_w_1.2_recall_cb": 0.10635,
      "rouge_w_1.2_recall_ce": 0.10635,
      "rouge_w_1.2_precision": 0.28117,
      "rouge_w_1.2_precision_cb": 0.28117,
      "rouge_w_1.2_precision_ce": 0.28117,
      "rouge_w_1.2_f_score": 0.15433,
      "rouge_w_1.2_f_score_cb": 0.15433,
      "rouge_w_1.2_f_score_ce": 0.15433,
      "rouge_s*_recall": 0.10333,
      "rouge_s*_recall_cb": 0.10333,
      "rouge_s*_recall_ce": 0.10333,
      "rouge_s*_precision": 0.20261,
      "rouge_s*_precision_cb": 0.20261,
      "rouge_s*_precision_ce": 0.20261,
      "rouge_s*_f_score": 0.13686,
      "rouge_s*_f_score_cb": 0.13686,
      "rouge_s*_f_score_ce": 0.13686,
      "rouge_su*_recall": 0.12037,
      "rouge_su*_recall_cb": 0.12037,
      "rouge_su*_recall_ce": 0.12037,
      "rouge_su*_precision": 0.22941,
      "rouge_su*_precision_cb": 0.22941,
      "rouge_su*_precision_ce": 0.22941,
      "rouge_su*_f_score": 0.15789,
      "rouge_su*_f_score_cb": 0.15789,
      "rouge_su*_f_score_ce": 0.15789
    }
  },
  {
    "id": 73,
    "filename": "PandasEval_73.txt",
    "dataset_comment": "Get the counts of unique values of the DataFrame using count_values,  convert the output to a Pandas DataFrame,  rename the axis to 'unique_values',  and reset the index to return the final DataFrame.",
    "generated_comment": "Calculate the frequency of each unique value in the DataFrame and return a DataFrame with the unique values and their counts.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.41176,
      "rouge_1_recall_cb": 0.41176,
      "rouge_1_recall_ce": 0.41176,
      "rouge_1_precision": 0.66667,
      "rouge_1_precision_cb": 0.66667,
      "rouge_1_precision_ce": 0.66667,
      "rouge_1_f_score": 0.50909,
      "rouge_1_f_score_cb": 0.50909,
      "rouge_1_f_score_ce": 0.50909,
      "rouge_2_recall": 0.12121,
      "rouge_2_recall_cb": 0.12121,
      "rouge_2_recall_ce": 0.12121,
      "rouge_2_precision": 0.2,
      "rouge_2_precision_cb": 0.2,
      "rouge_2_precision_ce": 0.2,
      "rouge_2_f_score": 0.15094,
      "rouge_2_f_score_cb": 0.15094,
      "rouge_2_f_score_ce": 0.15094,
      "rouge_3_recall": 0.03125,
      "rouge_3_recall_cb": 0.03125,
      "rouge_3_recall_ce": 0.03125,
      "rouge_3_precision": 0.05263,
      "rouge_3_precision_cb": 0.05263,
      "rouge_3_precision_ce": 0.05263,
      "rouge_3_f_score": 0.03922,
      "rouge_3_f_score_cb": 0.03922,
      "rouge_3_f_score_ce": 0.03922,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.35294,
      "rouge_l_recall_cb": 0.35294,
      "rouge_l_recall_ce": 0.35294,
      "rouge_l_precision": 0.57143,
      "rouge_l_precision_cb": 0.57143,
      "rouge_l_precision_ce": 0.57143,
      "rouge_l_f_score": 0.43636,
      "rouge_l_f_score_cb": 0.43636,
      "rouge_l_f_score_ce": 0.43636,
      "rouge_w_1.2_recall": 0.12924,
      "rouge_w_1.2_recall_cb": 0.12924,
      "rouge_w_1.2_recall_ce": 0.12924,
      "rouge_w_1.2_precision": 0.42358,
      "rouge_w_1.2_precision_cb": 0.42358,
      "rouge_w_1.2_precision_ce": 0.42358,
      "rouge_w_1.2_f_score": 0.19805,
      "rouge_w_1.2_f_score_cb": 0.19805,
      "rouge_w_1.2_f_score_ce": 0.19805,
      "rouge_s*_recall": 0.15508,
      "rouge_s*_recall_cb": 0.15508,
      "rouge_s*_recall_ce": 0.15508,
      "rouge_s*_precision": 0.41429,
      "rouge_s*_precision_cb": 0.41429,
      "rouge_s*_precision_ce": 0.41429,
      "rouge_s*_f_score": 0.22568,
      "rouge_s*_f_score_cb": 0.22568,
      "rouge_s*_f_score_ce": 0.22568,
      "rouge_su*_recall": 0.16835,
      "rouge_su*_recall_cb": 0.16835,
      "rouge_su*_recall_ce": 0.16835,
      "rouge_su*_precision": 0.43478,
      "rouge_su*_precision_cb": 0.43478,
      "rouge_su*_precision_ce": 0.43478,
      "rouge_su*_f_score": 0.24272,
      "rouge_su*_f_score_cb": 0.24272,
      "rouge_su*_f_score_ce": 0.24272
    }
  },
  {
    "id": 74,
    "filename": "PandasEval_74.txt",
    "dataset_comment": "Count the number of occurrences of a value in a series and return the count.",
    "generated_comment": "Count the occurrences of a specific value in a pandas Series and return the count.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.86667,
      "rouge_1_recall_cb": 0.86667,
      "rouge_1_recall_ce": 0.86667,
      "rouge_1_precision": 0.86667,
      "rouge_1_precision_cb": 0.86667,
      "rouge_1_precision_ce": 0.86667,
      "rouge_1_f_score": 0.86667,
      "rouge_1_f_score_cb": 0.86667,
      "rouge_1_f_score_ce": 0.86667,
      "rouge_2_recall": 0.64286,
      "rouge_2_recall_cb": 0.64286,
      "rouge_2_recall_ce": 0.64286,
      "rouge_2_precision": 0.64286,
      "rouge_2_precision_cb": 0.64286,
      "rouge_2_precision_ce": 0.64286,
      "rouge_2_f_score": 0.64286,
      "rouge_2_f_score_cb": 0.64286,
      "rouge_2_f_score_ce": 0.64286,
      "rouge_3_recall": 0.38462,
      "rouge_3_recall_cb": 0.38462,
      "rouge_3_recall_ce": 0.38462,
      "rouge_3_precision": 0.38462,
      "rouge_3_precision_cb": 0.38462,
      "rouge_3_precision_ce": 0.38462,
      "rouge_3_f_score": 0.38462,
      "rouge_3_f_score_cb": 0.38462,
      "rouge_3_f_score_ce": 0.38462,
      "rouge_4_recall": 0.16667,
      "rouge_4_recall_cb": 0.16667,
      "rouge_4_recall_ce": 0.16667,
      "rouge_4_precision": 0.16667,
      "rouge_4_precision_cb": 0.16667,
      "rouge_4_precision_ce": 0.16667,
      "rouge_4_f_score": 0.16667,
      "rouge_4_f_score_cb": 0.16667,
      "rouge_4_f_score_ce": 0.16667,
      "rouge_l_recall": 0.86667,
      "rouge_l_recall_cb": 0.86667,
      "rouge_l_recall_ce": 0.86667,
      "rouge_l_precision": 0.86667,
      "rouge_l_precision_cb": 0.86667,
      "rouge_l_precision_ce": 0.86667,
      "rouge_l_f_score": 0.86667,
      "rouge_l_f_score_cb": 0.86667,
      "rouge_l_f_score_ce": 0.86667,
      "rouge_w_1.2_recall": 0.47216,
      "rouge_w_1.2_recall_cb": 0.47216,
      "rouge_w_1.2_recall_ce": 0.47216,
      "rouge_w_1.2_precision": 0.81153,
      "rouge_w_1.2_precision_cb": 0.81153,
      "rouge_w_1.2_precision_ce": 0.81153,
      "rouge_w_1.2_f_score": 0.59699,
      "rouge_w_1.2_f_score_cb": 0.59699,
      "rouge_w_1.2_f_score_ce": 0.59699,
      "rouge_s*_recall": 0.74286,
      "rouge_s*_recall_cb": 0.74286,
      "rouge_s*_recall_ce": 0.74286,
      "rouge_s*_precision": 0.74286,
      "rouge_s*_precision_cb": 0.74286,
      "rouge_s*_precision_ce": 0.74286,
      "rouge_s*_f_score": 0.74286,
      "rouge_s*_f_score_cb": 0.74286,
      "rouge_s*_f_score_ce": 0.74286,
      "rouge_su*_recall": 0.7563,
      "rouge_su*_recall_cb": 0.7563,
      "rouge_su*_recall_ce": 0.7563,
      "rouge_su*_precision": 0.7563,
      "rouge_su*_precision_cb": 0.7563,
      "rouge_su*_precision_ce": 0.7563,
      "rouge_su*_f_score": 0.7563,
      "rouge_su*_f_score_cb": 0.7563,
      "rouge_su*_f_score_ce": 0.7563
    }
  },
  {
    "id": 75,
    "filename": "PandasEval_75.txt",
    "dataset_comment": "Select rows where the value in column x2 is NaN.",
    "generated_comment": "Filter the DataFrame to include only rows where the 'x2' column contains NaN values.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.7,
      "rouge_1_recall_cb": 0.7,
      "rouge_1_recall_ce": 0.7,
      "rouge_1_precision": 0.5,
      "rouge_1_precision_cb": 0.5,
      "rouge_1_precision_ce": 0.5,
      "rouge_1_f_score": 0.58333,
      "rouge_1_f_score_cb": 0.58333,
      "rouge_1_f_score_ce": 0.58333,
      "rouge_2_recall": 0.22222,
      "rouge_2_recall_cb": 0.22222,
      "rouge_2_recall_ce": 0.22222,
      "rouge_2_precision": 0.15385,
      "rouge_2_precision_cb": 0.15385,
      "rouge_2_precision_ce": 0.15385,
      "rouge_2_f_score": 0.18182,
      "rouge_2_f_score_cb": 0.18182,
      "rouge_2_f_score_ce": 0.18182,
      "rouge_3_recall": 0.125,
      "rouge_3_recall_cb": 0.125,
      "rouge_3_recall_ce": 0.125,
      "rouge_3_precision": 0.08333,
      "rouge_3_precision_cb": 0.08333,
      "rouge_3_precision_ce": 0.08333,
      "rouge_3_f_score": 0.1,
      "rouge_3_f_score_cb": 0.1,
      "rouge_3_f_score_ce": 0.1,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.35714,
      "rouge_l_precision_cb": 0.35714,
      "rouge_l_precision_ce": 0.35714,
      "rouge_l_f_score": 0.41666,
      "rouge_l_f_score_cb": 0.41666,
      "rouge_l_f_score_ce": 0.41666,
      "rouge_w_1.2_recall": 0.27055,
      "rouge_w_1.2_recall_cb": 0.27055,
      "rouge_w_1.2_recall_ce": 0.27055,
      "rouge_w_1.2_precision": 0.30628,
      "rouge_w_1.2_precision_cb": 0.30628,
      "rouge_w_1.2_precision_ce": 0.30628,
      "rouge_w_1.2_f_score": 0.28731,
      "rouge_w_1.2_f_score_cb": 0.28731,
      "rouge_w_1.2_f_score_ce": 0.28731,
      "rouge_s*_recall": 0.37778,
      "rouge_s*_recall_cb": 0.37778,
      "rouge_s*_recall_ce": 0.37778,
      "rouge_s*_precision": 0.18681,
      "rouge_s*_precision_cb": 0.18681,
      "rouge_s*_precision_ce": 0.18681,
      "rouge_s*_f_score": 0.25,
      "rouge_s*_f_score_cb": 0.25,
      "rouge_s*_f_score_ce": 0.25,
      "rouge_su*_recall": 0.40741,
      "rouge_su*_recall_cb": 0.40741,
      "rouge_su*_recall_ce": 0.40741,
      "rouge_su*_precision": 0.21154,
      "rouge_su*_precision_cb": 0.21154,
      "rouge_su*_precision_ce": 0.21154,
      "rouge_su*_f_score": 0.27848,
      "rouge_su*_f_score_cb": 0.27848,
      "rouge_su*_f_score_ce": 0.27848
    }
  },
  {
    "id": 76,
    "filename": "PandasEval_76.txt",
    "dataset_comment": "Append the source series to the target series while ignoring the index or resetting the index.",
    "generated_comment": "Combine the target_series and source_series into a single series, resetting the index to ensure a continuous index.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.625,
      "rouge_1_recall_cb": 0.625,
      "rouge_1_recall_ce": 0.625,
      "rouge_1_precision": 0.52632,
      "rouge_1_precision_cb": 0.52632,
      "rouge_1_precision_ce": 0.52632,
      "rouge_1_f_score": 0.57143,
      "rouge_1_f_score_cb": 0.57143,
      "rouge_1_f_score_ce": 0.57143,
      "rouge_2_recall": 0.33333,
      "rouge_2_recall_cb": 0.33333,
      "rouge_2_recall_ce": 0.33333,
      "rouge_2_precision": 0.27778,
      "rouge_2_precision_cb": 0.27778,
      "rouge_2_precision_ce": 0.27778,
      "rouge_2_f_score": 0.30303,
      "rouge_2_f_score_cb": 0.30303,
      "rouge_2_f_score_ce": 0.30303,
      "rouge_3_recall": 0.14286,
      "rouge_3_recall_cb": 0.14286,
      "rouge_3_recall_ce": 0.14286,
      "rouge_3_precision": 0.11765,
      "rouge_3_precision_cb": 0.11765,
      "rouge_3_precision_ce": 0.11765,
      "rouge_3_f_score": 0.12904,
      "rouge_3_f_score_cb": 0.12904,
      "rouge_3_f_score_ce": 0.12904,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.4375,
      "rouge_l_recall_cb": 0.4375,
      "rouge_l_recall_ce": 0.4375,
      "rouge_l_precision": 0.36842,
      "rouge_l_precision_cb": 0.36842,
      "rouge_l_precision_ce": 0.36842,
      "rouge_l_f_score": 0.4,
      "rouge_l_f_score_cb": 0.4,
      "rouge_l_f_score_ce": 0.4,
      "rouge_w_1.2_recall": 0.20379,
      "rouge_w_1.2_recall_cb": 0.20379,
      "rouge_w_1.2_recall_ce": 0.20379,
      "rouge_w_1.2_precision": 0.2988,
      "rouge_w_1.2_precision_cb": 0.2988,
      "rouge_w_1.2_precision_ce": 0.2988,
      "rouge_w_1.2_f_score": 0.24231,
      "rouge_w_1.2_f_score_cb": 0.24231,
      "rouge_w_1.2_f_score_ce": 0.24231,
      "rouge_s*_recall": 0.325,
      "rouge_s*_recall_cb": 0.325,
      "rouge_s*_recall_ce": 0.325,
      "rouge_s*_precision": 0.22807,
      "rouge_s*_precision_cb": 0.22807,
      "rouge_s*_precision_ce": 0.22807,
      "rouge_s*_f_score": 0.26804,
      "rouge_s*_f_score_cb": 0.26804,
      "rouge_s*_f_score_ce": 0.26804,
      "rouge_su*_recall": 0.35556,
      "rouge_su*_recall_cb": 0.35556,
      "rouge_su*_recall_ce": 0.35556,
      "rouge_su*_precision": 0.25397,
      "rouge_su*_precision_cb": 0.25397,
      "rouge_su*_precision_ce": 0.25397,
      "rouge_su*_f_score": 0.2963,
      "rouge_su*_f_score_cb": 0.2963,
      "rouge_su*_f_score_ce": 0.2963
    }
  },
  {
    "id": 77,
    "filename": "PandasEval_77.txt",
    "dataset_comment": "Find and return the rows in the DataFrame where col_a is greater than col_b.",
    "generated_comment": "Filter rows where the value in column 'col_a' is greater than the value in column 'col_b'.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.75,
      "rouge_1_recall_cb": 0.75,
      "rouge_1_recall_ce": 0.75,
      "rouge_1_precision": 0.66667,
      "rouge_1_precision_cb": 0.66667,
      "rouge_1_precision_ce": 0.66667,
      "rouge_1_f_score": 0.70588,
      "rouge_1_f_score_cb": 0.70588,
      "rouge_1_f_score_ce": 0.70588,
      "rouge_2_recall": 0.33333,
      "rouge_2_recall_cb": 0.33333,
      "rouge_2_recall_ce": 0.33333,
      "rouge_2_precision": 0.29412,
      "rouge_2_precision_cb": 0.29412,
      "rouge_2_precision_ce": 0.29412,
      "rouge_2_f_score": 0.3125,
      "rouge_2_f_score_cb": 0.3125,
      "rouge_2_f_score_ce": 0.3125,
      "rouge_3_recall": 0.21429,
      "rouge_3_recall_cb": 0.21429,
      "rouge_3_recall_ce": 0.21429,
      "rouge_3_precision": 0.1875,
      "rouge_3_precision_cb": 0.1875,
      "rouge_3_precision_ce": 0.1875,
      "rouge_3_f_score": 0.2,
      "rouge_3_f_score_cb": 0.2,
      "rouge_3_f_score_ce": 0.2,
      "rouge_4_recall": 0.15385,
      "rouge_4_recall_cb": 0.15385,
      "rouge_4_recall_ce": 0.15385,
      "rouge_4_precision": 0.13333,
      "rouge_4_precision_cb": 0.13333,
      "rouge_4_precision_ce": 0.13333,
      "rouge_4_f_score": 0.14286,
      "rouge_4_f_score_cb": 0.14286,
      "rouge_4_f_score_ce": 0.14286,
      "rouge_l_recall": 0.5625,
      "rouge_l_recall_cb": 0.5625,
      "rouge_l_recall_ce": 0.5625,
      "rouge_l_precision": 0.5,
      "rouge_l_precision_cb": 0.5,
      "rouge_l_precision_ce": 0.5,
      "rouge_l_f_score": 0.52941,
      "rouge_l_f_score_cb": 0.52941,
      "rouge_l_f_score_ce": 0.52941,
      "rouge_w_1.2_recall": 0.29121,
      "rouge_w_1.2_recall_cb": 0.29121,
      "rouge_w_1.2_recall_ce": 0.29121,
      "rouge_w_1.2_precision": 0.45069,
      "rouge_w_1.2_precision_cb": 0.45069,
      "rouge_w_1.2_precision_ce": 0.45069,
      "rouge_w_1.2_f_score": 0.35381,
      "rouge_w_1.2_f_score_cb": 0.35381,
      "rouge_w_1.2_f_score_ce": 0.35381,
      "rouge_s*_recall": 0.475,
      "rouge_s*_recall_cb": 0.475,
      "rouge_s*_recall_ce": 0.475,
      "rouge_s*_precision": 0.37255,
      "rouge_s*_precision_cb": 0.37255,
      "rouge_s*_precision_ce": 0.37255,
      "rouge_s*_f_score": 0.41758,
      "rouge_s*_f_score_cb": 0.41758,
      "rouge_s*_f_score_ce": 0.41758,
      "rouge_su*_recall": 0.5037,
      "rouge_su*_recall_cb": 0.5037,
      "rouge_su*_recall_ce": 0.5037,
      "rouge_su*_precision": 0.4,
      "rouge_su*_precision_cb": 0.4,
      "rouge_su*_precision_ce": 0.4,
      "rouge_su*_f_score": 0.4459,
      "rouge_su*_f_score_cb": 0.4459,
      "rouge_su*_f_score_ce": 0.4459
    }
  },
  {
    "id": 78,
    "filename": "PandasEval_78.txt",
    "dataset_comment": "Check whether a column or row exists in a DataFrame before referencing it.  Output the second row of data in the `mycol` column if it exists; otherwise, output NaN.",
    "generated_comment": "Retrieve the value from the 'mycol' column at index 1, or return np.nan if the index is out of bounds.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.27586,
      "rouge_1_recall_cb": 0.27586,
      "rouge_1_recall_ce": 0.27586,
      "rouge_1_precision": 0.38095,
      "rouge_1_precision_cb": 0.38095,
      "rouge_1_precision_ce": 0.38095,
      "rouge_1_f_score": 0.32,
      "rouge_1_f_score_cb": 0.32,
      "rouge_1_f_score_ce": 0.32,
      "rouge_2_recall": 0.07143,
      "rouge_2_recall_cb": 0.07143,
      "rouge_2_recall_ce": 0.07143,
      "rouge_2_precision": 0.1,
      "rouge_2_precision_cb": 0.1,
      "rouge_2_precision_ce": 0.1,
      "rouge_2_f_score": 0.08333,
      "rouge_2_f_score_cb": 0.08333,
      "rouge_2_f_score_ce": 0.08333,
      "rouge_3_recall": 0.03704,
      "rouge_3_recall_cb": 0.03704,
      "rouge_3_recall_ce": 0.03704,
      "rouge_3_precision": 0.05263,
      "rouge_3_precision_cb": 0.05263,
      "rouge_3_precision_ce": 0.05263,
      "rouge_3_f_score": 0.04348,
      "rouge_3_f_score_cb": 0.04348,
      "rouge_3_f_score_ce": 0.04348,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.17241,
      "rouge_l_recall_cb": 0.17241,
      "rouge_l_recall_ce": 0.17241,
      "rouge_l_precision": 0.2381,
      "rouge_l_precision_cb": 0.2381,
      "rouge_l_precision_ce": 0.2381,
      "rouge_l_f_score": 0.2,
      "rouge_l_f_score_cb": 0.2,
      "rouge_l_f_score_ce": 0.2,
      "rouge_w_1.2_recall": 0.08128,
      "rouge_w_1.2_recall_cb": 0.08128,
      "rouge_w_1.2_recall_ce": 0.08128,
      "rouge_w_1.2_precision": 0.22011,
      "rouge_w_1.2_precision_cb": 0.22011,
      "rouge_w_1.2_precision_ce": 0.22011,
      "rouge_w_1.2_f_score": 0.11872,
      "rouge_w_1.2_f_score_cb": 0.11872,
      "rouge_w_1.2_f_score_ce": 0.11872,
      "rouge_s*_recall": 0.05419,
      "rouge_s*_recall_cb": 0.05419,
      "rouge_s*_recall_ce": 0.05419,
      "rouge_s*_precision": 0.10476,
      "rouge_s*_precision_cb": 0.10476,
      "rouge_s*_precision_ce": 0.10476,
      "rouge_s*_f_score": 0.07143,
      "rouge_s*_f_score_cb": 0.07143,
      "rouge_s*_f_score_ce": 0.07143,
      "rouge_su*_recall": 0.06682,
      "rouge_su*_recall_cb": 0.06682,
      "rouge_su*_recall_ce": 0.06682,
      "rouge_su*_precision": 0.12609,
      "rouge_su*_precision_cb": 0.12609,
      "rouge_su*_precision_ce": 0.12609,
      "rouge_su*_f_score": 0.08735,
      "rouge_su*_f_score_cb": 0.08735,
      "rouge_su*_f_score_ce": 0.08735
    }
  },
  {
    "id": 79,
    "filename": "PandasEval_79.txt",
    "dataset_comment": "Return the dataframe excluding rows that contain one or more NaN values.",
    "generated_comment": "Return rows in the DataFrame where any column contains NaN values.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.58333,
      "rouge_1_recall_cb": 0.58333,
      "rouge_1_recall_ce": 0.58333,
      "rouge_1_precision": 0.63636,
      "rouge_1_precision_cb": 0.63636,
      "rouge_1_precision_ce": 0.63636,
      "rouge_1_f_score": 0.60869,
      "rouge_1_f_score_cb": 0.60869,
      "rouge_1_f_score_ce": 0.60869,
      "rouge_2_recall": 0.18182,
      "rouge_2_recall_cb": 0.18182,
      "rouge_2_recall_ce": 0.18182,
      "rouge_2_precision": 0.2,
      "rouge_2_precision_cb": 0.2,
      "rouge_2_precision_ce": 0.2,
      "rouge_2_f_score": 0.19048,
      "rouge_2_f_score_cb": 0.19048,
      "rouge_2_f_score_ce": 0.19048,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.54545,
      "rouge_l_precision_cb": 0.54545,
      "rouge_l_precision_ce": 0.54545,
      "rouge_l_f_score": 0.52174,
      "rouge_l_f_score_cb": 0.52174,
      "rouge_l_f_score_ce": 0.52174,
      "rouge_w_1.2_recall": 0.25764,
      "rouge_w_1.2_recall_cb": 0.25764,
      "rouge_w_1.2_recall_ce": 0.25764,
      "rouge_w_1.2_precision": 0.462,
      "rouge_w_1.2_precision_cb": 0.462,
      "rouge_w_1.2_precision_ce": 0.462,
      "rouge_w_1.2_f_score": 0.3308,
      "rouge_w_1.2_f_score_cb": 0.3308,
      "rouge_w_1.2_f_score_ce": 0.3308,
      "rouge_s*_recall": 0.28788,
      "rouge_s*_recall_cb": 0.28788,
      "rouge_s*_recall_ce": 0.28788,
      "rouge_s*_precision": 0.34545,
      "rouge_s*_precision_cb": 0.34545,
      "rouge_s*_precision_ce": 0.34545,
      "rouge_s*_f_score": 0.31405,
      "rouge_s*_f_score_cb": 0.31405,
      "rouge_s*_f_score_ce": 0.31405,
      "rouge_su*_recall": 0.32468,
      "rouge_su*_recall_cb": 0.32468,
      "rouge_su*_recall_ce": 0.32468,
      "rouge_su*_precision": 0.38462,
      "rouge_su*_precision_cb": 0.38462,
      "rouge_su*_precision_ce": 0.38462,
      "rouge_su*_f_score": 0.35212,
      "rouge_su*_f_score_cb": 0.35212,
      "rouge_su*_f_score_ce": 0.35212
    }
  },
  {
    "id": 80,
    "filename": "PandasEval_80.txt",
    "dataset_comment": "Calculate the ceiling of a Pandas Series and return the result.",
    "generated_comment": "Compute the ceiling of each element in the input series using numpy's ceil function.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.45455,
      "rouge_1_recall_cb": 0.45455,
      "rouge_1_recall_ce": 0.45455,
      "rouge_1_precision": 0.33333,
      "rouge_1_precision_cb": 0.33333,
      "rouge_1_precision_ce": 0.33333,
      "rouge_1_f_score": 0.38461,
      "rouge_1_f_score_cb": 0.38461,
      "rouge_1_f_score_ce": 0.38461,
      "rouge_2_recall": 0.2,
      "rouge_2_recall_cb": 0.2,
      "rouge_2_recall_ce": 0.2,
      "rouge_2_precision": 0.14286,
      "rouge_2_precision_cb": 0.14286,
      "rouge_2_precision_ce": 0.14286,
      "rouge_2_f_score": 0.16667,
      "rouge_2_f_score_cb": 0.16667,
      "rouge_2_f_score_ce": 0.16667,
      "rouge_3_recall": 0.11111,
      "rouge_3_recall_cb": 0.11111,
      "rouge_3_recall_ce": 0.11111,
      "rouge_3_precision": 0.07692,
      "rouge_3_precision_cb": 0.07692,
      "rouge_3_precision_ce": 0.07692,
      "rouge_3_f_score": 0.09091,
      "rouge_3_f_score_cb": 0.09091,
      "rouge_3_f_score_ce": 0.09091,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.36364,
      "rouge_l_recall_cb": 0.36364,
      "rouge_l_recall_ce": 0.36364,
      "rouge_l_precision": 0.26667,
      "rouge_l_precision_cb": 0.26667,
      "rouge_l_precision_ce": 0.26667,
      "rouge_l_f_score": 0.3077,
      "rouge_l_f_score_cb": 0.3077,
      "rouge_l_f_score_ce": 0.3077,
      "rouge_w_1.2_recall": 0.20571,
      "rouge_w_1.2_recall_cb": 0.20571,
      "rouge_w_1.2_recall_ce": 0.20571,
      "rouge_w_1.2_precision": 0.24369,
      "rouge_w_1.2_precision_cb": 0.24369,
      "rouge_w_1.2_precision_ce": 0.24369,
      "rouge_w_1.2_f_score": 0.2231,
      "rouge_w_1.2_f_score_cb": 0.2231,
      "rouge_w_1.2_f_score_ce": 0.2231,
      "rouge_s*_recall": 0.16364,
      "rouge_s*_recall_cb": 0.16364,
      "rouge_s*_recall_ce": 0.16364,
      "rouge_s*_precision": 0.08571,
      "rouge_s*_precision_cb": 0.08571,
      "rouge_s*_precision_ce": 0.08571,
      "rouge_s*_f_score": 0.1125,
      "rouge_s*_f_score_cb": 0.1125,
      "rouge_s*_f_score_ce": 0.1125,
      "rouge_su*_recall": 0.21538,
      "rouge_su*_recall_cb": 0.21538,
      "rouge_su*_recall_ce": 0.21538,
      "rouge_su*_precision": 0.11765,
      "rouge_su*_precision_cb": 0.11765,
      "rouge_su*_precision_ce": 0.11765,
      "rouge_su*_f_score": 0.15218,
      "rouge_su*_f_score_cb": 0.15218,
      "rouge_su*_f_score_ce": 0.15218
    }
  },
  {
    "id": 81,
    "filename": "PandasEval_81.txt",
    "dataset_comment": "Perform a groupby on a Pandas DataFrame, excluding certain columns, by grouping on `Country` and `Item_Code`, and compute the sum of the rows in the columns ['Y1961', 'Y1962', 'Y1963'].",
    "generated_comment": "Group the DataFrame by 'Country' and 'Item_Code' and sum the columns 'Y1961', 'Y1962', and 'Y1963' for each group.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5,
      "rouge_1_recall_cb": 0.5,
      "rouge_1_recall_ce": 0.5,
      "rouge_1_precision": 0.78947,
      "rouge_1_precision_cb": 0.78947,
      "rouge_1_precision_ce": 0.78947,
      "rouge_1_f_score": 0.61224,
      "rouge_1_f_score_cb": 0.61224,
      "rouge_1_f_score_ce": 0.61224,
      "rouge_2_recall": 0.24138,
      "rouge_2_recall_cb": 0.24138,
      "rouge_2_recall_ce": 0.24138,
      "rouge_2_precision": 0.38889,
      "rouge_2_precision_cb": 0.38889,
      "rouge_2_precision_ce": 0.38889,
      "rouge_2_f_score": 0.29787,
      "rouge_2_f_score_cb": 0.29787,
      "rouge_2_f_score_ce": 0.29787,
      "rouge_3_recall": 0.17857,
      "rouge_3_recall_cb": 0.17857,
      "rouge_3_recall_ce": 0.17857,
      "rouge_3_precision": 0.29412,
      "rouge_3_precision_cb": 0.29412,
      "rouge_3_precision_ce": 0.29412,
      "rouge_3_f_score": 0.22222,
      "rouge_3_f_score_cb": 0.22222,
      "rouge_3_f_score_ce": 0.22222,
      "rouge_4_recall": 0.11111,
      "rouge_4_recall_cb": 0.11111,
      "rouge_4_recall_ce": 0.11111,
      "rouge_4_precision": 0.1875,
      "rouge_4_precision_cb": 0.1875,
      "rouge_4_precision_ce": 0.1875,
      "rouge_4_f_score": 0.13953,
      "rouge_4_f_score_cb": 0.13953,
      "rouge_4_f_score_ce": 0.13953,
      "rouge_l_recall": 0.43333,
      "rouge_l_recall_cb": 0.43333,
      "rouge_l_recall_ce": 0.43333,
      "rouge_l_precision": 0.68421,
      "rouge_l_precision_cb": 0.68421,
      "rouge_l_precision_ce": 0.68421,
      "rouge_l_f_score": 0.53061,
      "rouge_l_f_score_cb": 0.53061,
      "rouge_l_f_score_ce": 0.53061,
      "rouge_w_1.2_recall": 0.17721,
      "rouge_w_1.2_recall_cb": 0.17721,
      "rouge_w_1.2_recall_ce": 0.17721,
      "rouge_w_1.2_precision": 0.55243,
      "rouge_w_1.2_precision_cb": 0.55243,
      "rouge_w_1.2_precision_ce": 0.55243,
      "rouge_w_1.2_f_score": 0.26834,
      "rouge_w_1.2_f_score_cb": 0.26834,
      "rouge_w_1.2_f_score_ce": 0.26834,
      "rouge_s*_recall": 0.22989,
      "rouge_s*_recall_cb": 0.22989,
      "rouge_s*_recall_ce": 0.22989,
      "rouge_s*_precision": 0.5848,
      "rouge_s*_precision_cb": 0.5848,
      "rouge_s*_precision_ce": 0.5848,
      "rouge_s*_f_score": 0.33004,
      "rouge_s*_f_score_cb": 0.33004,
      "rouge_s*_f_score_ce": 0.33004,
      "rouge_su*_recall": 0.24569,
      "rouge_su*_recall_cb": 0.24569,
      "rouge_su*_recall_ce": 0.24569,
      "rouge_su*_precision": 0.60317,
      "rouge_su*_precision_cb": 0.60317,
      "rouge_su*_precision_ce": 0.60317,
      "rouge_su*_f_score": 0.34916,
      "rouge_su*_f_score_cb": 0.34916,
      "rouge_su*_f_score_ce": 0.34916
    }
  },
  {
    "id": 82,
    "filename": "PandasEval_82.txt",
    "dataset_comment": "Parameters:  df: The dataframe to append to.  list_to_append: The list to append.  column_name_list: The column names of the list to append. Returns: The dataframe with the list appended.",
    "generated_comment": "Ensure that the list to append is converted into a DataFrame with specified column names, and then append it to the existing DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.375,
      "rouge_1_recall_cb": 0.375,
      "rouge_1_recall_ce": 0.375,
      "rouge_1_precision": 0.52174,
      "rouge_1_precision_cb": 0.52174,
      "rouge_1_precision_ce": 0.52174,
      "rouge_1_f_score": 0.43636,
      "rouge_1_f_score_cb": 0.43636,
      "rouge_1_f_score_ce": 0.43636,
      "rouge_2_recall": 0.16129,
      "rouge_2_recall_cb": 0.16129,
      "rouge_2_recall_ce": 0.16129,
      "rouge_2_precision": 0.22727,
      "rouge_2_precision_cb": 0.22727,
      "rouge_2_precision_ce": 0.22727,
      "rouge_2_f_score": 0.18868,
      "rouge_2_f_score_cb": 0.18868,
      "rouge_2_f_score_ce": 0.18868,
      "rouge_3_recall": 0.06667,
      "rouge_3_recall_cb": 0.06667,
      "rouge_3_recall_ce": 0.06667,
      "rouge_3_precision": 0.09524,
      "rouge_3_precision_cb": 0.09524,
      "rouge_3_precision_ce": 0.09524,
      "rouge_3_f_score": 0.07843,
      "rouge_3_f_score_cb": 0.07843,
      "rouge_3_f_score_ce": 0.07843,
      "rouge_4_recall": 0.03448,
      "rouge_4_recall_cb": 0.03448,
      "rouge_4_recall_ce": 0.03448,
      "rouge_4_precision": 0.05,
      "rouge_4_precision_cb": 0.05,
      "rouge_4_precision_ce": 0.05,
      "rouge_4_f_score": 0.04081,
      "rouge_4_f_score_cb": 0.04081,
      "rouge_4_f_score_ce": 0.04081,
      "rouge_l_recall": 0.28125,
      "rouge_l_recall_cb": 0.28125,
      "rouge_l_recall_ce": 0.28125,
      "rouge_l_precision": 0.3913,
      "rouge_l_precision_cb": 0.3913,
      "rouge_l_precision_ce": 0.3913,
      "rouge_l_f_score": 0.32727,
      "rouge_l_f_score_cb": 0.32727,
      "rouge_l_f_score_ce": 0.32727,
      "rouge_w_1.2_recall": 0.12291,
      "rouge_w_1.2_recall_cb": 0.12291,
      "rouge_w_1.2_recall_ce": 0.12291,
      "rouge_w_1.2_precision": 0.34202,
      "rouge_w_1.2_precision_cb": 0.34202,
      "rouge_w_1.2_precision_ce": 0.34202,
      "rouge_w_1.2_f_score": 0.18083,
      "rouge_w_1.2_f_score_cb": 0.18083,
      "rouge_w_1.2_f_score_ce": 0.18083,
      "rouge_s*_recall": 0.125,
      "rouge_s*_recall_cb": 0.125,
      "rouge_s*_recall_ce": 0.125,
      "rouge_s*_precision": 0.24506,
      "rouge_s*_precision_cb": 0.24506,
      "rouge_s*_precision_ce": 0.24506,
      "rouge_s*_f_score": 0.16555,
      "rouge_s*_f_score_cb": 0.16555,
      "rouge_s*_f_score_ce": 0.16555,
      "rouge_su*_recall": 0.13852,
      "rouge_su*_recall_cb": 0.13852,
      "rouge_su*_recall_ce": 0.13852,
      "rouge_su*_precision": 0.26545,
      "rouge_su*_precision_cb": 0.26545,
      "rouge_su*_precision_ce": 0.26545,
      "rouge_su*_f_score": 0.18204,
      "rouge_su*_f_score_cb": 0.18204,
      "rouge_su*_f_score_ce": 0.18204
    }
  },
  {
    "id": 83,
    "filename": "PandasEval_83.txt",
    "dataset_comment": "Map True/False values to 1/0 in a Pandas DataFrame and return the DataFrame with the column converted to int.",
    "generated_comment": "Convert boolean values in the specified column to integers (1 for True, 0 for False) and return the modified DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.66667,
      "rouge_1_recall_cb": 0.66667,
      "rouge_1_recall_ce": 0.66667,
      "rouge_1_precision": 0.7,
      "rouge_1_precision_cb": 0.7,
      "rouge_1_precision_ce": 0.7,
      "rouge_1_f_score": 0.68293,
      "rouge_1_f_score_cb": 0.68293,
      "rouge_1_f_score_ce": 0.68293,
      "rouge_2_recall": 0.1,
      "rouge_2_recall_cb": 0.1,
      "rouge_2_recall_ce": 0.1,
      "rouge_2_precision": 0.10526,
      "rouge_2_precision_cb": 0.10526,
      "rouge_2_precision_ce": 0.10526,
      "rouge_2_f_score": 0.10256,
      "rouge_2_f_score_cb": 0.10256,
      "rouge_2_f_score_ce": 0.10256,
      "rouge_3_recall": 0.05263,
      "rouge_3_recall_cb": 0.05263,
      "rouge_3_recall_ce": 0.05263,
      "rouge_3_precision": 0.05556,
      "rouge_3_precision_cb": 0.05556,
      "rouge_3_precision_ce": 0.05556,
      "rouge_3_f_score": 0.05406,
      "rouge_3_f_score_cb": 0.05406,
      "rouge_3_f_score_ce": 0.05406,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.38095,
      "rouge_l_recall_cb": 0.38095,
      "rouge_l_recall_ce": 0.38095,
      "rouge_l_precision": 0.4,
      "rouge_l_precision_cb": 0.4,
      "rouge_l_precision_ce": 0.4,
      "rouge_l_f_score": 0.39024,
      "rouge_l_f_score_cb": 0.39024,
      "rouge_l_f_score_ce": 0.39024,
      "rouge_w_1.2_recall": 0.18461,
      "rouge_w_1.2_recall_cb": 0.18461,
      "rouge_w_1.2_recall_ce": 0.18461,
      "rouge_w_1.2_precision": 0.35636,
      "rouge_w_1.2_precision_cb": 0.35636,
      "rouge_w_1.2_precision_ce": 0.35636,
      "rouge_w_1.2_f_score": 0.24322,
      "rouge_w_1.2_f_score_cb": 0.24322,
      "rouge_w_1.2_f_score_ce": 0.24322,
      "rouge_s*_recall": 0.25238,
      "rouge_s*_recall_cb": 0.25238,
      "rouge_s*_recall_ce": 0.25238,
      "rouge_s*_precision": 0.27895,
      "rouge_s*_precision_cb": 0.27895,
      "rouge_s*_precision_ce": 0.27895,
      "rouge_s*_f_score": 0.265,
      "rouge_s*_f_score_cb": 0.265,
      "rouge_s*_f_score_ce": 0.265,
      "rouge_su*_recall": 0.28696,
      "rouge_su*_recall_cb": 0.28696,
      "rouge_su*_recall_ce": 0.28696,
      "rouge_su*_precision": 0.31579,
      "rouge_su*_precision_cb": 0.31579,
      "rouge_su*_precision_ce": 0.31579,
      "rouge_su*_f_score": 0.30069,
      "rouge_su*_f_score_cb": 0.30069,
      "rouge_su*_f_score_ce": 0.30069
    }
  },
  {
    "id": 84,
    "filename": "PandasEval_84.txt",
    "dataset_comment": "Convert Pandas DataFrame to a list of dictionaries using df.to_dict() and return the result.",
    "generated_comment": "Convert a pandas DataFrame to a list of dictionaries, where each dictionary represents a row in the DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.5625,
      "rouge_1_recall_cb": 0.5625,
      "rouge_1_recall_ce": 0.5625,
      "rouge_1_precision": 0.5,
      "rouge_1_precision_cb": 0.5,
      "rouge_1_precision_ce": 0.5,
      "rouge_1_f_score": 0.52941,
      "rouge_1_f_score_cb": 0.52941,
      "rouge_1_f_score_ce": 0.52941,
      "rouge_2_recall": 0.4,
      "rouge_2_recall_cb": 0.4,
      "rouge_2_recall_ce": 0.4,
      "rouge_2_precision": 0.35294,
      "rouge_2_precision_cb": 0.35294,
      "rouge_2_precision_ce": 0.35294,
      "rouge_2_f_score": 0.375,
      "rouge_2_f_score_cb": 0.375,
      "rouge_2_f_score_ce": 0.375,
      "rouge_3_recall": 0.35714,
      "rouge_3_recall_cb": 0.35714,
      "rouge_3_recall_ce": 0.35714,
      "rouge_3_precision": 0.3125,
      "rouge_3_precision_cb": 0.3125,
      "rouge_3_precision_ce": 0.3125,
      "rouge_3_f_score": 0.33333,
      "rouge_3_f_score_cb": 0.33333,
      "rouge_3_f_score_ce": 0.33333,
      "rouge_4_recall": 0.30769,
      "rouge_4_recall_cb": 0.30769,
      "rouge_4_recall_ce": 0.30769,
      "rouge_4_precision": 0.26667,
      "rouge_4_precision_cb": 0.26667,
      "rouge_4_precision_ce": 0.26667,
      "rouge_4_f_score": 0.28572,
      "rouge_4_f_score_cb": 0.28572,
      "rouge_4_f_score_ce": 0.28572,
      "rouge_l_recall": 0.5625,
      "rouge_l_recall_cb": 0.5625,
      "rouge_l_recall_ce": 0.5625,
      "rouge_l_precision": 0.5,
      "rouge_l_precision_cb": 0.5,
      "rouge_l_precision_ce": 0.5,
      "rouge_l_f_score": 0.52941,
      "rouge_l_f_score_cb": 0.52941,
      "rouge_l_f_score_ce": 0.52941,
      "rouge_w_1.2_recall": 0.30678,
      "rouge_w_1.2_recall_cb": 0.30678,
      "rouge_w_1.2_recall_ce": 0.30678,
      "rouge_w_1.2_precision": 0.47479,
      "rouge_w_1.2_precision_cb": 0.47479,
      "rouge_w_1.2_precision_ce": 0.47479,
      "rouge_w_1.2_f_score": 0.37273,
      "rouge_w_1.2_f_score_cb": 0.37273,
      "rouge_w_1.2_f_score_ce": 0.37273,
      "rouge_s*_recall": 0.30833,
      "rouge_s*_recall_cb": 0.30833,
      "rouge_s*_recall_ce": 0.30833,
      "rouge_s*_precision": 0.24183,
      "rouge_s*_precision_cb": 0.24183,
      "rouge_s*_precision_ce": 0.24183,
      "rouge_s*_f_score": 0.27106,
      "rouge_s*_f_score_cb": 0.27106,
      "rouge_s*_f_score_ce": 0.27106,
      "rouge_su*_recall": 0.34074,
      "rouge_su*_recall_cb": 0.34074,
      "rouge_su*_recall_ce": 0.34074,
      "rouge_su*_precision": 0.27059,
      "rouge_su*_precision_cb": 0.27059,
      "rouge_su*_precision_ce": 0.27059,
      "rouge_su*_f_score": 0.30164,
      "rouge_su*_f_score_cb": 0.30164,
      "rouge_su*_f_score_ce": 0.30164
    }
  },
  {
    "id": 85,
    "filename": "PandasEval_85.txt",
    "dataset_comment": "Set the value of the entire column `B` in a Pandas DataFrame and return the modified DataFrame.",
    "generated_comment": "Assign the specified value to an entire column named 'B' in the DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.47059,
      "rouge_1_recall_cb": 0.47059,
      "rouge_1_recall_ce": 0.47059,
      "rouge_1_precision": 0.61538,
      "rouge_1_precision_cb": 0.61538,
      "rouge_1_precision_ce": 0.61538,
      "rouge_1_f_score": 0.53333,
      "rouge_1_f_score_cb": 0.53333,
      "rouge_1_f_score_ce": 0.53333,
      "rouge_2_recall": 0.125,
      "rouge_2_recall_cb": 0.125,
      "rouge_2_recall_ce": 0.125,
      "rouge_2_precision": 0.16667,
      "rouge_2_precision_cb": 0.16667,
      "rouge_2_precision_ce": 0.16667,
      "rouge_2_f_score": 0.14286,
      "rouge_2_f_score_cb": 0.14286,
      "rouge_2_f_score_ce": 0.14286,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.47059,
      "rouge_l_recall_cb": 0.47059,
      "rouge_l_recall_ce": 0.47059,
      "rouge_l_precision": 0.61538,
      "rouge_l_precision_cb": 0.61538,
      "rouge_l_precision_ce": 0.61538,
      "rouge_l_f_score": 0.53333,
      "rouge_l_f_score_cb": 0.53333,
      "rouge_l_f_score_ce": 0.53333,
      "rouge_w_1.2_recall": 0.21933,
      "rouge_w_1.2_recall_cb": 0.21933,
      "rouge_w_1.2_recall_ce": 0.21933,
      "rouge_w_1.2_precision": 0.50546,
      "rouge_w_1.2_precision_cb": 0.50546,
      "rouge_w_1.2_precision_ce": 0.50546,
      "rouge_w_1.2_f_score": 0.30592,
      "rouge_w_1.2_f_score_cb": 0.30592,
      "rouge_w_1.2_f_score_ce": 0.30592,
      "rouge_s*_recall": 0.20588,
      "rouge_s*_recall_cb": 0.20588,
      "rouge_s*_recall_ce": 0.20588,
      "rouge_s*_precision": 0.35897,
      "rouge_s*_precision_cb": 0.35897,
      "rouge_s*_precision_ce": 0.35897,
      "rouge_s*_f_score": 0.26168,
      "rouge_s*_f_score_cb": 0.26168,
      "rouge_s*_f_score_ce": 0.26168,
      "rouge_su*_recall": 0.23026,
      "rouge_su*_recall_cb": 0.23026,
      "rouge_su*_recall_ce": 0.23026,
      "rouge_su*_precision": 0.38889,
      "rouge_su*_precision_cb": 0.38889,
      "rouge_su*_precision_ce": 0.38889,
      "rouge_su*_f_score": 0.28925,
      "rouge_su*_f_score_cb": 0.28925,
      "rouge_su*_f_score_ce": 0.28925
    }
  },
  {
    "id": 86,
    "filename": "PandasEval_86.txt",
    "dataset_comment": "Delete multiple columns (A and C) in a single operation.",
    "generated_comment": "Drop columns 'A' and 'C' from the DataFrame along the specified axis (axis=1 for columns).",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.4,
      "rouge_1_recall_cb": 0.4,
      "rouge_1_recall_ce": 0.4,
      "rouge_1_precision": 0.25,
      "rouge_1_precision_cb": 0.25,
      "rouge_1_precision_ce": 0.25,
      "rouge_1_f_score": 0.30769,
      "rouge_1_f_score_cb": 0.30769,
      "rouge_1_f_score_ce": 0.30769,
      "rouge_2_recall": 0.33333,
      "rouge_2_recall_cb": 0.33333,
      "rouge_2_recall_ce": 0.33333,
      "rouge_2_precision": 0.2,
      "rouge_2_precision_cb": 0.2,
      "rouge_2_precision_ce": 0.2,
      "rouge_2_f_score": 0.25,
      "rouge_2_f_score_cb": 0.25,
      "rouge_2_f_score_ce": 0.25,
      "rouge_3_recall": 0.25,
      "rouge_3_recall_cb": 0.25,
      "rouge_3_recall_ce": 0.25,
      "rouge_3_precision": 0.14286,
      "rouge_3_precision_cb": 0.14286,
      "rouge_3_precision_ce": 0.14286,
      "rouge_3_f_score": 0.18182,
      "rouge_3_f_score_cb": 0.18182,
      "rouge_3_f_score_ce": 0.18182,
      "rouge_4_recall": 0.14286,
      "rouge_4_recall_cb": 0.14286,
      "rouge_4_recall_ce": 0.14286,
      "rouge_4_precision": 0.07692,
      "rouge_4_precision_cb": 0.07692,
      "rouge_4_precision_ce": 0.07692,
      "rouge_4_f_score": 0.1,
      "rouge_4_f_score_cb": 0.1,
      "rouge_4_f_score_ce": 0.1,
      "rouge_l_recall": 0.4,
      "rouge_l_recall_cb": 0.4,
      "rouge_l_recall_ce": 0.4,
      "rouge_l_precision": 0.25,
      "rouge_l_precision_cb": 0.25,
      "rouge_l_precision_ce": 0.25,
      "rouge_l_f_score": 0.30769,
      "rouge_l_f_score_cb": 0.30769,
      "rouge_l_f_score_ce": 0.30769,
      "rouge_w_1.2_recall": 0.25238,
      "rouge_w_1.2_recall_cb": 0.25238,
      "rouge_w_1.2_recall_ce": 0.25238,
      "rouge_w_1.2_precision": 0.25,
      "rouge_w_1.2_precision_cb": 0.25,
      "rouge_w_1.2_precision_ce": 0.25,
      "rouge_w_1.2_f_score": 0.25118,
      "rouge_w_1.2_f_score_cb": 0.25118,
      "rouge_w_1.2_f_score_ce": 0.25118,
      "rouge_s*_recall": 0.13333,
      "rouge_s*_recall_cb": 0.13333,
      "rouge_s*_recall_ce": 0.13333,
      "rouge_s*_precision": 0.05,
      "rouge_s*_precision_cb": 0.05,
      "rouge_s*_precision_ce": 0.05,
      "rouge_s*_f_score": 0.07273,
      "rouge_s*_f_score_cb": 0.07273,
      "rouge_s*_f_score_ce": 0.07273,
      "rouge_su*_recall": 0.18519,
      "rouge_su*_recall_cb": 0.18519,
      "rouge_su*_recall_ce": 0.18519,
      "rouge_su*_precision": 0.07407,
      "rouge_su*_precision_cb": 0.07407,
      "rouge_su*_precision_ce": 0.07407,
      "rouge_su*_f_score": 0.10582,
      "rouge_su*_f_score_cb": 0.10582,
      "rouge_su*_f_score_ce": 0.10582
    }
  },
  {
    "id": 87,
    "filename": "PandasEval_87.txt",
    "dataset_comment": "Given that all the dataframes have the same columns, concatenate them and return the concatenated dataframe.",
    "generated_comment": "Concatenate two DataFrames along rows (axis=0) and return the resulting DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.375,
      "rouge_1_recall_cb": 0.375,
      "rouge_1_recall_ce": 0.375,
      "rouge_1_precision": 0.5,
      "rouge_1_precision_cb": 0.5,
      "rouge_1_precision_ce": 0.5,
      "rouge_1_f_score": 0.42857,
      "rouge_1_f_score_cb": 0.42857,
      "rouge_1_f_score_ce": 0.42857,
      "rouge_2_recall": 0.13333,
      "rouge_2_recall_cb": 0.13333,
      "rouge_2_recall_ce": 0.13333,
      "rouge_2_precision": 0.18182,
      "rouge_2_precision_cb": 0.18182,
      "rouge_2_precision_ce": 0.18182,
      "rouge_2_f_score": 0.15384,
      "rouge_2_f_score_cb": 0.15384,
      "rouge_2_f_score_ce": 0.15384,
      "rouge_3_recall": 0.07143,
      "rouge_3_recall_cb": 0.07143,
      "rouge_3_recall_ce": 0.07143,
      "rouge_3_precision": 0.1,
      "rouge_3_precision_cb": 0.1,
      "rouge_3_precision_ce": 0.1,
      "rouge_3_f_score": 0.08333,
      "rouge_3_f_score_cb": 0.08333,
      "rouge_3_f_score_ce": 0.08333,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.3125,
      "rouge_l_recall_cb": 0.3125,
      "rouge_l_recall_ce": 0.3125,
      "rouge_l_precision": 0.41667,
      "rouge_l_precision_cb": 0.41667,
      "rouge_l_precision_ce": 0.41667,
      "rouge_l_f_score": 0.35714,
      "rouge_l_f_score_cb": 0.35714,
      "rouge_l_f_score_ce": 0.35714,
      "rouge_w_1.2_recall": 0.15392,
      "rouge_w_1.2_recall_cb": 0.15392,
      "rouge_w_1.2_recall_ce": 0.15392,
      "rouge_w_1.2_precision": 0.35733,
      "rouge_w_1.2_precision_cb": 0.35733,
      "rouge_w_1.2_precision_ce": 0.35733,
      "rouge_w_1.2_f_score": 0.21516,
      "rouge_w_1.2_f_score_cb": 0.21516,
      "rouge_w_1.2_f_score_ce": 0.21516,
      "rouge_s*_recall": 0.125,
      "rouge_s*_recall_cb": 0.125,
      "rouge_s*_recall_ce": 0.125,
      "rouge_s*_precision": 0.22727,
      "rouge_s*_precision_cb": 0.22727,
      "rouge_s*_precision_ce": 0.22727,
      "rouge_s*_f_score": 0.16129,
      "rouge_s*_f_score_cb": 0.16129,
      "rouge_s*_f_score_ce": 0.16129,
      "rouge_su*_recall": 0.14815,
      "rouge_su*_recall_cb": 0.14815,
      "rouge_su*_recall_ce": 0.14815,
      "rouge_su*_precision": 0.25974,
      "rouge_su*_precision_cb": 0.25974,
      "rouge_su*_precision_ce": 0.25974,
      "rouge_su*_f_score": 0.18868,
      "rouge_su*_f_score_cb": 0.18868,
      "rouge_su*_f_score_ce": 0.18868
    }
  },
  {
    "id": 88,
    "filename": "PandasEval_88.txt",
    "dataset_comment": "Get the last N rows of a Pandas DataFrame.",
    "generated_comment": "Retrieve the last N rows of the DataFrame efficiently using the tail method.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.66667,
      "rouge_1_recall_cb": 0.66667,
      "rouge_1_recall_ce": 0.66667,
      "rouge_1_precision": 0.46154,
      "rouge_1_precision_cb": 0.46154,
      "rouge_1_precision_ce": 0.46154,
      "rouge_1_f_score": 0.54546,
      "rouge_1_f_score_cb": 0.54546,
      "rouge_1_f_score_ce": 0.54546,
      "rouge_2_recall": 0.5,
      "rouge_2_recall_cb": 0.5,
      "rouge_2_recall_ce": 0.5,
      "rouge_2_precision": 0.33333,
      "rouge_2_precision_cb": 0.33333,
      "rouge_2_precision_ce": 0.33333,
      "rouge_2_f_score": 0.4,
      "rouge_2_f_score_cb": 0.4,
      "rouge_2_f_score_ce": 0.4,
      "rouge_3_recall": 0.42857,
      "rouge_3_recall_cb": 0.42857,
      "rouge_3_recall_ce": 0.42857,
      "rouge_3_precision": 0.27273,
      "rouge_3_precision_cb": 0.27273,
      "rouge_3_precision_ce": 0.27273,
      "rouge_3_f_score": 0.33333,
      "rouge_3_f_score_cb": 0.33333,
      "rouge_3_f_score_ce": 0.33333,
      "rouge_4_recall": 0.33333,
      "rouge_4_recall_cb": 0.33333,
      "rouge_4_recall_ce": 0.33333,
      "rouge_4_precision": 0.2,
      "rouge_4_precision_cb": 0.2,
      "rouge_4_precision_ce": 0.2,
      "rouge_4_f_score": 0.25,
      "rouge_4_f_score_cb": 0.25,
      "rouge_4_f_score_ce": 0.25,
      "rouge_l_recall": 0.66667,
      "rouge_l_recall_cb": 0.66667,
      "rouge_l_recall_ce": 0.66667,
      "rouge_l_precision": 0.46154,
      "rouge_l_precision_cb": 0.46154,
      "rouge_l_precision_ce": 0.46154,
      "rouge_l_f_score": 0.54546,
      "rouge_l_f_score_cb": 0.54546,
      "rouge_l_f_score_ce": 0.54546,
      "rouge_w_1.2_recall": 0.40075,
      "rouge_w_1.2_recall_cb": 0.40075,
      "rouge_w_1.2_recall_ce": 0.40075,
      "rouge_w_1.2_precision": 0.43054,
      "rouge_w_1.2_precision_cb": 0.43054,
      "rouge_w_1.2_precision_ce": 0.43054,
      "rouge_w_1.2_f_score": 0.41511,
      "rouge_w_1.2_f_score_cb": 0.41511,
      "rouge_w_1.2_f_score_ce": 0.41511,
      "rouge_s*_recall": 0.41667,
      "rouge_s*_recall_cb": 0.41667,
      "rouge_s*_recall_ce": 0.41667,
      "rouge_s*_precision": 0.19231,
      "rouge_s*_precision_cb": 0.19231,
      "rouge_s*_precision_ce": 0.19231,
      "rouge_s*_f_score": 0.26316,
      "rouge_s*_f_score_cb": 0.26316,
      "rouge_s*_f_score_ce": 0.26316,
      "rouge_su*_recall": 0.45455,
      "rouge_su*_recall_cb": 0.45455,
      "rouge_su*_recall_ce": 0.45455,
      "rouge_su*_precision": 0.22222,
      "rouge_su*_precision_cb": 0.22222,
      "rouge_su*_precision_ce": 0.22222,
      "rouge_su*_f_score": 0.29851,
      "rouge_su*_f_score_cb": 0.29851,
      "rouge_su*_f_score_ce": 0.29851
    }
  },
  {
    "id": 89,
    "filename": "PandasEval_89.txt",
    "dataset_comment": "Return the row index values of the dataframe as a list.",
    "generated_comment": "Convert the row index of the DataFrame to a list of its values.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.81818,
      "rouge_1_recall_cb": 0.81818,
      "rouge_1_recall_ce": 0.81818,
      "rouge_1_precision": 0.69231,
      "rouge_1_precision_cb": 0.69231,
      "rouge_1_precision_ce": 0.69231,
      "rouge_1_f_score": 0.75,
      "rouge_1_f_score_cb": 0.75,
      "rouge_1_f_score_ce": 0.75,
      "rouge_2_recall": 0.5,
      "rouge_2_recall_cb": 0.5,
      "rouge_2_recall_ce": 0.5,
      "rouge_2_precision": 0.41667,
      "rouge_2_precision_cb": 0.41667,
      "rouge_2_precision_ce": 0.41667,
      "rouge_2_f_score": 0.45455,
      "rouge_2_f_score_cb": 0.45455,
      "rouge_2_f_score_ce": 0.45455,
      "rouge_3_recall": 0.22222,
      "rouge_3_recall_cb": 0.22222,
      "rouge_3_recall_ce": 0.22222,
      "rouge_3_precision": 0.18182,
      "rouge_3_precision_cb": 0.18182,
      "rouge_3_precision_ce": 0.18182,
      "rouge_3_f_score": 0.2,
      "rouge_3_f_score_cb": 0.2,
      "rouge_3_f_score_ce": 0.2,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.72727,
      "rouge_l_recall_cb": 0.72727,
      "rouge_l_recall_ce": 0.72727,
      "rouge_l_precision": 0.61538,
      "rouge_l_precision_cb": 0.61538,
      "rouge_l_precision_ce": 0.61538,
      "rouge_l_f_score": 0.66666,
      "rouge_l_f_score_cb": 0.66666,
      "rouge_l_f_score_ce": 0.66666,
      "rouge_w_1.2_recall": 0.3761,
      "rouge_w_1.2_recall_cb": 0.3761,
      "rouge_w_1.2_recall_ce": 0.3761,
      "rouge_w_1.2_precision": 0.51408,
      "rouge_w_1.2_precision_cb": 0.51408,
      "rouge_w_1.2_precision_ce": 0.51408,
      "rouge_w_1.2_f_score": 0.4344,
      "rouge_w_1.2_f_score_cb": 0.4344,
      "rouge_w_1.2_f_score_ce": 0.4344,
      "rouge_s*_recall": 0.56364,
      "rouge_s*_recall_cb": 0.56364,
      "rouge_s*_recall_ce": 0.56364,
      "rouge_s*_precision": 0.39744,
      "rouge_s*_precision_cb": 0.39744,
      "rouge_s*_precision_ce": 0.39744,
      "rouge_s*_f_score": 0.46617,
      "rouge_s*_f_score_cb": 0.46617,
      "rouge_s*_f_score_ce": 0.46617,
      "rouge_su*_recall": 0.58462,
      "rouge_su*_recall_cb": 0.58462,
      "rouge_su*_recall_ce": 0.58462,
      "rouge_su*_precision": 0.42222,
      "rouge_su*_precision_cb": 0.42222,
      "rouge_su*_precision_ce": 0.42222,
      "rouge_su*_f_score": 0.49032,
      "rouge_su*_f_score_cb": 0.49032,
      "rouge_su*_f_score_ce": 0.49032
    }
  },
  {
    "id": 90,
    "filename": "PandasEval_90.txt",
    "dataset_comment": "Create a new DataFrame with the specified rows removed.",
    "generated_comment": "Drop 2 rows in the dataframe if zero comes in the columnIf 0 comes on odd index, drop the previous row as well as the current row using pandasAssuming your dataframe is indexed starting from 0Rows with column2 = 0 and on odd indexThe rows above themDrop the identified rows from the dataframe",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.44444,
      "rouge_1_recall_cb": 0.44444,
      "rouge_1_recall_ce": 0.44444,
      "rouge_1_precision": 0.07692,
      "rouge_1_precision_cb": 0.07692,
      "rouge_1_precision_ce": 0.07692,
      "rouge_1_f_score": 0.13114,
      "rouge_1_f_score_cb": 0.13114,
      "rouge_1_f_score_ce": 0.13114,
      "rouge_2_recall": 0.0,
      "rouge_2_recall_cb": 0.0,
      "rouge_2_recall_ce": 0.0,
      "rouge_2_precision": 0.0,
      "rouge_2_precision_cb": 0.0,
      "rouge_2_precision_ce": 0.0,
      "rouge_2_f_score": 0.0,
      "rouge_2_f_score_cb": 0.0,
      "rouge_2_f_score_ce": 0.0,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.44444,
      "rouge_l_recall_cb": 0.44444,
      "rouge_l_recall_ce": 0.44444,
      "rouge_l_precision": 0.07692,
      "rouge_l_precision_cb": 0.07692,
      "rouge_l_precision_ce": 0.07692,
      "rouge_l_f_score": 0.13114,
      "rouge_l_f_score_cb": 0.13114,
      "rouge_l_f_score_ce": 0.13114,
      "rouge_w_1.2_recall": 0.26172,
      "rouge_w_1.2_recall_cb": 0.26172,
      "rouge_w_1.2_recall_ce": 0.26172,
      "rouge_w_1.2_precision": 0.0703,
      "rouge_w_1.2_precision_cb": 0.0703,
      "rouge_w_1.2_precision_ce": 0.0703,
      "rouge_w_1.2_f_score": 0.11083,
      "rouge_w_1.2_f_score_cb": 0.11083,
      "rouge_w_1.2_f_score_ce": 0.11083,
      "rouge_s*_recall": 0.16667,
      "rouge_s*_recall_cb": 0.16667,
      "rouge_s*_recall_ce": 0.16667,
      "rouge_s*_precision": 0.00452,
      "rouge_s*_precision_cb": 0.00452,
      "rouge_s*_precision_ce": 0.00452,
      "rouge_s*_f_score": 0.0088,
      "rouge_s*_f_score_cb": 0.0088,
      "rouge_s*_f_score_ce": 0.0088,
      "rouge_su*_recall": 0.22727,
      "rouge_su*_recall_cb": 0.22727,
      "rouge_su*_recall_ce": 0.22727,
      "rouge_su*_precision": 0.00726,
      "rouge_su*_precision_cb": 0.00726,
      "rouge_su*_precision_ce": 0.00726,
      "rouge_su*_f_score": 0.01407,
      "rouge_su*_f_score_cb": 0.01407,
      "rouge_su*_f_score_ce": 0.01407
    }
  },
  {
    "id": 91,
    "filename": "PandasEval_91.txt",
    "dataset_comment": "Convert a table represented as a list of lists into a pandas DataFrame with columns ['one', 'two'] and convert the 'two' column to float type in the best way.",
    "generated_comment": "Convert a list of lists into a pandas DataFrame with specified column names, and then convert the 'two' column to float data type.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.65517,
      "rouge_1_recall_cb": 0.65517,
      "rouge_1_recall_ce": 0.65517,
      "rouge_1_precision": 0.82609,
      "rouge_1_precision_cb": 0.82609,
      "rouge_1_precision_ce": 0.82609,
      "rouge_1_f_score": 0.73077,
      "rouge_1_f_score_cb": 0.73077,
      "rouge_1_f_score_ce": 0.73077,
      "rouge_2_recall": 0.5,
      "rouge_2_recall_cb": 0.5,
      "rouge_2_recall_ce": 0.5,
      "rouge_2_precision": 0.63636,
      "rouge_2_precision_cb": 0.63636,
      "rouge_2_precision_ce": 0.63636,
      "rouge_2_f_score": 0.56,
      "rouge_2_f_score_cb": 0.56,
      "rouge_2_f_score_ce": 0.56,
      "rouge_3_recall": 0.40741,
      "rouge_3_recall_cb": 0.40741,
      "rouge_3_recall_ce": 0.40741,
      "rouge_3_precision": 0.52381,
      "rouge_3_precision_cb": 0.52381,
      "rouge_3_precision_ce": 0.52381,
      "rouge_3_f_score": 0.45834,
      "rouge_3_f_score_cb": 0.45834,
      "rouge_3_f_score_ce": 0.45834,
      "rouge_4_recall": 0.34615,
      "rouge_4_recall_cb": 0.34615,
      "rouge_4_recall_ce": 0.34615,
      "rouge_4_precision": 0.45,
      "rouge_4_precision_cb": 0.45,
      "rouge_4_precision_ce": 0.45,
      "rouge_4_f_score": 0.3913,
      "rouge_4_f_score_cb": 0.3913,
      "rouge_4_f_score_ce": 0.3913,
      "rouge_l_recall": 0.65517,
      "rouge_l_recall_cb": 0.65517,
      "rouge_l_recall_ce": 0.65517,
      "rouge_l_precision": 0.82609,
      "rouge_l_precision_cb": 0.82609,
      "rouge_l_precision_ce": 0.82609,
      "rouge_l_f_score": 0.73077,
      "rouge_l_f_score_cb": 0.73077,
      "rouge_l_f_score_ce": 0.73077,
      "rouge_w_1.2_recall": 0.29072,
      "rouge_w_1.2_recall_cb": 0.29072,
      "rouge_w_1.2_recall_ce": 0.29072,
      "rouge_w_1.2_precision": 0.71882,
      "rouge_w_1.2_precision_cb": 0.71882,
      "rouge_w_1.2_precision_ce": 0.71882,
      "rouge_w_1.2_f_score": 0.414,
      "rouge_w_1.2_f_score_cb": 0.414,
      "rouge_w_1.2_f_score_ce": 0.414,
      "rouge_s*_recall": 0.42118,
      "rouge_s*_recall_cb": 0.42118,
      "rouge_s*_recall_ce": 0.42118,
      "rouge_s*_precision": 0.67589,
      "rouge_s*_precision_cb": 0.67589,
      "rouge_s*_precision_ce": 0.67589,
      "rouge_s*_f_score": 0.51897,
      "rouge_s*_f_score_cb": 0.51897,
      "rouge_s*_f_score_ce": 0.51897,
      "rouge_su*_recall": 0.43548,
      "rouge_su*_recall_cb": 0.43548,
      "rouge_su*_recall_ce": 0.43548,
      "rouge_su*_precision": 0.68727,
      "rouge_su*_precision_cb": 0.68727,
      "rouge_su*_precision_ce": 0.68727,
      "rouge_su*_f_score": 0.53314,
      "rouge_su*_f_score_cb": 0.53314,
      "rouge_su*_f_score_ce": 0.53314
    }
  },
  {
    "id": 92,
    "filename": "PandasEval_92.txt",
    "dataset_comment": "Slice the DataFrame to take the first n rows and return the result.",
    "generated_comment": "Return the first n rows of the DataFrame df.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.53846,
      "rouge_1_recall_cb": 0.53846,
      "rouge_1_recall_ce": 0.53846,
      "rouge_1_precision": 0.77778,
      "rouge_1_precision_cb": 0.77778,
      "rouge_1_precision_ce": 0.77778,
      "rouge_1_f_score": 0.63636,
      "rouge_1_f_score_cb": 0.63636,
      "rouge_1_f_score_ce": 0.63636,
      "rouge_2_recall": 0.41667,
      "rouge_2_recall_cb": 0.41667,
      "rouge_2_recall_ce": 0.41667,
      "rouge_2_precision": 0.625,
      "rouge_2_precision_cb": 0.625,
      "rouge_2_precision_ce": 0.625,
      "rouge_2_f_score": 0.5,
      "rouge_2_f_score_cb": 0.5,
      "rouge_2_f_score_ce": 0.5,
      "rouge_3_recall": 0.18182,
      "rouge_3_recall_cb": 0.18182,
      "rouge_3_recall_ce": 0.18182,
      "rouge_3_precision": 0.28571,
      "rouge_3_precision_cb": 0.28571,
      "rouge_3_precision_ce": 0.28571,
      "rouge_3_f_score": 0.22222,
      "rouge_3_f_score_cb": 0.22222,
      "rouge_3_f_score_ce": 0.22222,
      "rouge_4_recall": 0.1,
      "rouge_4_recall_cb": 0.1,
      "rouge_4_recall_ce": 0.1,
      "rouge_4_precision": 0.16667,
      "rouge_4_precision_cb": 0.16667,
      "rouge_4_precision_ce": 0.16667,
      "rouge_4_f_score": 0.125,
      "rouge_4_f_score_cb": 0.125,
      "rouge_4_f_score_ce": 0.125,
      "rouge_l_recall": 0.38462,
      "rouge_l_recall_cb": 0.38462,
      "rouge_l_recall_ce": 0.38462,
      "rouge_l_precision": 0.55556,
      "rouge_l_precision_cb": 0.55556,
      "rouge_l_precision_ce": 0.55556,
      "rouge_l_f_score": 0.45455,
      "rouge_l_f_score_cb": 0.45455,
      "rouge_l_f_score_ce": 0.45455,
      "rouge_w_1.2_recall": 0.21287,
      "rouge_w_1.2_recall_cb": 0.21287,
      "rouge_w_1.2_recall_ce": 0.21287,
      "rouge_w_1.2_precision": 0.51358,
      "rouge_w_1.2_precision_cb": 0.51358,
      "rouge_w_1.2_precision_ce": 0.51358,
      "rouge_w_1.2_f_score": 0.30099,
      "rouge_w_1.2_f_score_cb": 0.30099,
      "rouge_w_1.2_f_score_ce": 0.30099,
      "rouge_s*_recall": 0.15385,
      "rouge_s*_recall_cb": 0.15385,
      "rouge_s*_recall_ce": 0.15385,
      "rouge_s*_precision": 0.33333,
      "rouge_s*_precision_cb": 0.33333,
      "rouge_s*_precision_ce": 0.33333,
      "rouge_s*_f_score": 0.21053,
      "rouge_s*_f_score_cb": 0.21053,
      "rouge_s*_f_score_ce": 0.21053,
      "rouge_su*_recall": 0.21111,
      "rouge_su*_recall_cb": 0.21111,
      "rouge_su*_recall_ce": 0.21111,
      "rouge_su*_precision": 0.43182,
      "rouge_su*_precision_cb": 0.43182,
      "rouge_su*_precision_ce": 0.43182,
      "rouge_su*_f_score": 0.28358,
      "rouge_su*_f_score_cb": 0.28358,
      "rouge_su*_f_score_ce": 0.28358
    }
  },
  {
    "id": 93,
    "filename": "PandasEval_93.txt",
    "dataset_comment": "Transform timestamp to a pydatetime object and return the pydatetime object.",
    "generated_comment": "Convert a pandas Timestamp object to a Python datetime object.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.45455,
      "rouge_1_recall_cb": 0.45455,
      "rouge_1_recall_ce": 0.45455,
      "rouge_1_precision": 0.5,
      "rouge_1_precision_cb": 0.5,
      "rouge_1_precision_ce": 0.5,
      "rouge_1_f_score": 0.47619,
      "rouge_1_f_score_cb": 0.47619,
      "rouge_1_f_score_ce": 0.47619,
      "rouge_2_recall": 0.1,
      "rouge_2_recall_cb": 0.1,
      "rouge_2_recall_ce": 0.1,
      "rouge_2_precision": 0.11111,
      "rouge_2_precision_cb": 0.11111,
      "rouge_2_precision_ce": 0.11111,
      "rouge_2_f_score": 0.10526,
      "rouge_2_f_score_cb": 0.10526,
      "rouge_2_f_score_ce": 0.10526,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.36364,
      "rouge_l_recall_cb": 0.36364,
      "rouge_l_recall_ce": 0.36364,
      "rouge_l_precision": 0.4,
      "rouge_l_precision_cb": 0.4,
      "rouge_l_precision_ce": 0.4,
      "rouge_l_f_score": 0.38095,
      "rouge_l_f_score_cb": 0.38095,
      "rouge_l_f_score_ce": 0.38095,
      "rouge_w_1.2_recall": 0.20571,
      "rouge_w_1.2_recall_cb": 0.20571,
      "rouge_w_1.2_recall_ce": 0.20571,
      "rouge_w_1.2_precision": 0.36554,
      "rouge_w_1.2_precision_cb": 0.36554,
      "rouge_w_1.2_precision_ce": 0.36554,
      "rouge_w_1.2_f_score": 0.26327,
      "rouge_w_1.2_f_score_cb": 0.26327,
      "rouge_w_1.2_f_score_ce": 0.26327,
      "rouge_s*_recall": 0.16364,
      "rouge_s*_recall_cb": 0.16364,
      "rouge_s*_recall_ce": 0.16364,
      "rouge_s*_precision": 0.2,
      "rouge_s*_precision_cb": 0.2,
      "rouge_s*_precision_ce": 0.2,
      "rouge_s*_f_score": 0.18,
      "rouge_s*_f_score_cb": 0.18,
      "rouge_s*_f_score_ce": 0.18,
      "rouge_su*_recall": 0.2,
      "rouge_su*_recall_cb": 0.2,
      "rouge_su*_recall_ce": 0.2,
      "rouge_su*_precision": 0.24074,
      "rouge_su*_precision_cb": 0.24074,
      "rouge_su*_precision_ce": 0.24074,
      "rouge_su*_f_score": 0.21849,
      "rouge_su*_f_score_cb": 0.21849,
      "rouge_su*_f_score_ce": 0.21849
    }
  },
  {
    "id": 94,
    "filename": "PandasEval_94.txt",
    "dataset_comment": "Select the given columns and return the new DataFrame.",
    "generated_comment": "Select multiple columns from a DataFrame by passing a list of column names.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.33333,
      "rouge_1_recall_cb": 0.33333,
      "rouge_1_recall_ce": 0.33333,
      "rouge_1_precision": 0.23077,
      "rouge_1_precision_cb": 0.23077,
      "rouge_1_precision_ce": 0.23077,
      "rouge_1_f_score": 0.27273,
      "rouge_1_f_score_cb": 0.27273,
      "rouge_1_f_score_ce": 0.27273,
      "rouge_2_recall": 0.0,
      "rouge_2_recall_cb": 0.0,
      "rouge_2_recall_ce": 0.0,
      "rouge_2_precision": 0.0,
      "rouge_2_precision_cb": 0.0,
      "rouge_2_precision_ce": 0.0,
      "rouge_2_f_score": 0.0,
      "rouge_2_f_score_cb": 0.0,
      "rouge_2_f_score_ce": 0.0,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.33333,
      "rouge_l_recall_cb": 0.33333,
      "rouge_l_recall_ce": 0.33333,
      "rouge_l_precision": 0.23077,
      "rouge_l_precision_cb": 0.23077,
      "rouge_l_precision_ce": 0.23077,
      "rouge_l_f_score": 0.27273,
      "rouge_l_f_score_cb": 0.27273,
      "rouge_l_f_score_ce": 0.27273,
      "rouge_w_1.2_recall": 0.17886,
      "rouge_w_1.2_recall_cb": 0.17886,
      "rouge_w_1.2_recall_ce": 0.17886,
      "rouge_w_1.2_precision": 0.19216,
      "rouge_w_1.2_precision_cb": 0.19216,
      "rouge_w_1.2_precision_ce": 0.19216,
      "rouge_w_1.2_f_score": 0.18527,
      "rouge_w_1.2_f_score_cb": 0.18527,
      "rouge_w_1.2_f_score_ce": 0.18527,
      "rouge_s*_recall": 0.08333,
      "rouge_s*_recall_cb": 0.08333,
      "rouge_s*_recall_ce": 0.08333,
      "rouge_s*_precision": 0.03846,
      "rouge_s*_precision_cb": 0.03846,
      "rouge_s*_precision_ce": 0.03846,
      "rouge_s*_f_score": 0.05263,
      "rouge_s*_f_score_cb": 0.05263,
      "rouge_s*_f_score_ce": 0.05263,
      "rouge_su*_recall": 0.11364,
      "rouge_su*_recall_cb": 0.11364,
      "rouge_su*_recall_ce": 0.11364,
      "rouge_su*_precision": 0.05556,
      "rouge_su*_precision_cb": 0.05556,
      "rouge_su*_precision_ce": 0.05556,
      "rouge_su*_f_score": 0.07463,
      "rouge_su*_f_score_cb": 0.07463,
      "rouge_su*_f_score_ce": 0.07463
    }
  },
  {
    "id": 95,
    "filename": "PandasEval_95.txt",
    "dataset_comment": "Divide all columns ['B', 'C'] in a DataFrame by the first column 'A' and return the result.",
    "generated_comment": "Divide columns 'B' and 'C' by column 'A' element-wise, ensuring each element in 'B' and 'C' is divided by the corresponding element in 'A'.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.64706,
      "rouge_1_recall_cb": 0.64706,
      "rouge_1_recall_ce": 0.64706,
      "rouge_1_precision": 0.44,
      "rouge_1_precision_cb": 0.44,
      "rouge_1_precision_ce": 0.44,
      "rouge_1_f_score": 0.52381,
      "rouge_1_f_score_cb": 0.52381,
      "rouge_1_f_score_ce": 0.52381,
      "rouge_2_recall": 0.25,
      "rouge_2_recall_cb": 0.25,
      "rouge_2_recall_ce": 0.25,
      "rouge_2_precision": 0.16667,
      "rouge_2_precision_cb": 0.16667,
      "rouge_2_precision_ce": 0.16667,
      "rouge_2_f_score": 0.2,
      "rouge_2_f_score_cb": 0.2,
      "rouge_2_f_score_ce": 0.2,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.52941,
      "rouge_l_recall_cb": 0.52941,
      "rouge_l_recall_ce": 0.52941,
      "rouge_l_precision": 0.36,
      "rouge_l_precision_cb": 0.36,
      "rouge_l_precision_ce": 0.36,
      "rouge_l_f_score": 0.42857,
      "rouge_l_f_score_cb": 0.42857,
      "rouge_l_f_score_ce": 0.42857,
      "rouge_w_1.2_recall": 0.23636,
      "rouge_w_1.2_recall_cb": 0.23636,
      "rouge_w_1.2_recall_ce": 0.23636,
      "rouge_w_1.2_precision": 0.28325,
      "rouge_w_1.2_precision_cb": 0.28325,
      "rouge_w_1.2_precision_ce": 0.28325,
      "rouge_w_1.2_f_score": 0.25769,
      "rouge_w_1.2_f_score_cb": 0.25769,
      "rouge_w_1.2_f_score_ce": 0.25769,
      "rouge_s*_recall": 0.41176,
      "rouge_s*_recall_cb": 0.41176,
      "rouge_s*_recall_ce": 0.41176,
      "rouge_s*_precision": 0.18667,
      "rouge_s*_precision_cb": 0.18667,
      "rouge_s*_precision_ce": 0.18667,
      "rouge_s*_f_score": 0.25688,
      "rouge_s*_f_score_cb": 0.25688,
      "rouge_s*_f_score_ce": 0.25688,
      "rouge_su*_recall": 0.43421,
      "rouge_su*_recall_cb": 0.43421,
      "rouge_su*_recall_ce": 0.43421,
      "rouge_su*_precision": 0.2037,
      "rouge_su*_precision_cb": 0.2037,
      "rouge_su*_precision_ce": 0.2037,
      "rouge_su*_f_score": 0.27731,
      "rouge_su*_f_score_cb": 0.27731,
      "rouge_su*_f_score_ce": 0.27731
    }
  },
  {
    "id": 96,
    "filename": "PandasEval_96.txt",
    "dataset_comment": "Merge the two dataframes on the column 'company'.",
    "generated_comment": "Merge two DataFrames on the 'company' column to combine the data based on the common 'company' values.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 1.0,
      "rouge_1_recall_cb": 1.0,
      "rouge_1_recall_ce": 1.0,
      "rouge_1_precision": 0.47059,
      "rouge_1_precision_cb": 0.47059,
      "rouge_1_precision_ce": 0.47059,
      "rouge_1_f_score": 0.64,
      "rouge_1_f_score_cb": 0.64,
      "rouge_1_f_score_ce": 0.64,
      "rouge_2_recall": 0.42857,
      "rouge_2_recall_cb": 0.42857,
      "rouge_2_recall_ce": 0.42857,
      "rouge_2_precision": 0.1875,
      "rouge_2_precision_cb": 0.1875,
      "rouge_2_precision_ce": 0.1875,
      "rouge_2_f_score": 0.26087,
      "rouge_2_f_score_cb": 0.26087,
      "rouge_2_f_score_ce": 0.26087,
      "rouge_3_recall": 0.33333,
      "rouge_3_recall_cb": 0.33333,
      "rouge_3_recall_ce": 0.33333,
      "rouge_3_precision": 0.13333,
      "rouge_3_precision_cb": 0.13333,
      "rouge_3_precision_ce": 0.13333,
      "rouge_3_f_score": 0.19047,
      "rouge_3_f_score_cb": 0.19047,
      "rouge_3_f_score_ce": 0.19047,
      "rouge_4_recall": 0.2,
      "rouge_4_recall_cb": 0.2,
      "rouge_4_recall_ce": 0.2,
      "rouge_4_precision": 0.07143,
      "rouge_4_precision_cb": 0.07143,
      "rouge_4_precision_ce": 0.07143,
      "rouge_4_f_score": 0.10526,
      "rouge_4_f_score_cb": 0.10526,
      "rouge_4_f_score_ce": 0.10526,
      "rouge_l_recall": 0.875,
      "rouge_l_recall_cb": 0.875,
      "rouge_l_recall_ce": 0.875,
      "rouge_l_precision": 0.41176,
      "rouge_l_precision_cb": 0.41176,
      "rouge_l_precision_ce": 0.41176,
      "rouge_l_f_score": 0.56,
      "rouge_l_f_score_cb": 0.56,
      "rouge_l_f_score_ce": 0.56,
      "rouge_w_1.2_recall": 0.5424,
      "rouge_w_1.2_recall_cb": 0.5424,
      "rouge_w_1.2_recall_ce": 0.5424,
      "rouge_w_1.2_precision": 0.38688,
      "rouge_w_1.2_precision_cb": 0.38688,
      "rouge_w_1.2_precision_ce": 0.38688,
      "rouge_w_1.2_f_score": 0.45163,
      "rouge_w_1.2_f_score_cb": 0.45163,
      "rouge_w_1.2_f_score_ce": 0.45163,
      "rouge_s*_recall": 0.89286,
      "rouge_s*_recall_cb": 0.89286,
      "rouge_s*_recall_ce": 0.89286,
      "rouge_s*_precision": 0.18382,
      "rouge_s*_precision_cb": 0.18382,
      "rouge_s*_precision_ce": 0.18382,
      "rouge_s*_f_score": 0.30487,
      "rouge_s*_f_score_cb": 0.30487,
      "rouge_s*_f_score_ce": 0.30487,
      "rouge_su*_recall": 0.91429,
      "rouge_su*_recall_cb": 0.91429,
      "rouge_su*_recall_ce": 0.91429,
      "rouge_su*_precision": 0.21053,
      "rouge_su*_precision_cb": 0.21053,
      "rouge_su*_precision_ce": 0.21053,
      "rouge_su*_f_score": 0.34225,
      "rouge_su*_f_score_cb": 0.34225,
      "rouge_su*_f_score_ce": 0.34225
    }
  },
  {
    "id": 97,
    "filename": "PandasEval_97.txt",
    "dataset_comment": "Rename the only column header and return the changed dataframe.",
    "generated_comment": "Rename a specific column in a DataFrame by providing the old column name and the new column name.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.6,
      "rouge_1_recall_cb": 0.6,
      "rouge_1_recall_ce": 0.6,
      "rouge_1_precision": 0.33333,
      "rouge_1_precision_cb": 0.33333,
      "rouge_1_precision_ce": 0.33333,
      "rouge_1_f_score": 0.42857,
      "rouge_1_f_score_cb": 0.42857,
      "rouge_1_f_score_ce": 0.42857,
      "rouge_2_recall": 0.0,
      "rouge_2_recall_cb": 0.0,
      "rouge_2_recall_ce": 0.0,
      "rouge_2_precision": 0.0,
      "rouge_2_precision_cb": 0.0,
      "rouge_2_precision_ce": 0.0,
      "rouge_2_f_score": 0.0,
      "rouge_2_f_score_cb": 0.0,
      "rouge_2_f_score_ce": 0.0,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.5,
      "rouge_l_recall_cb": 0.5,
      "rouge_l_recall_ce": 0.5,
      "rouge_l_precision": 0.27778,
      "rouge_l_precision_cb": 0.27778,
      "rouge_l_precision_ce": 0.27778,
      "rouge_l_f_score": 0.35714,
      "rouge_l_f_score_cb": 0.35714,
      "rouge_l_f_score_ce": 0.35714,
      "rouge_w_1.2_recall": 0.25315,
      "rouge_w_1.2_recall_cb": 0.25315,
      "rouge_w_1.2_recall_ce": 0.25315,
      "rouge_w_1.2_precision": 0.2229,
      "rouge_w_1.2_precision_cb": 0.2229,
      "rouge_w_1.2_precision_ce": 0.2229,
      "rouge_w_1.2_f_score": 0.23706,
      "rouge_w_1.2_f_score_cb": 0.23706,
      "rouge_w_1.2_f_score_ce": 0.23706,
      "rouge_s*_recall": 0.26667,
      "rouge_s*_recall_cb": 0.26667,
      "rouge_s*_recall_ce": 0.26667,
      "rouge_s*_precision": 0.07843,
      "rouge_s*_precision_cb": 0.07843,
      "rouge_s*_precision_ce": 0.07843,
      "rouge_s*_f_score": 0.12121,
      "rouge_s*_f_score_cb": 0.12121,
      "rouge_s*_f_score_ce": 0.12121,
      "rouge_su*_recall": 0.31481,
      "rouge_su*_recall_cb": 0.31481,
      "rouge_su*_recall_ce": 0.31481,
      "rouge_su*_precision": 0.1,
      "rouge_su*_precision_cb": 0.1,
      "rouge_su*_precision_ce": 0.1,
      "rouge_su*_f_score": 0.15179,
      "rouge_su*_f_score_cb": 0.15179,
      "rouge_su*_f_score_ce": 0.15179
    }
  },
  {
    "id": 98,
    "filename": "PandasEval_98.txt",
    "dataset_comment": "Get a list of the column headers from a Pandas DataFrame provided by user input, regardless of the number of columns or their names, and return the list of column headers.",
    "generated_comment": "Extract and return the list of column names from the DataFrame.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.32258,
      "rouge_1_recall_cb": 0.32258,
      "rouge_1_recall_ce": 0.32258,
      "rouge_1_precision": 0.90909,
      "rouge_1_precision_cb": 0.90909,
      "rouge_1_precision_ce": 0.90909,
      "rouge_1_f_score": 0.47619,
      "rouge_1_f_score_cb": 0.47619,
      "rouge_1_f_score_ce": 0.47619,
      "rouge_2_recall": 0.16667,
      "rouge_2_recall_cb": 0.16667,
      "rouge_2_recall_ce": 0.16667,
      "rouge_2_precision": 0.5,
      "rouge_2_precision_cb": 0.5,
      "rouge_2_precision_ce": 0.5,
      "rouge_2_f_score": 0.25,
      "rouge_2_f_score_cb": 0.25,
      "rouge_2_f_score_ce": 0.25,
      "rouge_3_recall": 0.13793,
      "rouge_3_recall_cb": 0.13793,
      "rouge_3_recall_ce": 0.13793,
      "rouge_3_precision": 0.44444,
      "rouge_3_precision_cb": 0.44444,
      "rouge_3_precision_ce": 0.44444,
      "rouge_3_f_score": 0.21052,
      "rouge_3_f_score_cb": 0.21052,
      "rouge_3_f_score_ce": 0.21052,
      "rouge_4_recall": 0.10714,
      "rouge_4_recall_cb": 0.10714,
      "rouge_4_recall_ce": 0.10714,
      "rouge_4_precision": 0.375,
      "rouge_4_precision_cb": 0.375,
      "rouge_4_precision_ce": 0.375,
      "rouge_4_f_score": 0.16666,
      "rouge_4_f_score_cb": 0.16666,
      "rouge_4_f_score_ce": 0.16666,
      "rouge_l_recall": 0.19355,
      "rouge_l_recall_cb": 0.19355,
      "rouge_l_recall_ce": 0.19355,
      "rouge_l_precision": 0.54545,
      "rouge_l_precision_cb": 0.54545,
      "rouge_l_precision_ce": 0.54545,
      "rouge_l_f_score": 0.28572,
      "rouge_l_f_score_cb": 0.28572,
      "rouge_l_f_score_ce": 0.28572,
      "rouge_w_1.2_recall": 0.09739,
      "rouge_w_1.2_recall_cb": 0.09739,
      "rouge_w_1.2_recall_ce": 0.09739,
      "rouge_w_1.2_precision": 0.54545,
      "rouge_w_1.2_precision_cb": 0.54545,
      "rouge_w_1.2_precision_ce": 0.54545,
      "rouge_w_1.2_f_score": 0.16527,
      "rouge_w_1.2_f_score_cb": 0.16527,
      "rouge_w_1.2_f_score_ce": 0.16527,
      "rouge_s*_recall": 0.07312,
      "rouge_s*_recall_cb": 0.07312,
      "rouge_s*_recall_ce": 0.07312,
      "rouge_s*_precision": 0.61818,
      "rouge_s*_precision_cb": 0.61818,
      "rouge_s*_precision_ce": 0.61818,
      "rouge_s*_f_score": 0.13077,
      "rouge_s*_f_score_cb": 0.13077,
      "rouge_s*_f_score_ce": 0.13077,
      "rouge_su*_recall": 0.08687,
      "rouge_su*_recall_cb": 0.08687,
      "rouge_su*_recall_ce": 0.08687,
      "rouge_su*_precision": 0.66154,
      "rouge_su*_precision_cb": 0.66154,
      "rouge_su*_precision_ce": 0.66154,
      "rouge_su*_f_score": 0.15357,
      "rouge_su*_f_score_cb": 0.15357,
      "rouge_su*_f_score_ce": 0.15357
    }
  },
  {
    "id": 99,
    "filename": "PandasEval_99.txt",
    "dataset_comment": "Find non-numeric rows in a Pandas DataFrame and return the rows that contain non-numeric values. To obtain the subDataFrame of rows with non-numeric values, use the negation (~) of the condition to identify rows with at least one non-numeric entry.",
    "generated_comment": "Identify rows in the DataFrame that contain non-numeric values by applying np.isreal to each element and checking for rows where not all elements are real numbers.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.30233,
      "rouge_1_recall_cb": 0.30233,
      "rouge_1_recall_ce": 0.30233,
      "rouge_1_precision": 0.46429,
      "rouge_1_precision_cb": 0.46429,
      "rouge_1_precision_ce": 0.46429,
      "rouge_1_f_score": 0.3662,
      "rouge_1_f_score_cb": 0.3662,
      "rouge_1_f_score_ce": 0.3662,
      "rouge_2_recall": 0.14286,
      "rouge_2_recall_cb": 0.14286,
      "rouge_2_recall_ce": 0.14286,
      "rouge_2_precision": 0.22222,
      "rouge_2_precision_cb": 0.22222,
      "rouge_2_precision_ce": 0.22222,
      "rouge_2_f_score": 0.17391,
      "rouge_2_f_score_cb": 0.17391,
      "rouge_2_f_score_ce": 0.17391,
      "rouge_3_recall": 0.07317,
      "rouge_3_recall_cb": 0.07317,
      "rouge_3_recall_ce": 0.07317,
      "rouge_3_precision": 0.11538,
      "rouge_3_precision_cb": 0.11538,
      "rouge_3_precision_ce": 0.11538,
      "rouge_3_f_score": 0.08955,
      "rouge_3_f_score_cb": 0.08955,
      "rouge_3_f_score_ce": 0.08955,
      "rouge_4_recall": 0.05,
      "rouge_4_recall_cb": 0.05,
      "rouge_4_recall_ce": 0.05,
      "rouge_4_precision": 0.08,
      "rouge_4_precision_cb": 0.08,
      "rouge_4_precision_ce": 0.08,
      "rouge_4_f_score": 0.06154,
      "rouge_4_f_score_cb": 0.06154,
      "rouge_4_f_score_ce": 0.06154,
      "rouge_l_recall": 0.23256,
      "rouge_l_recall_cb": 0.23256,
      "rouge_l_recall_ce": 0.23256,
      "rouge_l_precision": 0.35714,
      "rouge_l_precision_cb": 0.35714,
      "rouge_l_precision_ce": 0.35714,
      "rouge_l_f_score": 0.28169,
      "rouge_l_f_score_cb": 0.28169,
      "rouge_l_f_score_ce": 0.28169,
      "rouge_w_1.2_recall": 0.09223,
      "rouge_w_1.2_recall_cb": 0.09223,
      "rouge_w_1.2_recall_ce": 0.09223,
      "rouge_w_1.2_precision": 0.30051,
      "rouge_w_1.2_precision_cb": 0.30051,
      "rouge_w_1.2_precision_ce": 0.30051,
      "rouge_w_1.2_f_score": 0.14114,
      "rouge_w_1.2_f_score_cb": 0.14114,
      "rouge_w_1.2_f_score_ce": 0.14114,
      "rouge_s*_recall": 0.06977,
      "rouge_s*_recall_cb": 0.06977,
      "rouge_s*_recall_ce": 0.06977,
      "rouge_s*_precision": 0.16667,
      "rouge_s*_precision_cb": 0.16667,
      "rouge_s*_precision_ce": 0.16667,
      "rouge_s*_f_score": 0.09836,
      "rouge_s*_f_score_cb": 0.09836,
      "rouge_s*_f_score_ce": 0.09836,
      "rouge_su*_recall": 0.08042,
      "rouge_su*_recall_cb": 0.08042,
      "rouge_su*_recall_ce": 0.08042,
      "rouge_su*_precision": 0.18765,
      "rouge_su*_precision_cb": 0.18765,
      "rouge_su*_precision_ce": 0.18765,
      "rouge_su*_f_score": 0.11259,
      "rouge_su*_f_score_cb": 0.11259,
      "rouge_su*_f_score_ce": 0.11259
    }
  },
  {
    "id": 100,
    "filename": "PandasEval_100.txt",
    "dataset_comment": "Use the concat function, as np.repeat does not work practically on a DataFrame.",
    "generated_comment": "This is my DataFrame that should be repeated for 5 times:Repeat the DataFrame 'x' 5 times by concatenating it with itself 5 times.",
    "indicator_name": "rouge",
    "score": {
      "rouge_1_recall": 0.21429,
      "rouge_1_recall_cb": 0.21429,
      "rouge_1_recall_ce": 0.21429,
      "rouge_1_precision": 0.125,
      "rouge_1_precision_cb": 0.125,
      "rouge_1_precision_ce": 0.125,
      "rouge_1_f_score": 0.1579,
      "rouge_1_f_score_cb": 0.1579,
      "rouge_1_f_score_ce": 0.1579,
      "rouge_2_recall": 0.0,
      "rouge_2_recall_cb": 0.0,
      "rouge_2_recall_ce": 0.0,
      "rouge_2_precision": 0.0,
      "rouge_2_precision_cb": 0.0,
      "rouge_2_precision_ce": 0.0,
      "rouge_2_f_score": 0.0,
      "rouge_2_f_score_cb": 0.0,
      "rouge_2_f_score_ce": 0.0,
      "rouge_3_recall": 0.0,
      "rouge_3_recall_cb": 0.0,
      "rouge_3_recall_ce": 0.0,
      "rouge_3_precision": 0.0,
      "rouge_3_precision_cb": 0.0,
      "rouge_3_precision_ce": 0.0,
      "rouge_3_f_score": 0.0,
      "rouge_3_f_score_cb": 0.0,
      "rouge_3_f_score_ce": 0.0,
      "rouge_4_recall": 0.0,
      "rouge_4_recall_cb": 0.0,
      "rouge_4_recall_ce": 0.0,
      "rouge_4_precision": 0.0,
      "rouge_4_precision_cb": 0.0,
      "rouge_4_precision_ce": 0.0,
      "rouge_4_f_score": 0.0,
      "rouge_4_f_score_cb": 0.0,
      "rouge_4_f_score_ce": 0.0,
      "rouge_l_recall": 0.14286,
      "rouge_l_recall_cb": 0.14286,
      "rouge_l_recall_ce": 0.14286,
      "rouge_l_precision": 0.08333,
      "rouge_l_precision_cb": 0.08333,
      "rouge_l_precision_ce": 0.08333,
      "rouge_l_f_score": 0.10526,
      "rouge_l_f_score_cb": 0.10526,
      "rouge_l_f_score_ce": 0.10526,
      "rouge_w_1.2_recall": 0.07508,
      "rouge_w_1.2_recall_cb": 0.07508,
      "rouge_w_1.2_recall_ce": 0.07508,
      "rouge_w_1.2_precision": 0.07424,
      "rouge_w_1.2_precision_cb": 0.07424,
      "rouge_w_1.2_precision_ce": 0.07424,
      "rouge_w_1.2_f_score": 0.07466,
      "rouge_w_1.2_f_score_cb": 0.07466,
      "rouge_w_1.2_f_score_ce": 0.07466,
      "rouge_s*_recall": 0.02198,
      "rouge_s*_recall_cb": 0.02198,
      "rouge_s*_recall_ce": 0.02198,
      "rouge_s*_precision": 0.00725,
      "rouge_s*_precision_cb": 0.00725,
      "rouge_s*_precision_ce": 0.00725,
      "rouge_s*_f_score": 0.0109,
      "rouge_s*_f_score_cb": 0.0109,
      "rouge_s*_f_score_ce": 0.0109,
      "rouge_su*_recall": 0.03846,
      "rouge_su*_recall_cb": 0.03846,
      "rouge_su*_recall_ce": 0.03846,
      "rouge_su*_precision": 0.01338,
      "rouge_su*_precision_cb": 0.01338,
      "rouge_su*_precision_ce": 0.01338,
      "rouge_su*_f_score": 0.01985,
      "rouge_su*_f_score_cb": 0.01985,
      "rouge_su*_f_score_ce": 0.01985
    }
  }
]