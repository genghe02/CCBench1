```python
from typing import List


def factorize(n: int) -> List[int]:
    # Factorize a given integer n into its prime factors and return them as a list.
    # The function uses trial division up to the square root of n.
    # If a factor is found, it is added to the list and n is divided by that factor.
    # The process continues until no more factors can be found below the square root of n.
    # If n is still greater than 1 after the loop, it means n itself is a prime factor.
    # param n: int, the integer to be factorized
    # return: List[int], a list of prime factors of n
    
    # Test cases for the function:
    # >>> factorize(12)
    # [2, 2, 3]
    # >>> factorize(29)
    # [29]
    # >>> factorize(1)
    # []
    # >>> factorize(360)
    # [2, 2, 2, 3, 3, 5]
    # >>> factorize(23)
    # [23]
    
    import math
    fact = []
    i = 2
    while i <= int(math.sqrt(n) + 1):
        if n % i == 0:
            fact.append(i)
            n //= i
        else:
            i += 1

    if n > 1:
        fact.append(n)
    return fact
```