```python
def get_max_triples(n):
    # Calculate the maximum number of triples (A[i], A[j], A[k]) such that (A[i] + A[j] + A[k]) % 3 == 0, where A is a list of numbers generated by the formula i*i - i + 1 for i in range(1, n+1).

    # Generate the list A using the given formula.
    A = [i*i - i + 1 for i in range(1, n+1)]
    
    # Initialize an empty list to store valid triples.
    ans = []
    
    # Iterate through all possible combinations of indices i, j, and k where i < j < k.
    for i in range(n):
        for j in range(i+1, n):
            for k in range(j+1, n):
                # Check if the sum of the elements at these indices is divisible by 3.
                if (A[i] + A[j] + A[k]) % 3 == 0:
                    # If true, add the triple to the list of valid triples.
                    ans += [(A[i], A[j], A[k])]
    
    # Return the number of valid triples found.
    return len(ans)

# Test cases for the function get_max_triples.
# >>> get_max_triples(1)
# 0
# >>> get_max_triples(2)
# 0
# >>> get_max_triples(3)
# 1
# >>> get_max_triples(4)
# 4
# >>> get_max_triples(5)
# 10
```