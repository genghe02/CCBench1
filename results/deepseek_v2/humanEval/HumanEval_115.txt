```python
def max_fill(grid, capacity):
    import math
    # Calculate the number of buckets needed to fill all cells in a grid where each bucket has a specific capacity.
    # The function iterates through each sub-array in the grid, sums the values, and calculates the number of buckets required using math.ceil.
    # Finally, it sums up the number of buckets needed for all sub-arrays.

    # param grid: list of lists, each sub-list represents a row in the grid and contains non-negative integers representing the amount of liquid in each cell.
    # param capacity: int, the maximum amount of liquid a bucket can hold.
    # return: int, the total number of buckets required to fill all cells in the grid.

    # >>> max_fill([[5, 5, 5], [5, 5, 5]], 5)
    # 6
    # >>> max_fill([[1, 2, 3], [4, 5, 6]], 5)
    # 5
    # >>> max_fill([[1, 2, 3], [4, 5, 6]], 10)
    # 3
    # >>> max_fill([[1, 2, 3], [4, 5, 6]], 1)
    # 21
    # >>> max_fill([[0, 0, 0], [0, 0, 0]], 5)
    # 0
    # >>> max_fill([[1, 1, 1], [1, 1, 1]], 1)
    # 6

    return sum([math.ceil(sum(arr)/capacity) for arr in grid])
```