```python
def correct_bracketing(brackets: str):
    # Check if the given string of brackets is correctly bracketed.
    # This function iterates through the string, maintaining a depth counter.
    # If the counter goes negative at any point, it means there are unmatched closing brackets, so the function returns False.
    # If the counter is zero at the end, it means all brackets are matched, so the function returns True.
    # Otherwise, it returns False.

    # param brackets: str, the string of brackets to be checked
    # return: bool, True if the brackets are correctly matched, False otherwise

    # >>> correct_bracketing("()")
    # True
    # >>> correct_bracketing("(()())")
    # True
    # >>> correct_bracketing("())(")
    # False
    # >>> correct_bracketing("((())")
    # False
    # >>> correct_bracketing(")(")
    # False

    depth = 0
    for b in brackets:
        if b == "(":
            depth += 1
        else:
            depth -= 1
        if depth < 0:
            return False
    return depth == 0
```