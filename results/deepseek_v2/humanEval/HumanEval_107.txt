```python
def even_odd_palindrome(n):
    # Count the number of even and odd palindromes from 1 to n.

    # Check if a number is a palindrome by comparing it to its reverse.
    def is_palindrome(n):
        return str(n) == str(n)[::-1]

    even_palindrome_count = 0
    odd_palindrome_count = 0

    # Iterate through numbers from 1 to n, check if they are palindromes, and classify them as even or odd.
    for i in range(1, n+1):
        if i%2 == 1 and is_palindrome(i):
                odd_palindrome_count += 1
        elif i%2 == 0 and is_palindrome(i):
            even_palindrome_count += 1
    return (even_palindrome_count, odd_palindrome_count)

# Test cases for the function
# >>> even_odd_palindrome(10)
# (1, 5)
# >>> even_odd_palindrome(20)
# (2, 10)
# >>> even_odd_palindrome(1)
# (0, 1)
# >>> even_odd_palindrome(0)
# (0, 0)
```