```python
import sqlite3


class StudentDatabaseProcessor:
    # This class handles database operations related to students, including creating tables, inserting, searching, and deleting student records.

    def __init__(self, database_name):
        # Initialize the database connection and set up the database name.
        # param database_name: str, the name of the SQLite database file.
        self.database_name = database_name

    def create_student_table(self):
        # Create a table named 'students' if it does not already exist in the database.
        # return: None, the function only creates the table if it does not exist.
        # >>> db_processor = StudentDatabaseProcessor('students.db')
        # >>> db_processor.create_student_table()
        conn = sqlite3.connect(self.database_name)
        cursor = conn.cursor()

        create_table_query = """
        CREATE TABLE IF NOT EXISTS students (
            id INTEGER PRIMARY KEY,
            name TEXT,
            age INTEGER,
            gender TEXT,
            grade INTEGER
        )
        """
        cursor.execute(create_table_query)

        conn.commit()
        conn.close()

    def insert_student(self, student_data):
        # Insert a new student record into the 'students' table.
        # param student_data: dict, a dictionary containing student details such as name, age, gender, and grade.
        # return: None, the function inserts the student data into the database.
        # >>> db_processor = StudentDatabaseProcessor('students.db')
        # >>> db_processor.insert_student({'name': 'Alice', 'age': 20, 'gender': 'F', 'grade': 90})
        conn = sqlite3.connect(self.database_name)
        cursor = conn.cursor()

        insert_query = """
        INSERT INTO students (name, age, gender, grade)
        VALUES (?, ?, ?, ?)
        """
        cursor.execute(insert_query,
                       (student_data['name'], student_data['age'], student_data['gender'], student_data['grade']))

        conn.commit()
        conn.close()

    def search_student_by_name(self, name):
        # Search for a student in the 'students' table by their name.
        # param name: str, the name of the student to search for.
        # return: list, a list of tuples containing the student records that match the name.
        # >>> db_processor = StudentDatabaseProcessor('students.db')
        # >>> db_processor.search_student_by_name('Alice')
        conn = sqlite3.connect(self.database_name)
        cursor = conn.cursor()

        select_query = "SELECT * FROM students WHERE name = ?"
        cursor.execute(select_query, (name,))
        result = cursor.fetchall()

        conn.close()

        return result

    def delete_student_by_name(self, name):
        # Delete a student record from the 'students' table by their name.
        # param name: str, the name of the student to delete.
        # return: None, the function deletes the student record from the database.
        # >>> db_processor = StudentDatabaseProcessor('students.db')
        # >>> db_processor.delete_student_by_name('Alice')
        conn = sqlite3.connect(self.database_name)
        cursor = conn.cursor()

        delete_query = "DELETE FROM students WHERE name = ?"
        cursor.execute(delete_query, (name,))

        conn.commit()
        conn.close()
```