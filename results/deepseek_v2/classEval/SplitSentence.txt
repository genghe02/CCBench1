```python
import re


class SplitSentence:
    # A class for splitting text into sentences, counting words in sentences, and processing text files to find the sentence with the maximum word count.

    def split_sentences(self, sentences_string):
        # Split a given string of sentences into individual sentences based on punctuation marks.
        # param sentences_string: str, the input string containing multiple sentences.
        # return: list, a list of individual sentences extracted from the input string.
        # >>> split_sentence = SplitSentence()
        # >>> split_sentence.split_sentences("Hello world. How are you?")
        # ['Hello world.', 'How are you?']
        sentences = re.split(r'(?<!\w\.\w.)(?<![A-Z][a-z]\.)(?<=\.|\?)\s', sentences_string)
        return sentences

    def count_words(self, sentence):
        # Count the number of words in a given sentence, ignoring punctuation.
        # param sentence: str, the input sentence to count words in.
        # return: int, the number of words in the sentence.
        # >>> split_sentence = SplitSentence()
        # >>> split_sentence.count_words("Hello world.")
        # 2
        sentence = re.sub(r'[^a-zA-Z\s]', '', sentence)
        words = sentence.split()
        return len(words)

    def process_text_file(self, sentences_string):
        # Process a text file by splitting it into sentences and finding the sentence with the maximum word count.
        # param sentences_string: str, the input string containing multiple sentences.
        # return: int, the maximum word count found in any sentence within the input string.
        # >>> split_sentence = SplitSentence()
        # >>> split_sentence.process_text_file("Hello world. How are you? I am fine.")
        # 4
        sentences = self.split_sentences(sentences_string)
        max_count = 0
        for sentence in sentences:
            count = self.count_words(sentence)
            if count > max_count:
                max_count = count

        return max_count
```