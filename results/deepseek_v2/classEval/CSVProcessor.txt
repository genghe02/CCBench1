```python
import csv


class CSVProcessor:
    # This class provides methods to read, write, and process CSV files.

    def __init__(self):
        pass

    def read_csv(self, file_name):
        # Read a CSV file and return the title row and the data rows.
        # param file_name: str, the name of the CSV file to read.
        # return: tuple, (title, data) where title is a list of column names and data is a list of rows.
        # >>> processor = CSVProcessor()
        # >>> title, data = processor.read_csv('example.csv')
        # >>> title
        # ['Name', 'Age', 'City']
        # >>> data
        # [['Alice', '30', 'New York'], ['Bob', '25', 'Los Angeles']]
        data = []
        with open(file_name, 'r') as file:
            reader = csv.reader(file)
            title = next(reader)
            for row in reader:
                data.append(row)
        return title, data

    def write_csv(self, data, file_name):
        # Write data to a CSV file.
        # param data: list of lists, the data to write to the CSV file.
        # param file_name: str, the name of the CSV file to write.
        # return: int, 1 if the write operation is successful, 0 otherwise.
        # >>> processor = CSVProcessor()
        # >>> data = [['Name', 'Age', 'City'], ['Alice', '30', 'New York'], ['Bob', '25', 'Los Angeles']]
        # >>> processor.write_csv(data, 'output.csv')
        # 1
        try:
            with open(file_name, 'w', newline='') as file:
                writer = csv.writer(file)
                writer.writerows(data)
            return 1
        except:
            return 0

    def process_csv_data(self, N, save_file_name):
        # Process a specific column of a CSV file by converting its data to uppercase and saving the result to a new CSV file.
        # param N: int, the index of the column to process.
        # param save_file_name: str, the name of the CSV file to process.
        # return: int, 1 if the write operation is successful, 0 otherwise.
        # >>> processor = CSVProcessor()
        # >>> processor.process_csv_data(1, 'example.csv')
        # 1
        title, data = self.read_csv(save_file_name)
        column_data = [row[N] for row in data]
        column_data = [row.upper() for row in column_data]
        new_data = [title, column_data]
        return self.write_csv(new_data, save_file_name.split('.')[0] + '_process.csv')
```