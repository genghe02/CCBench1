```python
from collections import Counter
import re

class NLPDataProcessor2:
    # This class provides methods for processing natural language data, including cleaning, splitting, and calculating word frequencies.

    def process_data(self, string_list):
        # Process a list of strings by removing non-English characters, converting to lowercase, and splitting into words.
        # param string_list: list, a list of strings to be processed
        # return: list, a list of lists where each inner list contains words from the corresponding string
        # >>> processor = NLPDataProcessor2()
        # >>> processor.process_data(['Hello, World!', 'Python is great.'])
        # [['hello', 'world'], ['python', 'is', 'great']]
        words_list = []
        for string in string_list:
            # Remove non-English letters and convert to lowercase
            processed_string = re.sub(r'[^a-zA-Z\s]', '', string.lower())
            # Split the string into words
            words = processed_string.split()
            words_list.append(words)
        return words_list

    def calculate_word_frequency(self, words_list):
        # Calculate the frequency of each word in a list of word lists and return the top 5 most frequent words.
        # param words_list: list, a list of lists where each inner list contains words from a string
        # return: dict, a dictionary containing the top 5 most frequent words and their counts
        # >>> processor = NLPDataProcessor2()
        # >>> processor.calculate_word_frequency([['hello', 'world'], ['python', 'is', 'great']])
        # {'hello': 1, 'world': 1, 'python': 1, 'is': 1, 'great': 1}
        word_frequency = Counter()
        for words in words_list:
            word_frequency.update(words)
        sorted_word_frequency = dict(sorted(word_frequency.items(), key=lambda x: x[1], reverse=True))
        top_5_word_frequency = dict(list(sorted_word_frequency.items())[:5])
        return top_5_word_frequency

    def process(self, string_list):
        # Process a list of strings and return the top 5 most frequent words and their counts.
        # param string_list: list, a list of strings to be processed
        # return: dict, a dictionary containing the top 5 most frequent words and their counts
        # >>> processor = NLPDataProcessor2()
        # >>> processor.process(['Hello, World!', 'Python is great.'])
        # {'hello': 1, 'world': 1, 'python': 1, 'is': 1, 'great': 1}
        words_list = self.process_data(string_list)
        word_frequency_dict = self.calculate_word_frequency(words_list)
        return word_frequency_dict
```