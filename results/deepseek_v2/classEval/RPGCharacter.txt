```python
# This class represents an RPG character with attributes like name, HP, attack power, defense, and level.
class RPGCharacter:
    def __init__(self, name, hp, attack_power, defense, level=1):
        # Initialize the character with given attributes and set initial experience points to 0.
        # param name: str, the name of the character
        # param hp: int, the health points of the character
        # param attack_power: int, the attack power of the character
        # param defense: int, the defense power of the character
        # param level: int, the level of the character, default is 1
        self.name = name
        self.hp = hp
        self.attack_power = attack_power
        self.defense = defense
        self.level = level
        self.exp = 0

    def attack(self, other_character):
        # Perform an attack on another character, reducing their HP based on the attacker's attack power and the defender's defense.
        # param other_character: RPGCharacter, the character being attacked
        # >>> character1 = RPGCharacter("Hero", 100, 20, 10)
        # >>> character2 = RPGCharacter("Enemy", 100, 15, 5)
        # >>> character1.attack(character2)
        # >>> character2.hp
        damage = max(self.attack_power - other_character.defense, 1)
        other_character.hp -= damage

    def heal(self):
        # Heal the character by 10 HP, ensuring the HP does not exceed 100.
        # return: int, the current HP of the character after healing
        # >>> character = RPGCharacter("Hero", 95, 20, 10)
        # >>> character.heal()
        # >>> character.hp
        self.hp += 10
        if self.hp > 100:
            self.hp = 100
        return self.hp

    def gain_exp(self, amount):
        # Gain experience points and potentially level up if the experience threshold is met.
        # param amount: int, the amount of experience points to gain
        # >>> character = RPGCharacter("Hero", 100, 20, 10)
        # >>> character.gain_exp(150)
        # >>> character.level, character.exp
        while amount != 0:
            if self.exp + amount >= self.level * 100:
                amount -= (self.level * 100 - self.exp)
                self.level_up()
            else:
                self.exp += amount
                amount = 0

    def level_up(self):
        # Increase the character's level, reset experience points, and enhance attributes.
        # return: tuple, the new level, HP, attack power, and defense of the character
        # >>> character = RPGCharacter("Hero", 100, 20, 10)
        # >>> character.level_up()
        # >>> character.level, character.hp, character.attack_power, character.defense
        if self.level < 100:
            self.level += 1
            self.exp = 0
            self.hp += 20
            self.attack_power += 5
            self.defense += 5
        return self.level, self.hp, self.attack_power, self.defense

    def is_alive(self):
        # Check if the character is still alive (HP greater than 0).
        # return: bool, True if the character is alive, False otherwise
        # >>> character = RPGCharacter("Hero", 10, 20, 10)
        # >>> character.is_alive()
        return self.hp > 0
```