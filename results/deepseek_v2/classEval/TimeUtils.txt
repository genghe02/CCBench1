```python
import datetime
import time

class TimeUtils:
    # A utility class for handling various time-related operations.

    def __init__(self):
        # Initialize the class with the current datetime.
        self.datetime = datetime.datetime.now()

    def get_current_time(self):
        # Retrieve the current time in the format "HH:MM:SS".
        # return: str, the current time in "HH:MM:SS" format.
        # >>> time_utils = TimeUtils()
        # >>> time_utils.get_current_time()
        format = "%H:%M:%S"
        return self.datetime.strftime(format)

    def get_current_date(self):
        # Retrieve the current date in the format "YYYY-MM-DD".
        # return: str, the current date in "YYYY-MM-DD" format.
        # >>> time_utils = TimeUtils()
        # >>> time_utils.get_current_date()
        format = "%Y-%m-%d"
        return self.datetime.strftime(format)

    def add_seconds(self, seconds):
        # Add a specified number of seconds to the current datetime and return the result in "HH:MM:SS" format.
        # param seconds: int, the number of seconds to add to the current datetime.
        # return: str, the new time in "HH:MM:SS" format after adding the specified seconds.
        # >>> time_utils = TimeUtils()
        # >>> time_utils.add_seconds(30)
        new_datetime = self.datetime + datetime.timedelta(seconds=seconds)
        format = "%H:%M:%S"
        return new_datetime.strftime(format)

    def string_to_datetime(self, string):
        # Convert a string in the format "YYYY-MM-DD HH:MM:SS" to a datetime object.
        # param string: str, the string to convert to a datetime object.
        # return: datetime, the datetime object corresponding to the input string.
        # >>> time_utils = TimeUtils()
        # >>> time_utils.string_to_datetime("2023-10-01 12:34:56")
        return datetime.datetime.strptime(string, "%Y-%m-%d %H:%M:%S")

    def datetime_to_string(self, datetime):
        # Convert a datetime object to a string in the format "YYYY-MM-DD HH:MM:SS".
        # param datetime: datetime, the datetime object to convert to a string.
        # return: str, the string representation of the datetime object in "YYYY-MM-DD HH:MM:SS" format.
        # >>> time_utils = TimeUtils()
        # >>> time_utils.datetime_to_string(datetime.datetime(2023, 10, 1, 12, 34, 56))
        return datetime.strftime("%Y-%m-%d %H:%M:%S")

    def get_minutes(self, string_time1, string_time2):
        # Calculate the difference in minutes between two datetime strings.
        # return: int, the difference in minutes between the two datetime strings.
        # >>> time_utils = TimeUtils()
        # >>> time_utils.get_minutes("2023-10-01 12:30:00", "2023-10-01 12:45:00")
        time1 = self.string_to_datetime(string_time1)
        time2 = self.string_to_datetime(string_time2)
        return round((time2 - time1).seconds / 60)

    def get_format_time(self, year, month, day, hour, minute, second):
        # Create a datetime string from individual components (year, month, day, hour, minute, second).
        # param year: int, the year component.
        # param month: int, the month component.
        # param day: int, the day component.
        # param hour: int, the hour component.
        # param minute: int, the minute component.
        # param second: int, the second component.
        # return: str, the datetime string in "YYYY-MM-DD HH:MM:SS" format.
        # >>> time_utils = TimeUtils()
        # >>> time_utils.get_format_time(2023, 10, 1, 12, 34, 56)
        format = "%Y-%m-%d %H:%M:%S"
        time_item = datetime.datetime(year, month, day, hour, minute, second)
        return time_item.strftime(format)
```