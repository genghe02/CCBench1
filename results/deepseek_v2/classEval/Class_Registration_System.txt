```python
# This class manages student registration and class enrollment in a system.
class ClassRegistrationSystem:

    def __init__(self):
        # Initialize the system with empty lists for students and their registered classes.
        self.students = []
        self.students_registration_classes = {}

    def register_student(self, student):
        # Register a new student if not already registered.
        if student in self.students:
            return 0  # Student is already registered.
        else:
            self.students.append(student)
            return 1  # Student successfully registered.

    def register_class(self, student_name, class_name):
        # Register a class for a student.
        # param student_name: str, the name of the student to register the class for.
        # param class_name: str, the name of the class to be registered.
        # return: list, the list of classes the student is registered for.
        # >>> system = ClassRegistrationSystem()
        # >>> system.register_class('Alice', 'Math')
        # ['Math']
        # >>> system.register_class('Alice', 'Science')
        # ['Math', 'Science']
        if student_name in self.students_registration_classes:
            self.students_registration_classes[student_name].append(class_name)
        else:
            self.students_registration_classes[student_name] = [class_name]
        return self.students_registration_classes[student_name]

    def get_students_by_major(self, major):
        # Get a list of students by their major.
        # param major: str, the major to filter students by.
        # return: list, a list of student names in the specified major.
        # >>> system = ClassRegistrationSystem()
        # >>> system.students = [{'name': 'Alice', 'major': 'Math'}, {'name': 'Bob', 'major': 'Science'}]
        # >>> system.get_students_by_major('Math')
        # ['Alice']
        student_list = []
        for student in self.students:
            if student["major"] == major:
                student_list.append(student["name"])
        return student_list

    def get_all_major(self):
        # Get a list of all unique majors among registered students.
        # return: list, a list of all unique majors.
        # >>> system = ClassRegistrationSystem()
        # >>> system.students = [{'name': 'Alice', 'major': 'Math'}, {'name': 'Bob', 'major': 'Science'}]
        # >>> system.get_all_major()
        # ['Math', 'Science']
        major_list = []
        for student in self.students:
            if student["major"] not in major_list:
                major_list.append(student["major"])
        return major_list

    def get_most_popular_class_in_major(self, major):
        # Get the most popular class in a given major.
        # return: str, the name of the most popular class in the specified major.
        # >>> system = ClassRegistrationSystem()
        # >>> system.students = [{'name': 'Alice', 'major': 'Math'}, {'name': 'Bob', 'major': 'Math'}]
        # >>> system.students_registration_classes = {'Alice': ['Math', 'Science'], 'Bob': ['Math']}
        # >>> system.get_most_popular_class_in_major('Math')
        # 'Math'
        class_list = []
        for student in self.students:
            if student["major"] == major:
                class_list += self.students_registration_classes[student["name"]]
        most_popular_class = max(set(class_list), key=class_list.count)
        return most_popular_class
```