 <description for whole class>
"""
A class representing a shopping cart where items and their quantities and prices can be added, removed, and viewed.
"""

class ShoppingCart:
    def __init__(self):
        """
        Initialize an empty shopping cart.
        """
        self.items = {}

    def add_item(self, item: str, price: float, quantity: int = 1):
        """
        Add an item to the cart with the given price and quantity. If the item already exists, update its quantity.

        :param item: str, the name of the item
        :param price: float, the price of the item
        :param quantity: int, the quantity of the item to add (default: 1)
        :return: None
        """
        if item in self.items:
            self.items[item]['quantity'] += quantity
        else:
            self.items[item] = {'price': price, 'quantity': quantity}

    def remove_item(self, item: str, quantity: int = 1):
        """
        Remove the given quantity of an item from the cart if it exists.

        :param item: str, the name of the item
        :param quantity: int, the quantity of the item to remove (default: 1)
        :return: None
        """
        if item in self.items:
            self.items[item]['quantity'] -= quantity
        else:
            pass

    def view_items(self) -> dict:
        """
        Return the current state of the shopping cart as a dictionary.

        :return: dict, a dictionary containing the items, their prices, and their quantities
        """
        return self.items

    def total_price(self) -> float:
        """
        Calculate and return the total price of all items in the shopping cart.

        :return: float, the total price of all items in the shopping cart
        """
        return sum([item['quantity'] * item['price'] for item in self.items.values()])

    # Test cases
    # >>> cart = ShoppingCart()
    # >>> cart.add_item('apple', 0.5)
    # >>> cart.add_item('banana', 0.3)
    # >>> cart.add_item('apple', 0.6)
    # >>> cart.view_items()
    # {'apple': {'price': 0.6, 'quantity': 2}, 'banana': {'price': 0.3, 'quantity': 1}}
    # >>> cart.total_price()
    # 1.5
    # >>> cart.remove_item('apple')
    # >>> cart.view_items()
    # {'banana': {'price': 0.3, 'quantity': 1}, 'apple': {'price': 0.6, 'quantity': 1}}
    # >>> cart.total_price()
    # 0.9
    # >>> cart.remove_item('banana')
    # >>> cart.view_items()
    # {'apple': {'price': 0.6, 'quantity': 1}}
    # >>> cart.total_price()
    # 0.6