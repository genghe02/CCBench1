 <description for whole class>
"""
This is a class for managing the availability and booking of rooms in a hotel.
"""

class Hotel:
    def __init__(self, name, rooms):
        """
        Initialize the hotel object with its name and the initial number of available rooms.

        :param name: str, the name of the hotel
        :param rooms: dict, the initial number of available rooms for each room type
        """
        self.name = name
        self.available_rooms = rooms
        self.booked_rooms = {}

        """
        Initialize an empty dictionary to store the booked rooms for each room type.
        """

    def book_room(self, room_type, room_number, name):
        """
        Book a room of the specified type and number for the given guest.

        :param room_type: str, the type of the room to be booked
        :param room_number: int, the number of the room to be booked
        :param name: str, the name of the guest
        :return: str, a success message if the room was booked successfully, or False if the room was not available
        """
        if room_type not in self.available_rooms.keys():
            return "Room type not available."

        if room_number <= self.available_rooms[room_type]:
            self.booked_rooms[room_type][name] = room_number
            self.available_rooms[room_type] -= room_number
            return "Room booked successfully!"
        elif self.available_rooms[room_type]!= 0:
            return "All rooms of this type are already booked."
        else:
            return "No rooms of this type are available."

    def check_in(self, room_type, room_number, name):
        """
        Check in a guest to the room of the specified type and number.

        :param room_type: str, the type of the room
        :param room_number: int, the number of the room
        :param name: str, the name of the guest
        :return: str, a success message if the guest checked in successfully, or False if the room was not booked or the guest was already checked in
        """
        if room_type not in self.booked_rooms.keys():
            return "Room type not booked."
        if name not in self.booked_rooms[room_type]:
            return "Guest not booked in this room."
        if room_number!= self.booked_rooms[room_type][name]:
            return "Incorrect room number."
        self.booked_rooms[room_type].pop(name)
        return "Check-in successful!"

    def check_out(self, room_type, room_number):
        """
        Check out of a room of the specified type and number.

        :param room_type: str, the type of the room
        :param room_number: int, the number of the room
        :return: int, the number of rooms of the specified type that are now available
        """
        if room_type not in self.available_rooms:
            self.available_rooms[room_type] = room_number
            return room_number
        return 0

    def get_available_rooms(self, room_type):
        """
        Get the number of available rooms of the specified type.

        :param room_type: str, the type of the room
        :return: int, the number of available rooms of the specified type
        """
        return self.available_rooms.get(room_type, 0)