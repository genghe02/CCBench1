 <description for whole class>
"""
A utility class for handling cookies. It initializes with a file path for storing and loading cookies.
"""

class CookiesUtil:
    def __init__(self, cookies_file):
        """
        Initialize the CookiesUtil instance with the given file path for storing and loading cookies.

        :param cookies_file: str, the file path for storing and loading cookies
        """
        self.cookies_file = cookies_file
        self.cookies = None

    def get_cookies(self, response):
        """
        Extract cookies from the given response and save them to the instance variable.

        :param response: dict, the HTTP response containing cookies
        """
        self.cookies = response['cookies']
        self._save_cookies()

    def load_cookies(self):
        """
        Load cookies from the file and return them.

        :return: dict, the cookies stored in the file or an empty dictionary if the file does not exist
        """
        try:
            with open(self.cookies_file, 'r') as file:
                cookies_data = json.load(file)
                return cookies_data
        except FileNotFoundError:
            return {}

    def _save_cookies(self):
        """
        Save the cookies to the file.

        :return: bool, True if the cookies were saved successfully, False otherwise
        """
        try:
            with open(self.cookies_file, 'w') as file:
                json.dump(self.cookies, file)
            return True
        except:
            return False

    def set_cookies(self, request):
        """
        Set cookies in the given request.

        :param request: dict, the HTTP request to set cookies in
        """
        request['cookies'] = '; '.join([f'{key}={value}' for key, value in self.cookies.items()])