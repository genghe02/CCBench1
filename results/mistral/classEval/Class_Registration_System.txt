 class ClassRegistrationSystem:

 # A system for managing student registrations and their classes.
 def __init__(self):
 # Initialize an empty list to store registered students and a dictionary to store students' registrations.
 self.students = []
 self.students_registration_classes = {}

 def register_student(self, student):
 # Register a new student to the system.
 # param student: dict, containing student's name and major.
 if student in self.students:
 return 0
 else:
 self.students.append(student)
 return 1

 def register_class(self, student_name, class_name):
 # Register a class for a student.
 # param student_name: str, name of the student.
 # param class_name: str, name of the class.
 if student_name not in self.students:
 return "Student not found."
 self.students_registration_classes.setdefault(student_name, [])
 self.students_registration_classes[student_name].append(class_name)
 return self.students_registration_classes[student_name]

 def get_students_by_major(self, major):
 # Get a list of students with the given major.
 # param major: str, the major of the students to be fetched.
 student_list = []
 for student in self.students:
 if student["major"] == major:
 student_list.append(student["name"])
 return student_list

 def get_all_major(self):
 # Get a list of all unique majors of the students.
 # return: list, containing all unique majors.
 major_list = []
 for student in self.students:
 if student["major"] not in major_list:
 major_list.append(student["major"])
 return major_list

 def get_most_popular_class_in_major(self, major):
 # Get the most popular class in the given major.
 # param major: str, the major of the students.
 # return: str, the name of the most popular class.
 class_list = []
 for student in self.students:
 if student["major"] == major:
 class_list += self.students_registration_classes[student["name"]]
 popular_class = max(set(class_list), key=class_list.count)
 return popular_class

 # Test cases:
 # >>> system = ClassRegistrationSystem()
 # >>> student1 = {"name": "John", "major": "CS"}
 # >>> student2 = {"name": "Jane", "major": "CS"}
 # >>> system.register_student(student1)
 # >>> system.register_student(student2)
 # >>> system.register_class(student1["name"], "Data Structures")
 # >>> system.register_class(student2["name"], "Algorithms")
 # >>> print(system.get_students_by_major("CS"))
 # ['John', 'Jane']
 # >>> print(system.get_all_major())
 # ['CS']
 # >>> print(system.get_most_popular_class_in_major("CS"))
 # 'Data Structures'