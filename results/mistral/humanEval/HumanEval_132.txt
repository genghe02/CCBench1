 def is\_nested(string):
 # Check if the given string is valid JSON with at least two nested levels.
 # This function uses a simple approach to check for nested structures by looking for balanced opening and closing brackets.

 opening\_bracket\_index = []
 closing\_bracket\_index = []

 for i in range(len(string)):
 if string[i] == '[':
 opening\_bracket\_index.append(i)
 else:
 closing\_bracket\_index.append(i)

 closing\_bracket\_index.reverse()
 cnt = 0
 i = 0
 l = len(closing\_bracket\_index)

 # Check each opening bracket and its corresponding closing bracket for balance.
 for idx in opening\_bracket\_index:
 if i < l and idx < closing\_bracket\_index[i]:
 cnt += 1
 i += 1

 return cnt >= 2