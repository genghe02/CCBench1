 from typing import List


def intersperse(numbers: List[int], delimeter: int) -> List[int]:
    # This function takes a list of integers and an integer delimiter as input,
    # and returns a new list where each element of the input list is followed by the delimiter,
    # except for the last element which is not followed by the delimiter.

    if not numbers:
        # If the input list is empty, return an empty list as the result.
        return []

    result = []

    # Iterate through the input list up to the second last element,
    # and append each element followed by the delimiter to the result list.
    for n in numbers[:-1]:
        result.append(n)
        result.append(delimeter)

    # Append the last element of the input list to the result list without adding the delimiter.
    result.append(numbers[-1])

    # Return the result list as the output.
    return result

    <some test cases for the function>
    >>> intersperse([1, 2, 3], 4)
    [1, 4, 2, 4, 3]

    >>> intersperse([], 5)
    []

    >>> intersperse([1], 4)
    [1]

    >>> intersperse([1, 2], 3)
    [1, 3, 2]

    >>> intersperse([1, 2, 3], 2)
    [1, 2, 2, 3]

    >>> intersperse([1, 2, 3, 4], 1)
    [1, 2, 1, 3, 1, 4]