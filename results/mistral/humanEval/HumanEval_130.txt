 def tri(n):
 # Generate the nth triangle number using recursive calculation and list appending.
 # n: int, the index of the triangle number to be calculated

 if n == 0:
 # Base case: the first triangle number is 1
 return [1]

 my_tri = [1, 3]
 # Initialize the list with the first two triangle numbers

 for i in range(2, n + 1):
 # Iterate from the second triangle number to the desired triangle number

 if i % 2 == 0:
 # If the index is even, append the average of the previous two triangle numbers
 my_tri.append(my_tri[i - 1] + my_tri[i - 2])
 ) else:
 # If the index is odd, append the sum of the previous two triangle numbers and the current index divided by 2
 my_tri.append(my_tri[i - 1] + my_tri[i - 2] + (i + 3) // 2)
 )

 return my_tri

 # Test cases:
 >>> tri(5)
 [1, 3, 6, 11, 16, 21, 28, 36, 45, 55]
 >>> tri(10)
 [1, 3, 6, 11, 16, 21, 28, 36, 45, 55, 66, 80, 91, 102, 113, 125, 138, 151]