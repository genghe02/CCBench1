 def closest_integer(value):
    # This function takes a string value as an argument and returns the closest integer to it.
    # It handles cases where the value is a float with a single decimal point and rounds it to the nearest integer.

    # Test cases:
    # >>> closest_integer('1.5')
    # 2
    # >>> closest_integer('-1.5')
    # -2
    # >>> closest_integer('1')
    # 1
    # >>> closest_integer('0')
    # 0
    # >>> closest_integer('-0.5')
    # -1
    # >>> closest_integer('2.8')
    # 3
    # >>> closest_integer('-2.8')
    # -3

    from math import floor, ceil

    # Remove trailing zeros if the value has a single decimal point
    if value.count('.') == 1:
        value = value.rstrip('0').rstrip('.')

    # Convert the string value to a float number
    num = float(value)

    # If the value ends with '0.5', round it to the nearest integer based on its sign
    if value[-2:] == '.5':
        if num > 0:
            res = ceil(num)
        else:
            res = floor(num)
    # Otherwise, round the number to the nearest integer
    elif len(value) > 0:
        res = int(round(num))
    # If the value is an empty string, return 0
    else:
        res = 0

    return res