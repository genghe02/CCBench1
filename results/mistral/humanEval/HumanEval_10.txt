 def is_palindrome(string: str) -> bool:
    """
    Check if a given string is a palindrome. A palindrome is a string that reads the same backward as forward.

    :param string: str, the input string
    :return: bool, True if the string is a palindrome, False otherwise
    """
    return string == string[::-1]

def make_palindrome(string: str) -> str:
    """
    Generate the nearest palindrome of a given string.

    :param string: str, the input string
    :return: str, the nearest palindrome of the input string
    :raises: TypeError, if the input is not a string

    <some test cases for the function>
    >>> make_palindrome('racecar')
    'racecar'
    >>> make_palindrome('hello')
    'helloolleh'
    >>> make_palindrome('A man a plan a canal Panama')
    'A man a plan a canal Panama Panama'
    """
    if not isinstance(string, str):
        raise TypeError('Input must be a string')

    if not string:
        return ''

    beginning_of_suffix = 0

    while not is_palindrome(string[beginning_of_suffix:]):
        beginning_of_suffix += 1

    return string + string[:beginning_of_suffix][::-1]