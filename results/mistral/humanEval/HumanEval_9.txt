 from typing import List, Tuple


def rolling_max(numbers: List[int]) -> List[int]:
    # This function computes the rolling maximum of a list of numbers

    running_max = None
    result = []

    # Iterate through each number in the input list
    for n in numbers:
        # If running maximum is not defined, set it to the current number
        if running_max is None:
            running_max = n
        # Otherwise, update the running maximum to be the maximum of the current number and the running maximum
        else:
            running_max = max(running_max, n)

        # Append the running maximum to the result list
        result.append(running_max)

    # Return the result list containing the rolling maximums
    return result

    <test cases>
    >>> rolling_max([1, 2, 3, 4, 5])
    [1, 1, 2, 3, 4, 5]

    >>> rolling_max([1, 2, 3, 4, 5, 5])
    [1, 1, 2, 3, 4, 5, 5]

    >>> rolling_max([1, 2, 3, 4, 5, 5, 5])
    [1, 1, 2, 3, 4, 5, 5, 5]

    >>> rolling_max([1, 2, 3, 4, 5, 5, 5, 6])
    [1, 1, 2, 3, 4, 5, 5, 5, 6]

    >>> rolling_max([1, 2, 3, 4, 5, 5, 5, 6, 7])
    [1, 1, 2, 3, 4, 5, 5, 6, 6, 7]

    >>> rolling_max([1, 2, 3, 4, 5, 5, 5, 6, 7, 8])
    [1, 1, 2, 3, 4, 5, 5, 6, 6, 7, 7, 8]