 from typing import List


def string_xor(a: str, b: str) -> str:
    # This function computes the XOR bitwise operation between two strings 'a' and 'b' of equal length.
    # It achieves this by performing the XOR operation on each corresponding pair of bits using a helper function 'xor'.
    # The helper function 'xor' takes two bits as input and returns the XOR result as a string '0' or '1'.
    # The final result is obtained by joining all the XOR results using the 'join' method.

    def xor(i, j):
        # XOR operation between two bits
        if i == j:
            return '0'
        else:
            return '1'

    return ''.join(xor(ord(x) % 2, ord(y) % 2) if x else '0' for x, y in zip(a, b))

    <some test cases for the function>
    >>> string_xor('1010', '1111')
    '0101'
    >>> string_xor('0101', '1010')
    '1110'
    >>> string_xor('1111', '0000')
    '1111'
    >>> string_xor('', '1111')
    '1111'