 def fib4(n: int):
    # This function calculates the nth number in the Fibonacci sequence using recursion with a list to store the previous numbers.
    <some test cases for the function>
    results = [0, 0, 2, 0]
    if n < 4:
        # Return the result if the input is less than 4, which are the first four numbers in the Fibonacci sequence.
        return results[n]

    for _ in range(4, n + 1):
        # Append the sum of the last four numbers in the list and pop the first number to maintain the list size.
        results.append(results[-1] + results[-2] + results[-3] + results[-4])
        results.pop(0)

    # Return the last number in the list, which is the result.
    return results[-1]

 <some test cases for the function>
 >>> fib4(0)
 0
 >>> fib4(1)
 0
 >>> fib4(2)
 1
 >>> fib4(3)
 2
 >>> fib4(4)
 3
 >>> fib4(5)
 5
 >>> fib4(10)
 55
 >>> fib4(20)
