```python
import pandas as pd
import numpy as np

df = pd.DataFrame({'a': [4, 1, 7, 3], 'b': [5, 2, 9, 6], 'c': [6, 3, 2, 8]})
# This code creates a DataFrame with three columns 'a', 'b', and 'c', each containing an array of integers.
# It then filters out values in the DataFrame that are greater than the mean of each respective column.
# The resulting DataFrame has values that survive the filtering and uses the apply method to reindex
# from the original DataFrame, converting NaN values to Series objects, effectively dropping them.
# This allows for handling of NaN values separately instead of throwing out entire rows.
# 
# Test cases:
# Assuming the initial DataFrame is:
#    a  b  c
# 0  4  5  6
# 1  1  2  3
# 2  7  9  2
# 3  3  6  8
# 
# Applying the filtering:
# - The mean of column 'a' is 3.75, so it will retain 4 and 7.
# - The mean of column 'b' is 5.5, so it will retain 6 and 9.
# - The mean of column 'c' is 4.75, so it will retain 6 and 8.
# 
# The expected final filtered DataFrame would look like the following (after apply and dropna):
#       a    b    c
# 0  4.0  5.0  6.0
# 2  7.0  9.0  NaN
# 3  NaN  6.0  8.0
```