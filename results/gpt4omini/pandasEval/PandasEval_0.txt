```python
import pandas as pd
import numpy as np

def drop_rows_col_nan(df: pd.DataFrame, col_name: str) -> pd.DataFrame:
    """ Remove rows from the DataFrame where the specified column contains NaN values.
    This function is useful for data cleaning, ensuring that the resulting DataFrame only contains
    rows with valid entries in the specified column. If the column does not exist in the DataFrame,
    an error will be raised.
    
    >>> df = pd.DataFrame({'A': [1, 2, np.nan], 'B': [4, np.nan, 6]})
    >>> drop_rows_col_nan(df, 'A')
       A    B
    0  1.0  4.0
    1  2.0  NaN
    
    >>> drop_rows_col_nan(df, 'B')
       A    B
    0  1.0  4.0
    2  NaN  6.0

    >>> drop_rows_col_nan(df, 'C')  # should raise a KeyError
    Traceback (most recent call last):
        ...
    KeyError: 'C'
    """
    return df.dropna(subset=[col_name])
```