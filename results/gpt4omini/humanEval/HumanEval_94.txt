```python
def skjkasdkd(lst):
    # Find the sum of the digits of the largest prime number in the given list.
    
    # Test cases for the function
    # Example 1: Input list with positive integers that includes prime numbers
    # Input: [10, 5, 7, 11], Expected Output: 2 (largest prime is 11, sum of digits is 1 + 1 = 2)
    
    # Example 2: Input list with no prime numbers
    # Input: [4, 6, 8], Expected Output: 0 (no prime numbers found)
    
    # Example 3: Input list with a single prime number
    # Input: [13], Expected Output: 4 (largest prime is 13, sum of digits is 1 + 3 = 4)
    
    # Example 4: Input list with negative numbers and non-prime numbers
    # Input: [-2, -3, -5], Expected Output: 0 (no prime numbers found)
    
    def isPrime(n):
        # Check if a number is prime by testing divisibility.
        for i in range(2, int(n**0.5) + 1):
            if n % i == 0:
                return False

        return True
    
    maxx = 0
    i = 0
    while i < len(lst):
        if (lst[i] > maxx and isPrime(lst[i])):
            maxx = lst[i]
        i += 1
    
    result = sum(int(digit) for digit in str(maxx))
    return result
```