```python
def by_length(arr):
    # Convert an array of integers into their corresponding string representations,
    # sorted in descending order based on the integer values.
    
    # :param arr: list of int, an array of integers to be converted and sorted.
    # :return: list of str, a list of string representations of the integers in descending order.

    # Define a dictionary mapping integers to their string equivalents.
    dic = {
        1: "One",
        2: "Two",
        3: "Three",
        4: "Four",
        5: "Five",
        6: "Six",
        7: "Seven",
        8: "Eight",
        9: "Nine",
    }
    
    # Sort the input array in descending order.
    sorted_arr = sorted(arr, reverse=True)
    new_arr = []
    
    # Convert integers to strings based on the dictionary and collect them.
    for var in sorted_arr:
        try:
            new_arr.append(dic[var])  # Append the string representation of the integer.
        except:
            pass  # Ignore any integers not in the dictionary.
    
    return new_arr  # Return the list of string representations.

# Test cases for the function
# >>> by_length([3, 1, 4, 2]) # returns ['Four', 'Three', 'Two', 'One']
# >>> by_length([5, 6, 7])    # returns ['Seven', 'Six', 'Five']
# >>> by_length([9, 8, 10])   # returns ['Nine', 'Eight'] (10 is ignored because it's not in the dictionary)
# >>> by_length([1, 1, 3])    # returns ['Three', 'One', 'One']
```