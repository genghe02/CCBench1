```python
def is_multiply_prime(a):
    # Check if the given integer 'a' can be expressed as the product of three prime numbers.
    # If it can, return True; otherwise, return False.
    # param a: int, the integer to check for being a product of three primes
    # return: bool, True if 'a' is a product of three prime numbers, False otherwise
    # some test cases for the function:
    # >>> is_multiply_prime(30)  # 30 = 2 * 3 * 5, should return True
    # >>> is_multiply_prime(18)  # 18 = 2 * 3 * 3, should return True
    # >>> is_multiply_prime(7)   # 7 is prime, should return False
    # >>> is_multiply_prime(1)   # 1 cannot be expressed as a product of primes, should return False

    def is_prime(n):
        # Determine if a number is prime by checking divisibility from 2 to n-1.
        for j in range(2, n):
            if n % j == 0:
                return False
        return True

    for i in range(2, 101):
        if not is_prime(i): continue
        for j in range(2, 101):
            if not is_prime(j): continue
            for k in range(2, 101):
                if not is_prime(k): continue
                if i * j * k == a: return True
    return False
```