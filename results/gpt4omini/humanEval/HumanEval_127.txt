```python
def intersection(interval1, interval2):
    """
    This function checks whether the intersection of two intervals is of a prime length.

    :param interval1: tuple, the first interval represented as a pair of integers (start, end)
    :param interval2: tuple, the second interval represented as a pair of integers (start, end)
    :return: str, "YES" if the intersection of the intervals has a prime length, "NO" otherwise

    Test cases for the function:
    intersection((1, 2), (2, 3)) ==> "NO"   # The intersection is empty and has length 0.
    intersection((-1, 1), (0, 4)) ==> "NO"   # The intersection is [0, 1], which has length 1 (not prime).
    intersection((-3, -1), (-5, 5)) ==> "YES" # The intersection is [-3, -1], which has length 2 (prime).
    """
    def is_prime(num):
        if num == 1 or num == 0:
            return False
        if num == 2:
            return True
        for i in range(2, num):
            if num % i == 0:
                return False
        return True

    l = max(interval1[0], interval2[0])
    r = min(interval1[1], interval2[1])
    length = r - l
    if length > 0 and is_prime(length):
        return "YES"
    return "NO"
```