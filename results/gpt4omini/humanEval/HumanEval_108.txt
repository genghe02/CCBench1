```python
def count_nums(arr):
    # Count the number of elements in the array whose digit sum is positive.
    # This function filters the elements based on their digit sum and counts the valid ones.
    # param arr: list, the input array of integers to process
    # return: int, the count of integers with a positive digit sum
    # some test cases for the function:
    # >>> count_nums([12, -21, 30, -4])  # returns 1, because only 12 has a positive digit sum (1+2=3)
    # >>> count_nums([-1, -2, -3, -4])   # returns 0, all sums are negative
    # >>> count_nums([0, 1, 2, 3])        # returns 3, the digit sums are 0, 1, 2, and 3 respectively
    # >>> count_nums([10, 20, 30])        # returns 3, digit sums are 1, 2, 3 respectively, all positive
    def digits_sum(n):
        # Calculate the sum of digits of an integer, handling negative values correctly.
        neg = 1
        if n < 0: n, neg = -1 * n, -1 
        n = [int(i) for i in str(n)]
        n[0] = n[0] * neg
        return sum(n)

    return len(list(filter(lambda x: x > 0, [digits_sum(i) for i in arr])))
```