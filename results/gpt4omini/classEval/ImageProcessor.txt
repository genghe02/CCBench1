```python
from PIL import Image, ImageEnhance, ImageChops

# This class provides methods to load, save, resize, rotate, and adjust the brightness of images.
class ImageProcessor:
    def __init__(self):
        # Initialize the ImageProcessor with no image loaded.
        self.image = None

    def load_image(self, image_path):
        # Load an image from the specified file path.
        # :param image_path: str, the file path to the image to be loaded.
        # >>> processor = ImageProcessor()
        # >>> processor.load_image('example.jpg')  # Load an image successfully.
        # >>> processor.load_image('nonexistent.jpg')  # Handle case where the image does not exist.
        self.image = Image.open(image_path)

    def save_image(self, save_path):
        # Save the currently loaded image to the specified file path.
        # :param save_path: str, the file path where the image will be saved.
        # >>> processor = ImageProcessor()
        # >>> processor.load_image('example.jpg')
        # >>> processor.save_image('saved_example.jpg')  # Save image successfully.
        # >>> processor.save_image('')  # Handle case where save path is empty.
        if self.image:
            self.image.save(save_path)

    def resize_image(self, width, height):
        # Resize the loaded image to the specified dimensions.
        # :param width: int, the new width for resizing the image.
        # :param height: int, the new height for resizing the image.
        # >>> processor = ImageProcessor()
        # >>> processor.load_image('example.jpg')
        # >>> processor.resize_image(100, 100)  # Resize the image to 100x100 pixels successfully.
        # >>> processor.resize_image(0, 100)  # Handle case where width is 0.
        if self.image:
            self.image = self.image.resize((width, height))

    def rotate_image(self, degrees):
        # Rotate the loaded image by a specified number of degrees.
        # :param degrees: int or float, the angle by which to rotate the image.
        # >>> processor = ImageProcessor()
        # >>> processor.load_image('example.jpg')
        # >>> processor.rotate_image(90)  # Rotate the image 90 degrees clockwise successfully.
        # >>> processor.rotate_image(-180)  # Rotate the image -180 degrees successfully.
        if self.image:
            self.image = self.image.rotate(degrees)

    def adjust_brightness(self, factor):
        # Adjust the brightness of the loaded image by a certain factor.
        # :param factor: float, the factor by which to adjust the brightness (1.0 means no change).
        # >>> processor = ImageProcessor()
        # >>> processor.load_image('example.jpg')
        # >>> processor.adjust_brightness(1.5)  # Increase brightness successfully.
        # >>> processor.adjust_brightness(0.0)  # Adjust brightness to 0 (dark image).
        if self.image:
            enhancer = ImageEnhance.Brightness(self.image)
            self.image = enhancer.enhance(factor)
```