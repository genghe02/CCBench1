```python
import datetime
import time

# This class provides utility functions to work with date and time.
class TimeUtils:

    def __init__(self):
        # Initializes the class with the current datetime.
        self.datetime = datetime.datetime.now()

    def get_current_time(self):
        # Retrieves the current time in the format of "Hour:Minute:Second".
        # return: str, the current time formatted as HH:MM:SS
        # Test cases:
        # >>> time_util = TimeUtils()
        # >>> time_util.get_current_time()  # returns current time string in HH:MM:SS format
        format = "%H:%M:%S"
        return self.datetime.strftime(format)

    def get_current_date(self):
        # Retrieves the current date in the format of "Year-Month-Day".
        # return: str, the current date formatted as YYYY-MM-DD
        # Test cases:
        # >>> time_util = TimeUtils()
        # >>> time_util.get_current_date()  # returns current date string in YYYY-MM-DD format
        format = "%Y-%m-%d"
        return self.datetime.strftime(format)

    def add_seconds(self, seconds):
        # Adds a specified number of seconds to the current datetime.
        # param seconds: int, the number of seconds to add to the current datetime
        # return: str, the new time formatted as HH:MM:SS after adding the seconds
        # Test cases:
        # >>> time_util = TimeUtils()
        # >>> time_util.add_seconds(60)  # returns current time + 60 seconds in HH:MM:SS format
        # >>> time_util.add_seconds(-120)  # returns current time - 120 seconds in HH:MM:SS format
        new_datetime = self.datetime + datetime.timedelta(seconds=seconds)
        format = "%H:%M:%S"
        return new_datetime.strftime(format)

    def string_to_datetime(self, string):
        # Converts a datetime string into a datetime object.
        # param string: str, the datetime string to convert, expected format "YYYY-MM-DD HH:MM:SS"
        # return: datetime, the corresponding datetime object of the input string
        # Test cases:
        # >>> time_util = TimeUtils()
        # >>> time_util.string_to_datetime("2023-10-12 15:30:00")  # returns datetime object for the given string
        return datetime.datetime.strptime(string, "%Y-%m-%d %H:%M:%S")

    def datetime_to_string(self, datetime):
        # Converts a datetime object into a formatted string.
        # param datetime: datetime, the datetime object to convert
        # return: str, the formatted string of the input datetime object in "YYYY-MM-DD HH:MM:SS"
        # Test cases:
        # >>> time_util = TimeUtils()
        # >>> dt = datetime.datetime(2023, 10, 12, 15, 30, 0)
        # >>> time_util.datetime_to_string(dt)  # returns "2023-10-12 15:30:00"
        return datetime.strftime("%Y-%m-%d %H:%M:%S")

    def get_minutes(self, string_time1, string_time2):
        # Calculates the difference in minutes between two datetime strings.
        # return: int, the difference in minutes between the two times
        # Test cases:
        # >>> time_util = TimeUtils()
        # >>> time_util.get_minutes("2023-10-12 15:30:00", "2023-10-12 15:45:00")  # returns 15
        # >>> time_util.get_minutes("2023-10-12 15:30:00", "2023-10-12 16:00:00")  # returns 30
        time1 = self.string_to_datetime(string_time1)
        time2 = self.string_to_datetime(string_time2)
        return round((time2 - time1).seconds / 60)

    def get_format_time(self, year, month, day, hour, minute, second):
        # Generates a formatted datetime string from individual time components.
        # param year: int, the year
        # param month: int, the month (1 to 12)
        # param day: int, the day of the month (1 to 31)
        # param hour: int, the hour (0 to 23)
        # param minute: int, the minute (0 to 59)
        # param second: int, the second (0 to 59)
        # return: str, the formatted time as "YYYY-MM-DD HH:MM:SS"
        # Test cases:
        # >>> time_util = TimeUtils()
        # >>> time_util.get_format_time(2023, 10, 12, 15, 30, 0)  # returns "2023-10-12 15:30:00"
        format = "%Y-%m-%d %H:%M:%S"
        time_item = datetime.datetime(year, month, day, hour, minute, second)
        return time_item.strftime(format)
```