```python
class AutomaticGuitarSimulator:
    """
    This class simulates the automatic playing of guitar chords based on input text instructions.
    """
    def __init__(self, text) -> None:
        """
        Initializes the simulator with the provided play text.
        
        :param text: str, the text that contains chord and tuning instructions for the guitar.
        """
        self.play_text = text

    def interpret(self, display=False):
        """
        Interprets the play text into a structured format of chords and tunes.
        
        :param display: bool, if True, it will display the chords and tunes while interpreting.
        :return: list of dicts, each containing 'Chord' and 'Tune' extracted from the play text.
        
        >>> simulator = AutomaticGuitarSimulator("C4 D5 E6")
        >>> simulator.interpret()
        [{'Chord': 'C', 'Tune': '4'}, {'Chord': 'D', 'Tune': '5'}, {'Chord': 'E', 'Tune': '6'}]
        >>> simulator.interpret(display=True)
        Normal Guitar Playing -- Chord: C, Play Tune: 4
        Normal Guitar Playing -- Chord: D, Play Tune: 5
        Normal Guitar Playing -- Chord: E, Play Tune: 6
        >>> simulator.interpret("")
        >>> simulator.interpret("G3 A4")
        [{'Chord': 'G', 'Tune': '3'}, {'Chord': 'A', 'Tune': '4'}]
        """
        if len(self.play_text) == 0:
            return
        else:
            play_list = []
            play_segs = self.play_text.split(" ")
            for play_seg in play_segs:
                pos = 0
                for ele in play_seg:
                    if ele.isalpha():
                        pos += 1
                        continue
                    break
                play_chord = play_seg[0:pos]
                play_value = play_seg[pos:]
                play_list.append({'Chord': play_chord, 'Tune': play_value})
                if display:
                    self.display(play_chord, play_value)
            return play_list

    def display(self, key, value):
        """
        Displays the chord and tuning information in a readable format.
        
        :param key: str, the chord being played.
        :param value: str, the tune associated with the chord.
        :return: str, a formatted string showing the chord and tune.
        
        >>> simulator = AutomaticGuitarSimulator("C4")
        >>> simulator.display("C", "4")
        'Normal Guitar Playing -- Chord: C, Play Tune: 4'
        """
        return "Normal Guitar Playing -- Chord: %s, Play Tune: %s" % (key, value)
```