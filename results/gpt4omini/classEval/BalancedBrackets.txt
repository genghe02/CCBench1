```python
class BalancedBrackets:
    """
    This class is designed to check for balanced brackets in a given expression.
    """

    def __init__(self, expr):
        """
        Initialize the BalancedBrackets class with an expression to evaluate.
        
        :param expr: str, the expression containing brackets to be checked.
        """
        self.stack = []
        self.left_brackets = ["(", "{", "["]
        self.right_brackets = [")", "}", "]"]
        self.expr = expr

    def clear_expr(self):
        """
        Remove all characters from the expression that are not brackets.
        
        :return: None, this method modifies the expr attribute in place.
        """
        self.expr = ''.join(c for c in self.expr if (c in self.left_brackets or c in self.right_brackets))

    def check_balanced_brackets(self):
        """
        Check if the brackets in the expression are balanced.
        
        :return: bool, True if the brackets are balanced, False otherwise.
        """
        self.clear_expr()
        for Brkt in self.expr:
            if Brkt in self.left_brackets:
                self.stack.append(Brkt)
            else:
                if not self.stack:
                    return False
                Current_Brkt = self.stack.pop()
                if Current_Brkt == "(":
                    if Brkt != ")":
                        return False
                if Current_Brkt == "{":
                    if Brkt != "}":
                        return False
                if Current_Brkt == "[":
                    if Brkt != "]":
                        return False
        if self.stack:
            return False
        return True

# Some test cases for the function
# >>> checker = BalancedBrackets("({[]})")
# >>> checker.check_balanced_brackets()
# True
#
# >>> checker = BalancedBrackets("({[})")
# >>> checker.check_balanced_brackets()
# False
#
# >>> checker = BalancedBrackets("[{()}]")
# >>> checker.check_balanced_brackets()
# True
#
# >>> checker = BalancedBrackets("[(])")
# >>> checker.check_balanced_brackets()
# False
#
# >>> checker = BalancedBrackets("{[()()]}")
# >>> checker.check_balanced_brackets()
# True
```