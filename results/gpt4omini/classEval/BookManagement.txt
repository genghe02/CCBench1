```python
# This class manages a collection of books, allowing adding, removing, and viewing book quantities in the inventory.
class BookManagement:
    def __init__(self):
        # Initialize the book inventory as an empty dictionary to store book titles and their quantities.
        self.inventory = {}

    def add_book(self, title, quantity=1):
        # Add a specified quantity of a book to the inventory; if the book already exists, increase the quantity.
        # param title: str, the title of the book to be added
        # param quantity: int, the number of copies to add (default is 1)
        if title in self.inventory:
            self.inventory[title] += quantity
        else:
            self.inventory[title] = quantity

    def remove_book(self, title, quantity):
        # Remove a specified quantity of a book from the inventory; it raises an error if the book is not available or quantity is insufficient.
        # param title: str, the title of the book to be removed
        # param quantity: int, the number of copies to remove
        if title not in self.inventory or self.inventory[title] < quantity:
            raise False
        self.inventory[title] -= quantity
        if self.inventory[title] == 0:
            del (self.inventory[title])

    def view_inventory(self):
        # Return the current inventory of books with their quantities.
        # return: dict, a dictionary containing book titles as keys and their quantities as values
        # Test cases: 
        # >>> manager = BookManagement()
        # >>> manager.add_book('Harry Potter', 3)
        # >>> manager.view_inventory()  # Expected: {'Harry Potter': 3}
        return self.inventory

    def view_book_quantity(self, title):
        # Retrieve the quantity of a specific book in the inventory.
        # param title: str, the title of the book to check the quantity
        # return: int, the number of copies of the specified book, or 0 if the book is not in inventory
        # Test cases: 
        # >>> manager = BookManagement()
        # >>> manager.add_book('Harry Potter', 3)
        # >>> manager.view_book_quantity('Harry Potter')  # Expected: 3
        # >>> manager.view_book_quantity('The Hobbit')  # Expected: 0
        if title not in self.inventory:
            return 0
        return self.inventory[title]
```