```python
class SignInSystem:
    # This class manages user sign-up and sign-in functionality along with status checks for users.
    def __init__(self):
        # Initialize the user storage as an empty dictionary to keep track of user sign-in statuses.
        self.users = {}

    def add_user(self, username):
        # Add a new user to the system if the username does not already exist.
        # param username: str, the username to be added to the system.
        # return: bool, True if the user was added successfully, False if the username already exists.
        # Test cases:
        # >>> system = SignInSystem()
        # >>> system.add_user('user1')  # Should return True
        # >>> system.add_user('user1')  # Should return False
        if username in self.users:
            return False
        else:
            self.users[username] = False
            return True

    def sign_in(self, username):
        # Sign in a user if they have been previously added.
        # param username: str, the username of the user trying to sign in.
        # return: bool, True if sign-in was successful, False if the user does not exist.
        # Test cases:
        # >>> system = SignInSystem()
        # >>> system.add_user('user1')
        # >>> system.sign_in('user1')  # Should return True
        # >>> system.sign_in('user2')  # Should return False
        if username not in self.users:
            return False
        else:
            self.users[username] = True
            return True

    def check_sign_in(self, username):
        # Check whether a specific user is currently signed in.
        # param username: str, the username of the user whose sign-in status is being checked.
        # return: bool, True if the user is signed in, False if the user does not exist or is not signed in.
        # Test cases:
        # >>> system = SignInSystem()
        # >>> system.add_user('user1')
        # >>> system.check_sign_in('user1')  # Should return False
        # >>> system.sign_in('user1')
        # >>> system.check_sign_in('user1')  # Should return True
        if username not in self.users:
            return False
        else:
            if self.users[username]:
                return True
            else:
                return False

    def all_signed_in(self):
        # Check if all users in the system are signed in.
        # return: bool, True if all users are signed in, False otherwise.
        # Test cases:
        # >>> system = SignInSystem()
        # >>> system.add_user('user1')
        # >>> system.add_user('user2')
        # >>> system.all_signed_in()  # Should return False
        # >>> system.sign_in('user1')
        # >>> system.sign_in('user2')
        # >>> system.all_signed_in()  # Should return True
        if all(self.users.values()):
            return True
        else:
            return False

    def all_not_signed_in(self):
        # Get a list of all users who are not signed in.
        # return: list, a list of usernames of users that are not signed in.
        # Test cases:
        # >>> system = SignInSystem()
        # >>> system.add_user('user1')
        # >>> system.add_user('user2')
        # >>> system.all_not_signed_in()  # Should return ['user1', 'user2']
        # >>> system.sign_in('user1')
        # >>> system.all_not_signed_in()  # Should return ['user2']
        not_signed_in_users = []
        for username, signed_in in self.users.items():
            if not signed_in:
                not_signed_in_users.append(username)
        return not_signed_in_users
```