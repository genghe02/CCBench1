```python
class ComplexCalculator:
    # This is a class for performing complex number arithmetic operations: addition, subtraction, multiplication, and division.

    def __init__(self):
        pass

    @staticmethod
    def add(c1, c2):
        # Add two complex numbers and return their sum.
        # :param c1: complex, the first complex number
        # :param c2: complex, the second complex number
        # :return: complex, the sum of c1 and c2
        # >>> ComplexCalculator.add(complex(1, 2), complex(3, 4)) 
        # (4+6j)
        # >>> ComplexCalculator.add(complex(-1, -1), complex(1, 1)) 
        # (0+0j)
        real = c1.real + c2.real
        imaginary = c1.imag + c2.imag
        answer = complex(real, imaginary)
        return answer

    @staticmethod
    def subtract(c1, c2):
        # Subtract the second complex number from the first and return the result.
        # :param c1: complex, the first complex number
        # :param c2: complex, the second complex number
        # :return: complex, the difference of c1 and c2
        # >>> ComplexCalculator.subtract(complex(3, 4), complex(1, 2))
        # (2+2j)
        # >>> ComplexCalculator.subtract(complex(1, 2), complex(1, 2))
        # (0+0j)
        real = c1.real - c2.real
        imaginary = c1.imag - c2.imag
        return complex(real, imaginary)

    @staticmethod
    def multiply(c1, c2):
        # Multiply two complex numbers and return their product.
        # :param c1: complex, the first complex number
        # :param c2: complex, the second complex number
        # :return: complex, the product of c1 and c2
        # >>> ComplexCalculator.multiply(complex(1, 2), complex(3, 4))
        # (-5+10j)
        # >>> ComplexCalculator.multiply(complex(0, 1), complex(0, 1))
        # (-1+0j)
        real = c1.real * c2.real - c1.imag * c2.imag
        imaginary = c1.real * c2.imag + c1.imag * c2.real
        return complex(real, imaginary)

    @staticmethod
    def divide(c1, c2):
        # Divide the first complex number by the second and return the result.
        # :param c1: complex, the numerator complex number
        # :param c2: complex, the denominator complex number
        # :return: complex, the quotient of c1 divided by c2
        # >>> ComplexCalculator.divide(complex(1, 2), complex(3, 4))
        # (0.44+0.08j)
        # >>> ComplexCalculator.divide(complex(1, 2), complex(0, 0))
        # Raises ZeroDivisionError
        denominator = c2.real**2 + c2.imag**2
        if denominator == 0:
            raise ZeroDivisionError("division by zero for complex numbers")
        real = (c1.real * c2.real + c1.imag * c2.imag) / denominator
        imaginary = (c1.imag * c2.real - c1.real * c2.imag) / denominator
        return complex(real, imaginary)
```