import sqlite3

class BookManagementDB:
    # This class represents a database for managing books including functionalities to add, remove, borrow, return, and search for books.

    def __init__(self, db_name):
        # Initialize BookManagementDB object with a connection to the specified database.
        # param db_name: str, the name of the database to connect to
        self.connection = sqlite3.connect(db_name)
        self.cursor = self.connection.cursor()
        self.create_table()

    def create_table(self):
        # Create a table 'books' in the database if it does not already exist.
        # This table will store book details like id, title, author, and availability.

    def add_book(self, title, author):
        # Add a new book to the database with the provided title and author.
        # param title: str, the title of the book to add
        # param author: str, the author of the book to add

    def remove_book(self, book_id):
        # Remove a book from the database based on the provided book_id.
        # param book_id: int, the id of the book to remove

    def borrow_book(self, book_id):
        # Set the availability of a book to 'not available' after it has been borrowed.
        # param book_id: int, the id of the book to borrow

    def return_book(self, book_id):
        # Set the availability of a book to 'available' after it has been returned.
        # param book_id: int, the id of the book to return

    def search_books(self):
        # Retrieve all books stored in the database.
        # return: list of tuples, each tuple containing details of a book (id, title, author, available)