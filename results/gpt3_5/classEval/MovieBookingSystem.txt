from datetime import datetime
import numpy as np

class MovieBookingSystem:
    # This class represents a movie booking system that allows users to add movies, book tickets, and check available movies within a specified time range.

    def __init__(self):
        # Initializes the MovieBookingSystem with an empty list of movies.
        self.movies = []

    def add_movie(self, name, price, start_time, end_time, n):
        # Adds a new movie to the system with the given details.
        # param name: str, the name of the movie
        # param price: float, the price of a ticket for the movie
        # param start_time: str, the start time of the movie in format '%H:%M'
        # param end_time: str, the end time of the movie in format '%H:%M'
        # param n: int, the number of seats available for booking
        # Creates a movie dictionary with provided details and adds it to the list of movies.
        movie = {
            'name': name,
            'price': price,
            'start_time': datetime.strptime(start_time, '%H:%M'),
            'end_time': datetime.strptime(end_time, '%H:%M'),
            'seats': np.zeros((n, n))
        }
        self.movies.append(movie)

    def book_ticket(self, name, seats_to_book):
        # Books tickets for a specific movie with the given seats.
        # param name: str, the name of the movie to book tickets for
        # param seats_to_book: list of tuples, each tuple representing a seat to book (row, column)
        # return: str, "Booking success." if tickets are successfully booked, "Booking failed." if booking is unsuccessful, "Movie not found." if movie is not in the system
        # Checks if the movie exists in the system, books the requested seats if available, and returns the booking status.
        for movie in self.movies:
            if movie['name'] == name:
                for seat in seats_to_book:
                    if movie['seats'][seat[0]][seat[1]] == 0:
                        movie['seats'][seat[0]][seat[1]] = 1
                    else:
                        return "Booking failed."
                return "Booking success."
        return "Movie not found."

    def available_movies(self, start_time, end_time):
        # Returns a list of available movies within the specified time range.
        # param start_time: str, the start time of the range in format '%H:%M'
        # param end_time: str, the end time of the range in format '%H:%M'
        # return: list of str, names of available movies within the given time range
        # Filters the movies based on the start and end time criteria and returns the names of available movies.
        start_time = datetime.strptime(start_time, '%H:%M')
        end_time = datetime.strptime(end_time, '%H:%M')

        available_movies = []
        for movie in self.movies:
            if start_time <= movie['start_time'] and movie['end_time'] <= end_time:
                available_movies.append(movie['name'])

        return available_movies