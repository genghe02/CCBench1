from math import pi, fabs


class TriCalculator:

    # Class for trigonometric calculations including sine, cosine, and tangent functions

    def __init__(self):
        # Initialize the object

    def cos(self, x):
        # Calculate cosine value using Taylor series approximation method
        # param x: float, the angle in degrees
        # return: float, the cosine value of the angle
        # Test the function with various angle values
        return round(self.taylor(x, 50), 10)

    def factorial(self, a):
        # Calculate the factorial of a number
        # param a: int, the number for which factorial is to be calculated
        # return: int, the factorial of the number
        # Test the function with positive integer input
        b = 1
        while a != 1:
            b *= a
            a -= 1
        return b

    def taylor(self, x, n):
        # Calculate the Taylor series approximation of a value
        # param x: float, the value for which Taylor series is calculated
        # param n: int, the number of terms in the Taylor series
        # return: float, the Taylor series approximation value
        # Test the function with different input values
        a = 1
        x = x / 180 * pi
        count = 1
        for k in range(1, n):
            if count % 2 != 0:
                a -= (x ** (2 * k)) / self.factorial(2 * k)
            else:
                a += (x ** (2 * k)) / self.factorial(2 * k)
            count += 1
        return a

    def sin(self, x):
        # Calculate sine value using Taylor series approximation method
        # param x: float, the angle in degrees
        # return: float, the sine value of the angle
        # Test the function with various angle values
        x = x / 180 * pi
        g = 0
        t = x
        n = 1

        while fabs(t) >= 1e-15:
            g += t
            n += 1
            t = -t * x * x / (2 * n - 1) / (2 * n - 2)
        return round(g, 10)

    def tan(self, x):
        # Calculate tangent value using sine and cosine functions
        # param x: float, the angle in degrees
        # return: float, the tangent value of the angle
        # Test the function with various angle values including edge cases
        if self.cos(x) != 0:
            result = self.sin(x) / self.cos(x)
            return round(result, 10)
        else:
            return False