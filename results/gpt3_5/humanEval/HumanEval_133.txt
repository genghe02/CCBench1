def sum_squares(lst):
    # Calculate the sum of squares of elements in the input list rounded up to the nearest integer.
    # The function takes a list of numbers as input and returns the sum of squares of each number rounded up.
    # param lst: list, input list of numbers
    # return: int, sum of squares of the numbers in the input list rounded up

    # Test Cases:
    # Test Case 1: Empty list
    assert sum_squares([]) == 0

    # Test Case 2: List with positive integers
    assert sum_squares([1, 2, 3, 4, 5]) == 55

    # Test Case 3: List with negative numbers
    assert sum_squares([-1, -2, -3, -4, -5]) == 55

    # Test Case 4: List with decimal numbers
    assert sum_squares([1.5, 2.5, 3.5]) == 20

    # Test Case 5: List with a single element
    assert sum_squares([10]) == 100

    import math
    squared = 0
    for i in lst:
        squared += math.ceil(i)**2
    return squared