def correct_bracketing(brackets: str):
    # Check if the input string has correct bracketing by tracking the depth of bracket pairs.
    
    # Test case 1: All brackets are closed correctly
    assert correct_bracketing("") == True
    
    # Test case 2: Nested brackets are closed correctly
    assert correct_bracketing("<<>>") == True
    
    # Test case 3: Incorrect closing of brackets
    assert correct_bracketing("<>") == False
    
    depth = 0
    for b in brackets:
        if b == "<":
            depth += 1
        else:
            depth -= 1
        if depth < 0:
            return False
    return depth == 0