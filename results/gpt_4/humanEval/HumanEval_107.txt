```python
def even_odd_palindrome(n):
    """
    This function counts the number of even and odd palindromic numbers up to n.

    Args:
    n: int, the end of the range to check for palindromic numbers.

    Returns:
    Tuple (int, int), first element represents the count of even palindromic numbers and the second element represents the count of odd palindromic numbers.
    
    Test Cases:
    >>> even_odd_palindrome(10)
    (2, 9)
    >>> even_odd_palindrome(100)
    (5, 10)
    """
    def is_palindrome(n):
        """
        This internal function checks if a number is a palindrome.

        Args:
        n: int, the number to check.

        Returns:
        bool, True if the number is a palindrome, False otherwise.
        """
        return str(n) == str(n)[::-1]

    even_palindrome_count = 0
    odd_palindrome_count = 0

    for i in range(1, n+1):
        if i%2 == 1 and is_palindrome(i):
            odd_palindrome_count += 1
        elif i%2 == 0 and is_palindrome(i):
            even_palindrome_count += 1
    return (even_palindrome_count, odd_palindrome_count)
```