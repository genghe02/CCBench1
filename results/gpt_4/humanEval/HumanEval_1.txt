from typing import List

def separate_paren_groups(paren_string: str) -> List[str]:
    # This function separates groups of parentheses from a string input
    # Each group is defined as text enclosed in a pair of parentheses
    # The function also handles nested parentheses, treating them as part of the enclosing group

    # Test cases:
    # >>> separate_paren_groups('(abc)(def)')
    # ['(abc)', '(def)']
    # >>> separate_paren_groups('(ab(c)d)(ef)')
    # ['(ab(c)d)', '(ef)']
    # >>> separate_paren_groups('(a(bc)d)e(f)')
    # ['(a(bc)d)', '(f)']
    # >>> separate_paren_groups('((ab)c)d')
    # ['((ab)c)', '(d)']
    result = []
    current_string = []
    current_depth = 0

    for c in paren_string:
        if c == '(':
            current_depth += 1
            current_string.append(c)
        elif c == ')':
            current_depth -= 1
            current_string.append(c)

            if current_depth == 0:
                result.append(''.join(current_string))
                current_string.clear()

    return result