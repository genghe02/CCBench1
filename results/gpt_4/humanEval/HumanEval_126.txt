def is_sorted(lst):
    # This function checks if the input list is sorted in non-decreasing order and if no element is repeated more than twice.
    # If both conditions are met, it returns True. Otherwise, it returns False.

    # Test cases for the function:
    # >>> is_sorted([1, 2, 3, 4, 5]) -> True
    # >>> is_sorted([1, 2, 2, 3, 4, 5]) -> True
    # >>> is_sorted([1, 2, 2, 2, 3, 4, 5]) -> False (element 2 is repeated more than twice)
    # >>> is_sorted([1, 2, 3, 5, 4]) -> False (not sorted in non-decreasing order)

    count_digit = dict([(i, 0) for i in lst]) # Initialize a dictionary with each element of the list as a key and 0 as value.
    for i in lst:
        count_digit[i]+=1 # For each element in the list, increment its corresponding value in the dictionary.
    if any(count_digit[i] > 2 for i in lst): # If any element in the list appears more than twice, return False.
        return False
    if all(lst[i-1] <= lst[i] for i in range(1, len(lst))): # Check that each element in the list is less than or equal to its next element.
        return True
    else:
        return False # If the list is not sorted in non-decreasing order, return False.