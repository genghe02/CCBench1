def move_one_ball(arr):
    # This function checks if it's possible to move one ball from the end of a given list to its start to make the whole list sorted in ascending order.
    # It first checks if the list is empty (if so, it's considered sorted), then it creates a sorted copy of the original list.
    # It finds the smallest value in the original list and rotates the list so the smallest value is at the start.
    # Finally, it compares each element of the rotated list with the sorted list. If all elements match, the function returns True, otherwise it returns False.

    # Test cases for the function:
    # >>> move_one_ball([1, 2, 3]) - list is already sorted, should return True
    # >>> move_one_ball([3, 2, 1]) - list is sorted in descending order, should return False
    # >>> move_one_ball([2, 3, 1]) - moving the '1' from the end to the start makes the list sorted, should return True
    # >>> move_one_ball([]) - empty list, should return True
    if len(arr)==0:
      return True
    sorted_array=sorted(arr)
    my_arr=[]
    
    min_value=min(arr)
    min_index=arr.index(min_value)
    my_arr=arr[min_index:]+arr[0:min_index]
    for i in range(len(arr)):
      if my_arr[i]!=sorted_array[i]:
        return False
    return True