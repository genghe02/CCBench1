def closest_integer(value):
    # This function receives a string that can be converted to a float and returns the closest integer to that float.
    # It treats '.5' specially. For positive numbers with '.5', it rounds up. For negative numbers with '.5', it rounds down.
    # For all other cases, it uses the standard python round function, rounding to the nearest even number.
    # If the input is an empty string, it returns 0.

    # test cases:
    # assert closest_integer('3.5') == 4
    # assert closest_integer('-3.5') == -4
    # assert closest_integer('3.51') == 4
    # assert closest_integer('-3.51') == -4
    # assert closest_integer('3.1') == 3
    # assert closest_integer('-3.1') == -3
    # assert closest_integer('0') == 0
    # assert closest_integer('') == 0

    from math import floor, ceil

    if value.count('.') == 1:
        # remove trailing zeros
        while (value[-1] == '0'):
            value = value[:-1]

    num = float(value)
    if value[-2:] == '.5':
        if num > 0:
            res = ceil(num)
        else:
            res = floor(num)
    elif len(value) > 0:
        res = int(round(num))
    else:
        res = 0

    return res  # res is the closest integer to the input value.