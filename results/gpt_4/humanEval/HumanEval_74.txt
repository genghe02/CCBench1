def total_match(lst1, lst2):
    # This function compares the total length of all the strings in two lists, and returns the list with the smaller total length.
    # If the total lengths are equal, the first list will be returned.

    # Test cases:
    # >>> total_match(['abc', 'de'], ['fgh', 'ij']) should return ['abc', 'de'] (total length of 5 is less than 6)
    # >>> total_match(['abc', 'de'], ['fgh', 'ij', 'k']) should return ['abc', 'de'] (total length of 5 is less than 7)
    # >>> total_match(['abc', 'de', 'f'], ['gh', 'ij', 'k']) should return ['gh', 'ij', 'k'] (total length of 6 is less than 7)
    # >>> total_match(['abc', 'de', 'f'], ['gh', 'ij']) should return ['gh', 'ij'] (total length of 5 is less than 6)
    # >>> total_match(['abc', 'de'], ['gh', 'ij', 'k', 'l']) should return ['abc', 'de'] (total length of 5 is less than 8)
    # >>> total_match(['a', 'b', 'c'], ['d', 'e', 'f']) should return ['a', 'b', 'c'] (total length of 3 is equal to 3, so the first list is returned)

    l1 = 0
    for st in lst1:
        l1 += len(st)
    
    l2 = 0
    for st in lst2:
        l2 += len(st)
    
    if l1 <= l2:
        return lst1
    else:
        return lst2