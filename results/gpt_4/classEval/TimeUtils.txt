```python
import datetime
import time

# This class provides utility methods for handling and manipulating date and time objects
class TimeUtils:

    # Initializes the TimeUtils class with the current system time
    def __init__(self):
        self.datetime = datetime.datetime.now()

    # Returns the current system time in the format of hours, minutes and seconds (HH:MM:SS)
    # Test case: 
    # >>> time_util = TimeUtils()
    # >>> print(time_util.get_current_time()) // Output will vary based on the current system time
    def get_current_time(self):
        format = "%H:%M:%S"
        return self.datetime.strftime(format)

    # Returns the current system date in the format of year, month and day (YYYY-MM-DD)
    # Test case:
    # >>> time_util = TimeUtils()
    # >>> print(time_util.get_current_date()) // Output will vary based on the current system date
    def get_current_date(self):
        format = "%Y-%m-%d"
        return self.datetime.strftime(format)

    # Adds the specified number of seconds to the current system time and returns the result
    # param seconds: int, the number of seconds to add to the current system time
    # Test case:
    # >>> time_util = TimeUtils()
    # >>> print(time_util.add_seconds(120)) // Output will vary based on the current system time
    def add_seconds(self, seconds):
        new_datetime = self.datetime + datetime.timedelta(seconds=seconds)
        format = "%H:%M:%S"
        return new_datetime.strftime(format)

    # Converts a string to a datetime object
    # param string: str, a string representing a date and time
    # Test case:
    # >>> time_util = TimeUtils()
    # >>> print(time_util.string_to_datetime("2022-01-01 12:00:00")) // Output: 2022-01-01 12:00:00
    def string_to_datetime(self, string):
        return datetime.datetime.strptime(string, "%Y-%m-%d %H:%M:%S")

    # Converts a datetime object to a string
    # param datetime: datetime, a datetime object
    # Test case:
    # >>> time_util = TimeUtils()
    # >>> print(time_util.datetime_to_string(datetime.datetime(2022, 1, 1, 12, 0, 0))) // Output: "2022-01-01 12:00:00"
    def datetime_to_string(self, datetime):
        return datetime.strftime("%Y-%m-%d %H:%M:%S")

    # Returns the absolute difference in minutes between two given times
    # Test case:
    # >>> time_util = TimeUtils()
    # >>> print(time_util.get_minutes("2022-01-01 12:00:00", "2022-01-01 12:30:00")) // Output: 30
    def get_minutes(self, string_time1, string_time2):
        time1 = self.string_to_datetime(string_time1)
        time2 = self.string_to_datetime(string_time2)
        return round((time2 - time1).seconds / 60)

    # Returns a formatted string representing a specific date and time
    # param year: int, the year
    # param month: int, the month
    # param day: int, the day
    # param hour: int, the hour
    # param minute: int, the minute
    # param second: int, the second
    # Test case:
    # >>> time_util = TimeUtils()
    # >>> print(time_util.get_format_time(2022, 1, 1, 12, 0, 0)) // Output: "2022-01-01 12:00:00"
    def get_format_time(self, year, month, day, hour, minute, second):
        format = "%Y-%m-%d %H:%M:%S"
        time_item = datetime.datetime(year, month, day, hour, minute, second)
        return time_item.strftime(format)
```