```python
# This is a class for creating a snake for snake game.
import random


class Snake:
    def __init__(self, SCREEN_WIDTH, SCREEN_HEIGHT, BLOCK_SIZE, food_position):
        # This function is the constructor of the Snake class where the initial attributes are defined.
        # param SCREEN_WIDTH: int, the width of the screen
        # param SCREEN_HEIGHT: int, the height of the screen
        # param BLOCK_SIZE: int, the size of the block
        # param food_position: tuple, the position of the food
        self.length = 1
        self.SCREEN_WIDTH = SCREEN_WIDTH
        self.SCREEN_HEIGHT = SCREEN_HEIGHT
        self.BLOCK_SIZE = BLOCK_SIZE
        self.positions = [((SCREEN_WIDTH / 2), (SCREEN_HEIGHT / 2))]
        self.score = 0
        self.food_position = food_position

    def move(self, direction):
        # This function is for moving the snake in a specific direction.
        # param direction: tuple, the direction in which the snake has to move
        # return: None, it just updates the position of the snake.
        # >>> snake = Snake(500, 500, 20, (100, 100))
        # >>> snake.move((10, 10))
        cur = self.positions[0]
        x, y = direction

        new = (
            ((cur[0] + (x * self.BLOCK_SIZE)) % self.SCREEN_WIDTH),
            (cur[1] + (y * self.BLOCK_SIZE)) % self.SCREEN_HEIGHT,
        )

        if new == self.food_position:
            self.eat_food()

        if len(self.positions) > 2 and new in self.positions[2:]:
            self.reset()
        else:
            self.positions.insert(0, new)
            if len(self.positions) > self.length:
                self.positions.pop()

    def random_food_position(self):
        # This function is for generating a random position for the food.
        # return: None, it just updates the food_position attribute.
        while self.food_position in self.positions:
            self.food_position = (random.randint(0, self.SCREEN_WIDTH // self.BLOCK_SIZE - 1) * self.BLOCK_SIZE,
                                  random.randint(0, self.SCREEN_HEIGHT // self.BLOCK_SIZE - 1) * self.BLOCK_SIZE)

    def reset(self):
        # This function is for resetting the snake's attributes to their initial values when the snake hits itself.
        # return: None, it just resets the attributes to their initial values.
        # >>> snake = Snake(500, 500, 20, (100, 100))
        # >>> snake.reset()
        self.length = 1
        self.positions = [((self.SCREEN_WIDTH / 2), (self.SCREEN_HEIGHT / 2))]
        self.score = 0
        self.random_food_position()

    def eat_food(self):
        # This function is for increasing the snake's length and score when it eats food.
        # return: None, it just increases the length and score attributes.
        # >>> snake = Snake(500, 500, 20, (100, 100))
        # >>> snake.eat_food()
        self.length += 1
        self.score += 100
        self.random_food_position()
```