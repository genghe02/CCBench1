```python
import PyPDF2

# This class allows handling of PDF files, such as merging multiple PDFs into one and extracting text from PDF files.
class PDFHandler:
    def __init__(self, filepaths):
        # Initializes the PDFHandler class with the PDF file paths.
        # :param filepaths: list, the paths of the PDF files that are going to be handled.
        self.filepaths = filepaths
        # Creates a list of PdfReader objects for each PDF file.
        self.readers = [PyPDF2.PdfReader(fp) for fp in filepaths]

    def merge_pdfs(self, output_filepath):
        # Merges all the PDFs given during the initialization into one PDF.
        # :param output_filepath: str, the file path where the merged PDF will be saved.
        # :return: str, a message indicating the successful merging and saving of the PDF files.
        # >>> test = PDFHandler(['file1.pdf', 'file2.pdf'])
        # >>> test.merge_pdfs('merged.pdf')
        pdf_writer = PyPDF2.PdfWriter()

        for reader in self.readers:
            for page_num in range(len(reader.pages)):
                page = reader.pages[page_num]
                pdf_writer.add_page(page)

        with open(output_filepath, 'wb') as out:
            pdf_writer.write(out)
        return f"Merged PDFs saved at {output_filepath}"

    def extract_text_from_pdfs(self):
        # Extracts and returns the text from all the PDFs given during the initialization.
        # :return: list, a list of strings where each string is the text extracted from a page of the PDFs.
        # >>> test = PDFHandler(['file1.pdf', 'file2.pdf'])
        # >>> test.extract_text_from_pdfs()
        pdf_texts = []
        for reader in self.readers:
            for page_num in range(len(reader.pages)):
                page = reader.pages[page_num]
                pdf_texts.append(page.extract_text())
        return pdf_texts
```