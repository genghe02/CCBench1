```python
import csv

# This class CSVProcessor provides methods for reading, writing, and processing CSV files.
class CSVProcessor:

    def __init__(self):
        pass

    # This function reads a CSV file and returns its header and data.
    # The parameter file_name is a string representing the name of the CSV file to be read.
    # The function returns a tuple containing the title (header) of the CSV file and its data.
    # Test case: read_csv('test.csv') should return the title and data of 'test.csv'.
    def read_csv(self, file_name):
        data = []
        with open(file_name, 'r') as file:
            reader = csv.reader(file)
            title = next(reader)
            for row in reader:
                data.append(row)
        return title, data

    # This function writes a list of rows to a CSV file.
    # The parameter data is a list of lists, where each list represents a row to be written to the CSV file.
    # The parameter file_name is a string representing the name of the CSV file to be written.
    # The function returns 1 if the operation is successful, and 0 otherwise.
    # Test case: write_csv([['Name', 'Age'], ['Alice', '23'], ['Bob', '25']], 'test.csv') should create a CSV file named 'test.csv'.
    def write_csv(self, data, file_name):
        try:
            with open(file_name, 'w', newline='') as file:
                writer = csv.writer(file)
                writer.writerows(data)
            return 1
        except:
            return 0

    # This function reads a CSV file, processes its data, and writes the processed data to a new CSV file.
    # The parameter N is an integer representing the index of the column to be processed.
    # The parameter save_file_name is a string representing the name of the CSV file to be read and processed.
    # The function returns 1 if the operation is successful, and 0 otherwise.
    # Test case: process_csv_data(1, 'test.csv') should create a new CSV file containing the processed data of the column at index 1 in 'test.csv'.
    def process_csv_data(self, N, save_file_name):
        title, data = self.read_csv(save_file_name)
        column_data = [row[N] for row in data]
        column_data = [row.upper() for row in column_data]
        new_data = [title, column_data]
        return self.write_csv(new_data, save_file_name.split('.')[0] + '_process.csv')
```