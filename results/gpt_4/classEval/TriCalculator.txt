```python
from math import pi, fabs

# This is a class designed to calculate trigonometric functions of a given angle using Taylor series expansions.
class TriCalculator:

    def __init__(self):
        pass

    # This function calculates the cosine of a given angle.
    # param x: float, the angle in degrees
    # return: float, the cosine of the angle, rounded to 10 decimal places
    # Test cases for this function:
    # >>> calc = TriCalculator()
    # >>> calc.cos(0)
    # >>> calc.cos(90)
    # >>> calc.cos(180)
    def cos(self, x):
        return round(self.taylor(x, 50), 10)

    # This function calculates the factorial of a given number.
    # param a: int, the input number for which the factorial is to be calculated
    # return: int, the factorial of the input number
    # Test cases for this function:
    # >>> calc = TriCalculator()
    # >>> calc.factorial(0)
    # >>> calc.factorial(5)
    # >>> calc.factorial(10)
    def factorial(self, a):
        b = 1
        while a != 1:
            b *= a
            a -= 1
        return b

    # This function applies the Taylor series expansion to calculate cosine of a given angle.
    # param x: float, the angle in degrees
    # param n: int, the number of terms in the Taylor series expansion
    # return: float, the cosine of the angle calculated using the Taylor series expansion
    # Test cases for this function:
    # >>> calc = TriCalculator()
    # >>> calc.taylor(0, 50)
    # >>> calc.taylor(90, 50)
    # >>> calc.taylor(180, 50)
    def taylor(self, x, n):
        a = 1
        x = x / 180 * pi
        count = 1
        for k in range(1, n):
            if count % 2 != 0:
                a -= (x ** (2 * k)) / self.factorial(2 * k)
            else:
                a += (x ** (2 * k)) / self.factorial(2 * k)
            count += 1
        return a

    # This function calculates the sine of a given angle.
    # param x: float, the angle in degrees
    # return: float, the sine of the angle, rounded to 10 decimal places
    # Test cases for this function:
    # >>> calc = TriCalculator()
    # >>> calc.sin(0)
    # >>> calc.sin(30)
    # >>> calc.sin(90)
    def sin(self, x):
        x = x / 180 * pi
        g = 0
        t = x
        n = 1

        while fabs(t) >= 1e-15:
            g += t
            n += 1
            t = -t * x * x / (2 * n - 1) / (2 * n - 2)
        return round(g, 10)

    # This function calculates the tangent of a given angle.
    # param x: float, the angle in degrees
    # return: float, the tangent of the angle, rounded to 10 decimal places if cos(x) is not 0, otherwise returns False
    # Test cases for this function:
    # >>> calc = TriCalculator()
    # >>> calc.tan(0)
    # >>> calc.tan(45)
    # >>> calc.tan(90)
    def tan(self, x):
        if self.cos(x) != 0:
            result = self.sin(x) / self.cos(x)
            return round(result, 10)
        else:
            return False
```