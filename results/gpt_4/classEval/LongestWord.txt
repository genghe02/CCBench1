```python
import re
import string

# This class is used to find the longest word in a given sentence that exists in a predefined word list.
class LongestWord:

    # This method initializes the class with an empty list to store the predefined words.
    def __init__(self):
        self.word_list = []

    # This method adds a word to the predefined word list.
    # :param word: str, the word to be added to the list.
    def add_word(self, word):
        self.word_list.append(word)

    # This method finds the longest word in a given sentence that exists in the predefined word list.
    # :param sentence: str, the sentence in which we need to find the longest word.
    # :return: str, the longest word in the sentence that exists in the word list.
    # Some test cases for the function:
    # >>> lw = LongestWord()
    # >>> lw.add_word("python")
    # >>> lw.add_word("java")
    # >>> lw.find_longest_word("I love coding in Python and Java.")
    # >>> 'python'
    # >>> lw.find_longest_word("I love coding.")
    # >>> ''
    def find_longest_word(self, sentence):
        longest_word = ""
        sentence = sentence.lower()
        sentence = re.sub('[%s]' % re.escape(string.punctuation), '', sentence)
        sentence = re.split(' ', sentence)
        for word in sentence:
            if word in self.word_list and len(word) > len(longest_word):
                longest_word = word
        return longest_word
```