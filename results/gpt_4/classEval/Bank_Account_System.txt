```python
# This is a class to represent a Bank Account with basic functionalities like deposit, withdraw, view balance and transfer amount to another account.
class BankAccount:
    def __init__(self, balance=0):
        # This is the constructor function which initializes the object with an initial balance.
        # param balance: int, the initial balance of the account, default is 0.
        self.balance = balance

    def deposit(self, amount):
        # This function adds the specified amount to the account balance.
        # param amount: int, the amount to be deposited to the account.
        if amount < 0:
            raise ValueError("Invalid amount")
        self.balance += amount
        return self.balance

    def withdraw(self, amount):
        # This function deducts the specified amount from the account balance.
        # param amount: int, the amount to be withdrawn from the account.
        if amount < 0:
            raise ValueError("Invalid amount")
        if amount > self.balance:
            raise ValueError("Insufficient balance.")
        self.balance -= amount
        return self.balance

    def view_balance(self):
        # This function returns the balance of the account.
        # return: int, the balance of the account.
        return self.balance

    def transfer(self, other_account, amount):
        # This function transfers a specified amount from this account to another account.
        # param other_account: BankAccount, the account to transfer to.
        # param amount: int, the amount to be transferred.
        # test cases:
        # >>> acc1 = BankAccount(500)
        # >>> acc2 = BankAccount(100)
        # >>> acc1.transfer(acc2, 200)
        # This should reduce acc1's balance to 300 and increase acc2's balance to 300.
        # >>> acc1.transfer(acc2, 600)
        # This should raise ValueError as acc1's balance is insufficient.
        self.withdraw(amount)
        other_account.deposit(amount)
```