import PyPDF2


class PDFHandler:
    # Class to handle PDF files, providing methods to merge PDFs and extract text from them.

    def __init__(self, filepaths):
        # Initialize PDFHandler with a list of filepaths to PDF files.
        # PdfFileReader is deprecated and was removed in PyPDF2 3.0.0. Use PdfReader instead.
        self.filepaths = filepaths
        self.readers = [PyPDF2.PdfReader(fp) for fp in filepaths]

    def merge_pdfs(self, output_filepath):
        # Merge the PDFs from the provided filepaths into a single PDF file at the specified output_filepath.
        # Parameters:
        #   output_filepath: str, the filepath where the merged PDF will be saved
        # Return:
        #   str, message indicating the location where the merged PDF is saved
        # Test cases:
        #   >>> pdf_handler = PDFHandler(['file1.pdf', 'file2.pdf'])
        #   >>> pdf_handler.merge_pdfs('merged.pdf')
        pdf_writer = PyPDF2.PdfWriter()

        for reader in self.readers:
            # reader.getNumPages is deprecated and was removed in PyPDF2 3.0.0. Use len(reader.pages) instead.
            for page_num in range(len(reader.pages)):
                # reader.getPage(pageNumber) is deprecated and was removed in PyPDF2 3.0.0. Use reader.pages[page_number] instead.
                page = reader.pages[page_num]
                # addPage is deprecated and was removed in PyPDF2 3.0.0. Use add_page instead.
                pdf_writer.add_page(page)

        with open(output_filepath, 'wb') as out:
            pdf_writer.write(out)
        return f"Merged PDFs saved at {output_filepath}"

    def extract_text_from_pdfs(self):
        # Extract text content from all pages of the PDFs in the provided filepaths.
        # Return:
        #   list of str, text extracted from each page of the PDFs
        # Test cases:
        #   >>> pdf_handler = PDFHandler(['file1.pdf', 'file2.pdf'])
        #   >>> pdf_handler.extract_text_from_pdfs()
        pdf_texts = []
        for reader in self.readers:
            for page_num in range(len(reader.pages)):
                page = reader.pages[page_num]
                pdf_texts.append(page.extract_text())
        return pdf_texts