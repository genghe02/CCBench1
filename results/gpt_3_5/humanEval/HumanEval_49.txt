def modp(n: int, p: int):
    # Calculate the value of 2^n modulo p efficiently.
    # Parameters:
    # n: int, the power to raise 2 to
    # p: int, the modulo value
    # Return:
    # ret: int, the result of 2^n modulo p
    # Test Cases:
    # >>> modp(5, 10)
    # 2
    # >>> modp(3, 5)
    # 3
    # >>> modp(0, 7)
    # 1
    ret = 1
    for i in range(n):
        ret = (2 * ret) % p
    return ret