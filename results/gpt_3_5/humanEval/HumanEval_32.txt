import math


def poly(xs: list, x: float):
    # Calculate the value of a polynomial at a given point x by summing the result of each term in the polynomial.
    return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])


def find_zero(xs: list):
    # Find the root of a polynomial using the bisection method by iteratively narrowing down the search range until the root is found.
    # Test cases:
    # Case 1: Single-term polynomial
    # xs = [1]
    # Expected result: 0.0
    # Case 2: Quadratic polynomial
    # xs = [1, -3, 2]
    # Expected result: 1.0
    begin, end = -1., 1.
    while poly(xs, begin) * poly(xs, end) > 0:
        begin *= 2.0
        end *= 2.0
    while end - begin > 1e-10:
        center = (begin + end) / 2.0
        if poly(xs, center) * poly(xs, begin) > 0:
            begin = center
        else:
            end = center
    return begin