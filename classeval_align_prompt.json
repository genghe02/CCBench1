[
  {
    "filename": "AccessGatewayFilter.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis class is a filter used for accessing gateway filtering, primarily for authentication and access log recording.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nFilter the incoming request based on certain rules and conditions.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if the request URI starts with certain prefixes.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet the user information from the JWT token in the request.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSet the current user information and log the access."
    ]
  },
  {
    "filename": "AreaCalculator.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class for calculating the area of different shapes, including circle, sphere, cylinder, sector and annulus.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the radius for shapes.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ncalculate the area of circle based on self.radius",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ncalculate the area of sphere based on self.radius",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ncalculate the area of cylinder based on self.radius and height",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ncalculate the area of sector based on self.radius and angle",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ncalculate the area of annulus based on inner_radius and out_radius"
    ]
  },
  {
    "filename": "ArgumentParser.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class for parsing command line arguments to a dictionary.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the fields.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n Parses the given command line argument string and invoke _convert_type to stores the parsed result in specific type in the arguments dictionary.\n        Checks for missing required arguments, if any, and returns False with the missing argument names, otherwise returns True.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRetrieves the value of the specified argument from the arguments dictionary and returns it.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdds an argument to self.types and self.required.\n        Check if it is a required argument and store the argument type.\n        If the argument is set as required, it wull be added to the required set.\n        The argument type and name are stored in the types dictionary as key-value pairs.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n:param value: str, the input value in command line"
    ]
  },
  {
    "filename": "ArrangementCalculator.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThe Arrangement class provides permutation calculations and selection operations for a given set of data elements.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializes the ArrangementCalculator object with a list of datas.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCounts the number of arrangements by choosing m items from n items (permutations).\n        If m is not provided or n equals m, returns factorial(n).",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCounts the total number of all possible arrangements by choosing at least 1 item and at most n items from n items.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerates a list of arrangements by selecting m items from the internal datas.\n        If m is not provided, selects all items.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerates a list of all arrangements by selecting at least 1 item and at most the number of internal datas.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n:param n: int, the number to calculate the factorial."
    ]
  },
  {
    "filename": "AssessmentSystem.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class as an student assessment system, which supports add student, add course score, calculate GPA, and other functions for students and courses.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the students dict in assessment system.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdd a new student into self.students dict",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdd score of specific course for student in self.students",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet average grade of one student.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet all students who have any score blow 60",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet the average score of a specific course.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate every student's gpa with get_gpa method, and find the student with highest gpa"
    ]
  },
  {
    "filename": "AutomaticGuitarSimulator.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis class is an automatic guitar simulator that can interpret and play based on the input guitar sheet music.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the score to be played",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInterpret the music score to be played",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nPrint out chord and play tune with following format: Normal Guitar Playing -- Chord: %s, Play Tune: %s"
    ]
  },
  {
    "filename": "AvgPartition.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class that partitions the given list into different blocks by specifying the number of partitions, with each block having a uniformly distributed length.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the class with the given list and the number of partitions, and check if the number of partitions is greater than 0.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the size of each block and the remainder of the division.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ncalculate the size of each block and the remainder of the division, and calculate the corresponding start and end positions based on the index of the partition.\n"
    ]
  },
  {
    "filename": "BalancedBrackets.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class that checks for bracket matching",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializes the class with an expression.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nClears the expression of all characters that are not brackets.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nChecks if the expression has balanced brackets."
    ]
  },
  {
    "filename": "Bank_Account_System.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class as a bank account system, which supports deposit money, withdraw money, view balance, and transfer money.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializes a bank account object with an attribute balance, default value is 0.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nDeposits a certain amount into the account, increasing the account balance, return the current account balance.\n        If amount is negative, raise a ValueError(\"Invalid amount\").",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nWithdraws a certain amount from the account, decreasing the account balance, return the current account balance.\n        If amount is negative, raise a ValueError(\"Invalid amount\").\n        If the withdrawal amount is greater than the account balance, raise a ValueError(\"Insufficient balance.\").",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nTransfers a certain amount from the current account to another account."
    ]
  },
  {
    "filename": "BigNumCalculator.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class that implements big number calculations, including adding, subtracting and multiplying.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdds two big numbers.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSubtracts two big numbers.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nMultiplies two big numbers."
    ]
  },
  {
    "filename": "BinaryDataProcessor.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class used to process binary data, which includes functions such as clearing non 0 or 1 characters, counting binary string information, and converting to corresponding strings based on different encoding methods.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the class with a binary string and clean it by removing all non 0 or 1 characters.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nClean the binary string by removing all non 0 or 1 characters.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the binary string information, including the percentage of 0 and 1, and the total length of the binary string.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConvert the binary string to ascii string.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConvert the binary string to utf-8 string."
    ]
  },
  {
    "filename": "BitStatusUtil.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a utility class that provides methods for manipulating and checking status using bitwise operations.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdd a status to the current status,and check the parameters wheather they are legal.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if the current status contains the specified status,and check the parameters wheather they are legal.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRemove the specified status from the current status,and check the parameters wheather they are legal.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if the parameters are legal, args must be greater than or equal to 0 and must be even,if not,raise ValueError."
    ]
  },
  {
    "filename": "BlackjackGame.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class representing a game of blackjack, which includes creating a deck, calculating the value of a hand, and determine the winner based on the hand values of the player and dealer.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the Blackjack Game with the attribute deck, player_hand and dealer_hand.\n        While initializing deck attribute, call the create_deck method to generate.\n        The deck stores 52 rondom order poker with the Jokers removed, format is ['AS', '2S', ...].\n        player_hand is a list which stores player's hand cards.\n        dealer_hand is is a list which stores dealer's hand cards.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCreate a deck of 52 cards, which stores 52 rondom order poker with the Jokers removed.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the value of the poker cards stored in hand list according to the rules of the Blackjack Game.\n        If the card is a digit, its value is added to the total hand value.\n        Value of J, Q, or K is 10, while Aces are worth 11.\n        If the total hand value exceeds 21 and there are Aces present, one Ace is treated as having a value of 1 instead of 11,\n        until the hand value is less than or equal to 21, or all Aces have been counted as value of 1.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nDetermines the winner of a game by comparing the hand values of the player and dealer.\n        rule:\n        If both players have hand values that are equal to or less than 21, the winner is the one whose hand value is closer to 21.\n        Otherwise, the winner is the one with the lower hand value."
    ]
  },
  {
    "filename": "BookManagement.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class as managing books system, which supports to add and remove books from the inventory dict, view the inventory, and check the quantity of a specific book.\n",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the inventory of Book Manager.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdd one or several books to inventory which is sorted by book title.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRemove one or several books from inventory which is sorted by book title.\n        Raise false while get invalid input.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet the inventory of the Book Management.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet the quantity of a book."
    ]
  },
  {
    "filename": "BookManagementDB.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a database class as a book management system, used to handle the operations of adding, removing, updating, and searching books.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializes the class by creating a database connection and cursor, \n        and creates the book table if it does not already exist",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCreates the book table in the database if it does not already exist.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdds a book to the database with the specified title and author, \n        setting its availability to 1 as free to borrow.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRemoves a book from the database based on the given book ID.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nMarks a book as borrowed in the database based on the given book ID.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nMarks a book as returned in the database based on the given book ID.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRetrieves all books from the database and returns their information."
    ]
  },
  {
    "filename": "BoyerMooreSearch.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class that implements the Boyer-Moore algorithm for string searching, which is used to find occurrences of a pattern within a given text.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializes the BoyerMooreSearch class with the given text and pattern.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nFinds the rightmost occurrence of a character in the pattern.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nDetermines the position of the first dismatch between the pattern and the text.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nFinds all occurrences of the pattern in the text."
    ]
  },
  {
    "filename": "CSVProcessor.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class for processing CSV files, including readring and writing CSV data, as well as processing specific operations and saving as a new CSV file.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRead the csv file by file_name, get the title and data from it",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nWrite data into a csv file.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRead a csv file into variable title and data.\n        Only remain the N th (from 0) column data and Capitalize them, store the title and new data into a new csv file.\n        Add '_process' suffix after old file name, as a new file name."
    ]
  },
  {
    "filename": "Calculator.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class for a calculator, capable of performing basic arithmetic calculations on numerical expressions using the operators +, -, *, /, and ^ (exponentiation).",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the operations performed by the five operators'+','-','*','/','^'",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the value of a given expression",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nReturns the priority of the specified operator, where the higher the priority, the greater the assignment. The priority of '^' is greater than '/' and '*', and the priority of '/' and '*' is greater than '+' and '-'",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nUse the operator at the top of the operator stack to perform the operation on the two numbers at the top of the operator stack, and store the results at the top of the operator stack"
    ]
  },
  {
    "filename": "CalendarUtil.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class as CalendarUtil that provides functionalities to manage calendar events, schedule appointments, and perform conflict checks.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the calendar with an empty list of events.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdd an event to the calendar.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRemove an event from the calendar.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet all events on a given date.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if the calendar is available for a given time slot.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet all available time slots on a given date.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet the next n upcoming events from a given date."
    ]
  },
  {
    "filename": "CamelCaseMap.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a custom class that allows keys to be in camel case style by converting them from underscore style, which provides dictionary-like functionality.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize data to an empty dictionary",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nReturn the value corresponding to the key",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSet the value corresponding to the key to the specified value",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nDelete the value corresponding to the key",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nReturning Iterateable Objects with Own Data",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nReturns the length of the own data",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nconvert key string into camel case",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nconvert key string into camel case"
    ]
  },
  {
    "filename": "ChandrasekharSieve.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class that uses the Chandrasekhar's Sieve method to find all prime numbers within the range",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the ChandrasekharSieve class with the given limit.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerate prime numbers up to the specified limit using the Chandrasekhar sieve algorithm.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet the list of generated prime numbers."
    ]
  },
  {
    "filename": "Chat.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a chat class with the functions of adding users, removing users, sending messages, and obtaining messages.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the Chat with an attribute users, which is an empty dictionary.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdd a new user to the Chat.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRemove a user from the Chat.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSend a message from a user to another user.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet all the messages of a user from the Chat."
    ]
  },
  {
    "filename": "Class_Registration_System.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class as a class registration system, allowing to register students, register them for classes, retrieve students by major, get a list of all majors, and determine the most popular class within a specific major.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the registration system with the attribute students and students_registration_class.\n        students is a list of student dictionaries, each student dictionary has the key of name and major.\n        students_registration_class is a dictionaries, key is the student name, value is a list of class names",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nregister a student to the system, add the student to the students list, if the student is already registered, return 0, else return 1",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nregister a class to the student.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nget all students in the major",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nget all majors in the system",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nget the class with the highest enrollment in the major."
    ]
  },
  {
    "filename": "ClassroomManagement.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class representing a classroom, capable of adding and removing courses, checking availability at a given time, and detecting conflicts when scheduling new courses.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the classroom management system.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdd course to self.courses list if the course wasn't in it.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRemove course from self.courses list if the course was in it.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nchange the time format as '%H:%M' and check the time is free or not in the classroom.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nBefore adding a new course, check if the new course time conflicts with any other course."
    ]
  },
  {
    "filename": "CombinationCalculator.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class that provides methods to calculate the number of combinations for a specific count, calculate all possible combinations, and generate combinations with a specified number of elements.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the calculator with a list of data.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the number of combinations for a specific count.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the number of all possible combinations.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerate combinations with a specified number of elements.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerate all possible combinations of  selecting elements from the given data list,and it uses the select method.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerate combinations with a specified number of elements by recursion."
    ]
  },
  {
    "filename": "ComplexCalculator.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class that implements addition, subtraction, multiplication, and division operations for complex numbers.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdds two complex numbers.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSubtracts two complex numbers.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nMultiplies two complex numbers.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nDivides two complex numbers."
    ]
  },
  {
    "filename": "CookiesUtil.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class as utility for managing and manipulating Cookies, including methods for retrieving, saving, and setting Cookies data.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializes the CookiesUtil with the specified cookies file.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGets the cookies from the specified response,and save it to cookies_file.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nLoads the cookies from the cookies_file to the cookies data.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSaves the cookies to the cookies_file, and returns True if successful, False otherwise."
    ]
  },
  {
    "filename": "CurrencyConverter.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class for currency conversion, which supports to convert amounts between different currencies, retrieve supported currencies, add new currency rates, and update existing currency rates.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the exchange rate of the US dollar against various currencies",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConvert the value of a given currency to another currency type",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nReturns a list of supported currency types",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdd a new supported currency type, return False if the currency type is already in the support list",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nUpdate the exchange rate for a certain currency"
    ]
  },
  {
    "filename": "DataStatistics.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class for performing data statistics, supporting to calculate the mean, median, and mode of a given data set.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the average value of a group of data, accurate to two digits after the Decimal separator",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the median of a group of data, accurate to two digits after the Decimal separator",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the mode of a set of data"
    ]
  },
  {
    "filename": "DataStatistics2.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class for performing data statistics, supporting to get the sum, minimum, maximum, variance, standard deviation, and correlation of a given dataset.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize Data List",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the sum of data",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the minimum value in the data",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the maximum value in the data",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate variance, accurate to two digits after the Decimal separator",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate standard deviation, accurate to two digits after the Decimal separator",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate correlation"
    ]
  },
  {
    "filename": "DataStatistics4.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class that performs advanced mathematical calculations and statistics, including correlation coefficient, skewness, kurtosis, and probability density function (PDF) for a normal distribution.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the correlation coefficient of two sets of data.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the skewness of a set of data.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the kurtosis of a set of data.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the probability density function (PDF) of a set of data under a normal distribution."
    ]
  },
  {
    "filename": "DatabaseOperation.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class for processing a database, supporting to create tables, insert data into the database, search for data based on name, and delete data from the database.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize database name of database processor",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCreate a new table in the database if it doesn't exist.\n        And make id (INTEGER) as PRIMARY KEY, make key1 as TEXT, key2 as INTEGER",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInsert data into the specified table in the database.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSearch the specified table in the database for rows with a matching name.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nDelete rows from the specified table in the database with a matching name."
    ]
  },
  {
    "filename": "DecryptionUtils.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class that provides methods for decryption, including the Caesar cipher, Vigenere cipher, and Rail Fence cipher.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializes the decryption utility with a key.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nDeciphers the given ciphertext using the Caesar cipher",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nDeciphers the given ciphertext using the Vigenere cipher",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nDeciphers the given ciphertext using the Rail Fence cipher"
    ]
  },
  {
    "filename": "DiscountStrategy.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class that allows to use different discount strategy based on shopping credit or shopping cart in supermarket.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the DiscountStrategy with customer information, a cart of items, and an optional promotion.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the total cost of items in the cart.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the final amount to be paid after applying the discount.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the discount based on the fidelity points of the customer.Customers with over 1000 points can enjoy a 5% discount on the entire order.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the discount based on bulk item quantity in the order.In the same order, if the quantity of a single item reaches 20 or more, each item will enjoy a 10% discount.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the discount based on the number of different products in the order.If the quantity of different products in the order reaches 10 or more, the entire order will enjoy a 7% discount."
    ]
  },
  {
    "filename": "DocFileHandler.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class that handles Word documents and provides functionalities for reading, writing, and modifying the content of Word documents.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializes the DocFileHandler object with the specified file path.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nReads the content of a Word document and returns it as a string.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nWrites the specified content to a Word document.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdds a heading to the Word document.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdds a table to the Word document with the specified data.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nReturns the alignment value corresponding to the given alignment string."
    ]
  },
  {
    "filename": "EightPuzzle.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis class is an implementation of the classic 8-puzzle game, including methods for finding the blank tile, making moves, getting possible moves, and solving the puzzle using a breadth-first search algorithm.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializing the initial state of Eight Puzzle Game, stores in attribute self.initial_state.\n        And set the goal state of this game, stores in self.goal_state. In this case, set the size as 3*3",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nFind the blank position of current state, which is the 0 element.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nFind the blank block, then makes the board moves forward the given direction.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAccording the current state, find all the possible moving directions. Only has 4 direction 'up', 'down', 'left', 'right'.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nUse BFS algorithm to find the path solution which makes the initial state to the goal method.\n        Maintain a list as a queue, named as open_list, append the initial state.\n        Always visit and pop the 0 index element, invoke get_possible_moves method find all the possible directions.\n        Traversal the possible_moves list and invoke move method to get several new states.Then append them.\n        redo the above steps until the open_list is empty or the state has changed to the goal state."
    ]
  },
  {
    "filename": "EmailClient.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis is a class that serves as an email client, implementing functions such as checking emails, determining whether there is sufficient space, and cleaning up space",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializes the EmailClient class with the email address and the capacity of the email box.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSends an email to the given email address.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRetrieves the first unread email in the email box and marks it as read.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nDetermines whether the email box is full after adding an email of the given size.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGets the total size of the emails in the email box.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nClears the email box by deleting the oldest emails until the email box has enough space to accommodate the given size."
    ]
  },
  {
    "filename": "EncryptionUtils.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class that provides methods for encryption, including the Caesar cipher, Vigenere cipher, and Rail Fence cipher.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializes the class with a key.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nEncrypts the plaintext using the Caesar cipher.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nEncrypts the plaintext using the Vigenere cipher.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nEncrypts the plaintext using the Rail Fence cipher."
    ]
  },
  {
    "filename": "ExcelProcessor.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class for processing excel files, including readring and writing excel data, as well as processing specific operations and saving as a new excel file.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nReading data from Excel files",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nWrite data to the specified Excel file",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nChange the specified column in the Excel file to uppercase"
    ]
  },
  {
    "filename": "ExpressionCalculator.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class in Python that can perform calculations with basic arithmetic operations, including addition, subtraction, multiplication, division, and modulo.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the expression calculator",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the result of the given postfix expression",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nPrepare the infix expression for conversion to postfix notation",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if a character is an operator in {'+', '-', '*', '/', '(', ')', '%'}",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCompare the precedence of two operators",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nPerform the mathematical calculation based on the given operands and operator",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nTransform the infix expression to a format suitable for conversion"
    ]
  },
  {
    "filename": "FitnessTracker.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class as fitness tracker that implements to calculate BMI (Body Mass Index) and calorie intake based on the user's height, weight, age, and sex.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the class with height, weight, age, and sex, and calculate the BMI standard based on sex, and male is 20-25, female is 19-24.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the BMI based on the height and weight.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nJudge the condition of the user based on the BMI standard.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the calorie intake based on the user's condition and BMR (Basal Metabolic Rate),BMR is calculated based on the user's height, weight, age, and sex,male is10 * self.weight + 6.25 * self.height - 5 * self.age + 5,female is 10 * self.weight + 6.25 * self.height - 5 * self.age - 161, and the calorie intake is calculated based on the BMR and the user's condition,if the user is too fat, the calorie intake is BMR * 1.2, if the user is too thin, the calorie intake is BMR * 1.6, if the user is normal, the calorie intake is BMR * 1.4."
    ]
  },
  {
    "filename": "GomokuGame.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This class is an implementation of a Gomoku game, supporting for making moves, checking for a winner, and checking if there are five consecutive symbols on the game board.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializes the game with a given board size.\n        It initializes the board with empty spaces and sets the current player symble as 'X'.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nMakes a move at the given row and column.\n        If the move is valid, it places the current player's symbol on the board\n        and changes the current player to the other player (if the current player is 'X', then it becomes 'O' and vice versa).",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nChecks if there is a winner by looking for five in a row in all directions (horizontal, vertical, diagonal).",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nchecks if there are five consecutive symbols of the same player in a row starting from a given cell in a given direction (horizontal, vertical, diagonal).\n        Counts the number of consecutive symbols in that direction starting from the given cell,"
    ]
  },
  {
    "filename": "HRManagementSystem.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class as personnel management system that implements functions such as adding, deleting, querying, and updating employees",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the HRManagementSystem withan attribute employees, which is an empty dictionary.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdd a new employee to the HRManagementSystem.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRemove an employee from the HRManagementSystem.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nUpdate an employee's information in the HRManagementSystem.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet an employee's information from the HRManagementSystem.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nList all employees' information in the HRManagementSystem."
    ]
  },
  {
    "filename": "Hotel.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class as hotel management system, managing the booking, check-in, check-out, and availability of rooms in a hotel with different room types.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the three fields in Hotel System.\n        name is the hotel name.\n        available_rooms stores the remaining rooms in the hotel\n        booked_rooms stores the rooms that have been booked and the person's name who booked rooms.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if there are any rooms of the specified type available.\n        if rooms are adequate, modify available_rooms and booked_rooms and finish booking, or fail to book otherwise.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if the room of the specified type and number is booked by the person named name.\n        Remove this name when check in successfuly(room_number is equal to specific person's booked_rooms. When the actual check in quantity (room_number) is less than the booked quantity, number in booked_rooms will be booked quantity minus actual quantity",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck out rooms, add number for specific type in available_rooms.\n        If room_type is new, add new type in available_rooms.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet the number of specific type of available rooms."
    ]
  },
  {
    "filename": "HtmlUtil.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class as util for html, supporting for formatting and extracting code from HTML text, including cleaning up the text and converting certain elements into specific marks.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize a series of labels",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nReplace consecutive line breaks with a single line break",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nget the html text without the code, and add the code tag -CODE- where the code is",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nextract codes from the html body"
    ]
  },
  {
    "filename": "IPAddress.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class to process IP Address, including validating, getting the octets and obtaining the binary representation of a valid IP address.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the IP address to the specified address",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nJudge whether the IP address is valid, that is, whether the IP address is composed of four Decimal digits separated by '.'. Each digit is greater than or equal to 0 and less than or equal to 255",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nIf the IP address is valid, the list of four decimal numbers separated by \".\" constituting the IP address is returned; otherwise, an empty list is returned",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nIf the IP address is valid, return the binary form of the IP address; otherwise, return ''"
    ]
  },
  {
    "filename": "IPUtil.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class as tool for ip that can be used to obtain the local IP address, validate its validity, and also provides the functionality to retrieve the corresponding hostname.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if the given IP address is a valid IPv4 address.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if the given IP address is a valid IPv6 address.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet the hostname associated with the given IP address."
    ]
  },
  {
    "filename": "ImageProcessor.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class to process image, including loading, saving, resizing, rotating, and adjusting the brightness of images.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize self.image",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nUse Image util in PIL to open a image",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSave image to a path if image has opened",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRisize the image if image has opened.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nrotate image if image has opened",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdjust the brightness of image if image has opened."
    ]
  },
  {
    "filename": "Interpolation.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class that implements the Linear interpolation operation of one-dimensional and two-dimensional data",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nLinear interpolation of one-dimensional data",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nLinear interpolation of two-dimensional data"
    ]
  },
  {
    "filename": "JSONProcessor.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class to process JSON file, including reading and writing JSON files, as well as processing JSON data by removing a specified key from the JSON object.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRead a JSON file and return the data.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nWrite data to a JSON file and save it to the given path.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nread a JSON file and process the data by removing a specified key and rewrite the modified data back to the file."
    ]
  },
  {
    "filename": "JobMarketplace.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class that provides functionalities to publish positions, remove positions, submit resumes, withdraw resumes, search for positions, and obtain candidate information.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis function is used to publish positions,and add the position information to the job_listings list.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis function is used to remove positions,and remove the position information from the job_listings list.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis function is used to submit resumes,and add the resume information to the resumes list.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis function is used to withdraw resumes,and remove the resume information from the resumes list.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis function is used to search for positions,and return the position information that meets the requirements.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nThis function is used to obtain candidate information,and return the candidate information that meets the requirements by calling the matches_requirements function."
    ]
  },
  {
    "filename": "KappaCalculator.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class as KappaCalculator, supporting to calculate Cohen's and Fleiss' kappa coefficient.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the cohens kappa value of a k-dimensional matrix",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the fliss kappa value of an N * k matrix"
    ]
  },
  {
    "filename": "Lemmatization.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class about Lemmatization, which utilizes the nltk library to perform lemmatization and part-of-speech tagging on sentences, as well as remove punctuation.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ncreates a WordNetLemmatizer object and stores it in the self.lemmatizer member variable.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRemove punctuations of the sentence and tokenizes the input sentence, mark the part of speech tag of each word,\n        lemmatizes the words with different parameters based on their parts of speech, and stores in a list.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRemove punctuations of the sentence and tokenizes the input sentence, mark the part of speech tag of each word.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRemoves punctuation from the input text."
    ]
  },
  {
    "filename": "LongestWord.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class allows to add words to a list and find the longest word in a given sentence by comparing the words with the ones in the word list.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize a list of word.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nappend the input word into self.word_list",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRemove punctuation marks and split a sentence into a list of word. Find the longest splited word that is in the self.word_list.\n        Words are strictly case sensitive."
    ]
  },
  {
    "filename": "MahjongConnect.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# MahjongConnect is a class representing a game board for Mahjong Connect with features like creating the board, checking valid moves, finding paths, removing icons, and checking if the game is over.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ninitialize the board size and the icon list, create the game board",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ncreate the game board with the given board size and icons",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ncheck if the move of two icons is valid (i.e. positions are within the game board range, the two positions are not the same, the two positions have the same icon, and there is a valid path between the two positions)",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ncheck if there is a path between two icons",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nremove the connected icons on the game board",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if the game is over (i.e., if there are no more icons on the game board)"
    ]
  },
  {
    "filename": "Manacher.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n#This is a class that implements a manacher algorithm to find the Longest palindromic substring in a given string.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializes the Manacher class with the given input_string.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRecursively calculates the length of the palindromic substring based on a given center, difference value, and input string.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nFinds the longest palindromic substring in the given string."
    ]
  },
  {
    "filename": "MetricsCalculator.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class calculates precision, recall, F1 score, and accuracy based on predicted and true labels.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the number of all four samples to 0",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nUpdate the number of all four samples(true_positives, false_positives, false_negatives, true_negatives)",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate precision",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate recall",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate f1 score, which is the harmonic mean of precision and recall",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate accuracy"
    ]
  },
  {
    "filename": "MetricsCalculator2.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class provides to calculate Mean Reciprocal Rank (MRR) and Mean Average Precision (MAP) based on input data, where MRR measures the ranking quality and MAP measures the average precision.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ncompute the MRR of the input data. MRR is a widely used evaluation index. It is the mean of reciprocal rank.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ncompute the MAP of the input data. MAP is a widely used evaluation index. It is the mean of AP (average precision)."
    ]
  },
  {
    "filename": "MinesweeperGame.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class that implements mine sweeping games including minesweeping and winning judgment.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializes the MinesweeperGame class with the size of the board and the number of mines.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerates a minesweeper map with the given size of the board and the number of mines,the given parameter n is the size of the board,the size of the board is n*n,the parameter k is the number of mines,'X' represents the mine,other numbers represent the number of mines around the position.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerates a player map with the given size of the board, the given parameter n is the size of the board,the size of the board is n*n,the parameter k is the number of mines,'-' represents the unknown position.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nChecks whether the player has won the game,if there are just mines in the player map,return True,otherwise return False.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSweeps the given position."
    ]
  },
  {
    "filename": "MovieBookingSystem.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# this is a class as movie booking system, which allows to add movies, book tickets and check the available movies within a given time range. ",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize movies contains the information about movies",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdd a new movie into self.movies",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nBook tickets for a movie. Change the seats value in self.movies if book successfully.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet a list of available movies within the specified time range"
    ]
  },
  {
    "filename": "MovieTicketDB.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class for movie database operations, which allows for inserting movie information, searching for movie information by name, and deleting movie information by name.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializes the MovieTicketDB object with the specified database name.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCreates a \"tickets\" table in the database if it does not exist already.Fields include ID of type int, movie name of type str, theater name of type str, seat number of type str, and customer name of type str",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInserts a new ticket into the \"tickets\" table.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSearches for tickets in the \"tickets\" table by customer name.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nDeletes a ticket from the \"tickets\" table by ticket ID."
    ]
  },
  {
    "filename": "MusicPlayer.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class as a music player that provides to play, stop, add songs, remove songs, set volume, shuffle, and switch to the next or previous song.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializes the music player with an empty playlist, no current song, and a default volume of 50.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdds a song to the playlist.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRemoves a song from the playlist.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nPlays the current song in the playlist.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nStops the current song in the playlist.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSwitches to the next song in the playlist.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSwitches to the previous song in the playlist.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSets the volume of the music player,ifthe volume is between 0 and 100 is valid.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nShuffles the playlist."
    ]
  },
  {
    "filename": "NLPDataProcessor.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class processes NLP data by removing stop words from a list of strings using a pre-defined stop word list.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConstruct a stop word list including 'a', 'an', 'the'.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRemove all the stop words from the list of strings.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConstruct a stop word list including 'a', 'an', 'the', and remove all the stop words from the list of strings."
    ]
  },
  {
    "filename": "NLPDataProcessor2.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class processes NLP data by extracting words from a list of strings, calculating the frequency of each word, and returning the top 5 most frequent words.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nkeep only English letters and spaces in the string, then convert the string to lower case, and then split the string into a list of words.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the word frequency of each word in the list of words list, and sort the word frequency dictionary by value in descending order.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nkeep only English letters and spaces in the string, then convert the string to lower case, and then split the string into a list of words. Calculate the word frequency of each word in the list of words list, and sort the word frequency dictionary by value in descending order.\n"
    ]
  },
  {
    "filename": "NumberConverter.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class allows to convert  decimal to binary, octal and hexadecimal repectively and contrarily",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConvert a number from decimal format to binary format.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConvert a number from binary format to decimal format.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConvert a number from decimal format to octal format.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConvert a number from octal format to decimal format.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConvert a number from decimal format to hex format.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConvert a number from hex format to decimal format."
    ]
  },
  {
    "filename": "NumberWordFormatter.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class that provides to convert numbers into their corresponding English word representation, including handling the conversion of both the integer and decimal parts, and incorporating appropriate connectors and units.\n",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize NumberWordFormatter object.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConverts a number into words format",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConverts a string representation of a number into words format",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConverts a two-digit number into words format",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConverts a three-digit number into words format",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nParses the thousand/million/billion suffix based on the index"
    ]
  },
  {
    "filename": "NumericEntityUnescaper.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class that provides functionality to replace numeric entities with their corresponding characters in a given string.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nReplaces numeric character references (HTML entities) in the input string with their corresponding Unicode characters.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nDetermines whether a given character is a hexadecimal digit."
    ]
  },
  {
    "filename": "OrderManagement.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class manages restaurant orders by allowing the addition of dishes, calculation of the total cost, and checkout.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the order management system\n        self.menu stores the dishes of resturant inventory\n        menu = [{\"dish\": dish name, \"price\": price, \"count\": count}, ...]\n        self.selected_dishes stores the dished selected by customer\n        selected_dish = {\"dish\": dish name, \"count\": count, price: price}\n        self.sales stores the sales of each dish\n        sales = {dish name: sales}",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck the self.menu and add into self.selected_dish if the dish count is valid.\n        And if the dish has successfully been added, change the count in self.menu.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the total price of dishes that have been ordered. Multiply the count, price and sales.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck out the dished ordered. IF the self.selected_dishes is not empty, invoke the calculate_total\n        method to check out."
    ]
  },
  {
    "filename": "PDFHandler.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class allows merging multiple PDF files into one and extracting text from PDFs using PyPDF2 library.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ntakes a list of file paths filepaths as a parameter.\n        It creates a list named readers using PyPDF2, where each reader opens a file from the given paths.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRead files in self.readers which stores handles to multiple PDF files.\n        Merge them to one pdf and update the page number, then save in disk.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nExtract text from pdf files in self.readers"
    ]
  },
  {
    "filename": "PageUtil.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# PageUtil class is a versatile utility for handling pagination and search functionalities in an efficient and convenient manner.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the PageUtil object with the given data and page size.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRetrieve a specific page of data.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRetrieve information about a specific page.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSearch for items in the data that contain the given keyword."
    ]
  },
  {
    "filename": "PersonRequest.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This class validates input personal information data and sets invalid fields to None based to specific rules.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize PersonRequest object with the provided information.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nValidate the name and return it. If name is empty or exceeds 33 characters in length, set to None.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nValidate the sex and return it. If sex is not Man, Woman, or UGM, set to None.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nValidate the phone number and return it. If phoneNumber is empty or not an 11 digit number, set to None."
    ]
  },
  {
    "filename": "PushBoxGame.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This class implements a functionality of a sokoban game, where the player needs to move boxes to designated targets in order to win.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the push box game with the map and various attributes.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the game by setting the positions of the player, targets, and boxes based on the map.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if the game is won. The game is won when all the boxes are placed on target positions.\n        And update the value of self.is_game_over.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nMove the player based on the specified direction and check if the game is won."
    ]
  },
  {
    "filename": "RPGCharacter.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class represents a role-playing game character, which allows to attack other characters, heal, gain experience, level up, and check if the character is alive.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize an RPG character object.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAttack another character. The damage caused needs to offset the defense value.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nHeal the character with 10 hp and the max hp is 100.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGain experience points for the character and level_up when the exp has reached the values that is 100 times the current level\n        The experience that overflows should be used to calculate the next leve up untill exhausts",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nLevel up the character and return to zero experience points, increase hp by 20 points, attack power and defense points by 5 points.\n        max level is 100",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if player is alive."
    ]
  },
  {
    "filename": "RegexUtils.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class provides to match, find all occurrences, split, and substitute text using regular expressions. It also includes predefined patterns, validating phone numbers and extracting email addresses.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if the text matches the regular expression",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nFind all matching substrings and return a list of all matching substrings",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSplit text based on regular expression patterns and return a list of substrings",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nReplace the substring matched by a regular expression with the specified string",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerate regular expression patterns that match email addresses",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerate regular expression patterns that match phone numbers",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerate regular expression patterns that match the middle characters of two sentences",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSplit the text into a list of sentences without Punctuation except the last sentence",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nVerify if the phone number is valid",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nExtract all email addresses from the text"
    ]
  },
  {
    "filename": "SQLGenerator.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This class generates SQL statements for common operations on a table, such as SELECT, INSERT, UPDATE, and DELETE.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the table name.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerates a SELECT SQL statement based on the specified fields and conditions.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerates an INSERT SQL statement based on the given data.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerates an UPDATE SQL statement based on the given data and condition.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerates a DELETE SQL statement based on the given condition.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerates a SQL statement to select females under a specified age.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerates a SQL statement to select records within a specified age range."
    ]
  },
  {
    "filename": "SQLQueryBuilder.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This class provides to build SQL queries, including SELECT, INSERT, UPDATE, and DELETE statements. ",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerate the SELECT SQL statement from the given parameters.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerate the INSERT SQL statement from the given parameters.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerate the DELETE SQL statement from the given parameters.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerate the UPDATE SQL statement from the given parameters."
    ]
  },
  {
    "filename": "Server.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class as a server, which handles a white list, message sending and receiving, and information display.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the whitelist as an empty list, and initialize the sending and receiving information as an empty dictionary",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdd an address to the whitelist and do nothing if it already exists",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRemove an address from the whitelist and do nothing if it does not exist",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nReceive information containing address and content. If the address is on the whitelist, receive the content; otherwise, do not receive it",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSend information containing address and content",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nReturns struct of the specified type"
    ]
  },
  {
    "filename": "ShoppingCart.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class manages items, their prices, quantities, and allows to for add, removie, view items, and calculate the total price.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the items representing the shopping list as an empty dictionary",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdd item information to the shopping list items, including price and quantity. The default quantity is 1",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSubtract the specified quantity of item from the shopping list items",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nReturn the current shopping list items",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the total price of all items in the shopping list, which is the quantity of each item multiplied by the price"
    ]
  },
  {
    "filename": "SignInSystem.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class as sigin in system, including adding users, signing in/out, checking sign-in status, and retrieving signed-in/not signed-in users.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the sign-in system.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdd a user to the sign-in system if the user wasn't in the self.users.\n        And the initial state is False.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSign in a user if the user was in the self.users and change the state to True.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if a user is signed in.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if all users are signed in.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet a list of usernames that are not signed in."
    ]
  },
  {
    "filename": "Snake.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class is a snake game, with allows snake to move and eat food, and also enables to reset, and generat a random food position.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the length of the snake, screen width, screen height, block size, snake head position, score, and food position.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nMove the snake in the specified direction. If the new position of the snake's head is equal to the position of the food, then eat the food; If the position of the snake's head is equal to the position of its body, then start over, otherwise its own length plus one.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRandomly generate a new food position, but don't place it on the snake.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nReset the snake to its initial state. Set the length to 1, the snake head position to ((SCREEN_WIDTH/2), (SCREEN_HEIGHT/2)), the score to 0, and randomly generate new food position.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nIncrease the length of the snake by 1 and increase the score by 100. Randomly generate a new food position, but\n        don't place it on the snake."
    ]
  },
  {
    "filename": "SplitSentence.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class allows to split sentences, count words in a sentence, and process a text file to find the maximum word count.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSplit a string into a list of sentences. Sentences end with . or ? and with a space after that. Please note that Mr. also end with . but are not sentences.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCount the number of words in a sentence. Note that words are separated by spaces and that punctuation marks and numbers are not counted as words.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGiven a text, return the number of words in the longest sentence"
    ]
  },
  {
    "filename": "Statistics3.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class that implements methods for calculating indicators such as median, mode, correlation matrix, and Z-score in statistics.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ncalculates the median of the given list.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ncalculates the mode of the given list.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ncalculates the correlation of the given list.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ncalculates the mean of the given list.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ncalculates the correlation matrix of the given list.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ncalculates the standard deviation of the given list.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ncalculates the z-score of the given list."
    ]
  },
  {
    "filename": "StockPortfolioTracker.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class as StockPortfolioTracker that allows to add stocks, remove stocks, buy stocks, sell stocks, calculate the total value of the portfolio, and obtain a summary of the portfolio.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the StockPortfolioTracker class with a cash balance and an empty portfolio.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdd a stock to the portfolio.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRemove a stock from the portfolio.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nBuy a stock and add it to the portfolio.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSell a stock and remove it from the portfolio and add the cash to the cash balance.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the total value of the portfolio.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet a summary of the portfolio.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet the value of a stock."
    ]
  },
  {
    "filename": "StudentDatabaseProcessor.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class with database operation, including inserting student information, searching for student information by name, and deleting student information by name.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializes the StudentDatabaseProcessor object with the specified database name.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCreates a \"students\" table in the database if it does not exist already.Fields include ID of type int, name of type str, age of type int, gender of type str, and grade of type int\n",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInserts a new student into the \"students\" table.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSearches for a student in the \"students\" table by their name.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nDeletes a student from the \"students\" table by their name."
    ]
  },
  {
    "filename": "TextFileProcessor.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class handles reading, writing, and processing text files. It can read the file as JSON, read the raw text, write content to the file, and process the file by removing non-alphabetic characters.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the file path.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRead the self.file_path file as json format.\n        if the file content doesn't obey json format, the code will raise error.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRead the return the content of self.file_path file.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nWrite content into the self.file_path file, and overwrite if the file has already existed.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nRead the self.file_path file and filter out non-alphabetic characters from the content string.\n        Overwrite the after-processed data into the same self.file_path file."
    ]
  },
  {
    "filename": "Thermostat.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class manages temperature control, including setting and retrieving the target temperature, adjusting the mode, and simulating temperature operation.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\ninitialize instances of the Thermostat class, including the current temperature, target temperature, and operating mode.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet the target temperature of an instance of the Thermostat class.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSet the target temperature",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet the current work mode",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet the current work mode",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAutomatically set the operating mode by comparing with the current temperature and target temperature. If the current temperature is lower than the target temperature, the operating mode is set to 'heat', otherwise it is set to 'cool'.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if there is a conflict between the operating mode and the relationship between the current temperature and the target temperature.\n        If there is a conflict, the operating mode will be adjusted automatically.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nsimulate the operation of Thermostat. It will automatically start the auto_set_mode method to set the operating mode,\n        and then automatically adjust the current temperature according to the operating mode until the target temperature is reached."
    ]
  },
  {
    "filename": "TicTacToe.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class represents a game of Tic-Tac-Toe and its functions include making a move on the board, checking for a winner, and determining if the board is full.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize a 3x3 game board with all empty spaces and current symble player, default is 'X'.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nPlace the current player's mark at the specified position on the board and switch the mark.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if there is a winner on the board in rows, columns and diagonals three directions",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if the game board is completely filled."
    ]
  },
  {
    "filename": "TimeUtils.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a time util class, including getting the current time and date, adding seconds to a datetime, converting between strings and datetime objects, calculating the time difference in minutes, and formatting a datetime object.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet the current datetime",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nReturn the current time in the format of '%H:%M:%S'",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nReturn the current date in the format of \"%Y-%m-%d\"",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdd the specified number of seconds to the current time",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConvert the time string to a datetime instance",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConvert a datetime instance to a string",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate how many minutes have passed between two times, and round the results to the nearest",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nget format time"
    ]
  },
  {
    "filename": "TriCalculator.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class allows to calculate trigonometric values, including cosine, sine, and tangent, using Taylor series approximations.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the cos value of the x-degree angle",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the factorial of a",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nFinding the n-order Taylor expansion value of cos (x/180 * pi)",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the sin value of the x-degree angle",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate the tan value of the x-degree angle"
    ]
  },
  {
    "filename": "TwentyFourPointGame.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This ia a game of twenty-four points, which provides to generate four numbers and check whether player's expression is equal to 24.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGenerate random numbers between 1 and 9 for the cards.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet a list of four random numbers between 1 and 9 representing the player's cards.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if a given mathematical expression using the cards can evaluate to 24.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nEvaluate a mathematical expression and check if the result is 24."
    ]
  },
  {
    "filename": "URLHandler.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class supports to handle URLs, including extracting the scheme, host, path, query parameters, and fragment.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize URLHandler's URL",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nget the scheme of the URL",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet the second part of the URL, which is the host domain name",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet the third part of the URL, which is the address of the resource",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet the request parameters for the URL",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet the fragment after '#' in the URL"
    ]
  },
  {
    "filename": "UrlPath.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The  class is a utility for encapsulating and manipulating the path component of a URL, including adding nodes, parsing path strings, and building path strings with optional encoding.\n",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializes the UrlPath object with an empty list of segments and a flag indicating the presence of an end tag.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdds a segment to the list of segments in the UrlPath.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nParses a given path string and populates the list of segments in the UrlPath.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nFixes the given path string by removing leading and trailing slashes."
    ]
  },
  {
    "filename": "UserLoginDB.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a database management class for user login verification, providing functions for inserting user information, searching user information, deleting user information, and validating user login.\n",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializes the UserLoginDB object with the specified database name.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInserts a new user into the \"users\" table.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSearches for users in the \"users\" table by username.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nDeletes a user from the \"users\" table by username.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nDetermine whether the user can log in, that is, the user is in the database and the password is correct"
    ]
  },
  {
    "filename": "VectorCalculator.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class provides vector operations, including calculating similarity, cosine similarities, average similarity, and IDF weights.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCompute the cosine similarity between one vector and another vector.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCompute cosine similarities between one vector and a set of other vectors.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCompute cosine similarity between two sets of vectors.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCalculate log(total_num+1/count+1) for each count in number_dict"
    ]
  },
  {
    "filename": "VendingMachine.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class to simulate a vending machine, including adding products, inserting coins, purchasing products, viewing balance, replenishing product inventory, and displaying product information.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitializes the vending machine's inventory and balance.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdds a product to the vending machine's inventory.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInserts coins into the vending machine.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nPurchases a product from the vending machine and returns the balance after the purchase and display purchase unsuccessful if the product is out of stock.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nReplenishes the inventory of a product already in the vending machine.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nDisplays the products in the vending machine."
    ]
  },
  {
    "filename": "Warehouse.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class manages inventory and orders, including adding products, updating product quantities, retrieving product quantities, creating orders, changing order statuses, and tracking orders.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize two fields.\n        self.inventory is a dict that stores the products.\n        self.inventory = {Product ID: Product}\n        self.orders is a dict that stores the products in a order.\n        self.orders = {Order ID: Order}",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAdd product to inventory and plus the quantity if it has existed in inventory.\n        Or just add new product to dict otherwise.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nAccording to product_id, add the quantity to the corresponding product in inventory.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet the quantity of specific product by product_id.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCreate a order which includes the infomation of product, like id and quantity.\n        And put the new order into self.orders.\n        The default value of status is 'Shipped'.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nChange the status of order if the input order_id is in self.orders.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet the status of specific order."
    ]
  },
  {
    "filename": "WeatherSystem.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class representing a weather system that provides functionality to query weather information for a specific city and convert temperature units between Celsius and Fahrenheit.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the weather system with a city name.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nQuery the weather system for the weather and temperature of the city,and convert the temperature units based on the input parameter.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nSet the city of the weather system.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConvert the temperature from Celsius to Fahrenheit.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConvert the temperature from Fahrenheit to Celsius."
    ]
  },
  {
    "filename": "Words2Numbers.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# The class provides a text-to-number conversion utility, allowing conversion of written numbers (in words) to their numerical representation.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the word lists and dictionaries required for conversion",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nConvert the word string to the corresponding integer string",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCheck if the input text contains only valid words that can be converted into numbers."
    ]
  },
  {
    "filename": "XMLProcessor.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a class as XML files handler, including reading, writing, processing as well as finding elements in a XML file.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize the XMLProcessor object with the given file name.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nReads the XML file and returns the root element.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nWrites the XML data to the specified file.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nModifies the data in XML elements and writes the updated XML data to a new file.",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nFinds the XML elements with the specified name."
    ]
  },
  {
    "filename": "ZipFileProcessor.txt",
    "comments_prompt": [
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\n# This is a compressed file processing class that provides the ability to read and decompress compressed files",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nInitialize file name",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nGet open file object",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nExtract all zip files and place them in the specified path",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nExtract the file with the specified name from the zip file and place it in the specified path",
      "You are an expert in Python code annotation.\nNext, I will provide you with some code comments in different styles, some of which may be extremely colloquial. I hope you can help me turn them into code comments with a unified style of 'Requirements'.\nExample 1:\nUser input: # How to drop rows of Pandas DataFrame whose value in a certain column is NaN\nYour output:\n# Drop rows of Pandas DataFrame whose value in a certain column is NaN\nExample 2:\nUser input:\n# list_of_lists format: [header, [row1], [row2], ...]\n# header format: [column1, column2, ...]\n# row format: [value1, value2, ...]\n# How to convert list to dataframe?\n# Return the dataframe\nYour output:\n# Given the list_of_lists\uff0c  header\uff0c row \uff0c convert list to dataframe and return it\u3002\nExample 3:\nUser input:\n# I need to remain the rows where line_num is not equal to 0.  What's the most efficient way to do it?\n# it should be as simple as:\nYour output:\n# Remain the rows where line_num is not equal to 0 by the most efficient way.\nNext, I will provide you with some annotations. You need to follow my requirements and examples to unify the annotation style into a non colloquial and formal style.\n\nHere is the comment which you need handle\uff1a\n\nCompress the specified file list into a zip file and place it in the specified path"
    ]
  }
]